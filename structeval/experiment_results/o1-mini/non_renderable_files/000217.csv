
import csv
import re

def extract_artifact_details(text):
    artifact = {}

    # Example extraction using regex; to be customized based on actual text patterns
    artifact['artifact_id'] = re.search(r'ID:\s*(\w+)', text).group(1) if re.search(r'ID:\s*(\w+)', text) else ''
    artifact['artifact_name'] = re.search(r'Name:\s*([^
]+)', text).group(1).strip() if re.search(r'Name:\s*([^
]+)', text) else ''
    artifact['origin_culture'] = re.search(r'Culture:\s*([^
]+)', text).group(1).strip() if re.search(r'Culture:\s*([^
]+)', text) else ''
    artifact['origin_period'] = re.search(r'Period:\s*([^
]+)', text).group(1).strip() if re.search(r'Period:\s*([^
]+)', text) else ''
    artifact['discovery_location'] = re.search(r'Discovery Location:\s*([^
]+)', text).group(1).strip() if re.search(r'Discovery Location:\s*([^
]+)', text) else ''
    age_match = re.search(r'Age:\s*(\d+)', text)
    artifact['estimated_age_years'] = int(age_match.group(1)) if age_match else ''
    material_match = re.search(r'Materials?:\s*([^
]+)', text)
    artifact['material_composition'] = material_match.group(1).strip() if material_match else ''
    height_match = re.search(r'Height:\s*([0-9.]+) cm', text)
    artifact['dimensions_height_cm'] = float(height_match.group(1)) if height_match else ''
    width_match = re.search(r'Width:\s*([0-9.]+) cm', text)
    artifact['dimensions_width_cm'] = float(width_match.group(1)) if width_match else ''
    depth_match = re.search(r'Depth:\s*([0-9.]+) cm', text)
    artifact['dimensions_depth_cm'] = float(depth_match.group(1)) if depth_match else ''
    artifact['current_location'] = re.search(r'Current Location:\s*([^
]+)', text).group(1).strip() if re.search(r'Current Location:\s*([^
]+)', text) else ''
    artifact['condition_status'] = re.search(r'Condition:\s*([^
]+)', text).group(1).strip() if re.search(r'Condition:\s*([^
]+)', text) else ''
    inscriptions_present = re.search(r'Inscriptions?:\s*(Yes|No)', text)
    if inscriptions_present:
        artifact['inscriptions_present'] = 'true' if inscriptions_present.group(1).lower() == 'yes' else 'false'
    else:
        artifact['inscriptions_present'] = 'false'
    inscription_languages = re.search(r'Inscription Languages?:\s*([^
]+)', text)
    artifact['inscription_languages'] = inscription_languages.group(1).strip() if inscription_languages else ''
    artifact['notable_features'] = re.search(r'Notable Features?:\s*([^
]+)', text).group(1).strip() if re.search(r'Notable Features?:\s*([^
]+)', text) else ''
    related_match = re.search(r'Related Artifacts?:\s*([^
]+)', text)
    artifact['related_artifacts'] = related_match.group(1).strip() if related_match else ''

    return artifact

def write_to_csv(artifact, filename='artifacts.csv'):
    fieldnames = [
        'artifact_id',
        'artifact_name',
        'origin_culture',
        'origin_period',
        'discovery_location',
        'estimated_age_years',
        'material_composition',
        'dimensions_height_cm',
        'dimensions_width_cm',
        'dimensions_depth_cm',
        'current_location',
        'condition_status',
        'inscriptions_present',
        'inscription_languages',
        'notable_features',
        'related_artifacts'
    ]

    file_exists = False
    try:
        with open(filename, 'r', newline='', encoding='utf-8') as csvfile:
            file_exists = True
    except FileNotFoundError:
        file_exists = False

    with open(filename, 'a', newline='', encoding='utf-8') as csvfile:
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        if not file_exists:
            writer.writeheader()
        writer.writerow(artifact)

# Example usage:
# text_description = """ID: 12345
# Name: Ancient Vase
# Culture: Greek
# Period: Classical Period
# Discovery Location: Olympia
# Age: 2500
# Materials: clay, glaze
# Height: 25.5 cm
# Width: 15.0 cm
# Depth: 10.0 cm
# Current Location: National Archaeological Museum
# Condition: intact
# Inscriptions: Yes
# Inscription Languages: Ancient Greek
# Notable Features: Elaborate painted scenes
# Related Artifacts: 12344,12346
# """
# artifact = extract_artifact_details(text_description)
# write_to_csv(artifact)
