python
import csv
import uuid
import re

def extract_artifact_details(text):
    artifact = {}
    artifact['artifact_id'] = str(uuid.uuid4())
    
    name_match = re.search(r'Name[:\-]\s*(.+)', text, re.IGNORECASE)
    artifact['artifact_name'] = name_match.group(1).strip() if name_match else ''
    
    type_match = re.search(r'Type[:\-]\s*(.+)', text, re.IGNORECASE)
    artifact['artifact_type'] = type_match.group(1).strip() if type_match else ''
    
    site_match = re.search(r'Discovery Site[:\-]\s*(.+)', text, re.IGNORECASE)
    artifact['discovery_site'] = site_match.group(1).strip() if site_match else ''
    
    country_match = re.search(r'Discovery Country[:\-]\s*(.+)', text, re.IGNORECASE)
    artifact['discovery_country'] = country_match.group(1).strip() if country_match else ''
    
    year_match = re.search(r'Discovery Year[:\-]\s*(\d{4})', text, re.IGNORECASE)
    artifact['discovery_year'] = int(year_match.group(1)) if year_match else ''
    
    age_match = re.search(r'Estimated Age[:\-]\s*(\d+)', text, re.IGNORECASE)
    artifact['estimated_age_years'] = int(age_match.group(1)) if age_match else ''
    
    material_match = re.search(r'Material[:\-]\s*(.+)', text, re.IGNORECASE)
    artifact['material'] = material_match.group(1).strip() if material_match else ''
    
    location_match = re.search(r'Current Location[:\-]\s*(.+)', text, re.IGNORECASE)
    artifact['current_location'] = location_match.group(1).strip() if location_match else ''
    
    height_match = re.search(r'Height[:\-]\s*([\d\.]+) cm', text, re.IGNORECASE)
    artifact['dimensions_height_cm'] = float(height_match.group(1)) if height_match else ''
    
    width_match = re.search(r'Width[:\-]\s*([\d\.]+) cm', text, re.IGNORECASE)
    artifact['dimensions_width_cm'] = float(width_match.group(1)) if width_match else ''
    
    depth_match = re.search(r'Depth[:\-]\s*([\d\.]+) cm', text, re.IGNORECASE)
    artifact['dimensions_depth_cm'] = float(depth_match.group(1)) if depth_match else ''
    
    condition_match = re.search(r'Condition[:\-]\s*(.+)', text, re.IGNORECASE)
    artifact['condition_status'] = condition_match.group(1).strip() if condition_match else ''
    
    culture_match = re.search(r'Culture[:\-]\s*(.+)', text, re.IGNORECASE)
    artifact['associated_culture'] = culture_match.group(1).strip() if culture_match else ''
    
    features_match = re.search(r'Notable Features[:\-]\s*(.+)', text, re.IGNORECASE)
    artifact['notable_features'] = features_match.group(1).strip() if features_match else ''
    
    return artifact

def write_to_csv(artifact, filename='artifacts.csv'):
    fieldnames = [
        'artifact_id',
        'artifact_name',
        'artifact_type',
        'discovery_site',
        'discovery_country',
        'discovery_year',
        'estimated_age_years',
        'material',
        'current_location',
        'dimensions_height_cm',
        'dimensions_width_cm',
        'dimensions_depth_cm',
        'condition_status',
        'associated_culture',
        'notable_features'
    ]
    file_exists = False
    try:
        with open(filename, 'r', newline='', encoding='utf-8') as csvfile:
            file_exists = True
    except FileNotFoundError:
        file_exists = False
    
    with open(filename, 'a', newline='', encoding='utf-8') as csvfile:
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        if not file_exists:
            writer.writeheader()
        writer.writerow(artifact)

def main():
    text_description = input("Enter the artifact description: ")
    artifact = extract_artifact_details(text_description)
    write_to_csv(artifact)
    print("Artifact details have been written to artifacts.csv")

if __name__ == "__main__":
    main()