
import csv
import uuid
import re

def extract_recipe_data(recipe_text):
    # Initialize the recipe dictionary
    recipe = {
        'recipe_id': str(uuid.uuid4()),
        'recipe_name': '',
        'chef_name': '',
        'cuisine_type': '',
        'difficulty_level': '',
        'prep_time_minutes': 0,
        'cook_time_minutes': 0,
        'servings': 0,
        'ingredient_list': '',
        'ingredient_quantities': '',
        'steps': '',
        'step_times': '',
        'equipment_needed': '',
        'nutrition_calories': 0,
        'nutrition_protein_grams': 0,
        'nutrition_fat_grams': 0,
        'nutrition_carbs_grams': 0
    }
    
    # Example extraction using regex (to be customized based on actual recipe text structure)
    # Extract recipe name
    name_match = re.search(r'Name:\s*(.*)', recipe_text)
    if name_match:
        recipe['recipe_name'] = name_match.group(1).strip()
    
    # Extract chef name
    chef_match = re.search(r'Chef:\s*(.*)', recipe_text)
    if chef_match:
        recipe['chef_name'] = chef_match.group(1).strip()
    
    # Extract cuisine type
    cuisine_match = re.search(r'Cuisine:\s*(.*)', recipe_text)
    if cuisine_match:
        recipe['cuisine_type'] = cuisine_match.group(1).strip()
    
    # Extract difficulty level
    difficulty_match = re.search(r'Difficulty:\s*(Easy|Intermediate|Hard)', recipe_text, re.IGNORECASE)
    if difficulty_match:
        recipe['difficulty_level'] = difficulty_match.group(1).capitalize()
    
    # Extract prep time
    prep_match = re.search(r'Prep Time:\s*(\d+)\s*minutes', recipe_text, re.IGNORECASE)
    if prep_match:
        recipe['prep_time_minutes'] = int(prep_match.group(1))
    
    # Extract cook time
    cook_match = re.search(r'Cook Time:\s*(\d+)\s*minutes', recipe_text, re.IGNORECASE)
    if cook_match:
        recipe['cook_time_minutes'] = int(cook_match.group(1))
    
    # Extract servings
    servings_match = re.search(r'Servings:\s*(\d+)', recipe_text, re.IGNORECASE)
    if servings_match:
        recipe['servings'] = int(servings_match.group(1))
    
    # Extract ingredients and quantities
    ingredients_section = re.search(r'Ingredients:\s*((?:.|
)*?)Steps:', recipe_text, re.IGNORECASE)
    if ingredients_section:
        ingredients = ingredients_section.group(1).strip().split('
')
        ingredient_names = []
        ingredient_qty = []
        for ingredient in ingredients:
            qty_name = ingredient.split(' ', 1)
            if len(qty_name) == 2:
                ingredient_qty.append(qty_name[0])
                ingredient_names.append(qty_name[1])
        recipe['ingredient_list'] = ';'.join(ingredient_names)
        recipe['ingredient_quantities'] = ';'.join(ingredient_qty)
    
    # Extract steps and step times
    steps_section = re.search(r'Steps:\s*((?:.|
)*?)Nutrition:', recipe_text, re.IGNORECASE)
    if steps_section:
        steps = steps_section.group(1).strip().split('
')
        step_texts = []
        step_times = []
        for step in steps:
            time_match = re.search(r'\((\d+)\s*minutes\)', step)
            if time_match:
                step_times.append(time_match.group(1))
                step_text = re.sub(r'\(\d+\s*minutes\)', '', step).strip()
                step_texts.append(step_text)
            else:
                step_texts.append(step.strip())
                step_times.append('0')
        recipe['steps'] = ';'.join(step_texts)
        recipe['step_times'] = ';'.join(step_times)
    
    # Extract equipment
    equipment_match = re.search(r'Equipment Needed:\s*(.*)', recipe_text, re.IGNORECASE)
    if equipment_match:
        equipment = [item.strip() for item in equipment_match.group(1).split(',')]
        recipe['equipment_needed'] = ';'.join(equipment)
    
    # Extract nutrition information
    nutrition_section = re.search(r'Nutrition:\s*((?:.|
)*)', recipe_text, re.IGNORECASE)
    if nutrition_section:
        calories_match = re.search(r'Calories:\s*(\d+)', nutrition_section.group(1), re.IGNORECASE)
        protein_match = re.search(r'Protein:\s*(\d+)g', nutrition_section.group(1), re.IGNORECASE)
        fat_match = re.search(r'Fat:\s*(\d+)g', nutrition_section.group(1), re.IGNORECASE)
        carbs_match = re.search(r'Carbs:\s*(\d+)g', nutrition_section.group(1), re.IGNORECASE)
        if calories_match:
            recipe['nutrition_calories'] = int(calories_match.group(1))
        if protein_match:
            recipe['nutrition_protein_grams'] = int(protein_match.group(1))
        if fat_match:
            recipe['nutrition_fat_grams'] = int(fat_match.group(1))
        if carbs_match:
            recipe['nutrition_carbs_grams'] = int(carbs_match.group(1))
    
    return recipe

def write_csv(recipe, filename='recipes.csv'):
    fieldnames = [
        'recipe_id',
        'recipe_name',
        'chef_name',
        'cuisine_type',
        'difficulty_level',
        'prep_time_minutes',
        'cook_time_minutes',
        'servings',
        'ingredient_list',
        'ingredient_quantities',
        'steps',
        'step_times',
        'equipment_needed',
        'nutrition_calories',
        'nutrition_protein_grams',
        'nutrition_fat_grams',
        'nutrition_carbs_grams'
    ]
    with open(filename, mode='a', newline='', encoding='utf-8') as file:
        writer = csv.DictWriter(file, fieldnames=fieldnames)
        if file.tell() == 0:
            writer.writeheader()
        writer.writerow(recipe)

# Example usage
if __name__ == "__main__":
    recipe_text = """
Name: Spaghetti Carbonara
Chef: John Doe
Cuisine: Italian
Difficulty: Easy
Prep Time: 15 minutes
Cook Time: 20 minutes
Servings: 4
Ingredients:
200g spaghetti
100g pancetta
2 large eggs
50g pecorino cheese
2 cloves garlic
Salt
Black pepper
Steps:
1. Boil the spaghetti in salted water (10 minutes)
2. In a pan, cook pancetta and garlic until crispy (5 minutes)
3. Beat the eggs and mix with cheese (2 minutes)
4. Combine spaghetti with pancetta and remove from heat
5. Quickly stir in the egg and cheese mixture (3 minutes)
6. Season with salt and black pepper (1 minute)
Nutrition:
Calories: 500
Protein: 20g
Fat: 15g
Carbs: 50g
"""
    recipe = extract_recipe_data(recipe_text)
    write_csv(recipe)
