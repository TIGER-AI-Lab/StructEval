
import csv
import datetime

data = [
    {
        "recipe_id": 1,
        "recipe_name": "Galactic Goulash",
        "chef_name": "Chef Zara",
        "cuisine_type": "Martian",
        "difficulty_level": "Medium",
        "prep_time_minutes": 30,
        "cook_time_minutes": 45,
        "servings": 4,
        "ingredient_list": "Gloopernuts;Steamed Mussels;Frozen Peas",
        "ingredient_quantities": "2 cups;1 cup;1/2 cup",
        "ingredient_units": "g;g;g",
        "steps": "Heat oil in a pan|Add Gloopernuts and cook until tender|Add Steamed Mussels and Frozen Peas|Serve hot",
        "main_ingredient": "Gloopernuts",
        "vegetarian": True,
        "date_published": datetime.date(2023, 1, 1).isoformat()
    },
    {
        "recipe_id": 2,
        "recipe_name": "Quantum Foam",
        "chef_name": "Chef Nova",
        "cuisine_type": "Molecular",
        "difficulty_level": "Hard",
        "prep_time_minutes": 60,
        "cook_time_minutes": 90,
        "servings": 2,
        "ingredient_list": "Sodium Alginate;Water;Glycerin",
        "ingredient_quantities": "1 cup;2 cups;1/4 cup",
        "ingredient_units": "g;g;g",
        "steps": "Mix Sodium Alginate and Water|Add Glycerin and stir|Create foam using siphon|Serve chilled",
        "main_ingredient": "Sodium Alginate",
        "vegetarian": False,
        "date_published": datetime.date(2023, 2, 1).isoformat()
    },
    {
        "recipe_id": 3,
        "recipe_name": "Neo-Japanese Roll",
        "chef_name": "Chef Kaito",
        "cuisine_type": "Neo-Japanese",
        "difficulty_level": "Easy",
        "prep_time_minutes": 20,
        "cook_time_minutes": 30,
        "servings": 6,
        "ingredient_list": "Sushi Rice;Norwegian Salmon;Avocado",
        "ingredient_quantities": "2 cups;1 fillet;1/2 cup",
        "ingredient_units": "g;g;g",
        "steps": "Prepare Sushi Rice|Cut Norwegian Salmon into thin slices|Assemble roll with Avocado|Serve with soy sauce",
        "main_ingredient": "Sushi Rice",
        "vegetarian": False,
        "date_published": datetime.date(2023, 3, 1).isoformat()
    }
]

with open('recipes.csv', 'w', newline='') as csvfile:
    fieldnames = ["recipe_id", "recipe_name", "chef_name", "cuisine_type", "difficulty_level", "prep_time_minutes", "cook_time_minutes", "servings", "ingredient_list", "ingredient_quantities", "ingredient_units", "steps", "main_ingredient", "vegetarian", "date_published"]
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

    writer.writeheader()
    for row in data:
        writer.writerow(row)
