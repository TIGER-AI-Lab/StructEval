
import csv
import uuid
from dataclasses import dataclass

@dataclass
class Recipe:
    recipe_id: str
    recipe_name: str
    chef_name: str
    cuisine_type: str
    difficulty_level: str
    prep_time_minutes: int
    cook_time_minutes: int
    servings: int
    ingredients_list: str
    ingredients_count: int
    main_ingredient: str
    steps_list: str
    steps_count: int
    nutrition_calories: int
    nutrition_protein_grams: int
    nutrition_fat_grams: int
    nutrition_carbs_grams: int

def generate_recipe_csv_row(recipe_name, chef_name, cuisine_type, difficulty_level, prep_time_minutes, cook_time_minutes, servings, ingredients, steps, nutrition):
    recipe_id = str(uuid.uuid4())
    ingredients_list = ';'.join(ingredients)
    steps_list = ';'.join(steps)
    return Recipe(
        recipe_id=recipe_id,
        recipe_name=recipe_name,
        chef_name=chef_name,
        cuisine_type=cuisine_type,
        difficulty_level=difficulty_level,
        prep_time_minutes=prep_time_minutes,
        cook_time_minutes=cook_time_minutes,
        servings=servings,
        ingredients_list=ingredients_list,
        ingredients_count=len(ingredients),
        main_ingredient=ingredients[0],
        steps_list=steps_list,
        steps_count=len(steps),
        nutrition_calories=nutrition['calories'],
        nutrition_protein_grams=nutrition['protein'],
        nutrition_fat_grams=nutrition['fat'],
        nutrition_carbs_grams=nutrition['carbs']
    )

def write_to_csv(file_name, rows):
    with open(file_name, 'w', newline='') as csvfile:
        fieldnames = ['recipe_id', 'recipe_name', 'chef_name', 'cuisine_type', 'difficulty_level', 'prep_time_minutes', 'cook_time_minutes', 'servings', 'ingredients_list', 'ingredients_count', 'main_ingredient', 'steps_list', 'steps_count', 'nutrition_calories', 'nutrition_protein_grams', 'nutrition_fat_grams', 'nutrition_carbs_grams']
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()
        for row in rows:
            writer.writerow({
                'recipe_id': row.recipe_id,
                'recipe_name': row.recipe_name,
                'chef_name': row.chef_name,
                'cuisine_type': row.cuisine_type,
                'difficulty_level': row.difficulty_level,
                'prep_time_minutes': row.prep_time_minutes,
                'cook_time_minutes': row.cook_time_minutes,
                'servings': row.servings,
                'ingredients_list': row.ingredients_list,
                'ingredients_count': row.ingredients_count,
                'main_ingredient': row.main_ingredient,
                'steps_list': row.steps_list,
                'steps_count': row.steps_count,
                'nutrition_calories': row.nutrition_calories,
                'nutrition_protein_grams': row.nutrition_protein_grams,
                'nutrition_fat_grams': row.nutrition_fat_grams,
                'nutrition_carbs_grams': row.nutrition_carbs_grams
            })

# Example usage
recipe = {
    'name': 'Chicken Fajitas',
    'chef': 'Unknown',
    'cuisine': 'Mexican',
    'difficulty': 'Easy',
    'prep_time': 10,
    'cook_time': 15,
    'servings': 4,
    'ingredients': ['chicken breast', 'bell peppers', 'onions', 'fajita seasoning', 'tortillas'],
    'steps': ['Slice the chicken and bell peppers.', 'Heat a pan with oil and cook the chicken and bell peppers.', 'Add fajita seasoning and cook for 1 minute.', 'Serve with tortillas.'],
    'nutrition': {'calories': 300, 'protein': 30, 'fat': 10, 'carbs': 20}
}

rows = [generate_recipe_csv_row(**recipe)]
write_to_csv('recipe.csv', rows)
