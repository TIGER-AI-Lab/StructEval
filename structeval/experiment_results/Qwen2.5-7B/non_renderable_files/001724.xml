
import xml.etree.ElementTree as ET

def create_recipe_xml(name, author, cuisine, prep_time, cook_time, servings, ingredients, instructions, nutrition):
    recipe = ET.Element("recipe")
    ET.SubElement(recipe, "name").text = name
    ET.SubElement(recipe, "author").text = author
    ET.SubElement(recipe, "cuisine").text = cuisine
    ET.SubElement(recipe, "prepTime").text = prep_time
    ET.SubElement(recipe, "cookTime").text = cook_time
    ET.SubElement(recipe, "servings").text = str(servings)

    for ingredient in ingredients:
        ing = ET.SubElement(recipe, "ingredient")
        ET.SubElement(ing, "name").text = ingredient["name"]
        ET.SubElement(ing, "quantity").text = str(ingredient["quantity"])
        ET.SubElement(ing, "unit").text = ingredient["unit"]
        ET.SubElement(ing, "optional").text = str(ingredient["optional"])

    for instruction in instructions:
        step = ET.SubElement(recipe, "instruction")
        ET.SubElement(step, "order").text = str(instruction["order"])
        ET.SubElement(step, "description").text = instruction["description"]
        ET.SubElement(step, "duration").text = instruction["duration"]

    nutrition_elem = ET.SubElement(recipe, "nutrition")
    ET.SubElement(nutrition_elem, "calories").text = str(nutrition["calories"])
    ET.SubElement(nutrition_elem, "fat").text = str(nutrition["fat"])
    ET.SubElement(nutrition_elem, "protein").text = str(nutrition["protein"])
    ET.SubElement(nutrition_elem, "carbohydrates").text = str(nutrition["carbohydrates"])

    return ET.tostring(recipe, encoding="unicode")

# Example usage:
name = "Spaghetti Carbonara"
author = "Chef John"
cuisine = "Italian"
prep_time = "PT20M"
cook_time = "PT10M"
servings = 4
ingredients = [
    {"name": "spaghetti", "quantity": 400, "unit": "grams", "optional": False},
    {"name": "eggs", "quantity": 4, "unit": "pieces", "optional": False},
    {"name": "bacon", "quantity": 200, "unit": "grams", "optional": False},
    {"name": "parmesan cheese", "quantity": 50, "unit": "grams", "optional": True}
]
instructions = [
    {"order": 1, "description": "Cook spaghetti according to package instructions.", "duration": "PT10M"},
    {"order": 2, "description": "Cook bacon until crispy, then remove and set aside.", "duration": "PT5M"},
    {"order": 3, "description": "In a bowl, whisk eggs and parmesan cheese together.", "duration": "PT0M"},
    {"order": 4, "description": "Drain spaghetti and add to the egg mixture, tossing to combine.", "duration": "PT5M"},
    {"order": 5, "description": "Add bacon to the spaghetti and toss again.", "duration": "PT0M"}
]
nutrition = {"calories": 500, "fat": 20, "protein": 25, "carbohydrates": 40}

xml = create_recipe_xml(name, author, cuisine, prep_time, cook_time, servings, ingredients, instructions, nutrition)
print(xml)
