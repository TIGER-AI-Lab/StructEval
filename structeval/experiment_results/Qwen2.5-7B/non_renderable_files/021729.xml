
import csv
import xml.etree.ElementTree as ET

def csv_to_xml(csv_file, xml_file):
    tree = ET.ElementTree()
    root = ET.Element("planets")
    tree._setroot(root)

    with open(csv_file, 'r') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            planet = ET.SubElement(root, "planet")
            ET.SubElement(planet, "name").text = row["planet_name"]
            ET.SubElement(planet, "star_name").text = row["system.star_name"]
            ET.SubElement(planet, "star_type").text = row["system.star_type"]
            ET.SubElement(planet, "distance_light_years").text = row["system.distance_light_years"]
            ET.SubElement(planet, "atmosphere.composition").text = row["atmosphere.composition"]
            ET.SubElement(planet, "atmosphere.pressure_atm").text = row["atmosphere.pressure_atm"]
            ET.SubElement(planet, "atmosphere.temperature_c").text = row["atmosphere.temperature_c"]
            moon1 = ET.SubElement(planet, "moons")
            ET.SubElement(moon1, "moon_name").text = row["moons[0].moon_name"]
            ET.SubElement(moon1, "diameter_km").text = row["moons[0].diameter_km"]
            ET.SubElement(moon1, "has_rings").text = row["moons[0].has_rings"]
            moon2 = ET.SubElement(planet, "moons")
            ET.SubElement(moon2, "moon_name").text = row["moons[1].moon_name"]
            ET.SubElement(moon2, "diameter_km").text = row["moons[1].diameter_km"]
            ET.SubElement(moon2, "has_rings").text = row["moons[1].has_rings"]
            ET.SubElement(planet, "notable_features").text = row["notable_features"]

    tree.write(xml_file)

csv_to_xml("planets.csv", "planets.xml")
