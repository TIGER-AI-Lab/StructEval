[
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nid,name,email,phone_numbers,preferences,projects\n1,Alice Johnson,alice.johnson@example.com,\"[\"\"123-456-7890\"\", \"\"987-654-3210\"\"]\",\"{\"\"theme\"\":\"\"dark\"\",\"\"notifications\"\":true}\",\"[\"\"Project Alpha\"\", \"\"Project Beta\"\"]\"\n2,Bob Smith,bob.smith@example.com,\"[\"\"555-123-4567\"\"]\",\"{\"\"theme\"\":\"\"light\"\",\"\"notifications\"\":false}\",\"[\"\"Project Gamma\"\", \"\"Project Delta\"\", \"\"Project Epsilon\"\"]\"\n3,Carol Lee,carol.lee@example.com,\"[\"\"222-333-4444\"\", \"\"333-444-5555\"\"]\",\"{\"\"theme\"\":\"\"dark\"\",\"\"notifications\"\":true, \"\"language\"\":\"\"en-US\"\"}\",\"[\"\"Project Zeta\"\"]\"\n</code>",
            "feature_requirements": "• The converted output must be a JSON array where each element represents one row from the CSV data.  \n• Each JSON object in the array must include the keys: id, name, email, phone_numbers, preferences, and projects.  \n• The value corresponding to the id key should be a numeric type.  \n• The value corresponding to the name and email keys should be string types.  \n• The value for the phone_numbers key must be an array containing string elements.  \n• The value for the preferences key must be an object that includes key–value pairs such as theme and notifications, with notifications represented as a boolean and optionally other keys like language when present.  \n• The value for the projects key must be an array containing string elements representing the project names.",
            "task_id": "020525",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][id]",
                "rows[0][name]",
                "rows[0][email]",
                "rows[0][phone_numbers]",
                "rows[0][preferences]",
                "rows[0][preferences][theme]",
                "rows[0][preferences][notifications]",
                "rows[0][projects]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020525_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nid,name,email,phone_numbers,preferences,projects\n1,Alice Johnson,alice.johnson@example.com,\"[\"\"123-456-7890\"\", \"\"987-654-3210\"\"]\",\"{\"\"theme\"\":\"\"dark\"\",\"\"notifications\"\":true}\",\"[\"\"Project Alpha\"\", \"\"Project Beta\"\"]\"\n2,Bob Smith,bob.smith@example.com,\"[\"\"555-123-4567\"\"]\",\"{\"\"theme\"\":\"\"light\"\",\"\"notifications\"\":false}\",\"[\"\"Project Gamma\"\", \"\"Project Delta\"\", \"\"Project Epsilon\"\"]\"\n3,Carol Lee,carol.lee@example.com,\"[\"\"222-333-4444\"\", \"\"333-444-5555\"\"]\",\"{\"\"theme\"\":\"\"dark\"\",\"\"notifications\"\":true, \"\"language\"\":\"\"en-US\"\"}\",\"[\"\"Project Zeta\"\"]\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020525_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][id]",
                                "rows[0][name]",
                                "rows[0][email]",
                                "rows[0][phone_numbers]",
                                "rows[0][preferences]",
                                "rows[0][preferences][theme]",
                                "rows[0][preferences][notifications]",
                                "rows[0][projects]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n",
            "feature_requirements": "- The output must represent a structured JSON data model that encapsulates the entire CSV content.\n- The JSON structure must include a top-level array where each element corresponds to a single row from the CSV.\n- Each element in the array must be a JSON object representing a CSV row.\n- The keys in each JSON object must correspond to the column headers from the CSV.\n- Each JSON object must contain key-value pairs where the value is taken from the corresponding CSV cell in that row.\n- The order of the JSON objects in the array must match the order of the rows in the CSV.\n- All data types of the CSV values must be preserved appropriately in the JSON (typically as strings or numbers).\n- The conversion must ensure that no CSV data is omitted or rearranged during the transformation.",
            "task_id": "020526",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows",
                "rows[0]",
                "rows[0][<CSV_header>]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020526_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020526_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows",
                                "rows[0]",
                                "rows[0][<CSV_header>]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nID,UserName,Profile,Hobbies,Preferences\n1,Alice,\"{\"\"age\"\": 30, \"\"role\"\": \"\"Engineer\"\", \"\"department\"\": \"\"Development\"\"}\",\"Reading; Hiking; Painting\",\"{\"\"theme\"\": \"\"Dark\"\", \"\"notifications\"\": true, \"\"language\"\": \"\"English\"\"}\"\n2,Bob,\"{\"\"age\"\": 25, \"\"role\"\": \"\"Designer\"\", \"\"department\"\": \"\"Art\"\"}\",\"Drawing; Cycling\",\"{\"\"theme\"\": \"\"Light\"\", \"\"notifications\"\": false, \"\"language\"\": \"\"French\"\"}\"\n3,Charlie,\"{\"\"age\"\": 28, \"\"role\"\": \"\"Manager\"\", \"\"department\"\": \"\"Sales\"\"}\",\"Gaming; Music; Cooking\",\"{\"\"theme\"\": \"\"Dark\"\", \"\"notifications\"\": true, \"\"language\"\": \"\"Spanish\"\"}\"\n</code>",
            "feature_requirements": "• The output must be a valid JSON representation of the CSV data in a structured array form, where each element corresponds to one CSV row.  \n• Each JSON object must contain the following keys: ID, UserName, Profile, Hobbies, and Preferences.  \n• The ID key should capture the value from the CSV's first column, representing a unique identifier.  \n• The UserName key must hold the plain text string corresponding to the CSV's second column.  \n• The Profile key must contain a nested JSON object parsed from the CSV string, including key-value pairs such as age, role, and department, exactly as provided.  \n• The Hobbies key must be represented as a JSON array containing individual hobbies, obtained by splitting the CSV field using the semicolon as a delimiter and trimming whitespace.  \n• The Preferences key must include a nested JSON object parsed from the CSV field, with key-value pairs such as theme, notifications, and language, preserving data types (e.g., boolean for notifications).  \n• Every feature, including nested objects and arrays, must be correctly mapped and verifiable from the provided CSV content.",
            "task_id": "020527",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][ID]",
                "rows[0][UserName]",
                "rows[0][Profile]",
                "rows[0][Profile][age]",
                "rows[0][Profile][role]",
                "rows[0][Profile][department]",
                "rows[0][Hobbies]",
                "rows[0][Preferences]",
                "rows[0][Preferences][theme]",
                "rows[0][Preferences][notifications]",
                "rows[0][Preferences][language]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020527_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nID,UserName,Profile,Hobbies,Preferences\n1,Alice,\"{\"\"age\"\": 30, \"\"role\"\": \"\"Engineer\"\", \"\"department\"\": \"\"Development\"\"}\",\"Reading; Hiking; Painting\",\"{\"\"theme\"\": \"\"Dark\"\", \"\"notifications\"\": true, \"\"language\"\": \"\"English\"\"}\"\n2,Bob,\"{\"\"age\"\": 25, \"\"role\"\": \"\"Designer\"\", \"\"department\"\": \"\"Art\"\"}\",\"Drawing; Cycling\",\"{\"\"theme\"\": \"\"Light\"\", \"\"notifications\"\": false, \"\"language\"\": \"\"French\"\"}\"\n3,Charlie,\"{\"\"age\"\": 28, \"\"role\"\": \"\"Manager\"\", \"\"department\"\": \"\"Sales\"\"}\",\"Gaming; Music; Cooking\",\"{\"\"theme\"\": \"\"Dark\"\", \"\"notifications\"\": true, \"\"language\"\": \"\"Spanish\"\"}\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020527_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][ID]",
                                "rows[0][UserName]",
                                "rows[0][Profile]",
                                "rows[0][Profile][age]",
                                "rows[0][Profile][role]",
                                "rows[0][Profile][department]",
                                "rows[0][Hobbies]",
                                "rows[0][Preferences]",
                                "rows[0][Preferences][theme]",
                                "rows[0][Preferences][notifications]",
                                "rows[0][Preferences][language]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\n\"ExhibitionID\",\"ExhibitionName\",\"Venue\",\"Artworks\",\"Curators\"\n\"EX1001\",\"Impressionist Wonders\",\"Main Gallery\",\"[\"\"Starry Night\"\",\"\"Water Lilies\"\",\"\"The Luncheon\"\"]\",\"[{\"\"name\"\":\"\"Alice Johnson\"\",\"\"email\"\":\"\"alice@museum.org\"\"},{\"\"name\"\":\"\"Bob Smith\"\",\"\"email\"\":\"\"bob@museum.org\"\"}]\"\n\"EX1002\",\"Modern Marvels\",\"Contemporary Wing\",\"[\"\"The Abstract\"\",\"\"Digital Dreams\"\",\"\"Neon Nights\"\"]\",\"[{\"\"name\"\":\"\"Clara Ruiz\"\",\"\"email\"\":\"\"clara@museum.org\"\"},{\"\"name\"\":\"\"David Lee\"\",\"\"email\"\":\"\"david@museum.org\"\"}]\"\n</code>",
            "feature_requirements": "• The output must be a JSON structure consisting of an array of exhibition objects, each representing a row from the CSV (excluding the header row).  \n• Each exhibition object must have exactly the following keys: \"ExhibitionID\", \"ExhibitionName\", \"Venue\", \"Artworks\", and \"Curators\".  \n• The \"Artworks\" key’s value must be a JSON array containing the list of artwork names as strings.  \n• The \"Curators\" key’s value must be a JSON array of objects, where each object includes the keys \"name\" and \"email\" with string values.  \n• Every value from the CSV must be correctly mapped to its corresponding JSON datatype: text values as strings and lists (artworks and curators) as JSON arrays with appropriate inner elements.",
            "task_id": "020528",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "[][ExhibitionID]",
                "[][ExhibitionName]",
                "[][Venue]",
                "[][Artworks]",
                "[][Curators]",
                "[][Curators][][name]",
                "[][Curators][][email]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020528_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\n\"ExhibitionID\",\"ExhibitionName\",\"Venue\",\"Artworks\",\"Curators\"\n\"EX1001\",\"Impressionist Wonders\",\"Main Gallery\",\"[\"\"Starry Night\"\",\"\"Water Lilies\"\",\"\"The Luncheon\"\"]\",\"[{\"\"name\"\":\"\"Alice Johnson\"\",\"\"email\"\":\"\"alice@museum.org\"\"},{\"\"name\"\":\"\"Bob Smith\"\",\"\"email\"\":\"\"bob@museum.org\"\"}]\"\n\"EX1002\",\"Modern Marvels\",\"Contemporary Wing\",\"[\"\"The Abstract\"\",\"\"Digital Dreams\"\",\"\"Neon Nights\"\"]\",\"[{\"\"name\"\":\"\"Clara Ruiz\"\",\"\"email\"\":\"\"clara@museum.org\"\"},{\"\"name\"\":\"\"David Lee\"\",\"\"email\"\":\"\"david@museum.org\"\"}]\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020528_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "[][ExhibitionID]",
                                "[][ExhibitionName]",
                                "[][Venue]",
                                "[][Artworks]",
                                "[][Curators]",
                                "[][Curators][][name]",
                                "[][Curators][][email]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nrecord_id,full_name,contact_info,roles,preferences\n1,Alice Smith,\"{\"\"email\"\": \"\"alice.smith@example.com\"\", \"\"phone\"\": \"\"123-456-7890\"\"}\",\"[\"\"Admin\"\",\"\"User\"\"]\",\"{\"\"theme\"\": \"\"dark\"\", \"\"notifications\"\": true, \"\"alerts\"\": [\"\"email\"\",\"\"sms\"\"]}\"\n2,Bob Johnson,\"{\"\"email\"\": \"\"bob.johnson@example.com\"\", \"\"phone\"\": \"\"098-765-4321\"\"}\",\"[\"\"User\"\"]\",\"{\"\"theme\"\": \"\"light\"\", \"\"notifications\"\": false, \"\"alerts\"\": []}\"\n3,Charlie Lee,\"{\"\"email\"\": \"\"charlie.lee@example.com\"\", \"\"phone\"\": \"\"555-123-4567\"\"}\",\"[\"\"Editor\"\",\"\"Contributor\"\"]\",\"{\"\"theme\"\": \"\"dark\"\", \"\"notifications\"\": true, \"\"alerts\"\": [\"\"push\"\"]}\"\n</code>",
            "feature_requirements": "• The JSON output must represent a collection of records, with each record corresponding to a row from the CSV (excluding the header).  \n• Each record must contain the keys: \"record_id\", \"full_name\", \"contact_info\", \"roles\", and \"preferences\".  \n• The value for the key \"record_id\" must reflect the unique identifier for each record and be represented in a numeric or string format as per its original CSV value.  \n• The \"contact_info\" value must be structured as an object containing keys such as \"email\" and \"phone\", with their respective values extracted from the CSV.  \n• The \"roles\" value must be structured as an array of text strings, accurately reflecting the CSV list of roles.  \n• The \"preferences\" value must be structured as an object that includes keys like \"theme\", \"notifications\" (a boolean), and \"alerts\" (an array), exactly matching the content provided in the CSV.  \n• The JSON output must preserve the data types found in the CSV, such that booleans, arrays, and nested objects are correctly represented.  \n• Every record from the CSV must be fully converted to JSON without loss or alteration of the original field values.",
            "task_id": "020529",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][record_id]",
                "rows[*][full_name]",
                "rows[*][contact_info]",
                "rows[*][contact_info][email]",
                "rows[*][contact_info][phone]",
                "rows[*][roles]",
                "rows[*][preferences]",
                "rows[*][preferences][theme]",
                "rows[*][preferences][notifications]",
                "rows[*][preferences][alerts]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020529_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nrecord_id,full_name,contact_info,roles,preferences\n1,Alice Smith,\"{\"\"email\"\": \"\"alice.smith@example.com\"\", \"\"phone\"\": \"\"123-456-7890\"\"}\",\"[\"\"Admin\"\",\"\"User\"\"]\",\"{\"\"theme\"\": \"\"dark\"\", \"\"notifications\"\": true, \"\"alerts\"\": [\"\"email\"\",\"\"sms\"\"]}\"\n2,Bob Johnson,\"{\"\"email\"\": \"\"bob.johnson@example.com\"\", \"\"phone\"\": \"\"098-765-4321\"\"}\",\"[\"\"User\"\"]\",\"{\"\"theme\"\": \"\"light\"\", \"\"notifications\"\": false, \"\"alerts\"\": []}\"\n3,Charlie Lee,\"{\"\"email\"\": \"\"charlie.lee@example.com\"\", \"\"phone\"\": \"\"555-123-4567\"\"}\",\"[\"\"Editor\"\",\"\"Contributor\"\"]\",\"{\"\"theme\"\": \"\"dark\"\", \"\"notifications\"\": true, \"\"alerts\"\": [\"\"push\"\"]}\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020529_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][record_id]",
                                "rows[*][full_name]",
                                "rows[*][contact_info]",
                                "rows[*][contact_info][email]",
                                "rows[*][contact_info][phone]",
                                "rows[*][roles]",
                                "rows[*][preferences]",
                                "rows[*][preferences][theme]",
                                "rows[*][preferences][notifications]",
                                "rows[*][preferences][alerts]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n",
            "feature_requirements": "• The JSON output must represent the data as a collection of items, with each item corresponding to one row from the CSV.  \n• The first row of the CSV must be used as a set of field labels that serve as keys in each item.  \n• Each data row must be converted into a mapping where each field value is associated with its corresponding header key.  \n• The list of items in the JSON output must reflect the exact number of data rows present in the CSV, excluding the header row.  \n• Every key in each mapping must explicitly match one of the column headers defined in the CSV’s first row.  \n• The values in each mapping must directly correspond to the individual entries from the CSV data rows.",
            "task_id": "020530",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows",
                "rows[<row_index>]",
                "rows[<row_index>][<column_header>]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020530_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020530_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows",
                                "rows[<row_index>]",
                                "rows[<row_index>][<column_header>]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nID,Name,Role,Stats,Inventory,Abilities\n101,Arin,Warrior,\"HP:150;MP:50;Strength:20;Defense:15\",\"Sword,Shield,Helmet\",\"Slash,Block,Charge\"\n102,Luna,Mage,\"HP:100;MP:200;Intelligence:25;Mana Regen:10\",\"Staff,Spellbook,Robe\",\"Fireball,Teleport,Ice Shard\"\n103,Thorn,Rogue,\"HP:120;MP:80;Agility:30;Stealth:25\",\"Dagger,Cloak,Lockpick Set\",\"Backstab,Evade,Poison\"\n</code>",
            "feature_requirements": "• The output must be structured as an array, with each element representing one record from the CSV.  \n• Each record must include keys that exactly match the CSV header labels: ID, Name, Role, Stats, Inventory, and Abilities.  \n• The ID, Name, and Role values must be directly mapped from the CSV, preserving the corresponding data types (with ID as a number, if applicable).  \n• The Stats field must be converted into a collection of key-value pairs, where values are extracted by splitting the semicolon-separated list and further dividing each pair by the colon delimiter.  \n• Each key-value pair within the Stats field must appear as an attribute with the stat names as keys and their corresponding values (ideally as numbers) as the values.  \n• The Inventory field must be represented as a list of strings, parsed by splitting the comma-separated values.  \n• The Abilities field must be represented as a list of strings, created by splitting the comma-separated values.  \n• All records provided in the CSV (in this case, three records) must be present in the JSON output, with no additional extraneous records.",
            "task_id": "020531",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][ID]",
                "rows[0][Name]",
                "rows[0][Role]",
                "rows[0][Stats]",
                "rows[0][Inventory]",
                "rows[0][Abilities]",
                "rows[1][ID]",
                "rows[1][Name]",
                "rows[1][Role]",
                "rows[1][Stats]",
                "rows[1][Inventory]",
                "rows[1][Abilities]",
                "rows[2][ID]",
                "rows[2][Name]",
                "rows[2][Role]",
                "rows[2][Stats]",
                "rows[2][Inventory]",
                "rows[2][Abilities]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020531_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nID,Name,Role,Stats,Inventory,Abilities\n101,Arin,Warrior,\"HP:150;MP:50;Strength:20;Defense:15\",\"Sword,Shield,Helmet\",\"Slash,Block,Charge\"\n102,Luna,Mage,\"HP:100;MP:200;Intelligence:25;Mana Regen:10\",\"Staff,Spellbook,Robe\",\"Fireball,Teleport,Ice Shard\"\n103,Thorn,Rogue,\"HP:120;MP:80;Agility:30;Stealth:25\",\"Dagger,Cloak,Lockpick Set\",\"Backstab,Evade,Poison\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020531_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][ID]",
                                "rows[0][Name]",
                                "rows[0][Role]",
                                "rows[0][Stats]",
                                "rows[0][Inventory]",
                                "rows[0][Abilities]",
                                "rows[1][ID]",
                                "rows[1][Name]",
                                "rows[1][Role]",
                                "rows[1][Stats]",
                                "rows[1][Inventory]",
                                "rows[1][Abilities]",
                                "rows[2][ID]",
                                "rows[2][Name]",
                                "rows[2][Role]",
                                "rows[2][Stats]",
                                "rows[2][Inventory]",
                                "rows[2][Abilities]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\n\"user_id\",\"username\",\"roles\",\"preferences\",\"account_status\",\"access_levels\"\n\"1001\",\"jdoe\",\"[\"\"Admin\"\",\"\"User\"\"]\",\"{\"\"theme\"\":\"\"dark\"\",\"\"notifications\"\":true,\"\"languages\"\":[\"\"en\"\",\"\"fr\"\"]}\",\"active\",\"[1,2,3]\"\n\"1002\",\"asmith\",\"[\"\"User\"\"]\",\"{\"\"theme\"\":\"\"light\"\",\"\"notifications\"\":false,\"\"languages\"\":[\"\"en\"\"]}\",\"inactive\",\"[2,3]\"\n\"1003\",\"mbrown\",\"[\"\"Moderator\"\",\"\"User\"\"]\",\"{\"\"theme\"\":\"\"blue\"\",\"\"notifications\"\":true,\"\"languages\"\":[\"\"en\"\",\"\"es\"\"]}\",\"active\",\"[1,2]\"\n</code>",
            "feature_requirements": "• The output must be a JSON object that encapsulates the CSV data as an array of records, where each record represents one row from the CSV.  \n• Each record in the JSON array must include keys corresponding exactly to the CSV header fields: \"user_id\", \"username\", \"roles\", \"preferences\", \"account_status\", and \"access_levels\".  \n• The value for \"user_id\" must replicate the CSV value, preserving it as a string (or a number if converted consistently across all records).  \n• The \"roles\" key must have a value that is an array containing strings, matching the roles listed in the CSV row.  \n• The \"preferences\" key must have a value that is a nested JSON object containing at least the keys \"theme\", \"notifications\", and \"languages\", with \"theme\" as a string, \"notifications\" as a boolean, and \"languages\" as an array of strings.  \n• The \"account_status\" key must have a value that exactly reflects the CSV string value (e.g., \"active\" or \"inactive\").  \n• The \"access_levels\" key must have a value that is an array of numbers, accurately representing the numeric list provided in the CSV row.",
            "task_id": "020532",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows",
                "rows[0][user_id]",
                "rows[0][username]",
                "rows[0][roles]",
                "rows[0][preferences]",
                "rows[0][preferences][theme]",
                "rows[0][preferences][notifications]",
                "rows[0][preferences][languages]",
                "rows[0][account_status]",
                "rows[0][access_levels]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020532_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\n\"user_id\",\"username\",\"roles\",\"preferences\",\"account_status\",\"access_levels\"\n\"1001\",\"jdoe\",\"[\"\"Admin\"\",\"\"User\"\"]\",\"{\"\"theme\"\":\"\"dark\"\",\"\"notifications\"\":true,\"\"languages\"\":[\"\"en\"\",\"\"fr\"\"]}\",\"active\",\"[1,2,3]\"\n\"1002\",\"asmith\",\"[\"\"User\"\"]\",\"{\"\"theme\"\":\"\"light\"\",\"\"notifications\"\":false,\"\"languages\"\":[\"\"en\"\"]}\",\"inactive\",\"[2,3]\"\n\"1003\",\"mbrown\",\"[\"\"Moderator\"\",\"\"User\"\"]\",\"{\"\"theme\"\":\"\"blue\"\",\"\"notifications\"\":true,\"\"languages\"\":[\"\"en\"\",\"\"es\"\"]}\",\"active\",\"[1,2]\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020532_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows",
                                "rows[0][user_id]",
                                "rows[0][username]",
                                "rows[0][roles]",
                                "rows[0][preferences]",
                                "rows[0][preferences][theme]",
                                "rows[0][preferences][notifications]",
                                "rows[0][preferences][languages]",
                                "rows[0][account_status]",
                                "rows[0][access_levels]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\n\"TransactionID\",\"Customer\",\"OrderDate\",\"Items\",\"PaymentDetails\"\n\"TRX001\",\"Alice Johnson\",\"2023-10-05\",\"[{\"\"item_id\"\": \"\"B001\"\", \"\"name\"\": \"\"Espresso\"\", \"\"quantity\"\": 1}, {\"\"item_id\"\": \"\"B002\"\", \"\"name\"\": \"\"Latte\"\", \"\"quantity\"\": 2}]\",\"{\"\"method\"\": \"\"Credit Card\"\", \"\"currency\"\": \"\"USD\"\", \"\"transaction_num\"\": \"\"TX1001\"\"}\"\n\"TRX002\",\"Bob Smith\",\"2023-10-06\",\"[{\"\"item_id\"\": \"\"B003\"\", \"\"name\"\": \"\"Mocha\"\", \"\"quantity\"\": 1}, {\"\"item_id\"\": \"\"B004\"\", \"\"name\"\": \"\"Croissant\"\", \"\"quantity\"\": 3}]\",\"{\"\"method\"\": \"\"Cash\"\", \"\"currency\"\": \"\"USD\"\", \"\"transaction_num\"\": \"\"TX1002\"\"}\"\n</code>",
            "feature_requirements": "• The JSON output must be structured as an array where each element represents a transaction record from the CSV.  \n• Each transaction record must contain the following keys: TransactionID, Customer, OrderDate, Items, and PaymentDetails.  \n• The Items key must correspond to an array of objects, with each object containing the keys: item_id, name, and quantity.  \n• The PaymentDetails key must correspond to an object that includes the keys: method, currency, and transaction_num.  \n• Data values should be accurately converted from the CSV string fields to their respective types (e.g., strings for text, arrays for items, and objects for payment details).  \n• The conversion must maintain the hierarchical structure of nested items within each transaction record.",
            "task_id": "020533",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "[][TransactionID]",
                "[][Customer]",
                "[][OrderDate]",
                "[][Items]",
                "[][Items][][item_id]",
                "[][Items][][name]",
                "[][Items][][quantity]",
                "[][PaymentDetails]",
                "[][PaymentDetails][method]",
                "[][PaymentDetails][currency]",
                "[][PaymentDetails][transaction_num]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020533_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\n\"TransactionID\",\"Customer\",\"OrderDate\",\"Items\",\"PaymentDetails\"\n\"TRX001\",\"Alice Johnson\",\"2023-10-05\",\"[{\"\"item_id\"\": \"\"B001\"\", \"\"name\"\": \"\"Espresso\"\", \"\"quantity\"\": 1}, {\"\"item_id\"\": \"\"B002\"\", \"\"name\"\": \"\"Latte\"\", \"\"quantity\"\": 2}]\",\"{\"\"method\"\": \"\"Credit Card\"\", \"\"currency\"\": \"\"USD\"\", \"\"transaction_num\"\": \"\"TX1001\"\"}\"\n\"TRX002\",\"Bob Smith\",\"2023-10-06\",\"[{\"\"item_id\"\": \"\"B003\"\", \"\"name\"\": \"\"Mocha\"\", \"\"quantity\"\": 1}, {\"\"item_id\"\": \"\"B004\"\", \"\"name\"\": \"\"Croissant\"\", \"\"quantity\"\": 3}]\",\"{\"\"method\"\": \"\"Cash\"\", \"\"currency\"\": \"\"USD\"\", \"\"transaction_num\"\": \"\"TX1002\"\"}\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020533_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "[][TransactionID]",
                                "[][Customer]",
                                "[][OrderDate]",
                                "[][Items]",
                                "[][Items][][item_id]",
                                "[][Items][][name]",
                                "[][Items][][quantity]",
                                "[][PaymentDetails]",
                                "[][PaymentDetails][method]",
                                "[][PaymentDetails][currency]",
                                "[][PaymentDetails][transaction_num]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nRecordID,FullName,ContactInfo,Attributes,Preferences,ActivityMetrics\n1,John Doe,\"{\"\"email\"\":\"\"john.doe@example.com\"\",\"\"phone\"\":\"\"123-456-7890\"\"}\",\"height=180cm;weight=75kg;age=30\",\"[\"\"music\"\",\"\"sports\"\",\"\"travel\"\"]\",\"{\"\"visits\"\":15,\"\"purchases\"\":3}\"\n2,Jane Smith,\"{\"\"email\"\":\"\"jane.smith@example.com\"\",\"\"phone\"\":\"\"098-765-4321\"\"}\",\"height=165cm;weight=60kg;age=28\",\"[\"\"reading\"\",\"\"cooking\"\"]\",\"{\"\"visits\"\":25,\"\"purchases\"\":5}\"\n3,Bob Johnson,\"{\"\"email\"\":\"\"bob.johnson@example.com\"\",\"\"phone\"\":\"\"555-123-4567\"\"}\",\"height=170cm;weight=80kg;age=35\",\"[\"\"gaming\"\",\"\"travel\"\",\"\"fitness\"\"]\",\"{\"\"visits\"\":8,\"\"purchases\"\":1}\"\n</code>",
            "feature_requirements": "- The JSON output must represent the overall data as an array, with each element corresponding to one CSV row.\n- Each element (object) in the array must include exactly the keys: \"RecordID\", \"FullName\", \"ContactInfo\", \"Attributes\", \"Preferences\", and \"ActivityMetrics\".\n- The \"RecordID\" value must be a number (e.g., 1, 2, 3) and \"FullName\" must be a string.\n- The \"ContactInfo\" value must be an object containing keys like \"email\" and \"phone\", with their values as strings extracted from the CSV.\n- The \"Attributes\" value must be converted into an object (or dictionary) by parsing the semicolon-separated key-value pairs (e.g., height, weight, age).\n- The \"Preferences\" value must be converted into an array of strings based on the JSON-like list provided in the CSV.\n- The \"ActivityMetrics\" value must be converted into an object with keys such as \"visits\" and \"purchases\", and their corresponding values must be numeric.",
            "task_id": "020534",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "[i].RecordID",
                "[i].FullName",
                "[i].ContactInfo",
                "[i].ContactInfo[email]",
                "[i].ContactInfo[phone]",
                "[i].Attributes",
                "[i].Preferences",
                "[i].ActivityMetrics",
                "[i].ActivityMetrics[visits]",
                "[i].ActivityMetrics[purchases]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020534_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nRecordID,FullName,ContactInfo,Attributes,Preferences,ActivityMetrics\n1,John Doe,\"{\"\"email\"\":\"\"john.doe@example.com\"\",\"\"phone\"\":\"\"123-456-7890\"\"}\",\"height=180cm;weight=75kg;age=30\",\"[\"\"music\"\",\"\"sports\"\",\"\"travel\"\"]\",\"{\"\"visits\"\":15,\"\"purchases\"\":3}\"\n2,Jane Smith,\"{\"\"email\"\":\"\"jane.smith@example.com\"\",\"\"phone\"\":\"\"098-765-4321\"\"}\",\"height=165cm;weight=60kg;age=28\",\"[\"\"reading\"\",\"\"cooking\"\"]\",\"{\"\"visits\"\":25,\"\"purchases\"\":5}\"\n3,Bob Johnson,\"{\"\"email\"\":\"\"bob.johnson@example.com\"\",\"\"phone\"\":\"\"555-123-4567\"\"}\",\"height=170cm;weight=80kg;age=35\",\"[\"\"gaming\"\",\"\"travel\"\",\"\"fitness\"\"]\",\"{\"\"visits\"\":8,\"\"purchases\"\":1}\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020534_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "[i].RecordID",
                                "[i].FullName",
                                "[i].ContactInfo",
                                "[i].ContactInfo[email]",
                                "[i].ContactInfo[phone]",
                                "[i].Attributes",
                                "[i].Preferences",
                                "[i].ActivityMetrics",
                                "[i].ActivityMetrics[visits]",
                                "[i].ActivityMetrics[purchases]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nID,Name,Info,Items,Contacts\n101,\"Central Hub\",\"{\"\"created\"\": \"\"2021-05-20\"\", \"\"category\"\": \"\"Technology\"\"}\",\"[\"\"Router\"\", \"\"Switch\"\", \"\"Firewall\"\"]\",\"[{\"\"name\"\": \"\"Alice\"\", \"\"role\"\": \"\"Manager\"\"}, {\"\"name\"\": \"\"Bob\"\", \"\"role\"\": \"\"Support\"\"}]\"\n102,\"East Wing\",\"{\"\"created\"\": \"\"2019-11-15\"\", \"\"category\"\": \"\"Library\"\"}\",\"[\"\"Bookshelf\"\", \"\"eReader\"\", \"\"Study Table\"\"]\",\"[{\"\"name\"\": \"\"Carol\"\", \"\"role\"\": \"\"Administrator\"\"}, {\"\"name\"\": \"\"David\"\", \"\"role\"\": \"\"Staff\"\"}]\"\n</code>",
            "feature_requirements": "• The JSON output must be a collection (such as an array) of objects, with each object representing one CSV row.  \n• Each object must include the keys: \"ID\", \"Name\", \"Info\", \"Items\", and \"Contacts\".  \n• The \"ID\" key must have a numerical value corresponding to the CSV numeric identifier.  \n• The \"Name\" key must contain a string that represents the name as given in the CSV, preserving quotation marks where appropriate.  \n• The \"Info\" key must contain a nested object parsed from the CSV string, which includes properties such as \"created\" and \"category\".  \n• The \"Items\" key must contain a list parsed from the CSV string, with each element being a string (e.g., \"Router\", \"Switch\", etc.).  \n• The \"Contacts\" key must contain a list of objects parsed from the CSV string, where each contact object includes keys like \"name\" and \"role\" with their corresponding string values.",
            "task_id": "020535",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][ID]",
                "rows[*][Name]",
                "rows[*][Info]",
                "rows[*][Info][created]",
                "rows[*][Info][category]",
                "rows[*][Items]",
                "rows[*][Contacts]",
                "rows[*][Contacts][*][name]",
                "rows[*][Contacts][*][role]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020535_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nID,Name,Info,Items,Contacts\n101,\"Central Hub\",\"{\"\"created\"\": \"\"2021-05-20\"\", \"\"category\"\": \"\"Technology\"\"}\",\"[\"\"Router\"\", \"\"Switch\"\", \"\"Firewall\"\"]\",\"[{\"\"name\"\": \"\"Alice\"\", \"\"role\"\": \"\"Manager\"\"}, {\"\"name\"\": \"\"Bob\"\", \"\"role\"\": \"\"Support\"\"}]\"\n102,\"East Wing\",\"{\"\"created\"\": \"\"2019-11-15\"\", \"\"category\"\": \"\"Library\"\"}\",\"[\"\"Bookshelf\"\", \"\"eReader\"\", \"\"Study Table\"\"]\",\"[{\"\"name\"\": \"\"Carol\"\", \"\"role\"\": \"\"Administrator\"\"}, {\"\"name\"\": \"\"David\"\", \"\"role\"\": \"\"Staff\"\"}]\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020535_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][ID]",
                                "rows[*][Name]",
                                "rows[*][Info]",
                                "rows[*][Info][created]",
                                "rows[*][Info][category]",
                                "rows[*][Items]",
                                "rows[*][Contacts]",
                                "rows[*][Contacts][*][name]",
                                "rows[*][Contacts][*][role]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\n\"id\",\"username\",\"profile\",\"roles\",\"activity_log\"\n\"1\",\"Alice Johnson\",\"{\"\"email\"\": \"\"alice.johnson@example.com\"\", \"\"phone\"\": \"\"555-0101\"\", \"\"address\"\": {\"\"street\"\": \"\"123 Main St\"\", \"\"city\"\": \"\"Anytown\"\"}}\",\"admin;editor\",\"[\"\"2023-09-20T10:00:00Z\"\",\"\"2023-09-21T12:30:00Z\"\"]\"\n\"2\",\"Bob Smith\",\"{\"\"email\"\": \"\"bob.smith@example.com\"\", \"\"phone\"\": \"\"555-0202\"\", \"\"address\"\": {\"\"street\"\": \"\"456 Oak Ave\"\", \"\"city\"\": \"\"Otherville\"\"}}\",\"viewer;contributor\",\"[\"\"2023-09-19T09:15:00Z\"\",\"\"2023-09-22T14:45:00Z\"\"]\"\n\"3\",\"Carol Lee\",\"{\"\"email\"\": \"\"carol.lee@example.com\"\", \"\"phone\"\": \"\"555-0303\"\", \"\"address\"\": {\"\"street\"\": \"\"789 Pine Rd\"\", \"\"city\"\": \"\"Elsewhere\"\"}}\",\"editor;contributor;tester\",\"[\"\"2023-09-18T08:00:00Z\"\",\"\"2023-09-23T16:20:00Z\"\"]\"\n</code>",
            "feature_requirements": "• The output must be structured as a JSON array with each CSV row represented as an individual JSON object.  \n• Each JSON object must contain the keys: \"id\", \"username\", \"profile\", \"roles\", and \"activity_log\".  \n• The \"id\" key must have a value corresponding to the CSV \"id\" field (e.g., \"1\"), and the value should maintain its textual representation.  \n• The \"username\" key must have a string value exactly matching the CSV \"username\" field.  \n• The \"profile\" key must contain a nested JSON object with keys \"email\", \"phone\", and \"address\", where \"address\" is itself a nested object with keys \"street\" and \"city\".  \n• The \"roles\" key must contain a JSON array derived from splitting the CSV \"roles\" field on semicolons (e.g., [\"admin\", \"editor\"]).  \n• The \"activity_log\" key must contain a JSON array of timestamp strings exactly matching the ISO formatted date-times provided in the CSV field.",
            "task_id": "020536",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][id]",
                "rows[*][username]",
                "rows[*][profile]",
                "rows[*][profile][email]",
                "rows[*][profile][phone]",
                "rows[*][profile][address]",
                "rows[*][profile][address][street]",
                "rows[*][profile][address][city]",
                "rows[*][roles]",
                "rows[*][activity_log]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020536_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\n\"id\",\"username\",\"profile\",\"roles\",\"activity_log\"\n\"1\",\"Alice Johnson\",\"{\"\"email\"\": \"\"alice.johnson@example.com\"\", \"\"phone\"\": \"\"555-0101\"\", \"\"address\"\": {\"\"street\"\": \"\"123 Main St\"\", \"\"city\"\": \"\"Anytown\"\"}}\",\"admin;editor\",\"[\"\"2023-09-20T10:00:00Z\"\",\"\"2023-09-21T12:30:00Z\"\"]\"\n\"2\",\"Bob Smith\",\"{\"\"email\"\": \"\"bob.smith@example.com\"\", \"\"phone\"\": \"\"555-0202\"\", \"\"address\"\": {\"\"street\"\": \"\"456 Oak Ave\"\", \"\"city\"\": \"\"Otherville\"\"}}\",\"viewer;contributor\",\"[\"\"2023-09-19T09:15:00Z\"\",\"\"2023-09-22T14:45:00Z\"\"]\"\n\"3\",\"Carol Lee\",\"{\"\"email\"\": \"\"carol.lee@example.com\"\", \"\"phone\"\": \"\"555-0303\"\", \"\"address\"\": {\"\"street\"\": \"\"789 Pine Rd\"\", \"\"city\"\": \"\"Elsewhere\"\"}}\",\"editor;contributor;tester\",\"[\"\"2023-09-18T08:00:00Z\"\",\"\"2023-09-23T16:20:00Z\"\"]\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020536_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][id]",
                                "rows[*][username]",
                                "rows[*][profile]",
                                "rows[*][profile][email]",
                                "rows[*][profile][phone]",
                                "rows[*][profile][address]",
                                "rows[*][profile][address][street]",
                                "rows[*][profile][address][city]",
                                "rows[*][roles]",
                                "rows[*][activity_log]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nserver_id,server_name,active_players,game_modes,configuration\n1,\"Dragon's Keep\",\"[\"\"player1\"\",\"\"player2\"\",\"\"player3\"\"]\",\"[\"\"PvE\"\",\"\"PvP\"\"]\",\"{\"\"maxPlayers\"\":100,\"\"region\"\":\"\"NA\"\",\"\"maintenance\"\":false}\"\n2,\"Elven Grove\",\"[\"\"elf_king\"\",\"\"leaf_walker\"\"]\",\"[\"\"Co-op\"\",\"\"Solo\"\",\"\"Battle Royale\"\"]\",\"{\"\"maxPlayers\"\":75,\"\"region\"\":\"\"EU\"\",\"\"maintenance\"\":true}\"\n</code>",
            "feature_requirements": "• The output must be a JSON structure representing a collection (e.g., an array) of server objects, one for each CSV row.  \n• Each server object must include the keys: server_id, server_name, active_players, game_modes, and configuration.  \n• The server_id field must be a number corresponding to the CSV server_id.  \n• The server_name field must be a string that reflects the CSV value.  \n• The active_players key must have an array value with each element being a string, derived from the CSV active_players field.  \n• The game_modes key must have an array value with string elements, as provided in the CSV.  \n• The configuration key must contain an object with properties that include maxPlayers, region, and maintenance.  \n• Within the configuration object, the maxPlayers must be a number, region a string, and maintenance a boolean, matching the CSV conversion.",
            "task_id": "020537",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "[*][server_id]",
                "[*][server_name]",
                "[*][active_players]",
                "[*][game_modes]",
                "[*][configuration]",
                "[*][configuration][maxPlayers]",
                "[*][configuration][region]",
                "[*][configuration][maintenance]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020537_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nserver_id,server_name,active_players,game_modes,configuration\n1,\"Dragon's Keep\",\"[\"\"player1\"\",\"\"player2\"\",\"\"player3\"\"]\",\"[\"\"PvE\"\",\"\"PvP\"\"]\",\"{\"\"maxPlayers\"\":100,\"\"region\"\":\"\"NA\"\",\"\"maintenance\"\":false}\"\n2,\"Elven Grove\",\"[\"\"elf_king\"\",\"\"leaf_walker\"\"]\",\"[\"\"Co-op\"\",\"\"Solo\"\",\"\"Battle Royale\"\"]\",\"{\"\"maxPlayers\"\":75,\"\"region\"\":\"\"EU\"\",\"\"maintenance\"\":true}\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020537_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "[*][server_id]",
                                "[*][server_name]",
                                "[*][active_players]",
                                "[*][game_modes]",
                                "[*][configuration]",
                                "[*][configuration][maxPlayers]",
                                "[*][configuration][region]",
                                "[*][configuration][maintenance]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nid,name,attributes,tags,metrics\n1,\"Mystic Library\",\"{\"\"architecture\"\": \"\"gothic\"\", \"\"collections\"\": 20000, \"\"floors\"\": 5}\",\"[\"\"quiet\"\", \"\"historical\"\", \"\"arcane\"\"]\",\"{\"\"visitorsPerDay\"\": 150, \"\"staffCount\"\": 25}\"\n2,\"Celestial Observatory\",\"{\"\"domeDiameter\"\": 30, \"\"telescopes\"\": 5, \"\"location\"\": \"\"hilltop\"\"}\",\"[\"\"astronomy\"\", \"\"research\"\", \"\"modern\"\"]\",\"{\"\"visitorsPerDay\"\": 80, \"\"staffCount\"\": 12}\"\n</code>",
            "feature_requirements": "• The output must be structured as a top-level array where each element represents a record from the CSV.  \n• Each record object must contain exactly the keys: \"id\", \"name\", \"attributes\", \"tags\", and \"metrics\".  \n• The \"id\" value must be represented as a number.  \n• The \"name\" value must be represented as a string.  \n• The \"attributes\" value must be a nested object that includes the properties provided in the CSV (e.g., first record: \"architecture\", \"collections\", \"floors\"; second record: \"domeDiameter\", \"telescopes\", \"location\").  \n• The \"tags\" value must be an array of strings derived from the CSV data.  \n• The \"metrics\" value must be a nested object that includes the numeric properties provided in the CSV (e.g., \"visitorsPerDay\", \"staffCount\").  \n• The output must include exactly two objects in the top-level array corresponding to the two CSV records.",
            "task_id": "020538",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][id]",
                "rows[0][name]",
                "rows[0][attributes]",
                "rows[0][attributes][architecture]",
                "rows[0][attributes][collections]",
                "rows[0][attributes][floors]",
                "rows[0][tags]",
                "rows[0][metrics]",
                "rows[0][metrics][visitorsPerDay]",
                "rows[0][metrics][staffCount]",
                "rows[1][id]",
                "rows[1][name]",
                "rows[1][attributes]",
                "rows[1][attributes][domeDiameter]",
                "rows[1][attributes][telescopes]",
                "rows[1][attributes][location]",
                "rows[1][tags]",
                "rows[1][metrics]",
                "rows[1][metrics][visitorsPerDay]",
                "rows[1][metrics][staffCount]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020538_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nid,name,attributes,tags,metrics\n1,\"Mystic Library\",\"{\"\"architecture\"\": \"\"gothic\"\", \"\"collections\"\": 20000, \"\"floors\"\": 5}\",\"[\"\"quiet\"\", \"\"historical\"\", \"\"arcane\"\"]\",\"{\"\"visitorsPerDay\"\": 150, \"\"staffCount\"\": 25}\"\n2,\"Celestial Observatory\",\"{\"\"domeDiameter\"\": 30, \"\"telescopes\"\": 5, \"\"location\"\": \"\"hilltop\"\"}\",\"[\"\"astronomy\"\", \"\"research\"\", \"\"modern\"\"]\",\"{\"\"visitorsPerDay\"\": 80, \"\"staffCount\"\": 12}\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020538_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][id]",
                                "rows[0][name]",
                                "rows[0][attributes]",
                                "rows[0][attributes][architecture]",
                                "rows[0][attributes][collections]",
                                "rows[0][attributes][floors]",
                                "rows[0][tags]",
                                "rows[0][metrics]",
                                "rows[0][metrics][visitorsPerDay]",
                                "rows[0][metrics][staffCount]",
                                "rows[1][id]",
                                "rows[1][name]",
                                "rows[1][attributes]",
                                "rows[1][attributes][domeDiameter]",
                                "rows[1][attributes][telescopes]",
                                "rows[1][attributes][location]",
                                "rows[1][tags]",
                                "rows[1][metrics]",
                                "rows[1][metrics][visitorsPerDay]",
                                "rows[1][metrics][staffCount]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\"StoreID\",\"StoreName\",\"MenuItems\",\"StaffList\",\"OperationHours\"\n\"001\",\"Central Perk\",\"[\"\"Espresso\"\",\"\"Latte\"\",\"\"Mocha\"\"]\",\"[\"\"Rachel\"\",\"\"Monica\"\",\"\"Chandler\"\"]\",\"{\"\"open\"\": \"\"8:00 AM\"\", \"\"close\"\": \"\"8:00 PM\"\"}\"\n\"002\",\"Bean There\",\"[\"\"Cappuccino\"\",\"\"Americano\"\",\"\"Flat White\"\"]\",\"[\"\"Alice\"\",\"\"Bob\"\"]\",\"{\"\"open\"\": \"\"7:00 AM\"\", \"\"close\"\": \"\"6:00 PM\"\"}\"\n\"003\",\"Brewed Awakening\",\"[\"\"Drip Coffee\"\",\"\"Cold Brew\"\",\"\"Matcha Latte\"\"]\",\"[\"\"David\"\",\"\"Eve\"\",\"\"Frank\"\"]\",\"{\"\"open\"\": \"\"6:30 AM\"\", \"\"close\"\": \"\"7:00 PM\"\"}\"</code>",
            "feature_requirements": "• The JSON output must represent the data as a collection (list) of store objects.\n• Each store object must contain a key for \"StoreID\" with its corresponding string value.\n• Each store object must include a \"StoreName\" key with its corresponding string value.\n• Each store object must have a \"MenuItems\" key associated with an array containing string values.\n• Each store object must have a \"StaffList\" key associated with an array containing string values.\n• Each store object must include an \"OperationHours\" key associated with an object that contains two keys: \"open\" and \"close\", each with their corresponding string values.\n• All values in the JSON output must be directly derived from the CSV header and row values without alteration in structure.",
            "task_id": "020539",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "[][StoreID]",
                "[][StoreName]",
                "[][MenuItems]",
                "[][StaffList]",
                "[][OperationHours][open]",
                "[][OperationHours][close]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020539_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\"StoreID\",\"StoreName\",\"MenuItems\",\"StaffList\",\"OperationHours\"\n\"001\",\"Central Perk\",\"[\"\"Espresso\"\",\"\"Latte\"\",\"\"Mocha\"\"]\",\"[\"\"Rachel\"\",\"\"Monica\"\",\"\"Chandler\"\"]\",\"{\"\"open\"\": \"\"8:00 AM\"\", \"\"close\"\": \"\"8:00 PM\"\"}\"\n\"002\",\"Bean There\",\"[\"\"Cappuccino\"\",\"\"Americano\"\",\"\"Flat White\"\"]\",\"[\"\"Alice\"\",\"\"Bob\"\"]\",\"{\"\"open\"\": \"\"7:00 AM\"\", \"\"close\"\": \"\"6:00 PM\"\"}\"\n\"003\",\"Brewed Awakening\",\"[\"\"Drip Coffee\"\",\"\"Cold Brew\"\",\"\"Matcha Latte\"\"]\",\"[\"\"David\"\",\"\"Eve\"\",\"\"Frank\"\"]\",\"{\"\"open\"\": \"\"6:30 AM\"\", \"\"close\"\": \"\"7:00 PM\"\"}\"</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020539_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "[][StoreID]",
                                "[][StoreName]",
                                "[][MenuItems]",
                                "[][StaffList]",
                                "[][OperationHours][open]",
                                "[][OperationHours][close]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nrecord_id,description,attributes,tags,activity_log\nID001,\"Office Setup\",\"{\"\"width\"\":120, \"\"height\"\":240, \"\"color\"\":\"\"blue\"\"}\",\"[\"\"Workstation\"\",\"\"Lighting\"\"]\",\"[{\"\"timestamp\"\":\"\"2023-09-01T08:00:00\"\",\"\"action\"\":\"\"Created\"\"}, {\"\"timestamp\"\":\"\"2023-09-02T12:30:00\"\",\"\"action\"\":\"\"Modified\"\"}]\"\nID002,\"Meeting Room\",\"{\"\"capacity\"\":20, \"\"equipment\"\":\"\"Projector, Whiteboard\"\"}\",\"[\"\"Conference\"\",\"\"AV\"\"]\",\"[{\"\"timestamp\"\":\"\"2023-09-03T09:15:00\"\",\"\"action\"\":\"\"Booked\"\"}]\"\nID003,\"Break Area\",\"{\"\"items\"\":[\"\"Coffee Machine\"\",\"\"Vending Machine\"\"], \"\"seating\"\":5}\",\"[\"\"Relax\"\",\"\"Hospitality\"\"]\",\"[{\"\"timestamp\"\":\"\"2023-09-04T10:00:00\"\",\"\"action\"\":\"\"Setup\"\"}, {\"\"timestamp\"\":\"\"2023-09-05T14:00:00\"\",\"\"action\"\":\"\"Inspected\"\"}]\"\n</code>",
            "feature_requirements": "• The output must be structured as a JSON array, where each element represents one record from the CSV.  \n• Each record must include keys for \"record_id\", \"description\", \"attributes\", \"tags\", and \"activity_log\".  \n• The \"attributes\" value must be represented as a JSON object with its own key-value pairs as parsed from the CSV field.  \n• The \"tags\" value must be parsed and represented as a JSON array of strings.  \n• The \"activity_log\" value must be parsed into a JSON array, where each element is an object containing keys such as \"timestamp\" and \"action\".  \n• All records in the CSV must be included without omission in the output JSON array.  \n• The conversion must handle the embedded JSON strings within CSV fields properly, ensuring that nested objects and arrays are accurately parsed into JSON.",
            "task_id": "020540",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][record_id]",
                "rows[*][description]",
                "rows[*][attributes]",
                "rows[*][tags]",
                "rows[*][activity_log]",
                "rows[*][activity_log][*][timestamp]",
                "rows[*][activity_log][*][action]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020540_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nrecord_id,description,attributes,tags,activity_log\nID001,\"Office Setup\",\"{\"\"width\"\":120, \"\"height\"\":240, \"\"color\"\":\"\"blue\"\"}\",\"[\"\"Workstation\"\",\"\"Lighting\"\"]\",\"[{\"\"timestamp\"\":\"\"2023-09-01T08:00:00\"\",\"\"action\"\":\"\"Created\"\"}, {\"\"timestamp\"\":\"\"2023-09-02T12:30:00\"\",\"\"action\"\":\"\"Modified\"\"}]\"\nID002,\"Meeting Room\",\"{\"\"capacity\"\":20, \"\"equipment\"\":\"\"Projector, Whiteboard\"\"}\",\"[\"\"Conference\"\",\"\"AV\"\"]\",\"[{\"\"timestamp\"\":\"\"2023-09-03T09:15:00\"\",\"\"action\"\":\"\"Booked\"\"}]\"\nID003,\"Break Area\",\"{\"\"items\"\":[\"\"Coffee Machine\"\",\"\"Vending Machine\"\"], \"\"seating\"\":5}\",\"[\"\"Relax\"\",\"\"Hospitality\"\"]\",\"[{\"\"timestamp\"\":\"\"2023-09-04T10:00:00\"\",\"\"action\"\":\"\"Setup\"\"}, {\"\"timestamp\"\":\"\"2023-09-05T14:00:00\"\",\"\"action\"\":\"\"Inspected\"\"}]\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020540_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][record_id]",
                                "rows[*][description]",
                                "rows[*][attributes]",
                                "rows[*][tags]",
                                "rows[*][activity_log]",
                                "rows[*][activity_log][*][timestamp]",
                                "rows[*][activity_log][*][action]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n",
            "feature_requirements": "- The output must represent the entire CSV data as a structured collection of records.\n- The JSON structure must contain an array (or list) where each element corresponds to a row in the CSV file.\n- The first row of the CSV (header) must be used as keys for the JSON objects in the array.\n- Each JSON object in the array must have key/value pairs that directly map to the CSV columns and their corresponding data.\n- The conversion must preserve the order of the columns as they appear in the CSV header.\n- All CSV data rows must be included in the JSON output, ensuring no data loss.\n- The final output must be valid JSON and directly parsable into data structures.",
            "task_id": "020541",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows",
                "rows[0]",
                "rows[0][<CSV_header_value>]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020541_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020541_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows",
                                "rows[0]",
                                "rows[0][<CSV_header_value>]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\n\"record_id\",\"name\",\"metadata\",\"contact_info\",\"roles\"\n\"001\",\"Alice Smith\",\"{\"\"created_date\"\":\"\"2023-10-05\"\",\"\"updated_date\"\":\"\"2023-10-07\"\"}\",\"{\"\"email\"\":\"\"alice.smith@example.com\"\",\"\"phone\"\":\"\"555-1234\"\"}\",\"[\"\"admin\"\",\"\"editor\"\"]\"\n\"002\",\"Bob Johnson\",\"{\"\"created_date\"\":\"\"2023-09-15\"\",\"\"updated_date\"\":\"\"2023-10-01\"\"}\",\"{\"\"email\"\":\"\"bob.johnson@example.com\"\",\"\"phone\"\":\"\"555-5678\"\"}\",\"[\"\"viewer\"\"]\"\n\"003\",\"Charlie Lee\",\"{\"\"created_date\"\":\"\"2023-10-01\"\",\"\"updated_date\"\":\"\"2023-10-05\"\"}\",\"{\"\"email\"\":\"\"charlie.lee@example.com\"\",\"\"phone\"\":\"\"555-9876\"\"}\",\"[\"\"editor\"\",\"\"contributor\"\"]\"\n</code>",
            "feature_requirements": "• The output must contain a top-level collection where each element represents one record from the CSV file.  \n• Each record must include keys for record_id, name, metadata, contact_info, and roles.  \n• The record_id field must contain a string representing the unique identifier of the record.  \n• The name field must contain a string representing the person's full name.  \n• The metadata field must be represented as an object containing keys for created_date and updated_date, with date values as strings.  \n• The contact_info field must be represented as an object containing keys for email and phone, extracted as string values.  \n• The roles field must be represented as a list containing one or more role strings.  \n• All three CSV records must be converted and included in the resulting output.",
            "task_id": "020542",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][record_id]",
                "rows[0][name]",
                "rows[0][metadata][created_date]",
                "rows[0][metadata][updated_date]",
                "rows[0][contact_info][email]",
                "rows[0][contact_info][phone]",
                "rows[0][roles]",
                "rows[1][record_id]",
                "rows[1][name]",
                "rows[1][metadata][created_date]",
                "rows[1][metadata][updated_date]",
                "rows[1][contact_info][email]",
                "rows[1][contact_info][phone]",
                "rows[1][roles]",
                "rows[2][record_id]",
                "rows[2][name]",
                "rows[2][metadata][created_date]",
                "rows[2][metadata][updated_date]",
                "rows[2][contact_info][email]",
                "rows[2][contact_info][phone]",
                "rows[2][roles]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020542_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\n\"record_id\",\"name\",\"metadata\",\"contact_info\",\"roles\"\n\"001\",\"Alice Smith\",\"{\"\"created_date\"\":\"\"2023-10-05\"\",\"\"updated_date\"\":\"\"2023-10-07\"\"}\",\"{\"\"email\"\":\"\"alice.smith@example.com\"\",\"\"phone\"\":\"\"555-1234\"\"}\",\"[\"\"admin\"\",\"\"editor\"\"]\"\n\"002\",\"Bob Johnson\",\"{\"\"created_date\"\":\"\"2023-09-15\"\",\"\"updated_date\"\":\"\"2023-10-01\"\"}\",\"{\"\"email\"\":\"\"bob.johnson@example.com\"\",\"\"phone\"\":\"\"555-5678\"\"}\",\"[\"\"viewer\"\"]\"\n\"003\",\"Charlie Lee\",\"{\"\"created_date\"\":\"\"2023-10-01\"\",\"\"updated_date\"\":\"\"2023-10-05\"\"}\",\"{\"\"email\"\":\"\"charlie.lee@example.com\"\",\"\"phone\"\":\"\"555-9876\"\"}\",\"[\"\"editor\"\",\"\"contributor\"\"]\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020542_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][record_id]",
                                "rows[0][name]",
                                "rows[0][metadata][created_date]",
                                "rows[0][metadata][updated_date]",
                                "rows[0][contact_info][email]",
                                "rows[0][contact_info][phone]",
                                "rows[0][roles]",
                                "rows[1][record_id]",
                                "rows[1][name]",
                                "rows[1][metadata][created_date]",
                                "rows[1][metadata][updated_date]",
                                "rows[1][contact_info][email]",
                                "rows[1][contact_info][phone]",
                                "rows[1][roles]",
                                "rows[2][record_id]",
                                "rows[2][name]",
                                "rows[2][metadata][created_date]",
                                "rows[2][metadata][updated_date]",
                                "rows[2][contact_info][email]",
                                "rows[2][contact_info][phone]",
                                "rows[2][roles]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nid,name,age,skills,contact,email,address,interests\n1,John Doe,30,\"Python;JavaScript;SQL\",\"mobile:1234567890|landline:0987654321\",john.doe@example.com,\"{\"\"street\"\": \"\"123 Maple St\"\", \"\"city\"\": \"\"Springfield\"\", \"\"zip\"\": \"\"62704\"\"}\",\"reading;cycling;photography\"\n2,Jane Smith,25,\"Java;HTML;CSS\",\"mobile:9876543210|landline:0123456789\",jane.smith@example.com,\"{\"\"street\"\": \"\"456 Oak Ave\"\", \"\"city\"\": \"\"Centerville\"\", \"\"zip\"\": \"\"12345\"\"}\",\"painting;hiking;blogging\"\n3,Alex Johnson,40,\"C++;Python;Go\",\"mobile:5551234567|landline:5557654321\",alex.johnson@example.com,\"{\"\"street\"\": \"\"789 Pine Rd\"\", \"\"city\"\": \"\"Rivertown\"\", \"\"zip\"\": \"\"54321\"\"}\",\"cooking;travelling;cycling\"\n</code>",
            "feature_requirements": "• The JSON output must have a top-level data structure that is an array containing objects, each representing a record from the CSV.  \n• Each object in the array must include keys for id, name, age, skills, contact, email, address, and interests.  \n• The id and age values should be represented as numbers.  \n• The skills and interests values should be represented as arrays, parsed from the semicolon-separated strings in the CSV.  \n• The contact value should be represented as an object with properties derived from the pipe-separated string, with keys such as mobile and landline having the corresponding phone number values.  \n• The email value must be a string that directly reflects the CSV email field.  \n• The address value must be a nested object parsed from the JSON-like string in the CSV, containing keys like street, city, and zip.  \n• The JSON structure must correctly map each CSV field to its appropriate data type and nested structure, preserving the details given in each record.",
            "task_id": "020543",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "[*][id]",
                "[*][name]",
                "[*][age]",
                "[*][skills]",
                "[*][contact]",
                "[*][contact][mobile]",
                "[*][contact][landline]",
                "[*][email]",
                "[*][address]",
                "[*][address][street]",
                "[*][address][city]",
                "[*][address][zip]",
                "[*][interests]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020543_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nid,name,age,skills,contact,email,address,interests\n1,John Doe,30,\"Python;JavaScript;SQL\",\"mobile:1234567890|landline:0987654321\",john.doe@example.com,\"{\"\"street\"\": \"\"123 Maple St\"\", \"\"city\"\": \"\"Springfield\"\", \"\"zip\"\": \"\"62704\"\"}\",\"reading;cycling;photography\"\n2,Jane Smith,25,\"Java;HTML;CSS\",\"mobile:9876543210|landline:0123456789\",jane.smith@example.com,\"{\"\"street\"\": \"\"456 Oak Ave\"\", \"\"city\"\": \"\"Centerville\"\", \"\"zip\"\": \"\"12345\"\"}\",\"painting;hiking;blogging\"\n3,Alex Johnson,40,\"C++;Python;Go\",\"mobile:5551234567|landline:5557654321\",alex.johnson@example.com,\"{\"\"street\"\": \"\"789 Pine Rd\"\", \"\"city\"\": \"\"Rivertown\"\", \"\"zip\"\": \"\"54321\"\"}\",\"cooking;travelling;cycling\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020543_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "[*][id]",
                                "[*][name]",
                                "[*][age]",
                                "[*][skills]",
                                "[*][contact]",
                                "[*][contact][mobile]",
                                "[*][contact][landline]",
                                "[*][email]",
                                "[*][address]",
                                "[*][address][street]",
                                "[*][address][city]",
                                "[*][address][zip]",
                                "[*][interests]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nRecordID,SettingName,Location,Features,ActiveComponents,ContactEmails\n001,Urban Garden,\"Downtown, City Center\",\"watering:sprinkler;lighting:LED;irrigation:auto\",\"Fountain;Seating Area;Greenhouse\",\"info@urbangarden.com;support@urbangarden.com\"\n002,Mountain Retreat,\"Highlands, Countryside\",\"heating:wood stove;insulation:thick;ventilation:passive\",\"Cabin;Fire Pit;Deck\",\"contact@mountainretreat.com;booking@mountainretreat.com\"\n003,Tech Hub,\"Midtown, Innovation District\",\"WiFi:high-speed;security:24/7;access:restricted\",\"Server Room;Co-Working Space;Cafeteria\",\"helpdesk@techhub.com;admin@techhub.com\"\n</code>",
            "feature_requirements": "• The overall structure should be a JSON array where each element represents a record from the CSV.  \n• Each record must be a JSON object containing the keys: RecordID, SettingName, Location, Features, ActiveComponents, and ContactEmails.  \n• The RecordID, SettingName, and Location fields should be retained as string values within each record.  \n• The Features field should be transformed into a JSON object mapping each feature name to its corresponding value by splitting the CSV field on semicolons and then on colons.  \n• The ActiveComponents field must be converted into a JSON array of strings by splitting the CSV field on semicolons.  \n• The ContactEmails field should be converted into a JSON array of strings by splitting the CSV field on semicolons.  \n• The conversion must preserve the order of records as they appear in the original CSV data.",
            "task_id": "020544",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[i][RecordID]",
                "rows[i][SettingName]",
                "rows[i][Location]",
                "rows[i][Features]",
                "rows[i][ActiveComponents]",
                "rows[i][ContactEmails]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020544_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nRecordID,SettingName,Location,Features,ActiveComponents,ContactEmails\n001,Urban Garden,\"Downtown, City Center\",\"watering:sprinkler;lighting:LED;irrigation:auto\",\"Fountain;Seating Area;Greenhouse\",\"info@urbangarden.com;support@urbangarden.com\"\n002,Mountain Retreat,\"Highlands, Countryside\",\"heating:wood stove;insulation:thick;ventilation:passive\",\"Cabin;Fire Pit;Deck\",\"contact@mountainretreat.com;booking@mountainretreat.com\"\n003,Tech Hub,\"Midtown, Innovation District\",\"WiFi:high-speed;security:24/7;access:restricted\",\"Server Room;Co-Working Space;Cafeteria\",\"helpdesk@techhub.com;admin@techhub.com\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020544_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[i][RecordID]",
                                "rows[i][SettingName]",
                                "rows[i][Location]",
                                "rows[i][Features]",
                                "rows[i][ActiveComponents]",
                                "rows[i][ContactEmails]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nbook_id,title,authors,genres,publication,availability\n1001,The Journey,\"Alice Smith; Bob Johnson\",\"Adventure; Fantasy\",\"{\"\"publisher\"\": \"\"Penguin Books\"\", \"\"year\"\": 2021, \"\"edition\"\": \"\"Second\"\"}\",In Stock\n1002,Echoes of Time,David Grey,\"Science Fiction; Mystery\",\"{\"\"publisher\"\": \"\"HarperCollins\"\", \"\"year\"\": 2019, \"\"edition\"\": \"\"First\"\"}\",Checked Out\n1003,Whispers in the Wind,\"Mia Chen; Lucas Moreau; Sofia Ramirez\",\"Romance; Drama; Historical\",\"{\"\"publisher\"\": \"\"Random House\"\", \"\"year",
            "feature_requirements": "• The output must be a JSON structure that encapsulates multiple book records in an array format.  \n• Each book record must be represented as an object with keys matching the CSV headers: book_id, title, authors, genres, publication, availability.  \n• The book_id value should be represented numerically.  \n• The title and availability values must be maintained as string values.  \n• The authors field must be parsed into an array of strings by splitting the CSV value on semicolons.  \n• The genres field must be parsed into an array of strings by splitting the CSV value on semicolons.  \n• The publication field must be converted into a nested JSON object with keys such as publisher, year, and edition extracted from the embedded JSON string in the CSV.  \n• Each record in the JSON output must correspond exactly in order and value to the columns provided in the CSV source.",
            "task_id": "020545",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "[][book_id]",
                "[][title]",
                "[][authors]",
                "[][genres]",
                "[][publication]",
                "[][publication][publisher]",
                "[][publication][year]",
                "[][publication][edition]",
                "[][availability]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020545_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nbook_id,title,authors,genres,publication,availability\n1001,The Journey,\"Alice Smith; Bob Johnson\",\"Adventure; Fantasy\",\"{\"\"publisher\"\": \"\"Penguin Books\"\", \"\"year\"\": 2021, \"\"edition\"\": \"\"Second\"\"}\",In Stock\n1002,Echoes of Time,David Grey,\"Science Fiction; Mystery\",\"{\"\"publisher\"\": \"\"HarperCollins\"\", \"\"year\"\": 2019, \"\"edition\"\": \"\"First\"\"}\",Checked Out\n1003,Whispers in the Wind,\"Mia Chen; Lucas Moreau; Sofia Ramirez\",\"Romance; Drama; Historical\",\"{\"\"publisher\"\": \"\"Random House\"\", \"\"year"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020545_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "[][book_id]",
                                "[][title]",
                                "[][authors]",
                                "[][genres]",
                                "[][publication]",
                                "[][publication][publisher]",
                                "[][publication][year]",
                                "[][publication][edition]",
                                "[][availability]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nID,FullName,ContactInfo,Addresses,Interests\n1,Alice Johnson,\"{\"\"primary\"\": \"\"123-456-7890\"\", \"\"secondary\"\": \"\"321-654-0987\"\"}\",\"[{\"\"street\"\": \"\"111 Maple Ave\"\", \"\"city\"\": \"\"Springfield\"\", \"\"zip\"\": \"\"12345\"\"}, {\"\"street\"\": \"\"222 Pine St\"\", \"\"city\"\": \"\"Greenville\"\", \"\"zip\"\": \"\"67890\"\"}]\",\"[\"\"reading\"\",\"\"traveling\"\",\"\"swimming\"\"]\"\n2,Bob Smith,\"{\"\"primary\"\": \"\"555-123-4567\"\", \"\"secondary\"\": \"\"555-765-4321\"\"}\",\"[{\"\"street\"\": \"\"333 Cedar Rd\"\", \"\"city\"\": \"\"Hometown\"\", \"\"zip\"\": \"\"11223\"\"}]\",\"[\"\"cooking\"\",\"\"gaming\"\"]\"\n</code>",
            "feature_requirements": "• The output must be structured as a JSON array where each element represents one row from the CSV input.  \n• Every object in the array must contain the keys \"ID\", \"FullName\", \"ContactInfo\", \"Addresses\", and \"Interests\".  \n• The \"ID\" key should have a numeric value that represents the CSV row identifier.  \n• The \"ContactInfo\" key must hold a JSON object that includes keys \"primary\" and \"secondary\", each assigned a string value reflecting formatted phone numbers.  \n• The \"Addresses\" key must contain a JSON array of objects, with each object including the keys \"street\", \"city\", and \"zip\" corresponding to address details.  \n• The \"Interests\" key must contain a JSON array of strings that list the interests provided in the CSV.  \n• The converted output must include exactly two objects in the JSON array, corresponding to the two CSV records (for Alice Johnson and Bob Smith).",
            "task_id": "020546",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "[][ID]",
                "[][FullName]",
                "[][ContactInfo]",
                "[][ContactInfo][primary]",
                "[][ContactInfo][secondary]",
                "[][Addresses]",
                "[][Addresses][][street]",
                "[][Addresses][][city]",
                "[][Addresses][][zip]",
                "[][Interests]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020546_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nID,FullName,ContactInfo,Addresses,Interests\n1,Alice Johnson,\"{\"\"primary\"\": \"\"123-456-7890\"\", \"\"secondary\"\": \"\"321-654-0987\"\"}\",\"[{\"\"street\"\": \"\"111 Maple Ave\"\", \"\"city\"\": \"\"Springfield\"\", \"\"zip\"\": \"\"12345\"\"}, {\"\"street\"\": \"\"222 Pine St\"\", \"\"city\"\": \"\"Greenville\"\", \"\"zip\"\": \"\"67890\"\"}]\",\"[\"\"reading\"\",\"\"traveling\"\",\"\"swimming\"\"]\"\n2,Bob Smith,\"{\"\"primary\"\": \"\"555-123-4567\"\", \"\"secondary\"\": \"\"555-765-4321\"\"}\",\"[{\"\"street\"\": \"\"333 Cedar Rd\"\", \"\"city\"\": \"\"Hometown\"\", \"\"zip\"\": \"\"11223\"\"}]\",\"[\"\"cooking\"\",\"\"gaming\"\"]\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020546_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "[][ID]",
                                "[][FullName]",
                                "[][ContactInfo]",
                                "[][ContactInfo][primary]",
                                "[][ContactInfo][secondary]",
                                "[][Addresses]",
                                "[][Addresses][][street]",
                                "[][Addresses][][city]",
                                "[][Addresses][][zip]",
                                "[][Interests]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nuser_id,full_name,attributes,permissions,activity_log\n1,\"Alice Smith\",\"{\"\"age\"\":30,\"\"department\"\":\"\"Sales\"\"}\",\"[\"\"read\"\",\"\"write\"\"]\",\"[{\"\"date\"\":\"\"2023-01-01\"\",\"\"action\"\":\"\"login\"\"},{\"\"date\"\":\"\"2023-01-02\"\",\"\"action\"\":\"\"logout\"\"}]\"\n2,\"Bob Johnson\",\"{\"\"age\"\":42,\"\"department\"\":\"\"Engineering\"\"}\",\"[\"\"read\"\"]\",\"[{\"\"date\"\":\"\"2023-02-15\"\",\"\"action\"\":\"\"login\"\"}]\"\n3,\"Cynthia Lee\",\"{\"\"age\"\":29,\"\"department\"\":\"\"Marketing\"\"}\",\"[\"\"read\"\",\"\"comment\"\"]\",\"[{\"\"date\"\":\"\"2023-03-10\"\",\"\"action\"\":\"\"login\"\"},{\"\"date\"\":\"\"2023-03-11\"\",\"\"action\"\":\"\"upload\"\"}]\"\n</code>",
            "feature_requirements": "• The converted output must represent the data as an array (or list) of objects, with each object corresponding to one CSV row.  \n• Each object must contain keys that match the CSV headers (\"user_id\", \"full_name\", \"attributes\", \"permissions\", \"activity_log\").  \n• The \"user_id\" key must have a numeric value corresponding to the CSV value.  \n• The \"full_name\" key must have a string value corresponding to the CSV value.  \n• The \"attributes\" key must contain a JSON object parsed from the CSV string, with identifiable keys like \"age\" (numeric) and \"department\" (string).  \n• The \"permissions\" key must contain an array of strings parsed from the CSV string.  \n• The \"activity_log\" key must contain an array of objects, each object having keys such as \"date\" (string) and \"action\" (string) as extracted from the CSV string.  \n• The structure of the converted output must preserve the hierarchical relationships present in the CSV data.",
            "task_id": "020547",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[][user_id]",
                "rows[][full_name]",
                "rows[][attributes]",
                "rows[][attributes][age]",
                "rows[][attributes][department]",
                "rows[][permissions]",
                "rows[][activity_log]",
                "rows[][activity_log][][date]",
                "rows[][activity_log][][action]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020547_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nuser_id,full_name,attributes,permissions,activity_log\n1,\"Alice Smith\",\"{\"\"age\"\":30,\"\"department\"\":\"\"Sales\"\"}\",\"[\"\"read\"\",\"\"write\"\"]\",\"[{\"\"date\"\":\"\"2023-01-01\"\",\"\"action\"\":\"\"login\"\"},{\"\"date\"\":\"\"2023-01-02\"\",\"\"action\"\":\"\"logout\"\"}]\"\n2,\"Bob Johnson\",\"{\"\"age\"\":42,\"\"department\"\":\"\"Engineering\"\"}\",\"[\"\"read\"\"]\",\"[{\"\"date\"\":\"\"2023-02-15\"\",\"\"action\"\":\"\"login\"\"}]\"\n3,\"Cynthia Lee\",\"{\"\"age\"\":29,\"\"department\"\":\"\"Marketing\"\"}\",\"[\"\"read\"\",\"\"comment\"\"]\",\"[{\"\"date\"\":\"\"2023-03-10\"\",\"\"action\"\":\"\"login\"\"},{\"\"date\"\":\"\"2023-03-11\"\",\"\"action\"\":\"\"upload\"\"}]\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020547_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[][user_id]",
                                "rows[][full_name]",
                                "rows[][attributes]",
                                "rows[][attributes][age]",
                                "rows[][attributes][department]",
                                "rows[][permissions]",
                                "rows[][activity_log]",
                                "rows[][activity_log][][date]",
                                "rows[][activity_log][][action]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nuser_id,full_name,age,interests,preferences\n1,John Doe,30,\"reading;traveling;cooking\",\"{\"\"newsletter\"\":true,\"\"sms_alert\"\":false,\"\"theme\"\":\"\"dark\"\"}\"\n2,Jane Smith,25,\"yoga;photography\",\"{\"\"newsletter\"\":false,\"\"sms_alert\"\":true,\"\"theme\"\":\"\"light\"\"}\"\n3,Alan Brown,40,\"gardening;cycling;hiking\",\"{\"\"newsletter\"\":true,\"\"sms_alert\"\":true,\"\"theme\"\":\"\"classic\"\"}\"\n</code>",
            "feature_requirements": "• The JSON output must be structured as an array of objects, with each object representing one CSV row.  \n• Each object must include the keys: \"user_id\", \"full_name\", \"age\", \"interests\", and \"preferences\".  \n• The \"user_id\" field must contain a numeric value that corresponds to the unique identifier from the CSV.  \n• The \"full_name\" field must contain a string value representing the user’s full name.  \n• The \"age\" field must contain a numeric value representing the user’s age.  \n• The \"interests\" field must be converted into an array of strings, extracting individual interests that are originally separated by semicolons.  \n• The \"preferences\" field must be parsed into a nested object with keys such as \"newsletter\", \"sms_alert\", and \"theme\".  \n• Within the \"preferences\" object, the \"newsletter\" and \"sms_alert\" keys must have boolean values, and the \"theme\" key must have a string value.  \n• The converted JSON output must accurately reflect the data and order present in the original CSV input.",
            "task_id": "020548",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[].user_id",
                "rows[].full_name",
                "rows[].age",
                "rows[].interests",
                "rows[].preferences",
                "rows[].preferences[newsletter]",
                "rows[].preferences[sms_alert]",
                "rows[].preferences[theme]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020548_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nuser_id,full_name,age,interests,preferences\n1,John Doe,30,\"reading;traveling;cooking\",\"{\"\"newsletter\"\":true,\"\"sms_alert\"\":false,\"\"theme\"\":\"\"dark\"\"}\"\n2,Jane Smith,25,\"yoga;photography\",\"{\"\"newsletter\"\":false,\"\"sms_alert\"\":true,\"\"theme\"\":\"\"light\"\"}\"\n3,Alan Brown,40,\"gardening;cycling;hiking\",\"{\"\"newsletter\"\":true,\"\"sms_alert\"\":true,\"\"theme\"\":\"\"classic\"\"}\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020548_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[].user_id",
                                "rows[].full_name",
                                "rows[].age",
                                "rows[].interests",
                                "rows[].preferences",
                                "rows[].preferences[newsletter]",
                                "rows[].preferences[sms_alert]",
                                "rows[].preferences[theme]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nLibraryID,LibraryName,Address,Sections,StaffMembers\n1,Central Library,\"123 Main St, Springfield\",\"[\"\"Fiction\"\",\"\"Non-fiction\"\",\"\"Children\"\",\"\"Science\"\"]\",\"[{\"\"Name\"\": \"\"Alice Johnson\"\", \"\"Role\"\": \"\"Head Librarian\"\"}, {\"\"Name\"\": \"\"Bob Smith\"\", \"\"Role\"\": \"\"Assistant Librarian\"\"}]\"\n2,Westside Branch,\"456 Elm St, Springfield\",\"[\"\"Fiction\"\",\"\"History\"\",\"\"Local Archives\"\"]\",\"[{\"\"Name\"\": \"\"Carla Reyes\"\", \"\"Role\"\": \"\"Branch Manager\"\"}, {\"\"Name\"\": \"\"David Lee\"\", \"\"Role\"\": \"\"Archivist\"\"}]\"\n</code>",
            "feature_requirements": "• The output must be in JSON format with a collection (array) containing separately parsed library entries.\n• Each library entry must include a key for LibraryID that represents a unique identifier.\n• Each library entry must include a key for LibraryName with the name of the library as its value.\n• Each library entry must include a key for Address containing the address string of the library.\n• Each library entry must include a key for Sections that stores a list of section names, converted from the CSV string.\n• Each library entry must include a key for StaffMembers that stores a list of staff member objects.\n• Each staff member object within StaffMembers must include a Name key with the staff member's name.\n• Each staff member object within StaffMembers must include a Role key with the staff member's designated role.\n• The output must correctly reflect two separate library records as shown in the CSV input.",
            "task_id": "020549",
            "task_name": "Convert CSV to JSON",
            "input_type": "CSV",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][LibraryID]",
                "rows[0][LibraryName]",
                "rows[0][Address]",
                "rows[0][Sections]",
                "rows[0][StaffMembers]",
                "rows[0][StaffMembers][0][Name]",
                "rows[0][StaffMembers][0][Role]",
                "rows[1][LibraryID]",
                "rows[1][LibraryName]",
                "rows[1][Address]",
                "rows[1][Sections]",
                "rows[1][StaffMembers]",
                "rows[1][StaffMembers][0][Name]",
                "rows[1][StaffMembers][0][Role]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "020549_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following CSV code to JSON code.\n\n<code>\nLibraryID,LibraryName,Address,Sections,StaffMembers\n1,Central Library,\"123 Main St, Springfield\",\"[\"\"Fiction\"\",\"\"Non-fiction\"\",\"\"Children\"\",\"\"Science\"\"]\",\"[{\"\"Name\"\": \"\"Alice Johnson\"\", \"\"Role\"\": \"\"Head Librarian\"\"}, {\"\"Name\"\": \"\"Bob Smith\"\", \"\"Role\"\": \"\"Assistant Librarian\"\"}]\"\n2,Westside Branch,\"456 Elm St, Springfield\",\"[\"\"Fiction\"\",\"\"History\"\",\"\"Local Archives\"\"]\",\"[{\"\"Name\"\": \"\"Carla Reyes\"\", \"\"Role\"\": \"\"Branch Manager\"\"}, {\"\"Name\"\": \"\"David Lee\"\", \"\"Role\"\": \"\"Archivist\"\"}]\"\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "020549_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][LibraryID]",
                                "rows[0][LibraryName]",
                                "rows[0][Address]",
                                "rows[0][Sections]",
                                "rows[0][StaffMembers]",
                                "rows[0][StaffMembers][0][Name]",
                                "rows[0][StaffMembers][0][Role]",
                                "rows[1][LibraryID]",
                                "rows[1][LibraryName]",
                                "rows[1][Address]",
                                "rows[1][Sections]",
                                "rows[1][StaffMembers]",
                                "rows[1][StaffMembers][0][Name]",
                                "rows[1][StaffMembers][0][Role]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"library\": {\n    \"name\": \"Central Public Library\",\n    \"location\": \"Downtown\",\n    \"established\": 1910,\n    \"sections\": [\n      {\n        \"name\": \"Fiction\",\n        \"books\": [\n          \"To Kill a Mockingbird\",\n          \"1984\",\n          \"The Great Gatsby\"\n        ]\n      },\n      {\n        \"name\": \"Non-fiction\",\n        \"books\": [\n          \"Sapiens\",\n          \"Educated\",\n          \"The Wright Brothers\"\n        ]\n      },\n      {\n        \"name\": \"Children\",\n        \"books\": [\n          \"Charlotte's Web\",\n          \"Matilda\",\n          \"Harry Potter and the Sorcerer's Stone\"\n        ]\n      }\n    ]\n  },\n  \"staff\": [\n    {\n      \"id\": 101,\n      \"name\": \"Alice Johnson\",\n      \"position\": \"Librarian\",\n      \"shift\": \"Morning\"\n    },\n    {\n      \"id\": 102,\n      \"name\": \"Bob Smith\",\n      \"position\": \"Assistant Librarian\",\n      \"shift\": \"Afternoon\"\n    }\n  ],\n  \"resources\": {\n    \"computers\": 25,\n    \"studyRooms\": 8,\n    \"internetAccess\": true\n  },\n  \"events\": [\n    {\n      \"eventId\": \"E100\",\n      \"title\": \"Book Reading Session\",\n      \"date\": \"2023-11-10\",\n      \"participants\": [\n        \"Alice Johnson\",\n        \"Michael Brown\"\n      ]\n    },\n    {\n      \"eventId\": \"E101\",\n      \"title\": \"History Lecture\",\n      \"date\": \"2023-12-05\",\n      \"participants\": [\n        \"Diane Lee\",\n        \"John Doe\"\n      ]\n    }\n  ]\n}\n</code>",
            "feature_requirements": "• A CSV table for the library’s basic information that includes headers for “Name,” “Location,” and “Established,” ensuring it lists “Central Public Library,” “Downtown,” and “1910.”\n\n• A CSV table for the library sections with headers for “Section Name” and “Book Titles.” Each row must represent one section (Fiction, Non-fiction, Children) and list its associated books as a comma‐separated string within a single cell.\n\n• A CSV table for staff details with headers for “ID,” “Name,” “Position,” and “Shift,” containing each staff member’s information as separate rows.\n\n• A CSV table for resources with headers for “Computers,” “Study Rooms,” and “Internet Access,” and a single row that reflects the values 25, 8, and true respectively.\n\n• A CSV table for events with headers for “Event ID,” “Title,” “Date,” and “Participants.” Each event must be in its own row and the “Participants” cell should list the names in a comma‑separated string.",
            "task_id": "050200",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "library_basic_info: rows[*][Name]",
                "library_basic_info: rows[*][Location]",
                "library_basic_info: rows[*][Established]",
                "library_sections: rows[*][Section Name]",
                "library_sections: rows[*][Book Titles]",
                "staff_details: rows[*][ID]",
                "staff_details: rows[*][Name]",
                "staff_details: rows[*][Position]",
                "staff_details: rows[*][Shift]",
                "resources: rows[0][Computers]",
                "resources: rows[0][Study Rooms]",
                "resources: rows[0][Internet Access]",
                "events: rows[*][Event ID]",
                "events: rows[*][Title]",
                "events: rows[*][Date]",
                "events: rows[*][Participants]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050200_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"library\": {\n    \"name\": \"Central Public Library\",\n    \"location\": \"Downtown\",\n    \"established\": 1910,\n    \"sections\": [\n      {\n        \"name\": \"Fiction\",\n        \"books\": [\n          \"To Kill a Mockingbird\",\n          \"1984\",\n          \"The Great Gatsby\"\n        ]\n      },\n      {\n        \"name\": \"Non-fiction\",\n        \"books\": [\n          \"Sapiens\",\n          \"Educated\",\n          \"The Wright Brothers\"\n        ]\n      },\n      {\n        \"name\": \"Children\",\n        \"books\": [\n          \"Charlotte's Web\",\n          \"Matilda\",\n          \"Harry Potter and the Sorcerer's Stone\"\n        ]\n      }\n    ]\n  },\n  \"staff\": [\n    {\n      \"id\": 101,\n      \"name\": \"Alice Johnson\",\n      \"position\": \"Librarian\",\n      \"shift\": \"Morning\"\n    },\n    {\n      \"id\": 102,\n      \"name\": \"Bob Smith\",\n      \"position\": \"Assistant Librarian\",\n      \"shift\": \"Afternoon\"\n    }\n  ],\n  \"resources\": {\n    \"computers\": 25,\n    \"studyRooms\": 8,\n    \"internetAccess\": true\n  },\n  \"events\": [\n    {\n      \"eventId\": \"E100\",\n      \"title\": \"Book Reading Session\",\n      \"date\": \"2023-11-10\",\n      \"participants\": [\n        \"Alice Johnson\",\n        \"Michael Brown\"\n      ]\n    },\n    {\n      \"eventId\": \"E101\",\n      \"title\": \"History Lecture\",\n      \"date\": \"2023-12-05\",\n      \"participants\": [\n        \"Diane Lee\",\n        \"John Doe\"\n      ]\n    }\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050200_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "library_basic_info: rows[*][Name]",
                                "library_basic_info: rows[*][Location]",
                                "library_basic_info: rows[*][Established]",
                                "library_sections: rows[*][Section Name]",
                                "library_sections: rows[*][Book Titles]",
                                "staff_details: rows[*][ID]",
                                "staff_details: rows[*][Name]",
                                "staff_details: rows[*][Position]",
                                "staff_details: rows[*][Shift]",
                                "resources: rows[0][Computers]",
                                "resources: rows[0][Study Rooms]",
                                "resources: rows[0][Internet Access]",
                                "events: rows[*][Event ID]",
                                "events: rows[*][Title]",
                                "events: rows[*][Date]",
                                "events: rows[*][Participants]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"project\": \"Data Converter\",\n  \"version\": \"1.0.3\",\n  \"settings\": {\n    \"theme\": \"light\",\n    \"language\": \"en-US\",\n    \"backup\": true\n  },\n  \"components\": [\n    {\n      \"id\": 1,\n      \"name\": \"Parser\",\n      \"enabled\": true\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Validator\",\n      \"enabled\": false\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Formatter\",\n      \"enabled\": true\n    }\n  ],\n  \"metadata\": {\n    \"created\": \"2023-10-01T12:45:00Z\",\n    \"modified\": \"2023-10-03T09:30:00Z\",\n    \"authors\": [\n      \"Alice\",\n      \"Bob\"\n    ]\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include header rows that clearly label each data field corresponding to the JSON keys.  \n• The CSV must have columns for the top-level keys \"project\" and \"version\" with their respective values.  \n• The CSV must include separate columns for the nested \"settings\" fields, such as \"settings.theme\", \"settings.language\", and \"settings.backup\".  \n• The CSV must represent the \"components\" array in a verifiable manner—either as multiple rows or a structured grouped section—with columns for \"id\", \"name\", and \"enabled\" for each component.  \n• The CSV must include columns for the \"metadata\" keys \"created\" and \"modified\" with their ISO date-time string values.  \n• The CSV must capture the \"metadata.authors\" array within a single cell or as a list separated by a consistent delimiter, preserving the author order.",
            "task_id": "050201",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][project]",
                "rows[0][version]",
                "rows[0][settings][theme]",
                "rows[0][settings][language]",
                "rows[0][settings][backup]",
                "rows[*][id]",
                "rows[*][name]",
                "rows[*][enabled]",
                "rows[0][metadata][created]",
                "rows[0][metadata][modified]",
                "rows[0][metadata][authors]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050201_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"project\": \"Data Converter\",\n  \"version\": \"1.0.3\",\n  \"settings\": {\n    \"theme\": \"light\",\n    \"language\": \"en-US\",\n    \"backup\": true\n  },\n  \"components\": [\n    {\n      \"id\": 1,\n      \"name\": \"Parser\",\n      \"enabled\": true\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Validator\",\n      \"enabled\": false\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Formatter\",\n      \"enabled\": true\n    }\n  ],\n  \"metadata\": {\n    \"created\": \"2023-10-01T12:45:00Z\",\n    \"modified\": \"2023-10-03T09:30:00Z\",\n    \"authors\": [\n      \"Alice\",\n      \"Bob\"\n    ]\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050201_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][project]",
                                "rows[0][version]",
                                "rows[0][settings][theme]",
                                "rows[0][settings][language]",
                                "rows[0][settings][backup]",
                                "rows[*][id]",
                                "rows[*][name]",
                                "rows[*][enabled]",
                                "rows[0][metadata][created]",
                                "rows[0][metadata][modified]",
                                "rows[0][metadata][authors]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"user\": {\n    \"id\": 9876,\n    \"username\": \"jdoe\",\n    \"profile\": {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"jdoe@example.com\"\n    }\n  },\n  \"settings\": {\n    \"language\": \"en\",\n    \"timezone\": \"UTC\",\n    \"preferences\": {\n      \"newsletter\": true,\n      \"alerts\": false,\n      \"theme\": \"dark\"\n    }\n  },\n  \"data\": [\n    {\n      \"date\": \"2023-10-09\",\n      \"visits\": 150,\n      \"sales\": 23\n    },\n    {\n      \"date\": \"2023-10-08\",\n      \"visits\": 200,\n      \"sales\": 27\n    }\n  ],\n  \"logs\": [\n    {\n      \"timestamp\": \"2023-10-09T08:22:00Z\",\n      \"level\": \"info\",\n      \"message\": \"User logged in\"\n    },\n    {\n      \"timestamp\": \"2023-10-09T08:30:00Z\",\n      \"level\": \"warning\",\n      \"message\": \"Low disk space\"\n    }\n  ],\n  \"metadata\": {\n    \"version\": \"2.1\",\n    \"lastUpdate\": \"2023-10-09T12:00:00Z\"\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row where each column corresponds to a JSON key, even when keys are nested (e.g., flattening \"user.profile.firstName\" into a single column).  \n• All keys inside composite objects (like user, settings, and metadata) must be represented as distinct columns, verifying that no nested data is omitted.  \n• Columns corresponding to nested objects must be named in a measurable way (for example, using dot-separated names such as \"settings.preferences.newsletter\") so that each value’s origin is clear.  \n• For the \"data\" array, the CSV must include one row per array element with columns for \"date\", \"visits\", and \"sales\", ensuring that the number of data rows equals the number of objects in the JSON array.  \n• For the \"logs\" array, the CSV must include one row per array element with columns for \"timestamp\", \"level\", and \"message\", matching exactly the number of elements in the JSON logs array.  \n• The output must include all the fields contained in the original JSON, meaning no JSON attribute (from user, settings, data, logs, or metadata) is left out from the CSV conversion.",
            "task_id": "050202",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050202_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"user\": {\n    \"id\": 9876,\n    \"username\": \"jdoe\",\n    \"profile\": {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"jdoe@example.com\"\n    }\n  },\n  \"settings\": {\n    \"language\": \"en\",\n    \"timezone\": \"UTC\",\n    \"preferences\": {\n      \"newsletter\": true,\n      \"alerts\": false,\n      \"theme\": \"dark\"\n    }\n  },\n  \"data\": [\n    {\n      \"date\": \"2023-10-09\",\n      \"visits\": 150,\n      \"sales\": 23\n    },\n    {\n      \"date\": \"2023-10-08\",\n      \"visits\": 200,\n      \"sales\": 27\n    }\n  ],\n  \"logs\": [\n    {\n      \"timestamp\": \"2023-10-09T08:22:00Z\",\n      \"level\": \"info\",\n      \"message\": \"User logged in\"\n    },\n    {\n      \"timestamp\": \"2023-10-09T08:30:00Z\",\n      \"level\": \"warning\",\n      \"message\": \"Low disk space\"\n    }\n  ],\n  \"metadata\": {\n    \"version\": \"2.1\",\n    \"lastUpdate\": \"2023-10-09T12:00:00Z\"\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050202_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"stationId\": \"MR-001\",\n  \"name\": \"Red Horizon\",\n  \"location\": {\n    \"planet\": \"Mars\",\n    \"coordinates\": {\n      \"latitude\": -4.5895,\n      \"longitude\": 137.4417\n    }\n  },\n  \"crew\": [\n    {\n      \"crewId\": \"C001\",\n      \"name\": \"Dr. Evelyn Carter\",\n      \"role\": \"Commander\"\n    },\n    {\n      \"crewId\": \"C002\",\n      \"name\": \"Lt. Trevor Grant\",\n      \"role\": \"Pilot\"\n    },\n    {\n      \"crewId\": \"C003\",\n      \"name\": \"Dr. Raj Patel\",\n      \"role\": \"Scientist\"\n    }\n  ],\n  \"missions\": [\n    {\n      \"missionId\": \"M001\",\n      \"objective\": \"Soil sample collection\",\n      \"status\": \"Completed\"\n    },\n    {\n      \"missionId\": \"M002\",\n      \"objective\": \"Atmospheric analysis\",\n      \"status\": \"In Progress\"\n    }\n  ],\n  \"resources\": {\n    \"oxygen\": {\n      \"capacity\": 300,\n      \"unit\": \"liters\"\n    },\n    \"water\": {\n      \"capacity\": 500,\n      \"unit\": \"liters\"\n    }\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row listing the fields for the station details, such as stationId and name.  \n• The CSV must represent the location information by including separate columns for the planet name, latitude, and longitude.  \n• There must be a separate section or CSV file for the crew list, with a header row and columns for crewId, name, and role.  \n• The CSV must have a dedicated section or file for the missions list, with a header row and columns for missionId, objective, and status.  \n• The CSV output must include the resources details by providing columns for each resource (e.g., oxygen and water), including their capacities and units.  \n• All nested JSON objects should be flattened, ensuring that all values appear as discrete columns in the CSV output.  \n• Every section (station details, crew, missions, resources) must be verifiable via a corresponding header row and correctly mapped values from the JSON input.",
            "task_id": "050203",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "station_details.rows[0][stationId]",
                "station_details.rows[0][name]",
                "station_details.rows[0][planet]",
                "station_details.rows[0][latitude]",
                "station_details.rows[0][longitude]",
                "crew.rows[0][crewId]",
                "crew.rows[0][name]",
                "crew.rows[0][role]",
                "missions.rows[0][missionId]",
                "missions.rows[0][objective]",
                "missions.rows[0][status]",
                "resources.rows[0][oxygen_capacity]",
                "resources.rows[0][oxygen_units]",
                "resources.rows[0][water_capacity]",
                "resources.rows[0][water_units]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050203_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"stationId\": \"MR-001\",\n  \"name\": \"Red Horizon\",\n  \"location\": {\n    \"planet\": \"Mars\",\n    \"coordinates\": {\n      \"latitude\": -4.5895,\n      \"longitude\": 137.4417\n    }\n  },\n  \"crew\": [\n    {\n      \"crewId\": \"C001\",\n      \"name\": \"Dr. Evelyn Carter\",\n      \"role\": \"Commander\"\n    },\n    {\n      \"crewId\": \"C002\",\n      \"name\": \"Lt. Trevor Grant\",\n      \"role\": \"Pilot\"\n    },\n    {\n      \"crewId\": \"C003\",\n      \"name\": \"Dr. Raj Patel\",\n      \"role\": \"Scientist\"\n    }\n  ],\n  \"missions\": [\n    {\n      \"missionId\": \"M001\",\n      \"objective\": \"Soil sample collection\",\n      \"status\": \"Completed\"\n    },\n    {\n      \"missionId\": \"M002\",\n      \"objective\": \"Atmospheric analysis\",\n      \"status\": \"In Progress\"\n    }\n  ],\n  \"resources\": {\n    \"oxygen\": {\n      \"capacity\": 300,\n      \"unit\": \"liters\"\n    },\n    \"water\": {\n      \"capacity\": 500,\n      \"unit\": \"liters\"\n    }\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050203_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "station_details.rows[0][stationId]",
                                "station_details.rows[0][name]",
                                "station_details.rows[0][planet]",
                                "station_details.rows[0][latitude]",
                                "station_details.rows[0][longitude]",
                                "crew.rows[0][crewId]",
                                "crew.rows[0][name]",
                                "crew.rows[0][role]",
                                "missions.rows[0][missionId]",
                                "missions.rows[0][objective]",
                                "missions.rows[0][status]",
                                "resources.rows[0][oxygen_capacity]",
                                "resources.rows[0][oxygen_units]",
                                "resources.rows[0][water_capacity]",
                                "resources.rows[0][water_units]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"id\": \"user-001\",\n  \"profile\": {\n    \"name\": \"Alice Smith\",\n    \"email\": \"alice.smith@example.com\",\n    \"registered\": \"2023-10-01\"\n  },\n  \"settings\": {\n    \"theme\": \"dark\",\n    \"notifications\": true,\n    \"languages\": [\"English\", \"Spanish\"]\n  },\n  \"activity\": [\n    {\n      \"date\": \"2023-10-20\",\n      \"action\": \"login\",\n      \"success\": true\n    },\n    {\n      \"date\": \"2023-10-21\",\n      \"action\": \"update_profile\",\n      \"fields_changed\": [\"email\", \"language\"]\n    }\n  ],\n  \"permissions\": [\"read\", \"write\", \"execute\"]\n}\n</code>",
            "feature_requirements": "• The CSV must include a header row with column names that correspond to each JSON key or nested key (e.g., id, profile_name, profile_email, profile_registered, settings_theme, settings_notifications, settings_languages, activity_date, activity_action, activity_success, activity_fields_changed, permissions).  \n• All nested JSON objects (profile, settings, etc.) should be flattened so that each nested property is represented as a separate column in the CSV.  \n• Each JSON array (such as settings.languages, activity, permissions) must be handled; if arrays represent multiple records (like the activity array), then each array element must be output as a separate row with the common values repeated.  \n• In cases where an array is not intended to represent multiple rows (for example, settings.languages and permissions), the array should be converted into a string that lists its items in a verifiable, delimited format.  \n• The CSV rows representing the activity array must include distinct columns for all properties of each activity object (date, action, and success or fields_changed) ensuring that missing values in some records are represented appropriately in the CSV.  \n• The conversion must include all keys present in the JSON without omission, ensuring that every measurable field (both singular and within arrays) is visible and consistently rendered in the CSV output.",
            "task_id": "050204",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][id]",
                "rows[*][profile_name]",
                "rows[*][profile_email]",
                "rows[*][profile_registered]",
                "rows[*][settings_theme]",
                "rows[*][settings_notifications]",
                "rows[*][settings_languages]",
                "rows[*][activity_date]",
                "rows[*][activity_action]",
                "rows[*][activity_success]",
                "rows[*][activity_fields_changed]",
                "rows[*][permissions]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050204_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"id\": \"user-001\",\n  \"profile\": {\n    \"name\": \"Alice Smith\",\n    \"email\": \"alice.smith@example.com\",\n    \"registered\": \"2023-10-01\"\n  },\n  \"settings\": {\n    \"theme\": \"dark\",\n    \"notifications\": true,\n    \"languages\": [\"English\", \"Spanish\"]\n  },\n  \"activity\": [\n    {\n      \"date\": \"2023-10-20\",\n      \"action\": \"login\",\n      \"success\": true\n    },\n    {\n      \"date\": \"2023-10-21\",\n      \"action\": \"update_profile\",\n      \"fields_changed\": [\"email\", \"language\"]\n    }\n  ],\n  \"permissions\": [\"read\", \"write\", \"execute\"]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050204_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][id]",
                                "rows[*][profile_name]",
                                "rows[*][profile_email]",
                                "rows[*][profile_registered]",
                                "rows[*][settings_theme]",
                                "rows[*][settings_notifications]",
                                "rows[*][settings_languages]",
                                "rows[*][activity_date]",
                                "rows[*][activity_action]",
                                "rows[*][activity_success]",
                                "rows[*][activity_fields_changed]",
                                "rows[*][permissions]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"users\": [\n    {\n      \"id\": 1,\n      \"name\": \"Alice\",\n      \"isActive\": true,\n      \"roles\": [\"admin\", \"editor\"]\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Bob\",\n      \"isActive\": false,\n      \"roles\": [\"viewer\"]\n    }\n  ],\n  \"settings\": {\n    \"theme\": \"dark\",\n    \"notifications\": true,\n    \"language\": \"en\"\n  },\n  \"metadata\": {\n    \"created\": \"2023-10-01T12:00:00Z\",\n    \"modified\": \"2023-10-10T15:30:00Z\",\n    \"version\": \"1.0.2\"\n  },\n  \"logs\": [\n    { \"event\": \"login\", \"userId\": 1, \"timestamp\": \"2023-10-05T08:00:00Z\" },\n    { \"event\": \"update\", \"userId\": 2, \"timestamp\": \"2023-10-07T10:20:00Z\" }\n  ],\n  \"inventory\": {\n    \"items\": [\n      { \"sku\": \"A123\", \"name\": \"Widget\", \"quantity\": 50 },\n      { \"sku\": \"B456\", \"name\": \"Gadget\", \"quantity\": 20 }\n    ],\n    \"lastRestock\": \"2023-09-30T09:00:00Z\"\n  }\n}\n</code>",
            "feature_requirements": "• The output must include a header row for each CSV table that clearly lists the column names corresponding to the keys from the JSON structure.  \n• A CSV table must be produced for the “users” array with columns for id, name, isActive, and roles, where the roles array is represented as a single, delimited text field.  \n• A CSV table must be produced for the “logs” array with columns for event, userId, and timestamp.  \n• A CSV table must be produced for the “inventory items” contained within the “inventory” object, with columns for sku, name, and quantity.  \n• The “settings” object must be converted into CSV format with columns for theme, notifications, and language, presented as a table or record with a header.  \n• The “metadata” object must be converted into CSV format with columns for created, modified, and version, ensuring that each key and its corresponding value is clearly identifiable.  \n• The inventory’s additional field (lastRestock) must be represented in CSV format, either as an additional column in the inventory table or as a separate CSV record, so that its presence is verifiable.",
            "task_id": "050205",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][id] (users table)",
                "rows[*][name] (users table)",
                "rows[*][isActive] (users table)",
                "rows[*][roles] (users table, delimited text)",
                "rows[*][event] (logs table)",
                "rows[*][userId] (logs table)",
                "rows[*][timestamp] (logs table)",
                "rows[*][sku] (inventory items table)",
                "rows[*][name] (inventory items table)",
                "rows[*][quantity] (inventory items table)",
                "rows[*][lastRestock] (inventory additional field)",
                "rows[*][theme] (settings table/record)",
                "rows[*][notifications] (settings table/record)",
                "rows[*][language] (settings table/record)",
                "rows[*][created] (metadata table/record)",
                "rows[*][modified] (metadata table/record)",
                "rows[*][version] (metadata table/record)"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050205_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"users\": [\n    {\n      \"id\": 1,\n      \"name\": \"Alice\",\n      \"isActive\": true,\n      \"roles\": [\"admin\", \"editor\"]\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Bob\",\n      \"isActive\": false,\n      \"roles\": [\"viewer\"]\n    }\n  ],\n  \"settings\": {\n    \"theme\": \"dark\",\n    \"notifications\": true,\n    \"language\": \"en\"\n  },\n  \"metadata\": {\n    \"created\": \"2023-10-01T12:00:00Z\",\n    \"modified\": \"2023-10-10T15:30:00Z\",\n    \"version\": \"1.0.2\"\n  },\n  \"logs\": [\n    { \"event\": \"login\", \"userId\": 1, \"timestamp\": \"2023-10-05T08:00:00Z\" },\n    { \"event\": \"update\", \"userId\": 2, \"timestamp\": \"2023-10-07T10:20:00Z\" }\n  ],\n  \"inventory\": {\n    \"items\": [\n      { \"sku\": \"A123\", \"name\": \"Widget\", \"quantity\": 50 },\n      { \"sku\": \"B456\", \"name\": \"Gadget\", \"quantity\": 20 }\n    ],\n    \"lastRestock\": \"2023-09-30T09:00:00Z\"\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050205_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][id] (users table)",
                                "rows[*][name] (users table)",
                                "rows[*][isActive] (users table)",
                                "rows[*][roles] (users table, delimited text)",
                                "rows[*][event] (logs table)",
                                "rows[*][userId] (logs table)",
                                "rows[*][timestamp] (logs table)",
                                "rows[*][sku] (inventory items table)",
                                "rows[*][name] (inventory items table)",
                                "rows[*][quantity] (inventory items table)",
                                "rows[*][lastRestock] (inventory additional field)",
                                "rows[*][theme] (settings table/record)",
                                "rows[*][notifications] (settings table/record)",
                                "rows[*][language] (settings table/record)",
                                "rows[*][created] (metadata table/record)",
                                "rows[*][modified] (metadata table/record)",
                                "rows[*][version] (metadata table/record)"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"application\": {\n    \"name\": \"DataConverter\",\n    \"version\": \"2.3.1\",\n    \"releaseDate\": \"2023-10-15\"\n  },\n  \"configuration\": {\n    \"theme\": \"light\",\n    \"language\": \"en-US\",\n    \"logging\": {\n      \"level\": \"debug\",\n      \"enabled\": true\n    }\n  },\n  \"users\": [\n    {\n      \"id\": 101,\n      \"username\": \"jdoe\",\n      \"role\": \"admin\"\n    },\n    {\n      \"id\": 102,\n      \"username\": \"asmith\",\n      \"role\": \"editor\"\n    },\n    {\n      \"id\": 103,\n      \"username\": \"bjones\",\n      \"role\": \"viewer\"\n    }\n  ],\n  \"features\": [\n    \"dataImport\",\n    \"dataExport\",\n    \"reportGeneration\",\n    \"realTimeAnalytics\"\n  ]\n}\n</code>",
            "feature_requirements": "• The output must be in CSV format with values separated by commas and organized in rows.  \n• There must be a header row for each distinct data section derived from the JSON structure.  \n• The application section must appear as a CSV row with columns for name, version, and releaseDate, retaining all original values.  \n• The configuration section must be represented with columns for theme, language, logging level, and logging enabled status, ensuring nested logging details are included.  \n• The users array must be converted into a table with a header row containing the labels id, username, and role, followed by one row per user.  \n• The number of user data rows in the CSV must exactly match the number of objects in the JSON users array.  \n• The features array must be output as a separate section or table with a header (e.g., feature) and each feature listed in its own row.  \n• All data values (strings, numbers, booleans) in the CSV output should match exactly the corresponding values from the JSON input.",
            "task_id": "050206",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][name]",
                "rows[*][version]",
                "rows[*][releaseDate]",
                "rows[*][theme]",
                "rows[*][language]",
                "rows[*][logging level]",
                "rows[*][logging enabled]",
                "rows[*][id]",
                "rows[*][username]",
                "rows[*][role]",
                "rows[*][feature]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050206_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"application\": {\n    \"name\": \"DataConverter\",\n    \"version\": \"2.3.1\",\n    \"releaseDate\": \"2023-10-15\"\n  },\n  \"configuration\": {\n    \"theme\": \"light\",\n    \"language\": \"en-US\",\n    \"logging\": {\n      \"level\": \"debug\",\n      \"enabled\": true\n    }\n  },\n  \"users\": [\n    {\n      \"id\": 101,\n      \"username\": \"jdoe\",\n      \"role\": \"admin\"\n    },\n    {\n      \"id\": 102,\n      \"username\": \"asmith\",\n      \"role\": \"editor\"\n    },\n    {\n      \"id\": 103,\n      \"username\": \"bjones\",\n      \"role\": \"viewer\"\n    }\n  ],\n  \"features\": [\n    \"dataImport\",\n    \"dataExport\",\n    \"reportGeneration\",\n    \"realTimeAnalytics\"\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050206_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][name]",
                                "rows[*][version]",
                                "rows[*][releaseDate]",
                                "rows[*][theme]",
                                "rows[*][language]",
                                "rows[*][logging level]",
                                "rows[*][logging enabled]",
                                "rows[*][id]",
                                "rows[*][username]",
                                "rows[*][role]",
                                "rows[*][feature]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"application\": {\n    \"name\": \"RandomSettingsApp\",\n    \"version\": \"1.3.2\",\n    \"features\": [\"authentication\", \"dataSync\", \"reporting\"]\n  },\n  \"database\": {\n    \"host\": \"localhost\",\n    \"port\": 5432,\n    \"credentials\": {\n      \"username\": \"admin\",\n      \"password\": \"s3cr3t!\"\n    },\n    \"schemas\": [\"public\", \"analytics\", \"logs\"]\n  },\n  \"users\": [\n    {\n      \"id\": 1,\n      \"name\": \"Alice\",\n      \"roles\": [\"admin\", \"editor\"],\n      \"preferences\": {\n        \"theme\": \"dark\",\n        \"notifications\": true\n      }\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Bob\",\n      \"roles\": [\"viewer\"],\n      \"preferences\": {\n        \"theme\": \"light\",\n        \"notifications\": false\n      }\n    }\n  ],\n  \"metrics\": {\n    \"uptime\": \"99.1%\",\n    \"load\": {\n      \"current\": 2.5,\n      \"average\": 1.8\n    },\n    \"errors\": 5\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row that clearly represents each data element from the JSON, using flattened key names (for example, \"application.name\", \"database.host\", \"metrics.load.current\", etc.).  \n• For the \"application\" section, the CSV must include separate columns for the name, version, and features (with features represented as a single cell containing a comma-separated list).  \n• For the \"database\" section, the CSV must include columns for host, port, and credentials (with nested credentials split into separate columns like \"database.credentials.username\" and \"database.credentials.password\") and an indicator for schemas (as a delimited list in one column).  \n• Each entry in the \"users\" array must be represented as a separate row in the CSV, with individual columns for id, name, roles (with roles consolidated into a single cell as a list), and preferences (with nested preferences split into columns such as \"users.preferences.theme\" and \"users.preferences.notifications\").  \n• For the \"metrics\" section, the CSV must include columns for uptime, load metrics (with separate columns for \"metrics.load.current\" and \"metrics.load.average\"), and errors.  \n• All array data (features, schemas, roles) must be converted into a single CSV cell value using a clear and consistent delimiter so that the list nature of the data is preserved.  \n• Numeric values (like port, load values, error count) and boolean values (notifications) must remain in their respective data types as represented in the CSV, ensuring clarity in type differentiation.",
            "task_id": "050207",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][application.name]",
                "rows[0][application.version]",
                "rows[0][application.features]",
                "rows[0][database.host]",
                "rows[0][database.port]",
                "rows[0][database.credentials.username]",
                "rows[0][database.credentials.password]",
                "rows[0][database.schemas]",
                "rows[0][users.id]",
                "rows[0][users.name]",
                "rows[0][users.roles]",
                "rows[0][users.preferences.theme]",
                "rows[0][users.preferences.notifications]",
                "rows[0][metrics.uptime]",
                "rows[0][metrics.load.current]",
                "rows[0][metrics.load.average]",
                "rows[0][metrics.errors]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050207_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"application\": {\n    \"name\": \"RandomSettingsApp\",\n    \"version\": \"1.3.2\",\n    \"features\": [\"authentication\", \"dataSync\", \"reporting\"]\n  },\n  \"database\": {\n    \"host\": \"localhost\",\n    \"port\": 5432,\n    \"credentials\": {\n      \"username\": \"admin\",\n      \"password\": \"s3cr3t!\"\n    },\n    \"schemas\": [\"public\", \"analytics\", \"logs\"]\n  },\n  \"users\": [\n    {\n      \"id\": 1,\n      \"name\": \"Alice\",\n      \"roles\": [\"admin\", \"editor\"],\n      \"preferences\": {\n        \"theme\": \"dark\",\n        \"notifications\": true\n      }\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Bob\",\n      \"roles\": [\"viewer\"],\n      \"preferences\": {\n        \"theme\": \"light\",\n        \"notifications\": false\n      }\n    }\n  ],\n  \"metrics\": {\n    \"uptime\": \"99.1%\",\n    \"load\": {\n      \"current\": 2.5,\n      \"average\": 1.8\n    },\n    \"errors\": 5\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050207_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][application.name]",
                                "rows[0][application.version]",
                                "rows[0][application.features]",
                                "rows[0][database.host]",
                                "rows[0][database.port]",
                                "rows[0][database.credentials.username]",
                                "rows[0][database.credentials.password]",
                                "rows[0][database.schemas]",
                                "rows[0][users.id]",
                                "rows[0][users.name]",
                                "rows[0][users.roles]",
                                "rows[0][users.preferences.theme]",
                                "rows[0][users.preferences.notifications]",
                                "rows[0][metrics.uptime]",
                                "rows[0][metrics.load.current]",
                                "rows[0][metrics.load.average]",
                                "rows[0][metrics.errors]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"user\": {\n    \"id\": \"user_12345\",\n    \"name\": \"John Doe\",\n    \"email\": \"johndoe@example.com\",\n    \"roles\": [\"admin\", \"editor\"]\n  },\n  \"settings\": {\n    \"theme\": \"dark\",\n    \"language\": \"en\",\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false\n    }\n  },\n  \"projects\": [\n    {\n      \"projectId\": \"p001\",\n      \"projectName\": \"Alpha\",\n      \"completed\": false\n    },\n    {\n      \"projectId\": \"p002\",\n      \"projectName\": \"Beta\",\n      \"completed\": true\n    }\n  ],\n  \"logs\": [\n    {\n      \"timestamp\": \"2023-10-31T10:30:00Z\",\n      \"action\": \"login\",\n      \"success\": true\n    },\n    {\n      \"timestamp\": \"2023-10-31T10:45:00Z\",\n      \"action\": \"update_profile\",\n      \"success\": true\n    }\n  ],\n  \"features\": [\"data_export\", \"multi_user\", \"analytics\"]\n}\n</code>",
            "feature_requirements": "• The CSV output must include header rows that clearly label each column based on the JSON keys.  \n• A section or CSV file capturing the \"user\" object must contain columns for the user’s id, name, email, and roles, with the roles represented as a comma‐separated list within a single field.  \n• A section or CSV file representing the \"settings\" object must include columns for theme, language, and flattened notification settings (e.g., separate columns for email notification and sms notification statuses).  \n• The \"projects\" array must be converted to CSV rows, with one row per project containing columns for projectId, projectName, and completed status.  \n• The \"logs\" array must be converted to CSV rows, with one row per log entry containing columns for timestamp, action, and success status.  \n• The \"features\" array must be presented in a CSV field as a comma‐separated list or as individual rows, clearly indicating the list items.  \n• All nested JSON structures should be flattened so that the relational data is maintained and each value is mapped to a uniquely identifiable CSV column.",
            "task_id": "050208",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050208_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"user\": {\n    \"id\": \"user_12345\",\n    \"name\": \"John Doe\",\n    \"email\": \"johndoe@example.com\",\n    \"roles\": [\"admin\", \"editor\"]\n  },\n  \"settings\": {\n    \"theme\": \"dark\",\n    \"language\": \"en\",\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false\n    }\n  },\n  \"projects\": [\n    {\n      \"projectId\": \"p001\",\n      \"projectName\": \"Alpha\",\n      \"completed\": false\n    },\n    {\n      \"projectId\": \"p002\",\n      \"projectName\": \"Beta\",\n      \"completed\": true\n    }\n  ],\n  \"logs\": [\n    {\n      \"timestamp\": \"2023-10-31T10:30:00Z\",\n      \"action\": \"login\",\n      \"success\": true\n    },\n    {\n      \"timestamp\": \"2023-10-31T10:45:00Z\",\n      \"action\": \"update_profile\",\n      \"success\": true\n    }\n  ],\n  \"features\": [\"data_export\", \"multi_user\", \"analytics\"]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050208_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"homeSettings\": {\n    \"temperature\": 21,\n    \"lightingMode\": \"auto\",\n    \"securityEnabled\": true\n  },\n  \"rooms\": [\n    {\n      \"name\": \"Living Room\",\n      \"area\": 20.5,\n      \"devices\": [\"TV\", \"Lamp\", \"Thermostat\"]\n    },\n    {\n      \"name\": \"Bedroom\",\n      \"area\": 15.0,\n      \"devices\": [\"Lamp\", \"Smart Speaker\"]\n    },\n    {\n      \"name\": \"Kitchen\",\n      \"area\": 18.0,\n      \"devices\": [\"Refrigerator\", \"Oven\", \"Coffee Maker\"]\n    }\n  ],\n  \"automations\": [\n    {\n      \"id\": \"A1001\",\n      \"trigger\": \"motionDetected\",\n      \"action\": \"turnOnLight\",\n      \"enabled\": true\n    },\n    {\n      \"id\": \"A1002\",\n      \"trigger\": \"sunset\",\n      \"action\": \"closeBlinds\",\n      \"enabled\": false\n    },\n    {\n      \"id\": \"A1003\",\n      \"trigger\": \"temperatureDrop\",\n      \"action\": \"activateHeating\",\n      \"enabled\": true\n    }\n  ],\n  \"devices\": [\n    {\n      \"deviceID\": \"D1001\",\n      \"type\": \"Thermostat\",\n      \"status\": \"active\"\n    },\n    {\n      \"deviceID\": \"D1002\",\n      \"type\": \"Smart Light\",\n      \"status\": \"active\"\n    },\n    {\n      \"deviceID\": \"D1003\",\n      \"type\": \"Smart Speaker\",\n      \"status\": \"inactive\"\n    }\n  ]\n}\n</code>",
            "feature_requirements": "• The CSV output must include a section representing the \"homeSettings\" object with a header row that contains the keys \"temperature\", \"lightingMode\", and \"securityEnabled\", and exactly one data row with their corresponding values.  \n• A separate CSV section must be created for the \"rooms\" array, including a header row with the fields \"name\", \"area\", and \"devices\".  \n• In the \"rooms\" section, the \"devices\" field must represent the list of device names as a single string (using a consistent delimiter such as a comma or semicolon) within its CSV cell.  \n• The CSV output must contain an additional section for the \"automations\" array, with a header row listing \"id\", \"trigger\", \"action\", and \"enabled\", followed by one row per automation record.  \n• Another CSV section must be provided for the \"devices\" array, with its header row including \"deviceID\", \"type\", and \"status\", ensuring that each device record is represented in a separate row.  \n• Each section must be structured so that the headers can be programmatically parsed and verified, with each data row exactly matching the corresponding JSON values for that section.",
            "task_id": "050209",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050209_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"homeSettings\": {\n    \"temperature\": 21,\n    \"lightingMode\": \"auto\",\n    \"securityEnabled\": true\n  },\n  \"rooms\": [\n    {\n      \"name\": \"Living Room\",\n      \"area\": 20.5,\n      \"devices\": [\"TV\", \"Lamp\", \"Thermostat\"]\n    },\n    {\n      \"name\": \"Bedroom\",\n      \"area\": 15.0,\n      \"devices\": [\"Lamp\", \"Smart Speaker\"]\n    },\n    {\n      \"name\": \"Kitchen\",\n      \"area\": 18.0,\n      \"devices\": [\"Refrigerator\", \"Oven\", \"Coffee Maker\"]\n    }\n  ],\n  \"automations\": [\n    {\n      \"id\": \"A1001\",\n      \"trigger\": \"motionDetected\",\n      \"action\": \"turnOnLight\",\n      \"enabled\": true\n    },\n    {\n      \"id\": \"A1002\",\n      \"trigger\": \"sunset\",\n      \"action\": \"closeBlinds\",\n      \"enabled\": false\n    },\n    {\n      \"id\": \"A1003\",\n      \"trigger\": \"temperatureDrop\",\n      \"action\": \"activateHeating\",\n      \"enabled\": true\n    }\n  ],\n  \"devices\": [\n    {\n      \"deviceID\": \"D1001\",\n      \"type\": \"Thermostat\",\n      \"status\": \"active\"\n    },\n    {\n      \"deviceID\": \"D1002\",\n      \"type\": \"Smart Light\",\n      \"status\": \"active\"\n    },\n    {\n      \"deviceID\": \"D1003\",\n      \"type\": \"Smart Speaker\",\n      \"status\": \"inactive\"\n    }\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050209_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"projectId\": \"abc123\",\n  \"name\": \"Inventory Management System\",\n  \"description\": \"A system to manage inventory levels, orders, deliveries, and sales.\",\n  \"settings\": {\n    \"updateFrequency\": \"30 minutes\",\n    \"notifications\": {\n      \"emailEnabled\": true,\n      \"smsEnabled\": false,\n      \"reminderInterval\": 60\n    },\n    \"supportedFormats\": [\n      \"JSON\",\n      \"XML\",\n      \"CSV\"\n    ]\n  },\n  \"teams\": [\n    {\n      \"teamId\": \"team01\",\n      \"members\": [\n        {\n          \"id\": \"u001\",\n          \"name\": \"Alice Johnson\",\n          \"role\": \"Manager\"\n        },\n        {\n          \"id\": \"u002\",\n          \"name\": \"Bob Smith\",\n          \"role\": \"Developer\"\n        }\n      ]\n    },\n    {\n      \"teamId\": \"team02\",\n      \"members\": [\n        {\n          \"id\": \"u003\",\n          \"name\": \"Charlie Lee\",\n          \"role\": \"Analyst\"\n        },\n        {\n          \"id\": \"u004\",\n          \"name\": \"Dana White\",\n          \"role\": \"Support\"\n        }\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"createdDate\": \"2023-10-05T12:00:00Z\",\n    \"version\": \"1.2.4\",\n    \"active\": true\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row with column names that correspond to each key from the JSON (project details, settings, teams, metadata, etc.).  \n• Top-level project fields (projectId, name, description) must be present as individual columns.  \n• Nested settings values (updateFrequency) and notifications details (emailEnabled, smsEnabled, reminderInterval) must be flattened into separate CSV columns.  \n• The supportedFormats array must be represented in a single CSV field as a comma-separated list (or another clear delimiter) within that field.  \n• Each team from the teams array must be included, with each team member represented as a separate row including an identifier for the team (teamId) as well as member details (id, name, role).  \n• Metadata fields (createdDate, version, active) must be flattened into individual CSV columns and included with every row.  \n• All boolean, numeric, and text values must be preserved exactly as provided in the JSON input, ensuring verifiable data types in the CSV output.  \n• Every piece of data from the original JSON input must be represented in the CSV, with nested objects appropriately flattened to maintain a one-to-one attribute mapping.",
            "task_id": "050210",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][projectId]",
                "rows[0][name]",
                "rows[0][description]",
                "rows[0][updateFrequency]",
                "rows[0][emailEnabled]",
                "rows[0][smsEnabled]",
                "rows[0][reminderInterval]",
                "rows[0][supportedFormats]",
                "rows[*][teamId]",
                "rows[*][id]",
                "rows[*][name]",
                "rows[*][role]",
                "rows[0][createdDate]",
                "rows[0][version]",
                "rows[0][active]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050210_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"projectId\": \"abc123\",\n  \"name\": \"Inventory Management System\",\n  \"description\": \"A system to manage inventory levels, orders, deliveries, and sales.\",\n  \"settings\": {\n    \"updateFrequency\": \"30 minutes\",\n    \"notifications\": {\n      \"emailEnabled\": true,\n      \"smsEnabled\": false,\n      \"reminderInterval\": 60\n    },\n    \"supportedFormats\": [\n      \"JSON\",\n      \"XML\",\n      \"CSV\"\n    ]\n  },\n  \"teams\": [\n    {\n      \"teamId\": \"team01\",\n      \"members\": [\n        {\n          \"id\": \"u001\",\n          \"name\": \"Alice Johnson\",\n          \"role\": \"Manager\"\n        },\n        {\n          \"id\": \"u002\",\n          \"name\": \"Bob Smith\",\n          \"role\": \"Developer\"\n        }\n      ]\n    },\n    {\n      \"teamId\": \"team02\",\n      \"members\": [\n        {\n          \"id\": \"u003\",\n          \"name\": \"Charlie Lee\",\n          \"role\": \"Analyst\"\n        },\n        {\n          \"id\": \"u004\",\n          \"name\": \"Dana White\",\n          \"role\": \"Support\"\n        }\n      ]\n    }\n  ],\n  \"metadata\": {\n    \"createdDate\": \"2023-10-05T12:00:00Z\",\n    \"version\": \"1.2.4\",\n    \"active\": true\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050210_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][projectId]",
                                "rows[0][name]",
                                "rows[0][description]",
                                "rows[0][updateFrequency]",
                                "rows[0][emailEnabled]",
                                "rows[0][smsEnabled]",
                                "rows[0][reminderInterval]",
                                "rows[0][supportedFormats]",
                                "rows[*][teamId]",
                                "rows[*][id]",
                                "rows[*][name]",
                                "rows[*][role]",
                                "rows[0][createdDate]",
                                "rows[0][version]",
                                "rows[0][active]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"library_id\": \"LIB1234\",\n  \"name\": \"Central City Library\",\n  \"location\": {\n    \"address\": \"123 Main St\",\n    \"city\": \"Central City\",\n    \"state\": \"State\",\n    \"zip_code\": \"12345\"\n  },\n  \"books\": [\n    {\n      \"title\": \"The Mystery of the Old Library\",\n      \"author\": \"Jane Doe\",\n      \"publication_year\": 1998,\n      \"genres\": [\n        \"Mystery\",\n        \"Historical\"\n      ],\n      \"available\": true\n    },\n    {\n      \"title\": \"Science Fundamentals\",\n      \"author\": \"John Smith\",\n      \"publication_year\": 2005,\n      \"genres\": [\n        \"Educational\",\n        \"Science\"\n      ],\n      \"available\": false\n    }\n  ],\n  \"staff\": [\n    {\n      \"staff_id\": \"S001\",\n      \"name\": \"Alice Johnson\",\n      \"position\": \"Librarian\"\n    },\n    {\n      \"staff_id\": \"S002\",\n      \"name\": \"Bob Smith\",\n      \"position\": \"Assistant Librarian\"\n    }\n  ],\n  \"services\": [\n    \"Book Lending\",\n    \"Research Assistance\",\n    \"Community Events\"\n  ]\n}\n</code>",
            "feature_requirements": "• The output must include a header row that defines clearly labeled columns for each data field.  \n• The top-level library details should be represented with columns such as library_id and name.  \n• The location object must be flattened into separate columns for address, city, state, and zip_code.  \n• Each entry in the books array must have its own row with columns for title, author, publication_year, and available.  \n• The genres array within each book entry must be flattened into a single column, joining multiple genres with a consistent delimiter.  \n• Each entry in the staff array must be represented as a separate row with columns for staff_id, name, and position.  \n• The services array should be represented as a single field in the output (or in its own row/column), combining all services into one comma-separated string.",
            "task_id": "050211",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][library_id]",
                "rows[0][name]",
                "rows[0][address]",
                "rows[0][city]",
                "rows[0][state]",
                "rows[0][zip_code]",
                "rows[0][title]",
                "rows[0][author]",
                "rows[0][publication_year]",
                "rows[0][available]",
                "rows[0][genres]",
                "rows[0][staff_id]",
                "rows[0][position]",
                "rows[0][services]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050211_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"library_id\": \"LIB1234\",\n  \"name\": \"Central City Library\",\n  \"location\": {\n    \"address\": \"123 Main St\",\n    \"city\": \"Central City\",\n    \"state\": \"State\",\n    \"zip_code\": \"12345\"\n  },\n  \"books\": [\n    {\n      \"title\": \"The Mystery of the Old Library\",\n      \"author\": \"Jane Doe\",\n      \"publication_year\": 1998,\n      \"genres\": [\n        \"Mystery\",\n        \"Historical\"\n      ],\n      \"available\": true\n    },\n    {\n      \"title\": \"Science Fundamentals\",\n      \"author\": \"John Smith\",\n      \"publication_year\": 2005,\n      \"genres\": [\n        \"Educational\",\n        \"Science\"\n      ],\n      \"available\": false\n    }\n  ],\n  \"staff\": [\n    {\n      \"staff_id\": \"S001\",\n      \"name\": \"Alice Johnson\",\n      \"position\": \"Librarian\"\n    },\n    {\n      \"staff_id\": \"S002\",\n      \"name\": \"Bob Smith\",\n      \"position\": \"Assistant Librarian\"\n    }\n  ],\n  \"services\": [\n    \"Book Lending\",\n    \"Research Assistance\",\n    \"Community Events\"\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050211_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][library_id]",
                                "rows[0][name]",
                                "rows[0][address]",
                                "rows[0][city]",
                                "rows[0][state]",
                                "rows[0][zip_code]",
                                "rows[0][title]",
                                "rows[0][author]",
                                "rows[0][publication_year]",
                                "rows[0][available]",
                                "rows[0][genres]",
                                "rows[0][staff_id]",
                                "rows[0][position]",
                                "rows[0][services]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userProfile\": {\n    \"username\": \"jdoe\",\n    \"fullName\": \"John Doe\",\n    \"age\": 29,\n    \"email\": \"jdoe@example.com\"\n  },\n  \"preferences\": {\n    \"theme\": \"dark\",\n    \"language\": \"en\",\n    \"notifications\": true\n  },\n  \"activityLogs\": [\n    {\n      \"action\": \"login\",\n      \"timestamp\": \"2023-10-01T08:30:00Z\"\n    },\n    {\n      \"action\": \"update_profile\",\n      \"timestamp\": \"2023-10-01T09:15:00Z\"\n    },\n    {\n      \"action\": \"logout\",\n      \"timestamp\": \"2023-10-01T10:00:00Z\"\n    }\n  ],\n  \"dataPoints\": [15, 27, 33, 42, 58],\n  \"systemSettings\": {\n    \"version\": \"1.0.5\",\n    \"updateAvailable\": false,\n    \"supportedFormats\": [\"json\", \"xml\", \"csv\"]\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row that clearly labels each column corresponding to the JSON keys.  \n• The CSV output must flatten the \"userProfile\" object by including its keys (username, fullName, age, email) as individual columns in a record.  \n• The CSV output must flatten the \"preferences\" object by including its keys (theme, language, notifications) as individual columns in a record.  \n• The CSV output must convert the \"activityLogs\" array into separate rows such that each log entry appears with its own \"action\" and \"timestamp\" columns.  \n• The CSV output must convert the \"dataPoints\" array so that each numeric value is represented individually, either as separate rows or as entries under a designated column.  \n• The CSV output must flatten the \"systemSettings\" object by including its keys (version, updateAvailable) as individual columns, and the \"supportedFormats\" array must be represented as a single field (e.g., a delimited string) within that row.  \n• The CSV output must preserve the type integrity by ensuring text, numeric, and boolean values are distinguishable and correctly represented in the respective columns.",
            "task_id": "050212",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][username]",
                "rows[*][fullName]",
                "rows[*][age]",
                "rows[*][email]",
                "rows[*][theme]",
                "rows[*][language]",
                "rows[*][notifications]",
                "rows[*][action]",
                "rows[*][timestamp]",
                "rows[*][dataPoint]",
                "rows[*][version]",
                "rows[*][updateAvailable]",
                "rows[*][supportedFormats]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050212_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userProfile\": {\n    \"username\": \"jdoe\",\n    \"fullName\": \"John Doe\",\n    \"age\": 29,\n    \"email\": \"jdoe@example.com\"\n  },\n  \"preferences\": {\n    \"theme\": \"dark\",\n    \"language\": \"en\",\n    \"notifications\": true\n  },\n  \"activityLogs\": [\n    {\n      \"action\": \"login\",\n      \"timestamp\": \"2023-10-01T08:30:00Z\"\n    },\n    {\n      \"action\": \"update_profile\",\n      \"timestamp\": \"2023-10-01T09:15:00Z\"\n    },\n    {\n      \"action\": \"logout\",\n      \"timestamp\": \"2023-10-01T10:00:00Z\"\n    }\n  ],\n  \"dataPoints\": [15, 27, 33, 42, 58],\n  \"systemSettings\": {\n    \"version\": \"1.0.5\",\n    \"updateAvailable\": false,\n    \"supportedFormats\": [\"json\", \"xml\", \"csv\"]\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050212_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][username]",
                                "rows[*][fullName]",
                                "rows[*][age]",
                                "rows[*][email]",
                                "rows[*][theme]",
                                "rows[*][language]",
                                "rows[*][notifications]",
                                "rows[*][action]",
                                "rows[*][timestamp]",
                                "rows[*][dataPoint]",
                                "rows[*][version]",
                                "rows[*][updateAvailable]",
                                "rows[*][supportedFormats]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"project\": \"Data Conversion Task\",\n  \"metadata\": {\n    \"version\": \"1.0\",\n    \"timestamp\": \"2023-10-01T12:00:00Z\",\n    \"author\": \"ConversionTool\"\n  },\n  \"configuration\": {\n    \"enableLogging\": true,\n    \"maxRetries\": 3,\n    \"timeout\": 30\n  },\n  \"transformationRules\": [\n    {\n      \"sourceField\": \"first_name\",\n      \"targetField\": \"givenName\",\n      \"action\": \"capitalize\"\n    },\n    {\n      \"sourceField\": \"last_name\",\n      \"targetField\": \"surname\",\n      \"action\": \"capitalize\"\n    },\n    {\n      \"sourceField\": \"birthdate\",\n      \"targetField\": \"dateOfBirth\",\n      \"action\": \"formatDate\"\n    }\n  ],\n  \"fieldsMapping\": {\n    \"id\": \"uniqueIdentifier\",\n    \"email\": \"contactEmail\"\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row that lists column names corresponding to each unique JSON property.  \n• The top-level \"project\" field must appear as a distinct column in the CSV.  \n• All properties within the \"metadata\" object (i.e., \"version\", \"timestamp\", and \"author\") must be flattened into separate CSV columns, with values matching those in the JSON.  \n• The \"configuration\" object’s properties (\"enableLogging\", \"maxRetries\", and \"timeout\") must be flattened into individual CSV columns, preserving their original data types and values.  \n• Each object in the \"transformationRules\" array must have its \"sourceField\", \"targetField\", and \"action\" keys represented—either by expanding them into multiple rows or by creating unique column names for each rule—while preserving the order of the rules.  \n• The \"fieldsMapping\" object must be flattened so that each key-value pair (e.g., \"id\" mapped to \"uniqueIdentifier\" and \"email\" mapped to \"contactEmail\") is represented as a separate CSV column with an identifiable header.  \n• The transformation from JSON to CSV must retain all provided literal values (e.g., boolean, numeric, and string values) exactly as specified in the JSON.  \n• The CSV structure must be verifiable by matching each cell’s content to the corresponding JSON key (including nested keys flattened into compound column names).",
            "task_id": "050213",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][project]",
                "rows[0][metadata][version]",
                "rows[0][metadata][timestamp]",
                "rows[0][metadata][author]",
                "rows[0][configuration][enableLogging]",
                "rows[0][configuration][maxRetries]",
                "rows[0][configuration][timeout]",
                "rows[*][transformationRules][sourceField]",
                "rows[*][transformationRules][targetField]",
                "rows[*][transformationRules][action]",
                "rows[0][fieldsMapping][id]",
                "rows[0][fieldsMapping][email]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050213_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"project\": \"Data Conversion Task\",\n  \"metadata\": {\n    \"version\": \"1.0\",\n    \"timestamp\": \"2023-10-01T12:00:00Z\",\n    \"author\": \"ConversionTool\"\n  },\n  \"configuration\": {\n    \"enableLogging\": true,\n    \"maxRetries\": 3,\n    \"timeout\": 30\n  },\n  \"transformationRules\": [\n    {\n      \"sourceField\": \"first_name\",\n      \"targetField\": \"givenName\",\n      \"action\": \"capitalize\"\n    },\n    {\n      \"sourceField\": \"last_name\",\n      \"targetField\": \"surname\",\n      \"action\": \"capitalize\"\n    },\n    {\n      \"sourceField\": \"birthdate\",\n      \"targetField\": \"dateOfBirth\",\n      \"action\": \"formatDate\"\n    }\n  ],\n  \"fieldsMapping\": {\n    \"id\": \"uniqueIdentifier\",\n    \"email\": \"contactEmail\"\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050213_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][project]",
                                "rows[0][metadata][version]",
                                "rows[0][metadata][timestamp]",
                                "rows[0][metadata][author]",
                                "rows[0][configuration][enableLogging]",
                                "rows[0][configuration][maxRetries]",
                                "rows[0][configuration][timeout]",
                                "rows[*][transformationRules][sourceField]",
                                "rows[*][transformationRules][targetField]",
                                "rows[*][transformationRules][action]",
                                "rows[0][fieldsMapping][id]",
                                "rows[0][fieldsMapping][email]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userProfile\": {\n    \"id\": \"usr_10234\",\n    \"name\": \"Jane Doe\",\n    \"age\": 28,\n    \"contact\": {\n      \"email\": \"jane.doe@example.com\",\n      \"phone\": \"555-1234\"\n    }\n  },\n  \"settings\": {\n    \"theme\": \"dark\",\n    \"language\": \"en-US\",\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false\n    }\n  },\n  \"inventory\": [\n    {\n      \"itemId\": \"itm_001\",\n      \"itemName\": \"Gadget Alpha\",\n      \"quantity\": 10,\n      \"price\": 19.99\n    },\n    {\n      \"itemId\": \"itm_002\",\n      \"itemName\": \"Gadget Beta\",\n      \"quantity\": 5,\n      \"price\": 29.99\n    }\n  ],\n  \"roles\": [\n    \"admin\",\n    \"editor\",\n    \"viewer\"\n  ],\n  \"metadata\": {\n    \"createdAt\": \"2023-10-01T10:00:00Z\",\n    \"lastUpdated\": \"2023-10-10T14:30:00Z\"\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row with clearly defined column names that correspond to the keys from the JSON.  \n• The \"userProfile\" object should be flattened into individual columns such as userProfile_id, userProfile_name, and userProfile_age.  \n• The nested \"contact\" object within \"userProfile\" must be flattened into columns like userProfile_contact_email and userProfile_contact_phone.  \n• The \"settings\" object should be converted into individual columns, including settings_theme and settings_language.  \n• The nested \"notifications\" object within \"settings\" must be flattened into separate columns such as settings_notifications_email and settings_notifications_sms.  \n• The \"inventory\" array must be handled so that each object in the array creates a separate row in the CSV, with columns for inventory_itemId, inventory_itemName, inventory_quantity, and inventory_price.  \n• The \"roles\" array should be represented in a single CSV cell by concatenating its values (e.g., separated by commas) under a column like roles.  \n• The \"metadata\" object must be flattened into distinct columns such as metadata_createdAt and metadata_lastUpdated.",
            "task_id": "050214",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][userProfile_id]",
                "rows[0][userProfile_name]",
                "rows[0][userProfile_age]",
                "rows[0][userProfile_contact_email]",
                "rows[0][userProfile_contact_phone]",
                "rows[0][settings_theme]",
                "rows[0][settings_language]",
                "rows[0][settings_notifications_email]",
                "rows[0][settings_notifications_sms]",
                "rows[0][inventory_itemId]",
                "rows[0][inventory_itemName]",
                "rows[0][inventory_quantity]",
                "rows[0][inventory_price]",
                "rows[0][roles]",
                "rows[0][metadata_createdAt]",
                "rows[0][metadata_lastUpdated]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050214_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userProfile\": {\n    \"id\": \"usr_10234\",\n    \"name\": \"Jane Doe\",\n    \"age\": 28,\n    \"contact\": {\n      \"email\": \"jane.doe@example.com\",\n      \"phone\": \"555-1234\"\n    }\n  },\n  \"settings\": {\n    \"theme\": \"dark\",\n    \"language\": \"en-US\",\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false\n    }\n  },\n  \"inventory\": [\n    {\n      \"itemId\": \"itm_001\",\n      \"itemName\": \"Gadget Alpha\",\n      \"quantity\": 10,\n      \"price\": 19.99\n    },\n    {\n      \"itemId\": \"itm_002\",\n      \"itemName\": \"Gadget Beta\",\n      \"quantity\": 5,\n      \"price\": 29.99\n    }\n  ],\n  \"roles\": [\n    \"admin\",\n    \"editor\",\n    \"viewer\"\n  ],\n  \"metadata\": {\n    \"createdAt\": \"2023-10-01T10:00:00Z\",\n    \"lastUpdated\": \"2023-10-10T14:30:00Z\"\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050214_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][userProfile_id]",
                                "rows[0][userProfile_name]",
                                "rows[0][userProfile_age]",
                                "rows[0][userProfile_contact_email]",
                                "rows[0][userProfile_contact_phone]",
                                "rows[0][settings_theme]",
                                "rows[0][settings_language]",
                                "rows[0][settings_notifications_email]",
                                "rows[0][settings_notifications_sms]",
                                "rows[0][inventory_itemId]",
                                "rows[0][inventory_itemName]",
                                "rows[0][inventory_quantity]",
                                "rows[0][inventory_price]",
                                "rows[0][roles]",
                                "rows[0][metadata_createdAt]",
                                "rows[0][metadata_lastUpdated]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userId\": \"12345\",\n  \"personalInfo\": {\n    \"name\": \"Alice Johnson\",\n    \"age\": 28,\n    \"email\": \"alice.johnson@example.com\"\n  },\n  \"preferences\": {\n    \"language\": \"English\",\n    \"timezone\": \"Europe/London\",\n    \"notificationsEnabled\": true\n  },\n  \"activityLog\": [\n    {\n      \"timestamp\": \"2023-09-15T14:23:00Z\",\n      \"activity\": \"login\"\n    },\n    {\n      \"timestamp\": \"2023-09-15T15:05:30Z\",\n      \"activity\": \"viewed_profile\"\n    },\n    {\n      \"timestamp\": \"2023-09-15T16:20:45Z\",\n      \"activity\": \"logout\"\n    }\n  ],\n  \"settings\": {\n    \"theme\": \"light\",\n    \"privacy\": {\n      \"profileVisible\": false,\n      \"searchVisibility\": true\n    }\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row that names each field.  \n• The CSV must include columns derived from the top-level userId, personalInfo, preferences, settings, and the activity log entries.  \n• The CSV header should contain columns for userId, name, age, email, language, timezone, notificationsEnabled, timestamp, activity, theme, profileVisible, and searchVisibility.  \n• The nested personalInfo object should be flattened into separate columns (name, age, email) in the CSV.  \n• The nested preferences object must be flattened into individual columns (language, timezone, notificationsEnabled) in the CSV.  \n• Each entry from the activityLog array should result in a separate row in the CSV, with its corresponding timestamp and activity values.  \n• The CSV output should include the settings data flattened into distinct columns for theme, profileVisible, and searchVisibility, with privacy details extracted accordingly.  \n• For each row created from an activityLog entry, shared data from the JSON (userId, personalInfo, preferences, and settings) should be repeated to maintain consistency.  \n• Boolean values such as notificationsEnabled, profileVisible, and searchVisibility should be clearly represented as true or false in the CSV.",
            "task_id": "050215",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][userId]",
                "rows[0][name]",
                "rows[0][age]",
                "rows[0][email]",
                "rows[0][language]",
                "rows[0][timezone]",
                "rows[0][notificationsEnabled]",
                "rows[0][timestamp]",
                "rows[0][activity]",
                "rows[0][theme]",
                "rows[0][profileVisible]",
                "rows[0][searchVisibility]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050215_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userId\": \"12345\",\n  \"personalInfo\": {\n    \"name\": \"Alice Johnson\",\n    \"age\": 28,\n    \"email\": \"alice.johnson@example.com\"\n  },\n  \"preferences\": {\n    \"language\": \"English\",\n    \"timezone\": \"Europe/London\",\n    \"notificationsEnabled\": true\n  },\n  \"activityLog\": [\n    {\n      \"timestamp\": \"2023-09-15T14:23:00Z\",\n      \"activity\": \"login\"\n    },\n    {\n      \"timestamp\": \"2023-09-15T15:05:30Z\",\n      \"activity\": \"viewed_profile\"\n    },\n    {\n      \"timestamp\": \"2023-09-15T16:20:45Z\",\n      \"activity\": \"logout\"\n    }\n  ],\n  \"settings\": {\n    \"theme\": \"light\",\n    \"privacy\": {\n      \"profileVisible\": false,\n      \"searchVisibility\": true\n    }\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050215_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][userId]",
                                "rows[0][name]",
                                "rows[0][age]",
                                "rows[0][email]",
                                "rows[0][language]",
                                "rows[0][timezone]",
                                "rows[0][notificationsEnabled]",
                                "rows[0][timestamp]",
                                "rows[0][activity]",
                                "rows[0][theme]",
                                "rows[0][profileVisible]",
                                "rows[0][searchVisibility]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userInfo\": {\n    \"id\": \"user12345\",\n    \"name\": \"Alice Johnson\",\n    \"email\": \"alice@example.com\",\n    \"age\": 29\n  },\n  \"preferences\": {\n    \"notifications\": true,\n    \"theme\": \"dark\",\n    \"language\": \"en-US\"\n  },\n  \"activities\": [\n    {\n      \"activity\": \"login\",\n      \"timestamp\": \"2023-10-03T14:48:00.000Z\"\n    },\n    {\n      \"activity\": \"updateProfile\",\n      \"timestamp\": \"2023-10-05T10:22:00.000Z\"\n    },\n    {\n      \"activity\": \"logout\",\n      \"timestamp\": \"2023-10-05T16:30:00.000Z\"\n    }\n  ],\n  \"history\": [\n    \"visited_homepage\",\n    \"clicked_banner\",\n    \"viewed_product\",\n    \"added_to_cart\"\n  ],\n  \"settings\": {\n    \"privacy\": \"high\",\n    \"dataSharing\": false,\n    \"autoUpdate\": true\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row that clearly labels each column corresponding to the JSON keys.\n• The CSV output must represent the properties of the \"userInfo\" object in separate columns (e.g., id, name, email, age).\n• The CSV output must represent the properties of the \"preferences\" object in separate columns (e.g., notifications, theme, language).\n• The CSV output must convert the \"activities\" array into multiple rows, each with columns for \"activity\" and \"timestamp\".\n• The CSV output must convert the \"history\" array into rows where each row contains one historical activity or into a single row that lists all entries in a measurable, delimited format.\n• The CSV output must represent the properties of the \"settings\" object in separate columns (e.g., privacy, dataSharing, autoUpdate).\n• Data values such as booleans, numbers, and strings must be correctly transferred from the JSON to the corresponding CSV cells without alteration.",
            "task_id": "050216",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][id]",
                "rows[0][name]",
                "rows[0][email]",
                "rows[0][age]",
                "rows[0][notifications]",
                "rows[0][theme]",
                "rows[0][language]",
                "rows[0][privacy]",
                "rows[0][dataSharing]",
                "rows[0][autoUpdate]",
                "rows[*][activity]",
                "rows[*][timestamp]",
                "rows[*][history]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050216_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userInfo\": {\n    \"id\": \"user12345\",\n    \"name\": \"Alice Johnson\",\n    \"email\": \"alice@example.com\",\n    \"age\": 29\n  },\n  \"preferences\": {\n    \"notifications\": true,\n    \"theme\": \"dark\",\n    \"language\": \"en-US\"\n  },\n  \"activities\": [\n    {\n      \"activity\": \"login\",\n      \"timestamp\": \"2023-10-03T14:48:00.000Z\"\n    },\n    {\n      \"activity\": \"updateProfile\",\n      \"timestamp\": \"2023-10-05T10:22:00.000Z\"\n    },\n    {\n      \"activity\": \"logout\",\n      \"timestamp\": \"2023-10-05T16:30:00.000Z\"\n    }\n  ],\n  \"history\": [\n    \"visited_homepage\",\n    \"clicked_banner\",\n    \"viewed_product\",\n    \"added_to_cart\"\n  ],\n  \"settings\": {\n    \"privacy\": \"high\",\n    \"dataSharing\": false,\n    \"autoUpdate\": true\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050216_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][id]",
                                "rows[0][name]",
                                "rows[0][email]",
                                "rows[0][age]",
                                "rows[0][notifications]",
                                "rows[0][theme]",
                                "rows[0][language]",
                                "rows[0][privacy]",
                                "rows[0][dataSharing]",
                                "rows[0][autoUpdate]",
                                "rows[*][activity]",
                                "rows[*][timestamp]",
                                "rows[*][history]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"metadata\": {\n    \"version\": \"1.0.0\",\n    \"timestamp\": \"2023-10-29T12:00:00Z\",\n    \"description\": \"Example configuration for conversion task\"\n  },\n  \"user\": {\n    \"id\": 789,\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"roles\": [\n      \"admin\",\n      \"editor\",\n      \"user\"\n    ]\n  },\n  \"settings\": {\n    \"theme\": \"dark\",\n    \"notifications\": true,\n    \"language\": \"en\",\n    \"preferences\": {\n      \"dateFormat\": \"MM-DD-YYYY\",\n      \"timeZone\": \"UTC-5\"\n    }\n  },\n  \"items\": [\n    {\n      \"itemId\": \"A001\",\n      \"description\": \"Sample item A\",\n      \"quantity\": 10,\n      \"price\": 19.99\n    },\n    {\n      \"itemId\": \"B002\",\n      \"description\": \"Sample item B\",\n      \"quantity\": 5,\n      \"price\": 9.99\n    }\n  ]\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row with columns representing each flattened key from the JSON input.  \n• All fields from the \"metadata\" object (version, timestamp, description) must appear as separate, clearly labeled columns.  \n• The \"user\" object must be flattened so that id, name, and email are individual columns, and the roles array is represented in a single column (e.g., as a comma‐separated string).  \n• The \"settings\" object must be flattened to include theme, notifications, and language as individual columns, with the nested \"preferences\" object contributing separate columns for dateFormat and timeZone.  \n• The \"items\" array must be output as multiple rows where each row corresponds to one item and includes its itemId, description, quantity, and price in dedicated columns.  \n• All values must be converted to CSV format so that data types (numbers, booleans, strings) are preserved through their textual representations in the resulting cells.",
            "task_id": "050217",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][metadata][version]",
                "rows[*][metadata][timestamp]",
                "rows[*][metadata][description]",
                "rows[*][user][id]",
                "rows[*][user][name]",
                "rows[*][user][email]",
                "rows[*][user][roles]",
                "rows[*][settings][theme]",
                "rows[*][settings][notifications]",
                "rows[*][settings][language]",
                "rows[*][settings][preferences][dateFormat]",
                "rows[*][settings][preferences][timeZone]",
                "rows[*][items][itemId]",
                "rows[*][items][description]",
                "rows[*][items][quantity]",
                "rows[*][items][price]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050217_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"metadata\": {\n    \"version\": \"1.0.0\",\n    \"timestamp\": \"2023-10-29T12:00:00Z\",\n    \"description\": \"Example configuration for conversion task\"\n  },\n  \"user\": {\n    \"id\": 789,\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"roles\": [\n      \"admin\",\n      \"editor\",\n      \"user\"\n    ]\n  },\n  \"settings\": {\n    \"theme\": \"dark\",\n    \"notifications\": true,\n    \"language\": \"en\",\n    \"preferences\": {\n      \"dateFormat\": \"MM-DD-YYYY\",\n      \"timeZone\": \"UTC-5\"\n    }\n  },\n  \"items\": [\n    {\n      \"itemId\": \"A001\",\n      \"description\": \"Sample item A\",\n      \"quantity\": 10,\n      \"price\": 19.99\n    },\n    {\n      \"itemId\": \"B002\",\n      \"description\": \"Sample item B\",\n      \"quantity\": 5,\n      \"price\": 9.99\n    }\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050217_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][metadata][version]",
                                "rows[*][metadata][timestamp]",
                                "rows[*][metadata][description]",
                                "rows[*][user][id]",
                                "rows[*][user][name]",
                                "rows[*][user][email]",
                                "rows[*][user][roles]",
                                "rows[*][settings][theme]",
                                "rows[*][settings][notifications]",
                                "rows[*][settings][language]",
                                "rows[*][settings][preferences][dateFormat]",
                                "rows[*][settings][preferences][timeZone]",
                                "rows[*][items][itemId]",
                                "rows[*][items][description]",
                                "rows[*][items][quantity]",
                                "rows[*][items][price]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"profile\": {\n    \"username\": \"john_doe\",\n    \"preferences\": {\n      \"theme\": \"light\",\n      \"notifications\": true,\n      \"languages\": [\"en\", \"es\", \"fr\"]\n    }\n  },\n  \"data\": {\n    \"items\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Item One\",\n        \"value\": 123.45,\n        \"tags\": [\"new\", \"sale\"]\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Item Two\",\n        \"value\": 67,\n        \"tags\": [\"outdoor\", \"discount\"]\n      }\n    ]\n  },\n  \"settings\": {\n    \"refresh_interval\": 30,\n    \"debug_mode\": false,\n    \"nested_config\": [\n      {\n        \"key\": \"alpha\",\n        \"value\": \"a\"\n      },\n      {\n        \"key\": \"beta\",\n        \"value\": \"b\"\n      }\n    ]\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row where each column corresponds to a flattened key from the original JSON (e.g., profile_username, preferences_theme, data_items_id, etc.).  \n• Each row in the CSV should represent a distinct record derived from an array element, especially for the \"data.items\" array, ensuring that each item produces one row.  \n• The values from nested sections (such as \"profile\" and \"settings\") must be flattened so that every nested key (like \"preferences.notifications\" or \"settings.refresh_interval\") appears as an individual column in the header.  \n• Array values (such as \"preferences.languages,\" \"data.items.tags,\" or the \"settings.nested_config\" array) must be converted into a single CSV cell entry, with multiple values separated by a consistent delimiter.  \n• Boolean and numeric values from the JSON must be correctly represented in the CSV as plain text, ensuring that the type conversion is verifiable in the output.  \n• The CSV must include all keys from the JSON, ensuring that no data from \"profile,\" \"data,\" or \"settings\" is omitted in the flattened conversion process.",
            "task_id": "050218",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "profile[username]",
                "preferences[theme]",
                "preferences[notifications]",
                "preferences[languages]",
                "data[items][id]",
                "data[items][tags]",
                "settings[refresh_interval]",
                "settings[nested_config]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050218_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"profile\": {\n    \"username\": \"john_doe\",\n    \"preferences\": {\n      \"theme\": \"light\",\n      \"notifications\": true,\n      \"languages\": [\"en\", \"es\", \"fr\"]\n    }\n  },\n  \"data\": {\n    \"items\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Item One\",\n        \"value\": 123.45,\n        \"tags\": [\"new\", \"sale\"]\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"Item Two\",\n        \"value\": 67,\n        \"tags\": [\"outdoor\", \"discount\"]\n      }\n    ]\n  },\n  \"settings\": {\n    \"refresh_interval\": 30,\n    \"debug_mode\": false,\n    \"nested_config\": [\n      {\n        \"key\": \"alpha\",\n        \"value\": \"a\"\n      },\n      {\n        \"key\": \"beta\",\n        \"value\": \"b\"\n      }\n    ]\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050218_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "profile[username]",
                                "preferences[theme]",
                                "preferences[notifications]",
                                "preferences[languages]",
                                "data[items][id]",
                                "data[items][tags]",
                                "settings[refresh_interval]",
                                "settings[nested_config]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"user\": {\n    \"id\": 1024,\n    \"name\": \"Alice Smith\",\n    \"roles\": [\"admin\", \"user\"]\n  },\n  \"preferences\": {\n    \"language\": \"en\",\n    \"theme\": \"light\",\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false,\n      \"push\": true\n    }\n  },\n  \"data\": [\n    {\n      \"category\": \"sensor\",\n      \"values\": [23.5, 24.0, 23.8],\n      \"unit\": \"Celsius\"\n    },\n    {\n      \"category\": \"actuator\",\n      \"values\": [5, 10, 7],\n      \"unit\": \"seconds\"\n    }\n  ],\n  \"events\": [\n    {\n      \"timestamp\": \"2023-10-10T09:00:00Z\",\n      \"type\": \"login\"\n    },\n    {\n      \"timestamp\": \"2023-10-11T15:45:00Z\",\n      \"type\": \"update\"\n    }\n  ],\n  \"metadata\": {\n    \"created\": \"2023-10-01T08:30:00Z\",\n    \"version\": \"2.3.4\"\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row with column names that map to each JSON key, using flattened key names (for example, \"user_id\" for user.id, \"preferences_language\" for preferences.language, etc.).  \n• The \"user\" section must be represented by columns including the user’s id, name, and roles, with the roles array converted into a single cell containing a comma‐separated list of role values.  \n• The \"preferences\" section must have individual columns for the language, theme, and each notification preference (email, sms, and push), with boolean values rendered as \"true\" or \"false\".  \n• Each object in the \"data\" array must be represented in its own CSV row with separate columns for category, values, and unit, where the values array is converted into a single comma‐separated string within its cell.  \n• Each object in the \"events\" array must be represented in a separate CSV row with dedicated columns for the timestamp and type of the event, preserving the ISO-8601 format for timestamps.  \n• The \"metadata\" section must be included with columns for both the created timestamp and the version, preserving the exact string values from the JSON.  \n• The conversion must ensure that all JSON elements are accounted for, with no JSON key omitted from the CSV output.",
            "task_id": "050219",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][user_id]",
                "rows[0][user_name]",
                "rows[0][user_roles]",
                "rows[0][preferences_language]",
                "rows[0][preferences_theme]",
                "rows[0][preferences_notifications_email]",
                "rows[0][preferences_notifications_sms]",
                "rows[0][preferences_notifications_push]",
                "rows[*][data_category]",
                "rows[*][data_values]",
                "rows[*][data_unit]",
                "rows[*][events_timestamp]",
                "rows[*][events_type]",
                "rows[0][metadata_created]",
                "rows[0][metadata_version]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050219_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"user\": {\n    \"id\": 1024,\n    \"name\": \"Alice Smith\",\n    \"roles\": [\"admin\", \"user\"]\n  },\n  \"preferences\": {\n    \"language\": \"en\",\n    \"theme\": \"light\",\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false,\n      \"push\": true\n    }\n  },\n  \"data\": [\n    {\n      \"category\": \"sensor\",\n      \"values\": [23.5, 24.0, 23.8],\n      \"unit\": \"Celsius\"\n    },\n    {\n      \"category\": \"actuator\",\n      \"values\": [5, 10, 7],\n      \"unit\": \"seconds\"\n    }\n  ],\n  \"events\": [\n    {\n      \"timestamp\": \"2023-10-10T09:00:00Z\",\n      \"type\": \"login\"\n    },\n    {\n      \"timestamp\": \"2023-10-11T15:45:00Z\",\n      \"type\": \"update\"\n    }\n  ],\n  \"metadata\": {\n    \"created\": \"2023-10-01T08:30:00Z\",\n    \"version\": \"2.3.4\"\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050219_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][user_id]",
                                "rows[0][user_name]",
                                "rows[0][user_roles]",
                                "rows[0][preferences_language]",
                                "rows[0][preferences_theme]",
                                "rows[0][preferences_notifications_email]",
                                "rows[0][preferences_notifications_sms]",
                                "rows[0][preferences_notifications_push]",
                                "rows[*][data_category]",
                                "rows[*][data_values]",
                                "rows[*][data_unit]",
                                "rows[*][events_timestamp]",
                                "rows[*][events_type]",
                                "rows[0][metadata_created]",
                                "rows[0][metadata_version]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"id\": \"user_0012\",\n  \"profile\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"contact\": {\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+1234567890\"\n    }\n  },\n  \"preferences\": {\n    \"theme\": \"dark\",\n    \"language\": \"en-US\",\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false\n    }\n  },\n  \"items\": [\n    {\n      \"itemId\": \"item_1001\",\n      \"description\": \"First sample item\",\n      \"tags\": [\"sample\", \"test\", \"inventory\"],\n      \"price\": 19.99\n    },\n    {\n      \"itemId\": \"item_1002\",\n      \"description\": \"Second sample item\",\n      \"tags\": [\"new\", \"sale\"],\n      \"price\": 29.99\n    }\n  ],\n  \"logs\": [\n    {\n      \"timestamp\": \"2023-01-01T10:00:00Z\",\n      \"action\": \"login\"\n    },\n    {\n      \"timestamp\": \"2023-01-02T11:30:00Z\",\n      \"action\": \"update-profile\"\n    }\n  ]\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row listing the column names derived from the JSON keys.\n• The first CSV section should represent top‐level and nested object properties (excluding arrays) as individual columns. For example, include columns for id, profile_firstName, profile_lastName, profile_contact_email, profile_contact_phone, preferences_theme, preferences_language, preferences_notifications_email, and preferences_notifications_sms.\n• The conversion must flatten nested objects by concatenating keys (or by a similar clear naming convention) so that each nested value becomes a separate CSV column.\n• The CSV output must handle the “items” array by producing a separate CSV section where each array element appears as an individual row. The header for this section should include itemId, description, tags, and price.\n• Within the “items” section, the tags field must combine the array elements into a single string (e.g., separated by commas) to fit into one CSV cell.\n• The CSV output must handle the “logs” array by producing another distinct CSV section in which each log entry is a separate row. The header for this section should include timestamp and action.\n• All data values (strings, numbers, booleans) must be preserved exactly as represented in the JSON.\n• No extra or unrecognized keys should be included in the CSV output aside from those explicitly derived from the JSON structure.",
            "task_id": "050220",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][id]",
                "rows[0][profile_firstName]",
                "rows[0][profile_lastName]",
                "rows[0][profile_contact_email]",
                "rows[0][profile_contact_phone]",
                "rows[0][preferences_theme]",
                "rows[0][preferences_language]",
                "rows[0][preferences_notifications_email]",
                "rows[0][preferences_notifications_sms]",
                "rows[0][itemId]",
                "rows[0][description]",
                "rows[0][tags]",
                "rows[0][price]",
                "rows[0][timestamp]",
                "rows[0][action]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050220_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"id\": \"user_0012\",\n  \"profile\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"contact\": {\n      \"email\": \"john.doe@example.com\",\n      \"phone\": \"+1234567890\"\n    }\n  },\n  \"preferences\": {\n    \"theme\": \"dark\",\n    \"language\": \"en-US\",\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false\n    }\n  },\n  \"items\": [\n    {\n      \"itemId\": \"item_1001\",\n      \"description\": \"First sample item\",\n      \"tags\": [\"sample\", \"test\", \"inventory\"],\n      \"price\": 19.99\n    },\n    {\n      \"itemId\": \"item_1002\",\n      \"description\": \"Second sample item\",\n      \"tags\": [\"new\", \"sale\"],\n      \"price\": 29.99\n    }\n  ],\n  \"logs\": [\n    {\n      \"timestamp\": \"2023-01-01T10:00:00Z\",\n      \"action\": \"login\"\n    },\n    {\n      \"timestamp\": \"2023-01-02T11:30:00Z\",\n      \"action\": \"update-profile\"\n    }\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050220_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][id]",
                                "rows[0][profile_firstName]",
                                "rows[0][profile_lastName]",
                                "rows[0][profile_contact_email]",
                                "rows[0][profile_contact_phone]",
                                "rows[0][preferences_theme]",
                                "rows[0][preferences_language]",
                                "rows[0][preferences_notifications_email]",
                                "rows[0][preferences_notifications_sms]",
                                "rows[0][itemId]",
                                "rows[0][description]",
                                "rows[0][tags]",
                                "rows[0][price]",
                                "rows[0][timestamp]",
                                "rows[0][action]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userId\": 7890,\n  \"profile\": {\n    \"username\": \"jdoe\",\n    \"fullName\": \"John Doe\",\n    \"age\": 29,\n    \"contact\": {\n      \"email\": \"jdoe@example.com\",\n      \"phone\": \"555-1234\"\n    }\n  },\n  \"preferences\": {\n    \"language\": \"English\",\n    \"notifications\": true,\n    \"themes\": [\"dark\", \"minimal\"]\n  },\n  \"subscriptions\": [\n    {\n      \"service\": \"newsletter\",\n      \"status\": \"active\",\n      \"frequency\": \"weekly\"\n    },\n    {\n      \"service\": \"premium_support\",\n      \"status\": \"inactive\",\n      \"expires\": \"2024-06-30\"\n    }\n  ],\n  \"activityLog\": [\n    {\"type\": \"login\", \"timestamp\": \"2023-11-01T09:30:00Z\"},\n    {\"type\": \"update_profile\", \"timestamp\": \"2023-11-02T14:15:00Z\"},\n    {\"type\": \"purchase\", \"timestamp\": \"2023-11-03T11:00:00Z\", \"details\": {\"item\": \"e-book\", \"amount\": 9.99}}\n  ]\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row that lists flat field names corresponding to the JSON keys such as userId, username, fullName, age, email, phone, language, notifications, and themes.  \n• The nested JSON object under \"profile\" must be flattened so that values for username, fullName, age, and contact details (email and phone) appear as individual CSV columns.  \n• The JSON array \"subscriptions\" must be converted such that each subscription object becomes its own CSV row, with columns for userId, service (labeled clearly, e.g., subscription_service), status (e.g., subscription_status), and the variable field which may be frequency or expires.  \n• The JSON array \"activityLog\" must be converted so that each activity object is represented as a separate CSV row, with columns for userId, type (e.g., activity_type), timestamp (e.g., activity_timestamp), and, when present, additional details such as item and amount.  \n• The CSV field for the JSON key \"themes\" (which is originally an array) must represent its values as a single string containing a comma-separated list, ensuring all values are preserved in one cell.  \n• All Boolean values (for example, the notifications field) should be represented in the CSV as text values \"true\" or \"false\".  \n• Every row in the CSV must reflect the connected data from the original JSON (for example, each subscription or activity log row should include the corresponding userId).",
            "task_id": "050221",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050221_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userId\": 7890,\n  \"profile\": {\n    \"username\": \"jdoe\",\n    \"fullName\": \"John Doe\",\n    \"age\": 29,\n    \"contact\": {\n      \"email\": \"jdoe@example.com\",\n      \"phone\": \"555-1234\"\n    }\n  },\n  \"preferences\": {\n    \"language\": \"English\",\n    \"notifications\": true,\n    \"themes\": [\"dark\", \"minimal\"]\n  },\n  \"subscriptions\": [\n    {\n      \"service\": \"newsletter\",\n      \"status\": \"active\",\n      \"frequency\": \"weekly\"\n    },\n    {\n      \"service\": \"premium_support\",\n      \"status\": \"inactive\",\n      \"expires\": \"2024-06-30\"\n    }\n  ],\n  \"activityLog\": [\n    {\"type\": \"login\", \"timestamp\": \"2023-11-01T09:30:00Z\"},\n    {\"type\": \"update_profile\", \"timestamp\": \"2023-11-02T14:15:00Z\"},\n    {\"type\": \"purchase\", \"timestamp\": \"2023-11-03T11:00:00Z\", \"details\": {\"item\": \"e-book\", \"amount\": 9.99}}\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050221_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"users\": [\n    {\n      \"id\": 1,\n      \"name\": \"Alice\",\n      \"role\": \"admin\",\n      \"active\": true,\n      \"preferences\": {\n        \"theme\": \"dark\",\n        \"notifications\": true\n      }\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Bob\",\n      \"role\": \"user\",\n      \"active\": false,\n      \"preferences\": {\n        \"theme\": \"light\",\n        \"notifications\": false\n      }\n    }\n  ],\n  \"settings\": {\n    \"appVersion\": \"1.3.5\",\n    \"maintenanceMode\": false,\n    \"allowedOrigins\": [\n      \"http://localhost\",\n      \"http://example.com\"\n    ]\n  },\n  \"logs\": [\n    {\n      \"timestamp\": \"2023-10-10T14:48:00Z\",\n      \"event\": \"login\",\n      \"userId\": 1\n    },\n    {\n      \"timestamp\": \"2023-10-10T15:00:00Z\",\n      \"event\": \"logout\",\n      \"userId\": 2\n    }\n  ],\n  \"metadata\": {\n    \"createdBy\": \"system\",\n    \"creationDate\": \"2023-10-10\",\n    \"version\": 2\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row for each dataset that is derived from a JSON array or group of related fields.  \n• For the \"users\" data, the CSV must contain columns for id, name, role, active, and two additional columns for the nested \"preferences\" values (e.g., preferences_theme and preferences_notifications).  \n• Each row representing a user must map its JSON values to the corresponding header columns exactly, with nested object values flattened into separate columns.  \n• For the \"logs\" data, the CSV must contain columns for timestamp, event, and userId, with each log entry represented as a separate row matching these headers.  \n• The conversion must preserve data types: Boolean values should appear as \"true\" or \"false\"; numerical and string values shall remain unchanged.  \n• For non-array objects (such as the \"settings\" and \"metadata\" keys), a separate CSV output (or clearly defined CSV section) must be generated with their keys as column headers and their values provided in a row.  \n• In the \"settings\" section, if an element is an array (like \"allowedOrigins\"), its elements must be combined into a single string (for example, comma-separated) in the corresponding CSV field.  \n• The conversion must ensure that all fields from the original JSON are included, and nested object structures are flattened using a consistent naming convention for the columns.",
            "task_id": "050222",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][id]",
                "rows[0][name]",
                "rows[0][role]",
                "rows[0][active]",
                "rows[0][preferences_theme]",
                "rows[0][preferences_notifications]",
                "rows[0][timestamp]",
                "rows[0][event]",
                "rows[0][userId]",
                "rows[0][allowedOrigins]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050222_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"users\": [\n    {\n      \"id\": 1,\n      \"name\": \"Alice\",\n      \"role\": \"admin\",\n      \"active\": true,\n      \"preferences\": {\n        \"theme\": \"dark\",\n        \"notifications\": true\n      }\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Bob\",\n      \"role\": \"user\",\n      \"active\": false,\n      \"preferences\": {\n        \"theme\": \"light\",\n        \"notifications\": false\n      }\n    }\n  ],\n  \"settings\": {\n    \"appVersion\": \"1.3.5\",\n    \"maintenanceMode\": false,\n    \"allowedOrigins\": [\n      \"http://localhost\",\n      \"http://example.com\"\n    ]\n  },\n  \"logs\": [\n    {\n      \"timestamp\": \"2023-10-10T14:48:00Z\",\n      \"event\": \"login\",\n      \"userId\": 1\n    },\n    {\n      \"timestamp\": \"2023-10-10T15:00:00Z\",\n      \"event\": \"logout\",\n      \"userId\": 2\n    }\n  ],\n  \"metadata\": {\n    \"createdBy\": \"system\",\n    \"creationDate\": \"2023-10-10\",\n    \"version\": 2\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050222_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][id]",
                                "rows[0][name]",
                                "rows[0][role]",
                                "rows[0][active]",
                                "rows[0][preferences_theme]",
                                "rows[0][preferences_notifications]",
                                "rows[0][timestamp]",
                                "rows[0][event]",
                                "rows[0][userId]",
                                "rows[0][allowedOrigins]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"system\": {\n    \"name\": \"Library Management System\",\n    \"version\": \"1.2.3\",\n    \"releaseDate\": \"2023-09-01\"\n  },\n  \"libraries\": [\n    {\n      \"libraryId\": \"LB001\",\n      \"name\": \"Central Library\",\n      \"address\": {\n        \"street\": \"123 Main St\",\n        \"city\": \"Metropolis\",\n        \"postalCode\": \"123456\"\n      },\n      \"books\": [\n        {\n          \"bookId\": \"B101\",\n          \"title\": \"1984\",\n          \"author\": \"George Orwell\",\n          \"publicationYear\": 1949\n        },\n        {\n          \"bookId\": \"B102\",\n          \"title\": \"Brave New World\",\n          \"author\": \"Aldous Huxley\",\n          \"publicationYear\": 1932\n        }\n      ]\n    },\n    {\n      \"libraryId\": \"LB002\",\n      \"name\": \"Community Library\",\n      \"address\": {\n        \"street\": \"456 Elm St\",\n        \"city\": \"Smallville\",\n        \"postalCode\": \"654321\"\n      },\n      \"books\": [\n        {\n          \"bookId\": \"B103\",\n          \"title\": \"The Great Gatsby\",\n          \"author\": \"F. Scott Fitzgerald\",\n          \"publicationYear\": 1925\n        }\n      ]\n    }\n  ],\n  \"users\": [\n    {\n      \"userId\": \"U001\",\n      \"name\": \"Alice\",\n      \"borrowedBooks\": [\"B101\"]\n    },\n    {\n      \"userId\": \"U002\",\n      \"name\": \"Bob\",\n      \"borrowedBooks\": [\"B102\", \"B103\"]\n    }\n  ],\n  \"loans\": {\n    \"currentLoans\": 2,\n    \"loanHistory\": 35,\n    \"overdueLoans\": 1\n  },\n  \"settings\": {\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false\n    },\n    \"maxBorrowLimit\": 5\n  }\n}\n</code>",
            "feature_requirements": "• The CSV must include a header row indicating the names of the columns derived from the JSON keys.\n• There must be rows representing the system configuration with columns for system name, version, and release date.\n• The output must include rows for each library, with columns for libraryId, library name, and flattened address details (street, city, and postalCode).\n• Each book within a library must be represented in its own row, containing the bookId, title, author, publicationYear, and an identifier (such as libraryId) to link it back to its library.\n• The CSV must include rows for users, with columns for userId, name, and borrowedBooks; the borrowedBooks data should be flattened into a single cell with a clearly delimited list.\n• There must be a row (or rows) that capture the loans information with separate columns for currentLoans, loanHistory, and overdueLoans.\n• The CSV output must include settings data, with columns for email notifications, SMS notifications, and maxBorrowLimit.\n• All nested JSON elements must be flattened such that each CSV cell contains a single, verifiable value or a clearly delimited list if representing an array.",
            "task_id": "050223",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][systemName]",
                "rows[*][version]",
                "rows[*][releaseDate]",
                "rows[*][libraryId]",
                "rows[*][libraryName]",
                "rows[*][street]",
                "rows[*][city]",
                "rows[*][postalCode]",
                "rows[*][bookId]",
                "rows[*][title]",
                "rows[*][author]",
                "rows[*][publicationYear]",
                "rows[*][userId]",
                "rows[*][name]",
                "rows[*][borrowedBooks]",
                "rows[*][currentLoans]",
                "rows[*][loanHistory]",
                "rows[*][overdueLoans]",
                "rows[*][emailNotifications]",
                "rows[*][smsNotifications]",
                "rows[*][maxBorrowLimit]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050223_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"system\": {\n    \"name\": \"Library Management System\",\n    \"version\": \"1.2.3\",\n    \"releaseDate\": \"2023-09-01\"\n  },\n  \"libraries\": [\n    {\n      \"libraryId\": \"LB001\",\n      \"name\": \"Central Library\",\n      \"address\": {\n        \"street\": \"123 Main St\",\n        \"city\": \"Metropolis\",\n        \"postalCode\": \"123456\"\n      },\n      \"books\": [\n        {\n          \"bookId\": \"B101\",\n          \"title\": \"1984\",\n          \"author\": \"George Orwell\",\n          \"publicationYear\": 1949\n        },\n        {\n          \"bookId\": \"B102\",\n          \"title\": \"Brave New World\",\n          \"author\": \"Aldous Huxley\",\n          \"publicationYear\": 1932\n        }\n      ]\n    },\n    {\n      \"libraryId\": \"LB002\",\n      \"name\": \"Community Library\",\n      \"address\": {\n        \"street\": \"456 Elm St\",\n        \"city\": \"Smallville\",\n        \"postalCode\": \"654321\"\n      },\n      \"books\": [\n        {\n          \"bookId\": \"B103\",\n          \"title\": \"The Great Gatsby\",\n          \"author\": \"F. Scott Fitzgerald\",\n          \"publicationYear\": 1925\n        }\n      ]\n    }\n  ],\n  \"users\": [\n    {\n      \"userId\": \"U001\",\n      \"name\": \"Alice\",\n      \"borrowedBooks\": [\"B101\"]\n    },\n    {\n      \"userId\": \"U002\",\n      \"name\": \"Bob\",\n      \"borrowedBooks\": [\"B102\", \"B103\"]\n    }\n  ],\n  \"loans\": {\n    \"currentLoans\": 2,\n    \"loanHistory\": 35,\n    \"overdueLoans\": 1\n  },\n  \"settings\": {\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false\n    },\n    \"maxBorrowLimit\": 5\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050223_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][systemName]",
                                "rows[*][version]",
                                "rows[*][releaseDate]",
                                "rows[*][libraryId]",
                                "rows[*][libraryName]",
                                "rows[*][street]",
                                "rows[*][city]",
                                "rows[*][postalCode]",
                                "rows[*][bookId]",
                                "rows[*][title]",
                                "rows[*][author]",
                                "rows[*][publicationYear]",
                                "rows[*][userId]",
                                "rows[*][name]",
                                "rows[*][borrowedBooks]",
                                "rows[*][currentLoans]",
                                "rows[*][loanHistory]",
                                "rows[*][overdueLoans]",
                                "rows[*][emailNotifications]",
                                "rows[*][smsNotifications]",
                                "rows[*][maxBorrowLimit]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"organization\": {\n    \"name\": \"Acme Corporation\",\n    \"location\": \"Downtown\",\n    \"yearEstablished\": 1990\n  },\n  \"departments\": [\n    {\n      \"departmentId\": 101,\n      \"name\": \"Engineering\",\n      \"employeeCount\": 42\n    },\n    {\n      \"departmentId\": 102,\n      \"name\": \"Marketing\",\n      \"employeeCount\": 15\n    },\n    {\n      \"departmentId\": 103,\n      \"name\": \"Sales\",\n      \"employeeCount\": 20\n    }\n  ],\n  \"projects\": [\n    {\n      \"projectId\": \"P001\",\n      \"name\": \"Project Alpha\",\n      \"members\": [\"Alice\", \"Bob\", \"Charlie\"]\n    },\n    {\n      \"projectId\": \"P002\",\n      \"name\": \"Project Beta\",\n      \"members\": [\"David\", \"Eva\", \"Frank\"]\n    }\n  ],\n  \"settings\": {\n    \"remoteWork\": true,\n    \"officeHours\": {\n      \"start\": \"09:00\",\n      \"end\": \"17:00\"\n    },\n    \"holidayPolicy\": [\"New Year's Day\", \"Christmas Day\", \"Labor Day\"]\n  },\n  \"metadata\": {\n    \"version\": \"1.0\",\n    \"lastUpdated\": \"2023-10-05\"\n  }\n}\n</code>",
            "feature_requirements": "• The output must include a header row for each distinct record type (e.g., organization, departments, projects, settings, metadata) that clearly names the fields.  \n• There must be a CSV row capturing the organization details with separate fields for the organization's name, location, and yearEstablished.  \n• The departments data must be represented as multiple rows, each with columns for departmentId, name, and employeeCount.  \n• The projects must be represented as multiple rows with columns for projectId and name, and the members field should combine the list of names into a single field (using a consistent delimiter).  \n• The settings must be output with separate fields for remoteWork (as a boolean value), officeHours_start, officeHours_end (flattening the officeHours object), and holidayPolicy (with the list joined into one field using a consistent delimiter).  \n• The metadata must be output in a row with fields for version and lastUpdated, ensuring these two key pieces of data are captured.",
            "task_id": "050224",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050224_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"organization\": {\n    \"name\": \"Acme Corporation\",\n    \"location\": \"Downtown\",\n    \"yearEstablished\": 1990\n  },\n  \"departments\": [\n    {\n      \"departmentId\": 101,\n      \"name\": \"Engineering\",\n      \"employeeCount\": 42\n    },\n    {\n      \"departmentId\": 102,\n      \"name\": \"Marketing\",\n      \"employeeCount\": 15\n    },\n    {\n      \"departmentId\": 103,\n      \"name\": \"Sales\",\n      \"employeeCount\": 20\n    }\n  ],\n  \"projects\": [\n    {\n      \"projectId\": \"P001\",\n      \"name\": \"Project Alpha\",\n      \"members\": [\"Alice\", \"Bob\", \"Charlie\"]\n    },\n    {\n      \"projectId\": \"P002\",\n      \"name\": \"Project Beta\",\n      \"members\": [\"David\", \"Eva\", \"Frank\"]\n    }\n  ],\n  \"settings\": {\n    \"remoteWork\": true,\n    \"officeHours\": {\n      \"start\": \"09:00\",\n      \"end\": \"17:00\"\n    },\n    \"holidayPolicy\": [\"New Year's Day\", \"Christmas Day\", \"Labor Day\"]\n  },\n  \"metadata\": {\n    \"version\": \"1.0\",\n    \"lastUpdated\": \"2023-10-05\"\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050224_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"user\": {\n    \"id\": 1024,\n    \"name\": \"Alice Johnson\",\n    \"roles\": [\"editor\", \"moderator\"],\n    \"contact\": {\n      \"email\": \"alice.johnson@example.com\",\n      \"phone\": \"555-0168\"\n    }\n  },\n  \"preferences\": {\n    \"notifications\": true,\n    \"theme\": \"dark\",\n    \"language\": \"en-US\"\n  },\n  \"activityLog\": [\n    {\n      \"timestamp\": \"2023-10-12T08:45:00Z\",\n      \"action\": \"login\",\n      \"details\": \"User logged in successfully\"\n    },\n    {\n      \"timestamp\": \"2023-10-12T09:00:00Z\",\n      \"action\": \"update_profile\",\n      \"details\": \"Updated profile picture and bio\"\n    }\n  ],\n  \"settings\": {\n    \"privacy\": {\n      \"profileVisible\": true,\n      \"searchable\": false\n    },\n    \"dashboard\": {\n      \"layout\": \"compact\",\n      \"widgets\": [\"news\", \"stats\", \"alerts\"]\n    }\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row that clearly labels each field extracted from the JSON, such as user.id, user.name, user.roles, user.contact.email, and user.contact.phone.  \n• The CSV must include additional columns for user preferences, with headers for preferences.notifications, preferences.theme, and preferences.language.  \n• The CSV representation of the activityLog must have its own set of columns, with headers like timestamp, action, and details, and each log entry should appear as a separate row.  \n• All nested objects (for example, settings.privacy and settings.dashboard) must be flattened so that their keys become uniquely identifiable headers, such as settings.privacy.profileVisible, settings.privacy.searchable, settings.dashboard.layout, and settings.dashboard.widgets.  \n• Array values (for instance, user.roles and settings.dashboard.widgets) must be converted into a single CSV cell per field by joining the array elements using a consistent delimiter.  \n• Boolean values like preferences.notifications and settings.privacy.profileVisible must be represented as straightforward text values (true/false).  \n• The CSV output must be structured so that each record (whether a single consolidated record or multiple records for repeating groups) correctly aligns with its corresponding header columns, ensuring data consistency and verifiability.",
            "task_id": "050225",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][user.id]",
                "rows[*][user.name]",
                "rows[*][user.roles]",
                "rows[*][user][contact][email]",
                "rows[*][user][contact][phone]",
                "rows[*][preferences][notifications]",
                "rows[*][preferences][theme]",
                "rows[*][preferences][language]",
                "rows[*][timestamp]",
                "rows[*][action]",
                "rows[*][details]",
                "rows[*][settings][privacy][profileVisible]",
                "rows[*][settings][privacy][searchable]",
                "rows[*][settings][dashboard][layout]",
                "rows[*][settings][dashboard][widgets]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050225_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"user\": {\n    \"id\": 1024,\n    \"name\": \"Alice Johnson\",\n    \"roles\": [\"editor\", \"moderator\"],\n    \"contact\": {\n      \"email\": \"alice.johnson@example.com\",\n      \"phone\": \"555-0168\"\n    }\n  },\n  \"preferences\": {\n    \"notifications\": true,\n    \"theme\": \"dark\",\n    \"language\": \"en-US\"\n  },\n  \"activityLog\": [\n    {\n      \"timestamp\": \"2023-10-12T08:45:00Z\",\n      \"action\": \"login\",\n      \"details\": \"User logged in successfully\"\n    },\n    {\n      \"timestamp\": \"2023-10-12T09:00:00Z\",\n      \"action\": \"update_profile\",\n      \"details\": \"Updated profile picture and bio\"\n    }\n  ],\n  \"settings\": {\n    \"privacy\": {\n      \"profileVisible\": true,\n      \"searchable\": false\n    },\n    \"dashboard\": {\n      \"layout\": \"compact\",\n      \"widgets\": [\"news\", \"stats\", \"alerts\"]\n    }\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050225_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][user.id]",
                                "rows[*][user.name]",
                                "rows[*][user.roles]",
                                "rows[*][user][contact][email]",
                                "rows[*][user][contact][phone]",
                                "rows[*][preferences][notifications]",
                                "rows[*][preferences][theme]",
                                "rows[*][preferences][language]",
                                "rows[*][timestamp]",
                                "rows[*][action]",
                                "rows[*][details]",
                                "rows[*][settings][privacy][profileVisible]",
                                "rows[*][settings][privacy][searchable]",
                                "rows[*][settings][dashboard][layout]",
                                "rows[*][settings][dashboard][widgets]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"application\": \"DataConverter\",\n  \"version\": \"1.0.2\",\n  \"metadata\": {\n    \"created\": \"2023-10-01T12:00:00Z\",\n    \"modified\": \"2023-10-15T08:30:00Z\",\n    \"contributors\": [\n      \"Alice\",\n      \"Bob\",\n      \"Charlie\"\n    ]\n  },\n  \"configurations\": {\n    \"enableFeatureX\": true,\n    \"maxItems\": 100,\n    \"thresholds\": [0.2, 0.5, 0.8]\n  },\n  \"data\": {\n    \"records\": [\n      {\n        \"id\": 1,\n        \"name\": \"Record One\",\n        \"status\": \"active\"\n      },\n      {\n        \"id\": 2,\n        \"name\": \"Record Two\",\n        \"status\": \"inactive\"\n      },\n      {\n        \"id\": 3,\n        \"name\": \"Record Three\",\n        \"status\": \"pending\"\n      }\n    ]\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row that clearly labels each column.  \n• The header row must have columns corresponding to the keys found within each record: id, name, and status.  \n• The CSV output must contain one row per record from the JSON “data.records” array.  \n• The values for id, name, and status in each CSV row must directly reflect the values from the JSON record objects.  \n• The order of the records in the CSV must match the order provided in the JSON “data.records” array.  \n• The CSV fields must be separated using commas.  \n• Only the information relevant to the “records” array (i.e. id, name, and status) is required in the CSV output.",
            "task_id": "050226",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][id]",
                "rows[0][name]",
                "rows[0][status]",
                "rows[*][id]",
                "rows[*][name]",
                "rows[*][status]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050226_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"application\": \"DataConverter\",\n  \"version\": \"1.0.2\",\n  \"metadata\": {\n    \"created\": \"2023-10-01T12:00:00Z\",\n    \"modified\": \"2023-10-15T08:30:00Z\",\n    \"contributors\": [\n      \"Alice\",\n      \"Bob\",\n      \"Charlie\"\n    ]\n  },\n  \"configurations\": {\n    \"enableFeatureX\": true,\n    \"maxItems\": 100,\n    \"thresholds\": [0.2, 0.5, 0.8]\n  },\n  \"data\": {\n    \"records\": [\n      {\n        \"id\": 1,\n        \"name\": \"Record One\",\n        \"status\": \"active\"\n      },\n      {\n        \"id\": 2,\n        \"name\": \"Record Two\",\n        \"status\": \"inactive\"\n      },\n      {\n        \"id\": 3,\n        \"name\": \"Record Three\",\n        \"status\": \"pending\"\n      }\n    ]\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050226_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][id]",
                                "rows[0][name]",
                                "rows[0][status]",
                                "rows[*][id]",
                                "rows[*][name]",
                                "rows[*][status]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"library\": {\n    \"name\": \"Central City Library\",\n    \"location\": \"Downtown\",\n    \"founded\": 1892,\n    \"sections\": [\n      \"Fiction\",\n      \"Non-fiction\",\n      \"Science\",\n      \"History\",\n      \"Children\"\n    ]\n  },\n  \"books\": [\n    {\n      \"title\": \"The Great Adventure\",\n      \"author\": \"John Smith\",\n      \"genre\": \"Fiction\",\n      \"available\": true,\n      \"publicationYear\": 2001\n    },\n    {\n      \"title\": \"Science and Future\",\n      \"author\": \"Diane Ray\",\n      \"genre\": \"Science\",\n      \"available\": false,\n      \"publicationYear\": 2010\n    },\n    {\n      \"title\": \"Historical Perspectives\",\n      \"author\": \"Maria Garcia\",\n      \"genre\": \"History\",\n      \"available\": true,\n      \"publicationYear\": 1995\n    }\n  ],\n  \"members\": [\n    {\n      \"id\": \"M001\",\n      \"name\": \"Alice Johnson\",\n      \"membershipType\": \"Standard\",\n      \"joinDate\": \"2018-03-15\"\n    },\n    {\n      \"id\": \"M002\",\n      \"name\": \"Bob Lee\",\n      \"membershipType\": \"Premium\",\n      \"joinDate\": \"2020-07-23\"\n    },\n    {\n      \"id\": \"M003\",\n      \"name\": \"Charlie Kim\",\n      \"membershipType\": \"Standard\",\n      \"joinDate\": \"2021-11-08\"\n    }\n  ]\n}\n</code>",
            "feature_requirements": "• The CSV output must include separate sections (tables) for the library details, books, and members, each with its own header row.  \n• The library section must contain fields for the library’s name, location, founded year, and sections (with the sections list represented as a single, delimited string).  \n• The books section must include a header row with the columns: title, author, genre, available, and publicationYear, followed by one row per book entry.  \n• The members section must include a header row with the columns: id, name, membershipType, and joinDate, followed by one row per member entry.  \n• The CSV output’s rows must accurately reflect the values from the JSON input, ensuring that data types (e.g., boolean, numeric, and textual values) are clearly represented.",
            "task_id": "050227",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "library.rows[0][name]",
                "library.rows[0][location]",
                "library.rows[0][foundedYear]",
                "library.rows[0][sections]",
                "books.rows[0][title]",
                "books.rows[0][author]",
                "books.rows[0][genre]",
                "books.rows[0][available]",
                "books.rows[0][publicationYear]",
                "members.rows[0][id]",
                "members.rows[0][name]",
                "members.rows[0][membershipType]",
                "members.rows[0][joinDate]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050227_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"library\": {\n    \"name\": \"Central City Library\",\n    \"location\": \"Downtown\",\n    \"founded\": 1892,\n    \"sections\": [\n      \"Fiction\",\n      \"Non-fiction\",\n      \"Science\",\n      \"History\",\n      \"Children\"\n    ]\n  },\n  \"books\": [\n    {\n      \"title\": \"The Great Adventure\",\n      \"author\": \"John Smith\",\n      \"genre\": \"Fiction\",\n      \"available\": true,\n      \"publicationYear\": 2001\n    },\n    {\n      \"title\": \"Science and Future\",\n      \"author\": \"Diane Ray\",\n      \"genre\": \"Science\",\n      \"available\": false,\n      \"publicationYear\": 2010\n    },\n    {\n      \"title\": \"Historical Perspectives\",\n      \"author\": \"Maria Garcia\",\n      \"genre\": \"History\",\n      \"available\": true,\n      \"publicationYear\": 1995\n    }\n  ],\n  \"members\": [\n    {\n      \"id\": \"M001\",\n      \"name\": \"Alice Johnson\",\n      \"membershipType\": \"Standard\",\n      \"joinDate\": \"2018-03-15\"\n    },\n    {\n      \"id\": \"M002\",\n      \"name\": \"Bob Lee\",\n      \"membershipType\": \"Premium\",\n      \"joinDate\": \"2020-07-23\"\n    },\n    {\n      \"id\": \"M003\",\n      \"name\": \"Charlie Kim\",\n      \"membershipType\": \"Standard\",\n      \"joinDate\": \"2021-11-08\"\n    }\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050227_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "library.rows[0][name]",
                                "library.rows[0][location]",
                                "library.rows[0][foundedYear]",
                                "library.rows[0][sections]",
                                "books.rows[0][title]",
                                "books.rows[0][author]",
                                "books.rows[0][genre]",
                                "books.rows[0][available]",
                                "books.rows[0][publicationYear]",
                                "members.rows[0][id]",
                                "members.rows[0][name]",
                                "members.rows[0][membershipType]",
                                "members.rows[0][joinDate]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    }
]