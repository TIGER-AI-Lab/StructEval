[
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot that displays altitude readings against corresponding air pressure values.\n\nFeature Requirements:\n- Plot exactly 7 data points representing measurement intervals evenly spaced on the x-axis.\n- Label the x-axis as \"Altitude (m)\" and the y-axis as \"Pressure (hPa)\".\n- Display data points as red circle markers.\n- Include a title at the top with the text \"Pressure vs Altitude\".\n- Set the x-axis range from 1000 to 5000 and the y-axis range from 900 to 1050.\n- Overlay grid lines on the x-axis to enhance readability.\n- Add a legend in the lower right corner with the label \"Measurement Data\".",
            "task_id": "000810",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many data points are plotted on the scatter plot?",
                "What marker style and color are used for the data points?",
                "What is the label of the x-axis?",
                "What is the label of the y-axis?",
                "What is the title displayed at the top of the plot?",
                "What are the configured ranges for the x-axis and y-axis?",
                "Where is the legend located and what label does it display?"
            ],
            "VQA_answers": [
                "7",
                "Red circle markers",
                "Altitude (m)",
                "Pressure (hPa)",
                "Pressure vs Altitude",
                "x-axis: 1000 to 5000, y-axis: 900 to 1050",
                "Lower right corner, 'Measurement Data'"
            ],
            "raw_output_metric": [
                "Altitude (m)",
                "Pressure (hPa)",
                "Pressure vs Altitude",
                "Measurement Data",
                "1000",
                "5000",
                "900",
                "1050",
                "7",
                "red",
                "o",
                "lower right",
                "grid",
                "scatter"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000810_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot that displays altitude readings against corresponding air pressure values.\n\nFeature Requirements:\n- Plot exactly 7 data points representing measurement intervals evenly spaced on the x-axis.\n- Label the x-axis as \"Altitude (m)\" and the y-axis as \"Pressure (hPa)\".\n- Display data points as red circle markers.\n- Include a title at the top with the text \"Pressure vs Altitude\".\n- Set the x-axis range from 1000 to 5000 and the y-axis range from 900 to 1050.\n- Overlay grid lines on the x-axis to enhance readability.\n- Add a legend in the lower right corner with the label \"Measurement Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000810_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Altitude (m)",
                                "Pressure (hPa)",
                                "Pressure vs Altitude",
                                "Measurement Data",
                                "1000",
                                "5000",
                                "900",
                                "1050",
                                "7",
                                "red",
                                "o",
                                "lower right",
                                "grid",
                                "scatter"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000810_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000810_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many data points are plotted on the scatter plot?",
                                "What marker style and color are used for the data points?",
                                "What is the label of the x-axis?",
                                "What is the label of the y-axis?",
                                "What is the title displayed at the top of the plot?",
                                "What are the configured ranges for the x-axis and y-axis?",
                                "Where is the legend located and what label does it display?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000810_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "7",
                                "Red circle markers",
                                "Altitude (m)",
                                "Pressure (hPa)",
                                "Pressure vs Altitude",
                                "x-axis: 1000 to 5000, y-axis: 900 to 1050",
                                "Lower right corner, 'Measurement Data'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart visualizing weekly sales performance data.\n\nFeature Requirements:\n- Create a bar chart with the x-axis representing days of the week: \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\".\n- Use bars colored in green with a solid dark green edge for each day's sales.\n- Include a chart title \"Weekly Sales Report\" positioned at the top of the plot.\n- Label the y-axis as \"Units Sold\" and set the numeric range from 0 to 100.\n- Display grid lines only along the y-axis to help gauge the bar heights.\n- Annotate each bar with its exact sales value placed just above the bar, using a font size of 10.\n- Position a legend in the lower right corner with the label \"Sales Figures\" indicating the data representation.\n- Ensure the chart displays exactly 7 bars corresponding to the full week.",
            "task_id": "000811",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "Which days of the week are represented on the x-axis?",
                "What is the title displayed at the top of the bar chart?",
                "What is the color of the bars and their edges?",
                "How many bars are present in the chart?",
                "What label is given to the y-axis?",
                "What is the numeric range set for the y-axis?",
                "Which axis shows grid lines?",
                "What additional information is shown above each bar?",
                "Where is the legend located and what label does it show?"
            ],
            "VQA_answers": [
                "Mon, Tue, Wed, Thu, Fri, Sat, Sun",
                "Weekly Sales Report",
                "Green bars with a solid dark green edge",
                "7",
                "Units Sold",
                "0 to 100",
                "Only the y-axis",
                "The exact sales value",
                "Lower right corner with the label 'Sales Figures'"
            ],
            "raw_output_metric": [
                "Mon",
                "Tue",
                "Wed",
                "Thu",
                "Fri",
                "Sat",
                "Sun",
                "Weekly Sales Report",
                "Units Sold",
                "Sales Figures",
                "green",
                "darkgreen",
                "0",
                "100",
                "10"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000811_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart visualizing weekly sales performance data.\n\nFeature Requirements:\n- Create a bar chart with the x-axis representing days of the week: \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\".\n- Use bars colored in green with a solid dark green edge for each day's sales.\n- Include a chart title \"Weekly Sales Report\" positioned at the top of the plot.\n- Label the y-axis as \"Units Sold\" and set the numeric range from 0 to 100.\n- Display grid lines only along the y-axis to help gauge the bar heights.\n- Annotate each bar with its exact sales value placed just above the bar, using a font size of 10.\n- Position a legend in the lower right corner with the label \"Sales Figures\" indicating the data representation.\n- Ensure the chart displays exactly 7 bars corresponding to the full week."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000811_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Mon",
                                "Tue",
                                "Wed",
                                "Thu",
                                "Fri",
                                "Sat",
                                "Sun",
                                "Weekly Sales Report",
                                "Units Sold",
                                "Sales Figures",
                                "green",
                                "darkgreen",
                                "0",
                                "100",
                                "10"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000811_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000811_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Which days of the week are represented on the x-axis?",
                                "What is the title displayed at the top of the bar chart?",
                                "What is the color of the bars and their edges?",
                                "How many bars are present in the chart?",
                                "What label is given to the y-axis?",
                                "What is the numeric range set for the y-axis?",
                                "Which axis shows grid lines?",
                                "What additional information is shown above each bar?",
                                "Where is the legend located and what label does it show?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000811_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Mon, Tue, Wed, Thu, Fri, Sat, Sun",
                                "Weekly Sales Report",
                                "Green bars with a solid dark green edge",
                                "7",
                                "Units Sold",
                                "0 to 100",
                                "Only the y-axis",
                                "The exact sales value",
                                "Lower right corner with the label 'Sales Figures'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined arrays representing wind speed and humidity measurements.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Wind Speed (km/h)\" and the y-axis labeled as \"Humidity (%)\".\n- Include a title for the plot with the text \"Wind Speed vs Humidity\".\n- Plot exactly 12 data points where each x-value corresponds to wind speed and each y-value to humidity.\n- Use red circular markers with a size of 100 for each plotted data point.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the bottom right corner with the label \"Sensor Data\".\n- Set the x-axis range from 0 to 50 and the y-axis range from 20 to 100.\n- Draw a dotted horizontal line at y = 50 to indicate the median humidity level.",
            "task_id": "000812",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the x-axis label of the plot?",
                "What is the y-axis label of the plot?",
                "What is the title displayed at the top of the plot?",
                "How many data points are plotted in the scatter plot?",
                "What is the color and shape of the markers used?",
                "What is the size of each plotted marker?",
                "Are grid lines visible on the plot?",
                "Where is the legend located and what label does it display?",
                "What are the axis ranges for the x-axis and y-axis?",
                "What horizontal line is drawn to indicate the median humidity level?"
            ],
            "VQA_answers": [
                "Wind Speed (km/h)",
                "Humidity (%)",
                "Wind Speed vs Humidity",
                "12",
                "Red circular markers",
                "100",
                "Yes",
                "Bottom right, Sensor Data",
                "x-axis: 0 to 50, y-axis: 20 to 100",
                "A dotted horizontal line at y = 50"
            ],
            "raw_output_metric": [
                "Wind Speed (km/h)",
                "Humidity (%)",
                "Wind Speed vs Humidity",
                "Sensor Data",
                "red",
                "o",
                "100",
                "12",
                "plt.scatter",
                "plt.xlim(0, 50)",
                "plt.ylim(20, 100)",
                "plt.axhline(y=50, linestyle=':')",
                "plt.grid"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000812_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined arrays representing wind speed and humidity measurements.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Wind Speed (km/h)\" and the y-axis labeled as \"Humidity (%)\".\n- Include a title for the plot with the text \"Wind Speed vs Humidity\".\n- Plot exactly 12 data points where each x-value corresponds to wind speed and each y-value to humidity.\n- Use red circular markers with a size of 100 for each plotted data point.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the bottom right corner with the label \"Sensor Data\".\n- Set the x-axis range from 0 to 50 and the y-axis range from 20 to 100.\n- Draw a dotted horizontal line at y = 50 to indicate the median humidity level."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000812_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Wind Speed (km/h)",
                                "Humidity (%)",
                                "Wind Speed vs Humidity",
                                "Sensor Data",
                                "red",
                                "o",
                                "100",
                                "12",
                                "plt.scatter",
                                "plt.xlim(0, 50)",
                                "plt.ylim(20, 100)",
                                "plt.axhline(y=50, linestyle=':')",
                                "plt.grid"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000812_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000812_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the x-axis label of the plot?",
                                "What is the y-axis label of the plot?",
                                "What is the title displayed at the top of the plot?",
                                "How many data points are plotted in the scatter plot?",
                                "What is the color and shape of the markers used?",
                                "What is the size of each plotted marker?",
                                "Are grid lines visible on the plot?",
                                "Where is the legend located and what label does it display?",
                                "What are the axis ranges for the x-axis and y-axis?",
                                "What horizontal line is drawn to indicate the median humidity level?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000812_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Wind Speed (km/h)",
                                "Humidity (%)",
                                "Wind Speed vs Humidity",
                                "12",
                                "Red circular markers",
                                "100",
                                "Yes",
                                "Bottom right, Sensor Data",
                                "x-axis: 0 to 50, y-axis: 20 to 100",
                                "A dotted horizontal line at y = 50"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using predefined data arrays representing product sales for four quarters.\n\nFeature Requirements:\n- Create a bar chart with exactly 4 bars, each corresponding to a quarter labeled \"Q1\", \"Q2\", \"Q3\", and \"Q4\".\n- Label the x-axis as \"Quarter\" and the y-axis as \"Sales (in Thousands)\".\n- Use distinct colors for each bar chosen from a set of four colors: red, green, blue, and orange.\n- Set the chart title as \"Quarterly Sales Analysis\" centered at the top.\n- Display the exact numerical sales value above each corresponding bar.\n- Use grid lines along the y-axis to improve readability.\n- Ensure the y-axis range starts at 0 and extends to a value that is at least 10% greater than the maximum sales value.\n- Position a legend that identifies each bar's quarter in the upper right corner.",
            "task_id": "000813",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many bars are shown in the chart?",
                "What are the x-axis labels for the bars?",
                "What labels are used for the x-axis and y-axis?",
                "What is the title of the chart?",
                "Are numerical sales values displayed above each bar?",
                "Are grid lines present in the chart?",
                "What colors are used for the bars?",
                "Where is the legend located?"
            ],
            "VQA_answers": [
                "4",
                "Q1, Q2, Q3, and Q4",
                "x-axis: Quarter, y-axis: Sales (in Thousands)",
                "Quarterly Sales Analysis",
                "Yes, the exact sales value is shown",
                "Yes, along the y-axis",
                "Red, green, blue, and orange",
                "Upper right corner"
            ],
            "raw_output_metric": [
                "Q1",
                "Q2",
                "Q3",
                "Q4",
                "Quarter",
                "Sales (in Thousands)",
                "Quarterly Sales Analysis",
                "red",
                "green",
                "blue",
                "orange",
                "plt.bar",
                "plt.text",
                "plt.grid",
                "plt.legend",
                "upper right"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000813_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using predefined data arrays representing product sales for four quarters.\n\nFeature Requirements:\n- Create a bar chart with exactly 4 bars, each corresponding to a quarter labeled \"Q1\", \"Q2\", \"Q3\", and \"Q4\".\n- Label the x-axis as \"Quarter\" and the y-axis as \"Sales (in Thousands)\".\n- Use distinct colors for each bar chosen from a set of four colors: red, green, blue, and orange.\n- Set the chart title as \"Quarterly Sales Analysis\" centered at the top.\n- Display the exact numerical sales value above each corresponding bar.\n- Use grid lines along the y-axis to improve readability.\n- Ensure the y-axis range starts at 0 and extends to a value that is at least 10% greater than the maximum sales value.\n- Position a legend that identifies each bar's quarter in the upper right corner."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000813_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Q1",
                                "Q2",
                                "Q3",
                                "Q4",
                                "Quarter",
                                "Sales (in Thousands)",
                                "Quarterly Sales Analysis",
                                "red",
                                "green",
                                "blue",
                                "orange",
                                "plt.bar",
                                "plt.text",
                                "plt.grid",
                                "plt.legend",
                                "upper right"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000813_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000813_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many bars are shown in the chart?",
                                "What are the x-axis labels for the bars?",
                                "What labels are used for the x-axis and y-axis?",
                                "What is the title of the chart?",
                                "Are numerical sales values displayed above each bar?",
                                "Are grid lines present in the chart?",
                                "What colors are used for the bars?",
                                "Where is the legend located?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000813_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "4",
                                "Q1, Q2, Q3, and Q4",
                                "x-axis: Quarter, y-axis: Sales (in Thousands)",
                                "Quarterly Sales Analysis",
                                "Yes, the exact sales value is shown",
                                "Yes, along the y-axis",
                                "Red, green, blue, and orange",
                                "Upper right corner"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar plot displaying quarterly sales figures for four distinct regions.\n\nFeature Requirements:\n- The x-axis should contain four categories labeled \"North\", \"South\", \"East\", and \"West\".\n- The y-axis must display sales in dollars ranging from 0 to 500,000.\n- Plot exactly four bars, each corresponding to one of the specified regions.\n- Use a unique color for each bar: blue for \"North\", green for \"South\", red for \"East\", and purple for \"West\".\n- Add a centered title at the top with the text \"Quarterly Sales by Region\".\n- Label the x-axis as \"Region\" and the y-axis as \"Sales ($)\".\n- Draw grid lines along the y-axis to improve readability.\n- Display the exact sales number above each bar as a data label.\n- Ensure the plot has no additional annotations other than the specified elements.",
            "task_id": "000814",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the title displayed at the top of the plot?",
                "Which categories are shown on the x-axis?",
                "What is the range of the y-axis?",
                "What unique colors are used for each bar by region?",
                "What labels are set for the x-axis and y-axis?",
                "Are grid lines present along any axis?",
                "Is the exact sales number displayed above each bar?"
            ],
            "VQA_answers": [
                "Quarterly Sales by Region",
                "North, South, East, West",
                "0 to 500,000",
                "Blue for North, green for South, red for East, and purple for West",
                "x-axis: Region, y-axis: Sales ($)",
                "Yes, along the y-axis",
                "Yes"
            ],
            "raw_output_metric": [
                "North",
                "South",
                "East",
                "West",
                "Quarterly Sales by Region",
                "Region",
                "Sales ($)",
                "blue",
                "green",
                "red",
                "purple",
                "0",
                "500000"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000814_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar plot displaying quarterly sales figures for four distinct regions.\n\nFeature Requirements:\n- The x-axis should contain four categories labeled \"North\", \"South\", \"East\", and \"West\".\n- The y-axis must display sales in dollars ranging from 0 to 500,000.\n- Plot exactly four bars, each corresponding to one of the specified regions.\n- Use a unique color for each bar: blue for \"North\", green for \"South\", red for \"East\", and purple for \"West\".\n- Add a centered title at the top with the text \"Quarterly Sales by Region\".\n- Label the x-axis as \"Region\" and the y-axis as \"Sales ($)\".\n- Draw grid lines along the y-axis to improve readability.\n- Display the exact sales number above each bar as a data label.\n- Ensure the plot has no additional annotations other than the specified elements."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000814_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "North",
                                "South",
                                "East",
                                "West",
                                "Quarterly Sales by Region",
                                "Region",
                                "Sales ($)",
                                "blue",
                                "green",
                                "red",
                                "purple",
                                "0",
                                "500000"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000814_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000814_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the plot?",
                                "Which categories are shown on the x-axis?",
                                "What is the range of the y-axis?",
                                "What unique colors are used for each bar by region?",
                                "What labels are set for the x-axis and y-axis?",
                                "Are grid lines present along any axis?",
                                "Is the exact sales number displayed above each bar?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000814_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Quarterly Sales by Region",
                                "North, South, East, West",
                                "0 to 500,000",
                                "Blue for North, green for South, red for East, and purple for West",
                                "x-axis: Region, y-axis: Sales ($)",
                                "Yes, along the y-axis",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using simulated data representing weekly sales performance across different regions.\n\nFeature Requirements:\n- Create a vertical bar chart with exactly 6 bars, each corresponding to a different region (Region 1 to Region 6).\n- Label the x-axis as \"Regions\" and populate it with the region labels \"R1\", \"R2\", \"R3\", \"R4\", \"R5\", and \"R6\".\n- Label the y-axis as \"Weekly Sales (k units)\" and set the y-axis range from 0 to 100.\n- Use distinct shades of green for each bar, progressing from light green for the lowest sales to dark green for the highest.\n- Place a title at the top of the plot with the text \"Weekly Sales by Region\".\n- Add grid lines exclusively along the y-axis to improve traceability of sales values.\n- Position the numerical sales value at the top of each bar as an annotation.\n- Ensure that the plot includes a legend at the bottom right corner with the label \"Sales Data\".",
            "task_id": "000815",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many bars are displayed in the chart?",
                "What are the labels on the x-axis?",
                "What is the title of the chart?",
                "What is the label and range of the y-axis?",
                "Which axis has grid lines visible?",
                "Are numerical values annotated on the chart?",
                "What color pattern is used for the bars?",
                "Where is the legend located and what is its label?"
            ],
            "VQA_answers": [
                "6",
                "R1, R2, R3, R4, R5, and R6",
                "Weekly Sales by Region",
                "Weekly Sales (k units) with a range from 0 to 100",
                "Y-axis only",
                "Yes, each bar shows its numerical sales value at the top",
                "Distinct shades of green from light to dark",
                "Bottom right; 'Sales Data'"
            ],
            "raw_output_metric": [
                "R1",
                "R2",
                "R3",
                "R4",
                "R5",
                "R6",
                "Regions",
                "Weekly Sales (k units)",
                "Weekly Sales by Region",
                "Sales Data",
                "0",
                "100"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000815_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using simulated data representing weekly sales performance across different regions.\n\nFeature Requirements:\n- Create a vertical bar chart with exactly 6 bars, each corresponding to a different region (Region 1 to Region 6).\n- Label the x-axis as \"Regions\" and populate it with the region labels \"R1\", \"R2\", \"R3\", \"R4\", \"R5\", and \"R6\".\n- Label the y-axis as \"Weekly Sales (k units)\" and set the y-axis range from 0 to 100.\n- Use distinct shades of green for each bar, progressing from light green for the lowest sales to dark green for the highest.\n- Place a title at the top of the plot with the text \"Weekly Sales by Region\".\n- Add grid lines exclusively along the y-axis to improve traceability of sales values.\n- Position the numerical sales value at the top of each bar as an annotation.\n- Ensure that the plot includes a legend at the bottom right corner with the label \"Sales Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000815_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "R1",
                                "R2",
                                "R3",
                                "R4",
                                "R5",
                                "R6",
                                "Regions",
                                "Weekly Sales (k units)",
                                "Weekly Sales by Region",
                                "Sales Data",
                                "0",
                                "100"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000815_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000815_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many bars are displayed in the chart?",
                                "What are the labels on the x-axis?",
                                "What is the title of the chart?",
                                "What is the label and range of the y-axis?",
                                "Which axis has grid lines visible?",
                                "Are numerical values annotated on the chart?",
                                "What color pattern is used for the bars?",
                                "Where is the legend located and what is its label?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000815_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "6",
                                "R1, R2, R3, R4, R5, and R6",
                                "Weekly Sales by Region",
                                "Weekly Sales (k units) with a range from 0 to 100",
                                "Y-axis only",
                                "Yes, each bar shows its numerical sales value at the top",
                                "Distinct shades of green from light to dark",
                                "Bottom right; 'Sales Data'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing rainfall and humidity measurements.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Rainfall (mm)\" and the y-axis labeled as \"Humidity (%)\".\n- Include a title at the top with the text \"Rainfall vs Humidity Analysis\".\n- Scatter exactly 50 data points that are evenly spread across the x-axis domain.\n- Use blue circular markers for each data point.\n- Set the figure size to 10 inches in width and 6 inches in height.\n- Configure the x-axis range from 0 to 200 and the y-axis range from 20 to 100.\n- Add grid lines along both the x and y axes.\n- Place a legend in the upper right corner with the label \"Measurement Data\".",
            "task_id": "000816",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the title displayed at the top of the scatter plot?",
                "What is the label on the x-axis?",
                "What is the label on the y-axis?",
                "How many data points are visible in the plot?",
                "What is the range of the x-axis?",
                "What is the range of the y-axis?",
                "Where is the legend located and what does it label the data as?"
            ],
            "VQA_answers": [
                "Rainfall vs Humidity Analysis",
                "Rainfall (mm)",
                "Humidity (%)",
                "50",
                "0 to 200",
                "20 to 100",
                "Upper right corner, 'Measurement Data'"
            ],
            "raw_output_metric": [
                "Rainfall (mm)",
                "Humidity (%)",
                "Rainfall vs Humidity Analysis",
                "Measurement Data",
                "figsize=(10,6)",
                "plt.scatter",
                "color='blue'",
                "marker='o'",
                "xlim(0,200)",
                "ylim(20,100)",
                "plt.grid",
                "loc='upper right'",
                "50"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000816_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing rainfall and humidity measurements.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Rainfall (mm)\" and the y-axis labeled as \"Humidity (%)\".\n- Include a title at the top with the text \"Rainfall vs Humidity Analysis\".\n- Scatter exactly 50 data points that are evenly spread across the x-axis domain.\n- Use blue circular markers for each data point.\n- Set the figure size to 10 inches in width and 6 inches in height.\n- Configure the x-axis range from 0 to 200 and the y-axis range from 20 to 100.\n- Add grid lines along both the x and y axes.\n- Place a legend in the upper right corner with the label \"Measurement Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000816_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Rainfall (mm)",
                                "Humidity (%)",
                                "Rainfall vs Humidity Analysis",
                                "Measurement Data",
                                "figsize=(10,6)",
                                "plt.scatter",
                                "color='blue'",
                                "marker='o'",
                                "xlim(0,200)",
                                "ylim(20,100)",
                                "plt.grid",
                                "loc='upper right'",
                                "50"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000816_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000816_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the scatter plot?",
                                "What is the label on the x-axis?",
                                "What is the label on the y-axis?",
                                "How many data points are visible in the plot?",
                                "What is the range of the x-axis?",
                                "What is the range of the y-axis?",
                                "Where is the legend located and what does it label the data as?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000816_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Rainfall vs Humidity Analysis",
                                "Rainfall (mm)",
                                "Humidity (%)",
                                "50",
                                "0 to 200",
                                "20 to 100",
                                "Upper right corner, 'Measurement Data'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart visualizing rainfall data for 7 consecutive months.\n\nFeature Requirements:\n- Display a bar chart with exactly 7 bars corresponding to the month abbreviations \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", and \"Jul\".\n- Label the x-axis as \"Month\" with each month evenly spaced along the axis.\n- Label the y-axis as \"Rainfall (mm)\" with a visible range set from 0 to 250.\n- Use a gradient from the \"viridis\" colormap to color each bar distinctly.\n- Set a title at the top of the chart reading \"Monthly Rainfall Data\" in bold font.\n- Overlay each bar with its numerical rainfall value displayed above it.\n- Incorporate horizontal grid lines along the y-axis to improve readability.",
            "task_id": "000817",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the chart title displayed at the top of the chart?",
                "Is the chart title styled in bold font?",
                "How many bars are displayed in the bar chart?",
                "What are the x-axis labels shown for each bar?",
                "What is the x-axis labeled as?",
                "What is the y-axis labeled as?",
                "What numerical range is visible on the y-axis?",
                "What type of colormap gradient is used to color the bars?",
                "Is each bar overlaid with its numerical rainfall value?",
                "Are horizontal grid lines displayed along the y-axis?"
            ],
            "VQA_answers": [
                "Monthly Rainfall Data",
                "Yes",
                "7",
                "Jan, Feb, Mar, Apr, May, Jun, Jul",
                "Month",
                "Rainfall (mm)",
                "0 to 250",
                "viridis",
                "Yes",
                "Yes"
            ],
            "raw_output_metric": [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Month",
                "Rainfall (mm)",
                "Monthly Rainfall Data",
                "viridis",
                "grid"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000817_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart visualizing rainfall data for 7 consecutive months.\n\nFeature Requirements:\n- Display a bar chart with exactly 7 bars corresponding to the month abbreviations \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", and \"Jul\".\n- Label the x-axis as \"Month\" with each month evenly spaced along the axis.\n- Label the y-axis as \"Rainfall (mm)\" with a visible range set from 0 to 250.\n- Use a gradient from the \"viridis\" colormap to color each bar distinctly.\n- Set a title at the top of the chart reading \"Monthly Rainfall Data\" in bold font.\n- Overlay each bar with its numerical rainfall value displayed above it.\n- Incorporate horizontal grid lines along the y-axis to improve readability."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000817_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Jan",
                                "Feb",
                                "Mar",
                                "Apr",
                                "May",
                                "Jun",
                                "Jul",
                                "Month",
                                "Rainfall (mm)",
                                "Monthly Rainfall Data",
                                "viridis",
                                "grid"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000817_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000817_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the chart title displayed at the top of the chart?",
                                "Is the chart title styled in bold font?",
                                "How many bars are displayed in the bar chart?",
                                "What are the x-axis labels shown for each bar?",
                                "What is the x-axis labeled as?",
                                "What is the y-axis labeled as?",
                                "What numerical range is visible on the y-axis?",
                                "What type of colormap gradient is used to color the bars?",
                                "Is each bar overlaid with its numerical rainfall value?",
                                "Are horizontal grid lines displayed along the y-axis?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000817_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Monthly Rainfall Data",
                                "Yes",
                                "7",
                                "Jan, Feb, Mar, Apr, May, Jun, Jul",
                                "Month",
                                "Rainfall (mm)",
                                "0 to 250",
                                "viridis",
                                "Yes",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart representing monthly sales figures over a year.\n\nFeature Requirements:\n- Create a bar chart displaying exactly 12 bars corresponding to each month from January to December.\n- Label the x-axis with the abbreviated month names and the y-axis with \"Sales (in USD)\".\n- Set the chart title at the top as \"Monthly Sales Overview\".\n- Use a uniform green color for all bars with distinct black borders.\n- Draw grid lines only along the y-axis to enhance data readability.\n- Annotate each bar with its corresponding sales figure placed just above the bar.\n- Configure the y-axis range to start at 0 and extend to 10% above the highest sales value.\n- Position a legend in the upper right corner with the label \"2023 Sales Data\".",
            "task_id": "000818",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many bars are displayed in the chart?",
                "Which months are represented on the x-axis?",
                "What is the label on the y-axis?",
                "What is the title of the chart?",
                "What color are the bars and how are their borders styled?",
                "Where are grid lines shown in the chart?",
                "Are the bars annotated with their sales figures?",
                "How is the y-axis range configured?",
                "Where is the legend placed and what does it indicate?"
            ],
            "VQA_answers": [
                "12",
                "Each month from January to December (abbreviated)",
                "Sales (in USD)",
                "Monthly Sales Overview",
                "Uniform green bars with distinct black borders",
                "Only along the y-axis",
                "Yes, each bar is annotated with its corresponding sales figure above it",
                "It starts at 0 and extends to 10% above the highest sales value",
                "In the upper right corner with the label '2023 Sales Data'"
            ],
            "raw_output_metric": [
                "Monthly Sales Overview",
                "Sales (in USD)",
                "2023 Sales Data",
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
                "green",
                "black",
                "plt.bar(",
                "plt.annotate(",
                "plt.grid(axis='y')",
                "plt.ylim("
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000818_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart representing monthly sales figures over a year.\n\nFeature Requirements:\n- Create a bar chart displaying exactly 12 bars corresponding to each month from January to December.\n- Label the x-axis with the abbreviated month names and the y-axis with \"Sales (in USD)\".\n- Set the chart title at the top as \"Monthly Sales Overview\".\n- Use a uniform green color for all bars with distinct black borders.\n- Draw grid lines only along the y-axis to enhance data readability.\n- Annotate each bar with its corresponding sales figure placed just above the bar.\n- Configure the y-axis range to start at 0 and extend to 10% above the highest sales value.\n- Position a legend in the upper right corner with the label \"2023 Sales Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000818_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Monthly Sales Overview",
                                "Sales (in USD)",
                                "2023 Sales Data",
                                "Jan",
                                "Feb",
                                "Mar",
                                "Apr",
                                "May",
                                "Jun",
                                "Jul",
                                "Aug",
                                "Sep",
                                "Oct",
                                "Nov",
                                "Dec",
                                "green",
                                "black",
                                "plt.bar(",
                                "plt.annotate(",
                                "plt.grid(axis='y')",
                                "plt.ylim("
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000818_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000818_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many bars are displayed in the chart?",
                                "Which months are represented on the x-axis?",
                                "What is the label on the y-axis?",
                                "What is the title of the chart?",
                                "What color are the bars and how are their borders styled?",
                                "Where are grid lines shown in the chart?",
                                "Are the bars annotated with their sales figures?",
                                "How is the y-axis range configured?",
                                "Where is the legend placed and what does it indicate?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000818_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "12",
                                "Each month from January to December (abbreviated)",
                                "Sales (in USD)",
                                "Monthly Sales Overview",
                                "Uniform green bars with distinct black borders",
                                "Only along the y-axis",
                                "Yes, each bar is annotated with its corresponding sales figure above it",
                                "It starts at 0 and extends to 10% above the highest sales value",
                                "In the upper right corner with the label '2023 Sales Data'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart visualizing the average monthly rainfall data.\n\nFeature Requirements:\n- Plot exactly 12 bars where each bar represents a month from January to December.\n- Label the x-axis as \"Month\" and the y-axis as \"Rainfall (mm)\".\n- Set the plot title to \"Average Monthly Rainfall\".\n- Use alternating colors for the bars, for example using blue and green in sequence.\n- Display only the abbreviated month names (e.g., Jan, Feb, etc.) as x-axis tick labels.\n- Include horizontal grid lines on the y-axis to aid in reading the rainfall values.\n- Set the y-axis limit from 0 to 300 to cover the range of rainfall data.",
            "task_id": "000819",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many bars are displayed in the chart?",
                "What is the title of the plot?",
                "What is the label of the x-axis?",
                "What is the label of the y-axis?",
                "What text labels are shown on the x-axis ticks?",
                "What is the color pattern used for the bars?",
                "Are horizontal grid lines visible on the chart?",
                "What are the defined limits for the y-axis?"
            ],
            "VQA_answers": [
                "12",
                "Average Monthly Rainfall",
                "Month",
                "Rainfall (mm)",
                "Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec",
                "Alternating blue and green",
                "Yes",
                "0 to 300"
            ],
            "raw_output_metric": [
                "plt.bar",
                "plt.xlabel",
                "Month",
                "plt.ylabel",
                "Rainfall (mm)",
                "plt.title",
                "Average Monthly Rainfall",
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
                "blue",
                "green",
                "plt.grid",
                "plt.ylim(0, 300)"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000819_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart visualizing the average monthly rainfall data.\n\nFeature Requirements:\n- Plot exactly 12 bars where each bar represents a month from January to December.\n- Label the x-axis as \"Month\" and the y-axis as \"Rainfall (mm)\".\n- Set the plot title to \"Average Monthly Rainfall\".\n- Use alternating colors for the bars, for example using blue and green in sequence.\n- Display only the abbreviated month names (e.g., Jan, Feb, etc.) as x-axis tick labels.\n- Include horizontal grid lines on the y-axis to aid in reading the rainfall values.\n- Set the y-axis limit from 0 to 300 to cover the range of rainfall data."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000819_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "plt.bar",
                                "plt.xlabel",
                                "Month",
                                "plt.ylabel",
                                "Rainfall (mm)",
                                "plt.title",
                                "Average Monthly Rainfall",
                                "Jan",
                                "Feb",
                                "Mar",
                                "Apr",
                                "May",
                                "Jun",
                                "Jul",
                                "Aug",
                                "Sep",
                                "Oct",
                                "Nov",
                                "Dec",
                                "blue",
                                "green",
                                "plt.grid",
                                "plt.ylim(0, 300)"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000819_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000819_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many bars are displayed in the chart?",
                                "What is the title of the plot?",
                                "What is the label of the x-axis?",
                                "What is the label of the y-axis?",
                                "What text labels are shown on the x-axis ticks?",
                                "What is the color pattern used for the bars?",
                                "Are horizontal grid lines visible on the chart?",
                                "What are the defined limits for the y-axis?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000819_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "12",
                                "Average Monthly Rainfall",
                                "Month",
                                "Rainfall (mm)",
                                "Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec",
                                "Alternating blue and green",
                                "Yes",
                                "0 to 300"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot visualizing vehicle performance data.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Distance (km)\" and the y-axis labeled as \"Speed (km/h)\".\n- Plot exactly 15 data points with predefined arrays representing distance and speed.\n- Use red circular markers to represent each data point.\n- Include a title at the top of the plot with the text \"Vehicle Speed vs Distance\".\n- Set the x-axis range from 0 to 200 and the y-axis range from 0 to 150.\n- Add grid lines for both axes, showing only the major ticks.\n- Include a legend in the lower right corner with the label \"Vehicle Data\".\n- Draw a dashed horizontal line at a y-value of 100 to mark a speed threshold.\n- Annotate each data point with its corresponding index number from 1 to 15.",
            "task_id": "000820",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the title displayed at the top of the plot?",
                "What labels are used for the x-axis and y-axis?",
                "How many data points are plotted on the scatter plot?",
                "What are the marker style and color used for the data points?",
                "What are the ranges set for the x-axis and y-axis?",
                "Are there grid lines shown on the plot, and if so, what type?",
                "Where is the legend located and what label does it display?",
                "What feature highlights a speed threshold on the plot?",
                "How are the data points annotated?"
            ],
            "VQA_answers": [
                "Vehicle Speed vs Distance",
                "x-axis: Distance (km), y-axis: Speed (km/h)",
                "15",
                "Red circular markers",
                "x-axis: 0 to 200, y-axis: 0 to 150",
                "Yes, major grid lines for both axes",
                "Lower right corner, displaying 'Vehicle Data'",
                "A dashed horizontal line at y = 100",
                "Each data point is annotated with its index number from 1 to 15"
            ],
            "raw_output_metric": [
                "Distance (km)",
                "Speed (km/h)",
                "Vehicle Speed vs Distance",
                "plt.scatter",
                "red",
                "o",
                "15",
                "plt.xlim(0, 200)",
                "plt.ylim(0, 150)",
                "plt.grid",
                "Vehicle Data",
                "plt.legend",
                "plt.axhline",
                "y=100",
                "linestyle='--'",
                "plt.annotate"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000820_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot visualizing vehicle performance data.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Distance (km)\" and the y-axis labeled as \"Speed (km/h)\".\n- Plot exactly 15 data points with predefined arrays representing distance and speed.\n- Use red circular markers to represent each data point.\n- Include a title at the top of the plot with the text \"Vehicle Speed vs Distance\".\n- Set the x-axis range from 0 to 200 and the y-axis range from 0 to 150.\n- Add grid lines for both axes, showing only the major ticks.\n- Include a legend in the lower right corner with the label \"Vehicle Data\".\n- Draw a dashed horizontal line at a y-value of 100 to mark a speed threshold.\n- Annotate each data point with its corresponding index number from 1 to 15."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000820_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Distance (km)",
                                "Speed (km/h)",
                                "Vehicle Speed vs Distance",
                                "plt.scatter",
                                "red",
                                "o",
                                "15",
                                "plt.xlim(0, 200)",
                                "plt.ylim(0, 150)",
                                "plt.grid",
                                "Vehicle Data",
                                "plt.legend",
                                "plt.axhline",
                                "y=100",
                                "linestyle='--'",
                                "plt.annotate"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000820_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000820_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the plot?",
                                "What labels are used for the x-axis and y-axis?",
                                "How many data points are plotted on the scatter plot?",
                                "What are the marker style and color used for the data points?",
                                "What are the ranges set for the x-axis and y-axis?",
                                "Are there grid lines shown on the plot, and if so, what type?",
                                "Where is the legend located and what label does it display?",
                                "What feature highlights a speed threshold on the plot?",
                                "How are the data points annotated?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000820_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Vehicle Speed vs Distance",
                                "x-axis: Distance (km), y-axis: Speed (km/h)",
                                "15",
                                "Red circular markers",
                                "x-axis: 0 to 200, y-axis: 0 to 150",
                                "Yes, major grid lines for both axes",
                                "Lower right corner, displaying 'Vehicle Data'",
                                "A dashed horizontal line at y = 100",
                                "Each data point is annotated with its index number from 1 to 15"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using predefined data arrays representing average monthly sales figures.\n\nFeature Requirements:\n- Display a bar chart with the x-axis labeled \"Month\" and the y-axis labeled \"Sales (in Units)\".\n- Include a title at the top of the plot with the text \"Average Monthly Sales\".\n- Plot exactly 12 bars corresponding to the months January through December.\n- Use a different shade of green for each bar to visually distinguish the months.\n- Add numeric annotations above each bar showing the exact sales figure.\n- Configure the x-axis to display the abbreviated month names (e.g., Jan, Feb, Mar, etc.).\n- Add horizontal grid lines along the y-axis to assist in reading the sales values.",
            "task_id": "000821",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the title displayed at the top of the chart?",
                "What label is used for the x-axis?",
                "What label is used for the y-axis?",
                "How many bars are shown in the chart?",
                "How are the different months visually distinguished in the bar chart?",
                "What text is shown above each bar?",
                "How are the month names displayed on the x-axis?",
                "What type of grid lines are included to assist in reading the sales values?"
            ],
            "VQA_answers": [
                "Average Monthly Sales",
                "Month",
                "Sales (in Units)",
                "12",
                "Each bar uses a different shade of green",
                "The exact sales figure",
                "As abbreviated names (e.g., Jan, Feb, Mar, etc.)",
                "Horizontal grid lines along the y-axis"
            ],
            "raw_output_metric": [
                "Month",
                "Sales (in Units)",
                "Average Monthly Sales",
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000821_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using predefined data arrays representing average monthly sales figures.\n\nFeature Requirements:\n- Display a bar chart with the x-axis labeled \"Month\" and the y-axis labeled \"Sales (in Units)\".\n- Include a title at the top of the plot with the text \"Average Monthly Sales\".\n- Plot exactly 12 bars corresponding to the months January through December.\n- Use a different shade of green for each bar to visually distinguish the months.\n- Add numeric annotations above each bar showing the exact sales figure.\n- Configure the x-axis to display the abbreviated month names (e.g., Jan, Feb, Mar, etc.).\n- Add horizontal grid lines along the y-axis to assist in reading the sales values."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000821_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Month",
                                "Sales (in Units)",
                                "Average Monthly Sales",
                                "Jan",
                                "Feb",
                                "Mar",
                                "Apr",
                                "May",
                                "Jun",
                                "Jul",
                                "Aug",
                                "Sep",
                                "Oct",
                                "Nov",
                                "Dec"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000821_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000821_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the chart?",
                                "What label is used for the x-axis?",
                                "What label is used for the y-axis?",
                                "How many bars are shown in the chart?",
                                "How are the different months visually distinguished in the bar chart?",
                                "What text is shown above each bar?",
                                "How are the month names displayed on the x-axis?",
                                "What type of grid lines are included to assist in reading the sales values?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000821_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Average Monthly Sales",
                                "Month",
                                "Sales (in Units)",
                                "12",
                                "Each bar uses a different shade of green",
                                "The exact sales figure",
                                "As abbreviated names (e.g., Jan, Feb, Mar, etc.)",
                                "Horizontal grid lines along the y-axis"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing vehicle speed and fuel efficiency.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Speed (km/h)\" and the y-axis labeled as \"Fuel Efficiency (L/100km)\".\n- Plot exactly 12 data points representing different vehicle speed and fuel efficiency pairs.\n- Each data point should be marked with a red circular marker.\n- Add a title at the top center with the text \"Speed vs. Fuel Efficiency\".\n- Set the x-axis range from 0 to 200 km/h and the y-axis range from 3 to 15 L/100km.\n- Show grid lines on both the x-axis and y-axis.\n- Include a horizontal dashed black threshold line at y=8 L/100km.\n- Add a legend in the upper right corner with the label \"Vehicle Data\".",
            "task_id": "000822",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the label on the x-axis of the scatter plot?",
                "What is the label on the y-axis of the scatter plot?",
                "How many data points are displayed in the scatter plot?",
                "What color and shape are used for the markers?",
                "What is the title of the scatter plot?",
                "What are the specified ranges for the x-axis and y-axis?",
                "What additional visual elements (grid lines, threshold line, legend) are included?"
            ],
            "VQA_answers": [
                "Speed (km/h)",
                "Fuel Efficiency (L/100km)",
                "12",
                "Red circular markers",
                "Speed vs. Fuel Efficiency",
                "x-axis: 0 to 200 km/h, y-axis: 3 to 15 L/100km",
                "Grid lines on both axes, a horizontal dashed black threshold line at y=8 L/100km, and a legend in the upper right corner labeled 'Vehicle Data'"
            ],
            "raw_output_metric": [
                "Speed (km/h)",
                "Fuel Efficiency (L/100km)",
                "Speed vs. Fuel Efficiency",
                "Vehicle Data",
                "plt.scatter",
                "red",
                "o",
                "xlim(0, 200)",
                "ylim(3, 15)",
                "plt.axhline",
                "8",
                "color='k'",
                "linestyle='--'",
                "plt.grid",
                "plt.legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000822_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing vehicle speed and fuel efficiency.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Speed (km/h)\" and the y-axis labeled as \"Fuel Efficiency (L/100km)\".\n- Plot exactly 12 data points representing different vehicle speed and fuel efficiency pairs.\n- Each data point should be marked with a red circular marker.\n- Add a title at the top center with the text \"Speed vs. Fuel Efficiency\".\n- Set the x-axis range from 0 to 200 km/h and the y-axis range from 3 to 15 L/100km.\n- Show grid lines on both the x-axis and y-axis.\n- Include a horizontal dashed black threshold line at y=8 L/100km.\n- Add a legend in the upper right corner with the label \"Vehicle Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000822_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Speed (km/h)",
                                "Fuel Efficiency (L/100km)",
                                "Speed vs. Fuel Efficiency",
                                "Vehicle Data",
                                "plt.scatter",
                                "red",
                                "o",
                                "xlim(0, 200)",
                                "ylim(3, 15)",
                                "plt.axhline",
                                "8",
                                "color='k'",
                                "linestyle='--'",
                                "plt.grid",
                                "plt.legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000822_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000822_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the label on the x-axis of the scatter plot?",
                                "What is the label on the y-axis of the scatter plot?",
                                "How many data points are displayed in the scatter plot?",
                                "What color and shape are used for the markers?",
                                "What is the title of the scatter plot?",
                                "What are the specified ranges for the x-axis and y-axis?",
                                "What additional visual elements (grid lines, threshold line, legend) are included?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000822_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Speed (km/h)",
                                "Fuel Efficiency (L/100km)",
                                "12",
                                "Red circular markers",
                                "Speed vs. Fuel Efficiency",
                                "x-axis: 0 to 200 km/h, y-axis: 3 to 15 L/100km",
                                "Grid lines on both axes, a horizontal dashed black threshold line at y=8 L/100km, and a legend in the upper right corner labeled 'Vehicle Data'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using predefined data arrays representing monthly rainfall amounts.\n\nFeature Requirements:\n- Construct a bar chart with exactly 8 bars, each representing one of the months from January to August.\n- Label the x-axis as \"Month\" and the y-axis as \"Rainfall (mm)\".\n- Include a plot title at the top reading \"Monthly Rainfall Totals\".\n- Color each bar with a gradient fill transitioning from light blue at the start to dark blue at the end.\n- Set the x-axis ticks to display the abbreviated month names (e.g., Jan, Feb, Mar, etc.).\n- Outline each bar with a thin black border to clearly separate them.\n- Add horizontal grid lines along the y-axis to improve data readability.\n- Annotate each bar at its top with the corresponding rainfall value.",
            "task_id": "000823",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many bars are displayed in the chart?",
                "What label is shown on the x-axis?",
                "What label is shown on the y-axis?",
                "What is the title of the chart?",
                "Which month abbreviations are visible on the x-axis?",
                "Do the bars display a gradient fill? If so, what is the color transition?",
                "How are the bars outlined?",
                "What additional feature is used to enhance data readability along the y-axis?",
                "What type of annotation is present on each bar?"
            ],
            "VQA_answers": [
                "8",
                "Month",
                "Rainfall (mm)",
                "Monthly Rainfall Totals",
                "Jan, Feb, Mar, Apr, May, Jun, Jul, Aug",
                "Yes, from light blue to dark blue",
                "They have a thin black border",
                "Horizontal grid lines",
                "The corresponding rainfall value is annotated at the top"
            ],
            "raw_output_metric": [
                "Monthly Rainfall Totals",
                "Month",
                "Rainfall (mm)",
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "edgecolor='black'",
                "lightblue",
                "darkblue"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000823_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using predefined data arrays representing monthly rainfall amounts.\n\nFeature Requirements:\n- Construct a bar chart with exactly 8 bars, each representing one of the months from January to August.\n- Label the x-axis as \"Month\" and the y-axis as \"Rainfall (mm)\".\n- Include a plot title at the top reading \"Monthly Rainfall Totals\".\n- Color each bar with a gradient fill transitioning from light blue at the start to dark blue at the end.\n- Set the x-axis ticks to display the abbreviated month names (e.g., Jan, Feb, Mar, etc.).\n- Outline each bar with a thin black border to clearly separate them.\n- Add horizontal grid lines along the y-axis to improve data readability.\n- Annotate each bar at its top with the corresponding rainfall value."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000823_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Monthly Rainfall Totals",
                                "Month",
                                "Rainfall (mm)",
                                "Jan",
                                "Feb",
                                "Mar",
                                "Apr",
                                "May",
                                "Jun",
                                "Jul",
                                "Aug",
                                "edgecolor='black'",
                                "lightblue",
                                "darkblue"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000823_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000823_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many bars are displayed in the chart?",
                                "What label is shown on the x-axis?",
                                "What label is shown on the y-axis?",
                                "What is the title of the chart?",
                                "Which month abbreviations are visible on the x-axis?",
                                "Do the bars display a gradient fill? If so, what is the color transition?",
                                "How are the bars outlined?",
                                "What additional feature is used to enhance data readability along the y-axis?",
                                "What type of annotation is present on each bar?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000823_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "8",
                                "Month",
                                "Rainfall (mm)",
                                "Monthly Rainfall Totals",
                                "Jan, Feb, Mar, Apr, May, Jun, Jul, Aug",
                                "Yes, from light blue to dark blue",
                                "They have a thin black border",
                                "Horizontal grid lines",
                                "The corresponding rainfall value is annotated at the top"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart displaying the number of muffins sold each day over one week.\n\nFeature Requirements:\n- Create exactly 7 vertical bars, each representing a day of the week.\n- Set the x-axis with the day names: \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\".\n- Label the y-axis as \"Muffins Sold\" and use a range from 0 to 100.\n- Include a title at the top that reads \"Weekly Muffin Sales\".\n- Use distinct pastel colors for each bar to differentiate the days.\n- Add grid lines along the y-axis to enhance readability.\n- Place a legend at the upper right corner with the label \"Daily Sales\".",
            "task_id": "000824",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many vertical bars are displayed on the chart?",
                "Which days of the week are labeled along the x-axis?",
                "What label is assigned to the y-axis?",
                "What is the chart title displayed at the top?",
                "What is the range set for the y-axis?",
                "What type of colors are used for the bars?",
                "Is there a legend shown on the chart and what is its label?",
                "Are grid lines present and if so, where?"
            ],
            "VQA_answers": [
                "7",
                "Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday",
                "Muffins Sold",
                "Weekly Muffin Sales",
                "0 to 100",
                "Distinct pastel colors",
                "Yes, 'Daily Sales'",
                "Yes, along the y-axis"
            ],
            "raw_output_metric": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday",
                "Muffins Sold",
                "Weekly Muffin Sales",
                "Daily Sales"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000824_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart displaying the number of muffins sold each day over one week.\n\nFeature Requirements:\n- Create exactly 7 vertical bars, each representing a day of the week.\n- Set the x-axis with the day names: \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\".\n- Label the y-axis as \"Muffins Sold\" and use a range from 0 to 100.\n- Include a title at the top that reads \"Weekly Muffin Sales\".\n- Use distinct pastel colors for each bar to differentiate the days.\n- Add grid lines along the y-axis to enhance readability.\n- Place a legend at the upper right corner with the label \"Daily Sales\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000824_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Monday",
                                "Tuesday",
                                "Wednesday",
                                "Thursday",
                                "Friday",
                                "Saturday",
                                "Sunday",
                                "Muffins Sold",
                                "Weekly Muffin Sales",
                                "Daily Sales"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000824_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000824_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many vertical bars are displayed on the chart?",
                                "Which days of the week are labeled along the x-axis?",
                                "What label is assigned to the y-axis?",
                                "What is the chart title displayed at the top?",
                                "What is the range set for the y-axis?",
                                "What type of colors are used for the bars?",
                                "Is there a legend shown on the chart and what is its label?",
                                "Are grid lines present and if so, where?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000824_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "7",
                                "Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday",
                                "Muffins Sold",
                                "Weekly Muffin Sales",
                                "0 to 100",
                                "Distinct pastel colors",
                                "Yes, 'Daily Sales'",
                                "Yes, along the y-axis"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart visualizing quarterly sales data across five distinct regions.\n\nFeature Requirements:\n- Display a bar chart with the x-axis labeled as \"Region\" and the y-axis labeled as \"Sales (in million USD)\".\n- Include a title at the top with the text \"Quarterly Sales by Region\".\n- Plot exactly 5 bars representing the regions \"North\", \"South\", \"East\", \"West\", and \"Central\".\n- Use a different color for each bar sourced from a standard color palette.\n- Place numeric labels above each bar indicating the sales values.\n- Add horizontal grid lines along the y-axis to improve data readability.\n- Set the y-axis range from 0 to a maximum value that accommodates all sales data comfortably.\n- Ensure the plot is structured with evenly spaced bars for clear visual separation.",
            "task_id": "000825",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the chart title at the top?",
                "How many bars are displayed in the chart?",
                "Which regions are represented by the bars?",
                "What label is displayed on the x-axis?",
                "What label is displayed on the y-axis?",
                "Are numeric sales values shown above each bar?",
                "Do the bars feature different colors from a standard palette?",
                "Are horizontal grid lines visible along the y-axis?",
                "Is the y-axis range set to start from 0?",
                "Are the bars evenly spaced for clear visual separation?"
            ],
            "VQA_answers": [
                "Quarterly Sales by Region",
                "5",
                "North, South, East, West, Central",
                "Region",
                "Sales (in million USD)",
                "Yes",
                "Yes",
                "Yes",
                "Yes",
                "Yes"
            ],
            "raw_output_metric": [
                "plt.xlabel('Region')",
                "plt.ylabel('Sales (in million USD)')",
                "plt.title('Quarterly Sales by Region')",
                "'North'",
                "'South'",
                "'East'",
                "'West'",
                "'Central'",
                "plt.bar",
                "plt.grid",
                "plt.ylim"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000825_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart visualizing quarterly sales data across five distinct regions.\n\nFeature Requirements:\n- Display a bar chart with the x-axis labeled as \"Region\" and the y-axis labeled as \"Sales (in million USD)\".\n- Include a title at the top with the text \"Quarterly Sales by Region\".\n- Plot exactly 5 bars representing the regions \"North\", \"South\", \"East\", \"West\", and \"Central\".\n- Use a different color for each bar sourced from a standard color palette.\n- Place numeric labels above each bar indicating the sales values.\n- Add horizontal grid lines along the y-axis to improve data readability.\n- Set the y-axis range from 0 to a maximum value that accommodates all sales data comfortably.\n- Ensure the plot is structured with evenly spaced bars for clear visual separation."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000825_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "plt.xlabel('Region')",
                                "plt.ylabel('Sales (in million USD)')",
                                "plt.title('Quarterly Sales by Region')",
                                "'North'",
                                "'South'",
                                "'East'",
                                "'West'",
                                "'Central'",
                                "plt.bar",
                                "plt.grid",
                                "plt.ylim"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000825_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000825_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the chart title at the top?",
                                "How many bars are displayed in the chart?",
                                "Which regions are represented by the bars?",
                                "What label is displayed on the x-axis?",
                                "What label is displayed on the y-axis?",
                                "Are numeric sales values shown above each bar?",
                                "Do the bars feature different colors from a standard palette?",
                                "Are horizontal grid lines visible along the y-axis?",
                                "Is the y-axis range set to start from 0?",
                                "Are the bars evenly spaced for clear visual separation?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000825_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Quarterly Sales by Region",
                                "5",
                                "North, South, East, West, Central",
                                "Region",
                                "Sales (in million USD)",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot that displays the relationship between study time and exam scores for 15 students.\n\nFeature Requirements:\n- Plot exactly 15 data points representing pairs of study time (in hours) and exam scores (in percentage).\n- Label the x-axis as \"Study Time (hours)\" and the y-axis as \"Exam Score (%)\".\n- Use red circular markers for each data point to clearly indicate individual scores.\n- Set the x-axis range from 0 to 20 and the y-axis range from 0 to 100.\n- Include a title \"Study Time vs Exam Scores\" at the top of the plot.\n- Add grid lines across the plot to assist with data point alignment.\n- Annotate the data point with the highest exam score using an arrow and the label \"Top Score\".\n- Draw a horizontal dashed line at the average exam score across all data points.",
            "task_id": "000826",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many data points are plotted?",
                "What is the x‑axis label?",
                "What is the y‑axis label?",
                "What color and shape are the markers used for the data points?",
                "What is the range of the x‑axis?",
                "What is the range of the y‑axis?",
                "What is the title of the scatter plot?",
                "How is the highest exam score annotated?",
                "What kind of line is drawn at the average exam score?"
            ],
            "VQA_answers": [
                "15",
                "Study Time (hours)",
                "Exam Score (%)",
                "Red circular markers",
                "0 to 20",
                "0 to 100",
                "Study Time vs Exam Scores",
                "Annotated with an arrow and labeled 'Top Score'",
                "A horizontal dashed line"
            ],
            "raw_output_metric": [
                "15",
                "Study Time (hours)",
                "Exam Score (%)",
                "Study Time vs Exam Scores",
                "Top Score",
                "red",
                "0",
                "20",
                "100",
                "plt.scatter",
                "plt.xlabel",
                "plt.ylabel",
                "plt.title",
                "plt.xlim(0, 20)",
                "plt.ylim(0, 100)",
                "plt.grid",
                "plt.annotate",
                "plt.axhline"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000826_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot that displays the relationship between study time and exam scores for 15 students.\n\nFeature Requirements:\n- Plot exactly 15 data points representing pairs of study time (in hours) and exam scores (in percentage).\n- Label the x-axis as \"Study Time (hours)\" and the y-axis as \"Exam Score (%)\".\n- Use red circular markers for each data point to clearly indicate individual scores.\n- Set the x-axis range from 0 to 20 and the y-axis range from 0 to 100.\n- Include a title \"Study Time vs Exam Scores\" at the top of the plot.\n- Add grid lines across the plot to assist with data point alignment.\n- Annotate the data point with the highest exam score using an arrow and the label \"Top Score\".\n- Draw a horizontal dashed line at the average exam score across all data points."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000826_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "15",
                                "Study Time (hours)",
                                "Exam Score (%)",
                                "Study Time vs Exam Scores",
                                "Top Score",
                                "red",
                                "0",
                                "20",
                                "100",
                                "plt.scatter",
                                "plt.xlabel",
                                "plt.ylabel",
                                "plt.title",
                                "plt.xlim(0, 20)",
                                "plt.ylim(0, 100)",
                                "plt.grid",
                                "plt.annotate",
                                "plt.axhline"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000826_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000826_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many data points are plotted?",
                                "What is the x‑axis label?",
                                "What is the y‑axis label?",
                                "What color and shape are the markers used for the data points?",
                                "What is the range of the x‑axis?",
                                "What is the range of the y‑axis?",
                                "What is the title of the scatter plot?",
                                "How is the highest exam score annotated?",
                                "What kind of line is drawn at the average exam score?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000826_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "15",
                                "Study Time (hours)",
                                "Exam Score (%)",
                                "Red circular markers",
                                "0 to 20",
                                "0 to 100",
                                "Study Time vs Exam Scores",
                                "Annotated with an arrow and labeled 'Top Score'",
                                "A horizontal dashed line"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart to display the number of visitors at a museum over the course of a week.\n\nFeature Requirements:\n- Display a bar chart with exactly 7 bars representing each day of the week.\n- Label the x-axis as \"Days of Week\" with tick labels: \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\".\n- Label the y-axis as \"Visitor Count\" with a range that fits the provided data.\n- Include a title at the top with the text \"Museum Visitors per Day\".\n- Use orange-colored bars with black edges to differentiate each day.\n- Add horizontal grid lines along the y-axis to improve readability.\n- Include a legend in the bottom right corner with the label \"Daily Count\".",
            "task_id": "000827",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many bars represent the days of the week?",
                "What are the tick labels on the x-axis?",
                "What is the label for the x-axis?",
                "What is the label for the y-axis?",
                "What is the title displayed at the top of the chart?",
                "What are the colors used for the bars and their edges?",
                "Are there grid lines displayed, and if so, where?",
                "What is the position and label of the legend?"
            ],
            "VQA_answers": [
                "7",
                "Mon, Tue, Wed, Thu, Fri, Sat, Sun",
                "Days of Week",
                "Visitor Count",
                "Museum Visitors per Day",
                "Orange bars with black edges",
                "Horizontal grid lines along the y-axis",
                "Bottom right corner with label 'Daily Count'"
            ],
            "raw_output_metric": [
                "Museum Visitors per Day",
                "Days of Week",
                "Visitor Count",
                "Mon",
                "Tue",
                "Wed",
                "Thu",
                "Fri",
                "Sat",
                "Sun",
                "Daily Count",
                "orange",
                "black"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000827_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart to display the number of visitors at a museum over the course of a week.\n\nFeature Requirements:\n- Display a bar chart with exactly 7 bars representing each day of the week.\n- Label the x-axis as \"Days of Week\" with tick labels: \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\".\n- Label the y-axis as \"Visitor Count\" with a range that fits the provided data.\n- Include a title at the top with the text \"Museum Visitors per Day\".\n- Use orange-colored bars with black edges to differentiate each day.\n- Add horizontal grid lines along the y-axis to improve readability.\n- Include a legend in the bottom right corner with the label \"Daily Count\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000827_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Museum Visitors per Day",
                                "Days of Week",
                                "Visitor Count",
                                "Mon",
                                "Tue",
                                "Wed",
                                "Thu",
                                "Fri",
                                "Sat",
                                "Sun",
                                "Daily Count",
                                "orange",
                                "black"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000827_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000827_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many bars represent the days of the week?",
                                "What are the tick labels on the x-axis?",
                                "What is the label for the x-axis?",
                                "What is the label for the y-axis?",
                                "What is the title displayed at the top of the chart?",
                                "What are the colors used for the bars and their edges?",
                                "Are there grid lines displayed, and if so, where?",
                                "What is the position and label of the legend?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000827_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "7",
                                "Mon, Tue, Wed, Thu, Fri, Sat, Sun",
                                "Days of Week",
                                "Visitor Count",
                                "Museum Visitors per Day",
                                "Orange bars with black edges",
                                "Horizontal grid lines along the y-axis",
                                "Bottom right corner with label 'Daily Count'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot visualizing car engine displacement versus mileage using a preset data array.\n\nFeature Requirements:\n- Create a scatter plot using 20 data points evenly distributed along both axes.\n- Label the x-axis as \"Engine Displacement (cc)\" and the y-axis as \"Mileage (mpg)\".\n- Set the title of the plot to \"Engine Displacement vs. Mileage\".\n- Use red circular markers for each data point with a marker size of 50.\n- Display grid lines on both axes with ticks incremented appropriately.\n- Set the x-axis range from 1000 to 5000 cc and the y-axis range from 10 to 50 mpg.\n- Include a legend located in the lower right corner with the label \"Car Data\".",
            "task_id": "000828",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many data points are plotted on the scatter plot?",
                "What is the title of the plot?",
                "What label appears on the x-axis?",
                "What label appears on the y-axis?",
                "What color and shape are the markers in the scatter plot?",
                "What is the marker size used in the scatter plot?",
                "What is the range set on the x-axis?",
                "What is the range set on the y-axis?",
                "Is there a legend displayed on the plot?",
                "Where is the legend located and what does it label?"
            ],
            "VQA_answers": [
                "20",
                "Engine Displacement vs. Mileage",
                "Engine Displacement (cc)",
                "Mileage (mpg)",
                "Red circular markers",
                "50",
                "1000 to 5000 cc",
                "10 to 50 mpg",
                "Yes",
                "Lower right corner with the label 'Car Data'"
            ],
            "raw_output_metric": [
                "Engine Displacement (cc)",
                "Mileage (mpg)",
                "Engine Displacement vs. Mileage",
                "Car Data",
                "plt.scatter",
                "marker='o'",
                "color='red'",
                "s=50",
                "20",
                "1000",
                "5000",
                "10",
                "50",
                "plt.xlabel",
                "plt.ylabel",
                "plt.title",
                "plt.legend",
                "plt.grid"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000828_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot visualizing car engine displacement versus mileage using a preset data array.\n\nFeature Requirements:\n- Create a scatter plot using 20 data points evenly distributed along both axes.\n- Label the x-axis as \"Engine Displacement (cc)\" and the y-axis as \"Mileage (mpg)\".\n- Set the title of the plot to \"Engine Displacement vs. Mileage\".\n- Use red circular markers for each data point with a marker size of 50.\n- Display grid lines on both axes with ticks incremented appropriately.\n- Set the x-axis range from 1000 to 5000 cc and the y-axis range from 10 to 50 mpg.\n- Include a legend located in the lower right corner with the label \"Car Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000828_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Engine Displacement (cc)",
                                "Mileage (mpg)",
                                "Engine Displacement vs. Mileage",
                                "Car Data",
                                "plt.scatter",
                                "marker='o'",
                                "color='red'",
                                "s=50",
                                "20",
                                "1000",
                                "5000",
                                "10",
                                "50",
                                "plt.xlabel",
                                "plt.ylabel",
                                "plt.title",
                                "plt.legend",
                                "plt.grid"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000828_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000828_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many data points are plotted on the scatter plot?",
                                "What is the title of the plot?",
                                "What label appears on the x-axis?",
                                "What label appears on the y-axis?",
                                "What color and shape are the markers in the scatter plot?",
                                "What is the marker size used in the scatter plot?",
                                "What is the range set on the x-axis?",
                                "What is the range set on the y-axis?",
                                "Is there a legend displayed on the plot?",
                                "Where is the legend located and what does it label?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000828_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "20",
                                "Engine Displacement vs. Mileage",
                                "Engine Displacement (cc)",
                                "Mileage (mpg)",
                                "Red circular markers",
                                "50",
                                "1000 to 5000 cc",
                                "10 to 50 mpg",
                                "Yes",
                                "Lower right corner with the label 'Car Data'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing altitude and wind speed measurements.\n\nFeature Requirements:\n- Create a scatter plot using red circular markers for each data point.\n- Label the x-axis as \"Altitude (m)\" and the y-axis as \"Wind Speed (km/h)\".\n- Display a title at the top reading \"Wind Speed vs Altitude\".\n- Plot exactly 12 data points, ensuring the x-axis values range from 0 to 5000 and the y-axis values span from 5 to 30.\n- Add dashed grid lines to both the x and y axes.\n- Include a legend in the lower right corner with the label \"Data Points\".\n- Annotate each data point by displaying its altitude value next to the marker in a small font.\n- Set the x-axis limits from 0 to 5000 and the y-axis limits from 0 to 35.\n- Use a light grey background color for the plot area to enhance marker visibility.",
            "task_id": "000829",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the x-axis label of the scatter plot?",
                "What is the y-axis label of the scatter plot?",
                "What is the title displayed at the top of the plot?",
                "How many data points are plotted in the scatter plot?",
                "What color and shape are the markers used for the data points?",
                "Where is the legend positioned and what label does it display?",
                "What type of grid lines are present on the plot?",
                "What are the set limits for the x-axis and y-axis?"
            ],
            "VQA_answers": [
                "Altitude (m)",
                "Wind Speed (km/h)",
                "Wind Speed vs Altitude",
                "12",
                "Red circular markers",
                "Lower right corner with the label 'Data Points'",
                "Dashed grid lines on both the x and y axes",
                "x-axis: 0 to 5000; y-axis: 0 to 35"
            ],
            "raw_output_metric": [
                "plt.scatter",
                "marker='o'",
                "color='red'",
                "Altitude (m)",
                "Wind Speed (km/h)",
                "Wind Speed vs Altitude",
                "plt.xlim(0, 5000)",
                "plt.ylim(0, 35)",
                "linestyle='--'",
                "Data Points",
                "annotate",
                "12",
                "lightgrey"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000829_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing altitude and wind speed measurements.\n\nFeature Requirements:\n- Create a scatter plot using red circular markers for each data point.\n- Label the x-axis as \"Altitude (m)\" and the y-axis as \"Wind Speed (km/h)\".\n- Display a title at the top reading \"Wind Speed vs Altitude\".\n- Plot exactly 12 data points, ensuring the x-axis values range from 0 to 5000 and the y-axis values span from 5 to 30.\n- Add dashed grid lines to both the x and y axes.\n- Include a legend in the lower right corner with the label \"Data Points\".\n- Annotate each data point by displaying its altitude value next to the marker in a small font.\n- Set the x-axis limits from 0 to 5000 and the y-axis limits from 0 to 35.\n- Use a light grey background color for the plot area to enhance marker visibility."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000829_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "plt.scatter",
                                "marker='o'",
                                "color='red'",
                                "Altitude (m)",
                                "Wind Speed (km/h)",
                                "Wind Speed vs Altitude",
                                "plt.xlim(0, 5000)",
                                "plt.ylim(0, 35)",
                                "linestyle='--'",
                                "Data Points",
                                "annotate",
                                "12",
                                "lightgrey"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000829_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000829_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the x-axis label of the scatter plot?",
                                "What is the y-axis label of the scatter plot?",
                                "What is the title displayed at the top of the plot?",
                                "How many data points are plotted in the scatter plot?",
                                "What color and shape are the markers used for the data points?",
                                "Where is the legend positioned and what label does it display?",
                                "What type of grid lines are present on the plot?",
                                "What are the set limits for the x-axis and y-axis?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000829_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Altitude (m)",
                                "Wind Speed (km/h)",
                                "Wind Speed vs Altitude",
                                "12",
                                "Red circular markers",
                                "Lower right corner with the label 'Data Points'",
                                "Dashed grid lines on both the x and y axes",
                                "x-axis: 0 to 5000; y-axis: 0 to 35"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart visualizing monthly regional sales performance.\n\nFeature Requirements:\n- Display a bar chart with the x-axis labeled as \"Months\" and the y-axis labeled as \"Sales (Units)\".\n- Include a centered title at the top with the text \"Monthly Sales Performance\".\n- Plot exactly 12 bars, each representing one month from January to December.\n- Use a distinct color for each bar selected from a predefined set of 12 colors.\n- Add numerical annotations above each bar displaying the exact sales figures.\n- Configure x-axis ticks to correspond to the abbreviated month names (Jan, Feb, ..., Dec).\n- Apply horizontal grid lines on the y-axis to enable easier comparison of sales values.\n- Automatically adjust the y-axis range based on the provided sales data.",
            "task_id": "000830",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the label for the x-axis?",
                "What is the label for the y-axis?",
                "What is the centered title at the top of the chart?",
                "How many bars are displayed in the chart?",
                "Are the x-axis ticks labeled with abbreviated month names (e.g., Jan, Feb, etc.)?",
                "Does each bar use a distinct color from a predefined set of 12 colors?",
                "Are numerical sales figures annotated above each bar?",
                "Are horizontal grid lines applied on the y-axis for easier comparison?"
            ],
            "VQA_answers": [
                "Months",
                "Sales (Units)",
                "Monthly Sales Performance",
                "12",
                "Yes",
                "Yes",
                "Yes",
                "Yes"
            ],
            "raw_output_metric": [
                "import matplotlib.pyplot as plt",
                "plt.bar",
                "plt.xlabel('Months')",
                "plt.ylabel('Sales (Units)')",
                "plt.title('Monthly Sales Performance')",
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
                "plt.xticks",
                "plt.grid"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000830_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart visualizing monthly regional sales performance.\n\nFeature Requirements:\n- Display a bar chart with the x-axis labeled as \"Months\" and the y-axis labeled as \"Sales (Units)\".\n- Include a centered title at the top with the text \"Monthly Sales Performance\".\n- Plot exactly 12 bars, each representing one month from January to December.\n- Use a distinct color for each bar selected from a predefined set of 12 colors.\n- Add numerical annotations above each bar displaying the exact sales figures.\n- Configure x-axis ticks to correspond to the abbreviated month names (Jan, Feb, ..., Dec).\n- Apply horizontal grid lines on the y-axis to enable easier comparison of sales values.\n- Automatically adjust the y-axis range based on the provided sales data."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000830_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "import matplotlib.pyplot as plt",
                                "plt.bar",
                                "plt.xlabel('Months')",
                                "plt.ylabel('Sales (Units)')",
                                "plt.title('Monthly Sales Performance')",
                                "Jan",
                                "Feb",
                                "Mar",
                                "Apr",
                                "May",
                                "Jun",
                                "Jul",
                                "Aug",
                                "Sep",
                                "Oct",
                                "Nov",
                                "Dec",
                                "plt.xticks",
                                "plt.grid"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000830_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000830_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the label for the x-axis?",
                                "What is the label for the y-axis?",
                                "What is the centered title at the top of the chart?",
                                "How many bars are displayed in the chart?",
                                "Are the x-axis ticks labeled with abbreviated month names (e.g., Jan, Feb, etc.)?",
                                "Does each bar use a distinct color from a predefined set of 12 colors?",
                                "Are numerical sales figures annotated above each bar?",
                                "Are horizontal grid lines applied on the y-axis for easier comparison?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000830_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Months",
                                "Sales (Units)",
                                "Monthly Sales Performance",
                                "12",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot illustrating the relationship between individuals' ages and their annual incomes.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Age (years)\" and the y-axis labeled as \"Annual Income (USD)\".\n- Plot exactly 15 data points representing individual samples.\n- Use red circular markers with a marker size set to 50.\n- Add a centered title at the top with the text \"Income vs. Age Distribution\".\n- Set the x-axis range from 0 to 100 and the y-axis range from 0 to 50000.\n- Incorporate dashed grey grid lines on both the x and y axes.\n- Include a legend positioned in the lower right corner with the label \"Sample Data\".\n- Display a light gray background for the plotting area.",
            "task_id": "000831",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the label on the x-axis?",
                "What is the label on the y-axis?",
                "How many data points are plotted?",
                "What color and shape are the markers used?",
                "What is the marker size set to?",
                "What is the title displayed at the top?",
                "What are the x-axis and y-axis ranges?",
                "How are the grid lines styled?",
                "Where is the legend positioned and what label does it display?",
                "What is the background color of the plotting area?"
            ],
            "VQA_answers": [
                "Age (years)",
                "Annual Income (USD)",
                "15",
                "Red circular markers",
                "50",
                "Income vs. Age Distribution",
                "X-axis: 0 to 100, Y-axis: 0 to 50000",
                "Dashed grey lines on both axes",
                "Lower right corner; labeled 'Sample Data'",
                "Light gray"
            ],
            "raw_output_metric": [
                "Age (years)",
                "Annual Income (USD)",
                "Income vs. Age Distribution",
                "Sample Data",
                "15",
                "red",
                "50",
                "0",
                "100",
                "50000",
                "--",
                "grey",
                "lightgray"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000831_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot illustrating the relationship between individuals' ages and their annual incomes.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Age (years)\" and the y-axis labeled as \"Annual Income (USD)\".\n- Plot exactly 15 data points representing individual samples.\n- Use red circular markers with a marker size set to 50.\n- Add a centered title at the top with the text \"Income vs. Age Distribution\".\n- Set the x-axis range from 0 to 100 and the y-axis range from 0 to 50000.\n- Incorporate dashed grey grid lines on both the x and y axes.\n- Include a legend positioned in the lower right corner with the label \"Sample Data\".\n- Display a light gray background for the plotting area."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000831_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Age (years)",
                                "Annual Income (USD)",
                                "Income vs. Age Distribution",
                                "Sample Data",
                                "15",
                                "red",
                                "50",
                                "0",
                                "100",
                                "50000",
                                "--",
                                "grey",
                                "lightgray"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000831_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000831_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the label on the x-axis?",
                                "What is the label on the y-axis?",
                                "How many data points are plotted?",
                                "What color and shape are the markers used?",
                                "What is the marker size set to?",
                                "What is the title displayed at the top?",
                                "What are the x-axis and y-axis ranges?",
                                "How are the grid lines styled?",
                                "Where is the legend positioned and what label does it display?",
                                "What is the background color of the plotting area?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000831_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Age (years)",
                                "Annual Income (USD)",
                                "15",
                                "Red circular markers",
                                "50",
                                "Income vs. Age Distribution",
                                "X-axis: 0 to 100, Y-axis: 0 to 50000",
                                "Dashed grey lines on both axes",
                                "Lower right corner; labeled 'Sample Data'",
                                "Light gray"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart representing monthly website visitor counts.\n\nFeature Requirements:\n- Create a bar chart with exactly 12 bars, each representing a different month of the year.\n- Set the x-axis label to \"Month\" and the y-axis label to \"Visitor Count\".\n- Include a title at the top with the text \"Monthly Website Traffic\".\n- Use distinct shades of orange for each bar to differentiate the months.\n- Add numerical labels above each bar that display the exact visitor counts.\n- Configure the y-axis to range from 0 to 5000 to appropriately reflect the visitor data.\n- Ensure grid lines appear on the y-axis to aid in reading the values.\n- Place a legend at the upper right corner with the label \"Visitor Data\".",
            "task_id": "000832",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many bars does the chart contain?",
                "What does each bar represent?",
                "What is the label on the x-axis?",
                "What is the label on the y-axis?",
                "What is the chart title?",
                "What color scheme is used for the bars?",
                "Are numerical labels displayed above each bar?",
                "What is the y-axis range?",
                "Are grid lines present, and if so, on which axis?",
                "Where is the legend located and what does it say?"
            ],
            "VQA_answers": [
                "12",
                "A different month of the year",
                "Month",
                "Visitor Count",
                "Monthly Website Traffic",
                "Distinct shades of orange",
                "Yes",
                "0 to 5000",
                "Y-axis",
                "Upper right corner; Visitor Data"
            ],
            "raw_output_metric": [
                "Monthly Website Traffic",
                "Month",
                "Visitor Count",
                "Visitor Data",
                "0",
                "5000",
                "orange",
                "12"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000832_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart representing monthly website visitor counts.\n\nFeature Requirements:\n- Create a bar chart with exactly 12 bars, each representing a different month of the year.\n- Set the x-axis label to \"Month\" and the y-axis label to \"Visitor Count\".\n- Include a title at the top with the text \"Monthly Website Traffic\".\n- Use distinct shades of orange for each bar to differentiate the months.\n- Add numerical labels above each bar that display the exact visitor counts.\n- Configure the y-axis to range from 0 to 5000 to appropriately reflect the visitor data.\n- Ensure grid lines appear on the y-axis to aid in reading the values.\n- Place a legend at the upper right corner with the label \"Visitor Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000832_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Monthly Website Traffic",
                                "Month",
                                "Visitor Count",
                                "Visitor Data",
                                "0",
                                "5000",
                                "orange",
                                "12"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000832_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000832_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many bars does the chart contain?",
                                "What does each bar represent?",
                                "What is the label on the x-axis?",
                                "What is the label on the y-axis?",
                                "What is the chart title?",
                                "What color scheme is used for the bars?",
                                "Are numerical labels displayed above each bar?",
                                "What is the y-axis range?",
                                "Are grid lines present, and if so, on which axis?",
                                "Where is the legend located and what does it say?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000832_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "12",
                                "A different month of the year",
                                "Month",
                                "Visitor Count",
                                "Monthly Website Traffic",
                                "Distinct shades of orange",
                                "Yes",
                                "0 to 5000",
                                "Y-axis",
                                "Upper right corner; Visitor Data"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using predefined data arrays representing daily sales figures for a week.\n\nFeature Requirements:\n- Display a bar chart with exactly 7 bars, each representing a day of the week (Monday through Sunday).\n- Label the x-axis as \"Days of the Week\" and the y-axis as \"Sales (Units)\".\n- Include a title at the top of the plot with the text \"Weekly Sales Report\".\n- Use a distinct color for each bar selected from a predefined color palette.\n- Add horizontal grid lines corresponding to the y-axis values to enhance visualization.\n- Set the y-axis range from 0 to the maximum sales value incremented by 10.\n- Display the numerical sales value at the top of each bar.\n- Include a legend in the lower right corner with the label \"Daily Sales\".",
            "task_id": "000833",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many bars are displayed on the chart?",
                "Which days of the week are represented on the x-axis?",
                "What is the label of the x-axis?",
                "What is the label of the y-axis?",
                "What is the title of the plot?",
                "How is the color of each bar determined?",
                "Where is the legend located and what does it display?",
                "What is the y-axis range set to?",
                "What additional information is shown on each bar?"
            ],
            "VQA_answers": [
                "7",
                "Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday",
                "Days of the Week",
                "Sales (Units)",
                "Weekly Sales Report",
                "Each bar uses a distinct color from a predefined color palette",
                "Lower right corner with the label 'Daily Sales'",
                "From 0 to the maximum sales value incremented by 10",
                "The numerical sales value is displayed at the top of each bar"
            ],
            "raw_output_metric": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday",
                "Days of the Week",
                "Sales (Units)",
                "Weekly Sales Report",
                "Daily Sales"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000833_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using predefined data arrays representing daily sales figures for a week.\n\nFeature Requirements:\n- Display a bar chart with exactly 7 bars, each representing a day of the week (Monday through Sunday).\n- Label the x-axis as \"Days of the Week\" and the y-axis as \"Sales (Units)\".\n- Include a title at the top of the plot with the text \"Weekly Sales Report\".\n- Use a distinct color for each bar selected from a predefined color palette.\n- Add horizontal grid lines corresponding to the y-axis values to enhance visualization.\n- Set the y-axis range from 0 to the maximum sales value incremented by 10.\n- Display the numerical sales value at the top of each bar.\n- Include a legend in the lower right corner with the label \"Daily Sales\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000833_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Monday",
                                "Tuesday",
                                "Wednesday",
                                "Thursday",
                                "Friday",
                                "Saturday",
                                "Sunday",
                                "Days of the Week",
                                "Sales (Units)",
                                "Weekly Sales Report",
                                "Daily Sales"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000833_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000833_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many bars are displayed on the chart?",
                                "Which days of the week are represented on the x-axis?",
                                "What is the label of the x-axis?",
                                "What is the label of the y-axis?",
                                "What is the title of the plot?",
                                "How is the color of each bar determined?",
                                "Where is the legend located and what does it display?",
                                "What is the y-axis range set to?",
                                "What additional information is shown on each bar?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000833_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "7",
                                "Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday",
                                "Days of the Week",
                                "Sales (Units)",
                                "Weekly Sales Report",
                                "Each bar uses a distinct color from a predefined color palette",
                                "Lower right corner with the label 'Daily Sales'",
                                "From 0 to the maximum sales value incremented by 10",
                                "The numerical sales value is displayed at the top of each bar"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot to illustrate the relationship between study time and exam performance using predefined data arrays.\n\nFeature Requirements:\n- Plot exactly 12 data points representing individual students with study times on the x-axis and exam scores on the y-axis.\n- Label the x-axis as \"Study Time (hours)\" and the y-axis as \"Exam Score (%)\".\n- Use circular markers colored in dark green to represent each data point.\n- Include a title at the top of the plot with the text \"Study Time vs Exam Performance\".\n- Add dashed grid lines to both the x and y axes to improve readability.\n- Set the x-axis range from 0 to 10 and the y-axis range from 0 to 100.",
            "task_id": "000834",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many data points are plotted?",
                "What is the label on the x-axis?",
                "What is the label on the y-axis?",
                "What color are the markers?",
                "What shape are the markers?",
                "What is the title of the plot?",
                "What style are the grid lines?",
                "What is the range set for the x-axis?",
                "What is the range set for the y-axis?"
            ],
            "VQA_answers": [
                "12",
                "Study Time (hours)",
                "Exam Score (%)",
                "dark green",
                "circular",
                "Study Time vs Exam Performance",
                "dashed",
                "0 to 10",
                "0 to 100"
            ],
            "raw_output_metric": [
                "Study Time vs Exam Performance",
                "Study Time (hours)",
                "Exam Score (%)",
                "darkgreen",
                "marker='o'",
                "plt.scatter",
                "plt.xlim(0, 10)",
                "plt.ylim(0, 100)",
                "plt.grid",
                "linestyle='--'",
                "12"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000834_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot to illustrate the relationship between study time and exam performance using predefined data arrays.\n\nFeature Requirements:\n- Plot exactly 12 data points representing individual students with study times on the x-axis and exam scores on the y-axis.\n- Label the x-axis as \"Study Time (hours)\" and the y-axis as \"Exam Score (%)\".\n- Use circular markers colored in dark green to represent each data point.\n- Include a title at the top of the plot with the text \"Study Time vs Exam Performance\".\n- Add dashed grid lines to both the x and y axes to improve readability.\n- Set the x-axis range from 0 to 10 and the y-axis range from 0 to 100."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000834_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Study Time vs Exam Performance",
                                "Study Time (hours)",
                                "Exam Score (%)",
                                "darkgreen",
                                "marker='o'",
                                "plt.scatter",
                                "plt.xlim(0, 10)",
                                "plt.ylim(0, 100)",
                                "plt.grid",
                                "linestyle='--'",
                                "12"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000834_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000834_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many data points are plotted?",
                                "What is the label on the x-axis?",
                                "What is the label on the y-axis?",
                                "What color are the markers?",
                                "What shape are the markers?",
                                "What is the title of the plot?",
                                "What style are the grid lines?",
                                "What is the range set for the x-axis?",
                                "What is the range set for the y-axis?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000834_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "12",
                                "Study Time (hours)",
                                "Exam Score (%)",
                                "dark green",
                                "circular",
                                "Study Time vs Exam Performance",
                                "dashed",
                                "0 to 10",
                                "0 to 100"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using predefined data arrays representing product categories and their associated sales figures.\n\nFeature Requirements:\n- Create a bar chart with the x-axis labeled as \"Product Categories\" and the y-axis labeled as \"Sales Figures\".\n- Use exactly 8 bars each representing a unique product category.\n- Assign a solid green fill color to the bars and a thin black outline for each bar.\n- Set the chart title to \"Monthly Product Sales\" and center it at the top of the plot.\n- Display the exact sales number above each bar as data labels.\n- Establish the y-axis range from 0 to 200 to accommodate all sales figures.\n- Add grid lines only on the y-axis to improve readability.\n- Place a legend in the lower right corner with the label \"Sales Data\".\n- Define the x-axis ticks to align precisely under each corresponding bar.",
            "task_id": "000835",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the chart title displayed at the top?",
                "What is the label for the x-axis?",
                "What is the label for the y-axis?",
                "How many bars are displayed in the chart?",
                "What fill color and outline are used for the bars?",
                "What is the y-axis range in the chart?",
                "Are data labels showing exact sales numbers visible above each bar?",
                "Where is the legend placed and what label does it have?",
                "Are grid lines added on both axes or only on one?"
            ],
            "VQA_answers": [
                "Monthly Product Sales",
                "Product Categories",
                "Sales Figures",
                "8",
                "Solid green fill with a thin black outline",
                "0 to 200",
                "Yes",
                "Lower right corner with label 'Sales Data'",
                "Only on the y-axis"
            ],
            "raw_output_metric": [
                "Monthly Product Sales",
                "Product Categories",
                "Sales Figures",
                "Sales Data",
                "green",
                "black",
                "0",
                "200",
                "8"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000835_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using predefined data arrays representing product categories and their associated sales figures.\n\nFeature Requirements:\n- Create a bar chart with the x-axis labeled as \"Product Categories\" and the y-axis labeled as \"Sales Figures\".\n- Use exactly 8 bars each representing a unique product category.\n- Assign a solid green fill color to the bars and a thin black outline for each bar.\n- Set the chart title to \"Monthly Product Sales\" and center it at the top of the plot.\n- Display the exact sales number above each bar as data labels.\n- Establish the y-axis range from 0 to 200 to accommodate all sales figures.\n- Add grid lines only on the y-axis to improve readability.\n- Place a legend in the lower right corner with the label \"Sales Data\".\n- Define the x-axis ticks to align precisely under each corresponding bar."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000835_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Monthly Product Sales",
                                "Product Categories",
                                "Sales Figures",
                                "Sales Data",
                                "green",
                                "black",
                                "0",
                                "200",
                                "8"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000835_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000835_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the chart title displayed at the top?",
                                "What is the label for the x-axis?",
                                "What is the label for the y-axis?",
                                "How many bars are displayed in the chart?",
                                "What fill color and outline are used for the bars?",
                                "What is the y-axis range in the chart?",
                                "Are data labels showing exact sales numbers visible above each bar?",
                                "Where is the legend placed and what label does it have?",
                                "Are grid lines added on both axes or only on one?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000835_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Monthly Product Sales",
                                "Product Categories",
                                "Sales Figures",
                                "8",
                                "Solid green fill with a thin black outline",
                                "0 to 200",
                                "Yes",
                                "Lower right corner with label 'Sales Data'",
                                "Only on the y-axis"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar plot displaying wind speed measurements at various elevation levels.\n\nFeature Requirements:\n- Create a bar plot with 8 discrete bars representing different elevation categories.\n- Label the x-axis as \"Elevation (m)\" with values distributed evenly between 0 and 3500.\n- Label the y-axis as \"Wind Speed (m/s)\" displaying a range from 0 to 25.\n- Color each bar with a distinct shade of green derived from a continuous gradient.\n- Place the title \"Wind Speed by Elevation\" prominently at the top of the plot.\n- Add numerical annotations above each bar showing the exact wind speed value.\n- Include grid lines along the y-axis only to improve readability.\n- Ensure that all elevation values are evenly spaced and clearly visible on the x-axis.",
            "task_id": "000836",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many discrete bars represent different elevation categories?",
                "What is the x-axis label?",
                "What is the range of elevation values on the x-axis?",
                "What is the y-axis label?",
                "What is the wind speed range on the y-axis?",
                "How are the bars colored?",
                "What is the title of the plot?",
                "Are there numerical annotations above each bar?",
                "Where are the grid lines added?"
            ],
            "VQA_answers": [
                "8",
                "Elevation (m)",
                "Evenly distributed between 0 and 3500",
                "Wind Speed (m/s)",
                "0 to 25",
                "Each bar has a distinct shade of green derived from a continuous gradient",
                "Wind Speed by Elevation",
                "Yes, showing the exact wind speed value",
                "Along the y-axis only"
            ],
            "raw_output_metric": [
                "Elevation (m)",
                "Wind Speed (m/s)",
                "Wind Speed by Elevation",
                "plt.bar(",
                "np.linspace(0, 3500, 8)",
                "plt.ylim(0, 25)",
                "plt.grid(axis='y')",
                "get_cmap('Greens')",
                "annotate("
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000836_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar plot displaying wind speed measurements at various elevation levels.\n\nFeature Requirements:\n- Create a bar plot with 8 discrete bars representing different elevation categories.\n- Label the x-axis as \"Elevation (m)\" with values distributed evenly between 0 and 3500.\n- Label the y-axis as \"Wind Speed (m/s)\" displaying a range from 0 to 25.\n- Color each bar with a distinct shade of green derived from a continuous gradient.\n- Place the title \"Wind Speed by Elevation\" prominently at the top of the plot.\n- Add numerical annotations above each bar showing the exact wind speed value.\n- Include grid lines along the y-axis only to improve readability.\n- Ensure that all elevation values are evenly spaced and clearly visible on the x-axis."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000836_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Elevation (m)",
                                "Wind Speed (m/s)",
                                "Wind Speed by Elevation",
                                "plt.bar(",
                                "np.linspace(0, 3500, 8)",
                                "plt.ylim(0, 25)",
                                "plt.grid(axis='y')",
                                "get_cmap('Greens')",
                                "annotate("
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000836_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000836_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many discrete bars represent different elevation categories?",
                                "What is the x-axis label?",
                                "What is the range of elevation values on the x-axis?",
                                "What is the y-axis label?",
                                "What is the wind speed range on the y-axis?",
                                "How are the bars colored?",
                                "What is the title of the plot?",
                                "Are there numerical annotations above each bar?",
                                "Where are the grid lines added?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000836_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "8",
                                "Elevation (m)",
                                "Evenly distributed between 0 and 3500",
                                "Wind Speed (m/s)",
                                "0 to 25",
                                "Each bar has a distinct shade of green derived from a continuous gradient",
                                "Wind Speed by Elevation",
                                "Yes, showing the exact wind speed value",
                                "Along the y-axis only"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using provided data arrays representing wind speed and humidity measurements.\n\nFeature Requirements:\n- Plot exactly 15 data points evenly distributed along the x-axis representing wind speed values.\n- Label the x-axis as \"Wind Speed (km/h)\" and the y-axis as \"Humidity (%)\".\n- Use red circular markers for each data point.\n- Set the plot title to \"Wind Speed vs Humidity Measurements\".\n- Include grid lines on the plot to clearly delineate both axes.\n- Set the x-axis range from 0 to 25 and the y-axis range from 30 to 100.\n- Add a legend positioned at the lower right with the label \"Data Points\".",
            "task_id": "000837",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many data points are visible in the scatter plot?",
                "Are the data points represented by red circular markers?",
                "What label is present on the x-axis?",
                "What label is used for the y-axis?",
                "What is the title of the plot?",
                "Can grid lines be seen to delineate both axes?",
                "What is the range of values displayed on the x-axis?",
                "What is the range of values displayed on the y-axis?",
                "Is there a legend on the plot and where is it located?"
            ],
            "VQA_answers": [
                "15",
                "Yes",
                "Wind Speed (km/h)",
                "Humidity (%)",
                "Wind Speed vs Humidity Measurements",
                "Yes",
                "0 to 25",
                "30 to 100",
                "Yes, at the lower right with the label 'Data Points'"
            ],
            "raw_output_metric": [
                "import matplotlib.pyplot as plt",
                "plt.scatter",
                "Wind Speed (km/h)",
                "Humidity (%)",
                "Wind Speed vs Humidity Measurements",
                "red",
                "o",
                "plt.xlim",
                "plt.ylim",
                "plt.grid",
                "plt.legend",
                "lower right",
                "Data Points",
                "15"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000837_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using provided data arrays representing wind speed and humidity measurements.\n\nFeature Requirements:\n- Plot exactly 15 data points evenly distributed along the x-axis representing wind speed values.\n- Label the x-axis as \"Wind Speed (km/h)\" and the y-axis as \"Humidity (%)\".\n- Use red circular markers for each data point.\n- Set the plot title to \"Wind Speed vs Humidity Measurements\".\n- Include grid lines on the plot to clearly delineate both axes.\n- Set the x-axis range from 0 to 25 and the y-axis range from 30 to 100.\n- Add a legend positioned at the lower right with the label \"Data Points\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000837_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "import matplotlib.pyplot as plt",
                                "plt.scatter",
                                "Wind Speed (km/h)",
                                "Humidity (%)",
                                "Wind Speed vs Humidity Measurements",
                                "red",
                                "o",
                                "plt.xlim",
                                "plt.ylim",
                                "plt.grid",
                                "plt.legend",
                                "lower right",
                                "Data Points",
                                "15"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000837_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000837_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many data points are visible in the scatter plot?",
                                "Are the data points represented by red circular markers?",
                                "What label is present on the x-axis?",
                                "What label is used for the y-axis?",
                                "What is the title of the plot?",
                                "Can grid lines be seen to delineate both axes?",
                                "What is the range of values displayed on the x-axis?",
                                "What is the range of values displayed on the y-axis?",
                                "Is there a legend on the plot and where is it located?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000837_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "15",
                                "Yes",
                                "Wind Speed (km/h)",
                                "Humidity (%)",
                                "Wind Speed vs Humidity Measurements",
                                "Yes",
                                "0 to 25",
                                "30 to 100",
                                "Yes, at the lower right with the label 'Data Points'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using pre-defined data arrays representing sales figures for six different regions.\n\nFeature Requirements:\n- Create a bar chart with exactly 6 bars, each representing one of the following regions: North, South, East, West, Central, and International.\n- Label the x-axis as \"Regions\" and the y-axis as \"Sales (in thousands)\".\n- Use distinct colors for each bar selected from a sequential colormap such as 'viridis'.\n- Include a centered title at the top of the plot with the text \"Regional Sales Figures\".\n- Set the y-axis range from 0 to a value that is 20% greater than the highest sales figure.\n- Add grid lines only on the y-axis to improve data readability.\n- Annotate each bar with its corresponding sales figure displayed above the bar.\n- Specify the figure size to be 10 inches wide by 6 inches tall.",
            "task_id": "000838",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many bars are displayed in the chart?",
                "Which regions are represented on the x-axis?",
                "What is the label on the x-axis?",
                "What is the label on the y-axis?",
                "What is the title of the chart?",
                "Are grid lines shown and on which axis?",
                "Are the sales figures annotated on the chart?",
                "Are the bars uniquely colored?",
                "What are the dimensions of the figure?"
            ],
            "VQA_answers": [
                "6",
                "North, South, East, West, Central, International",
                "Regions",
                "Sales (in thousands)",
                "Regional Sales Figures",
                "Grid lines are shown only on the y-axis",
                "Yes, each bar has its corresponding sales figure displayed above it",
                "Yes, each bar uses a distinct color from the 'viridis' colormap",
                "10 inches wide by 6 inches tall"
            ],
            "raw_output_metric": [
                "North",
                "South",
                "East",
                "West",
                "Central",
                "International",
                "Regions",
                "Sales (in thousands)",
                "Regional Sales Figures",
                "viridis",
                "figsize=(10,6)"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000838_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using pre-defined data arrays representing sales figures for six different regions.\n\nFeature Requirements:\n- Create a bar chart with exactly 6 bars, each representing one of the following regions: North, South, East, West, Central, and International.\n- Label the x-axis as \"Regions\" and the y-axis as \"Sales (in thousands)\".\n- Use distinct colors for each bar selected from a sequential colormap such as 'viridis'.\n- Include a centered title at the top of the plot with the text \"Regional Sales Figures\".\n- Set the y-axis range from 0 to a value that is 20% greater than the highest sales figure.\n- Add grid lines only on the y-axis to improve data readability.\n- Annotate each bar with its corresponding sales figure displayed above the bar.\n- Specify the figure size to be 10 inches wide by 6 inches tall."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000838_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "North",
                                "South",
                                "East",
                                "West",
                                "Central",
                                "International",
                                "Regions",
                                "Sales (in thousands)",
                                "Regional Sales Figures",
                                "viridis",
                                "figsize=(10,6)"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000838_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000838_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many bars are displayed in the chart?",
                                "Which regions are represented on the x-axis?",
                                "What is the label on the x-axis?",
                                "What is the label on the y-axis?",
                                "What is the title of the chart?",
                                "Are grid lines shown and on which axis?",
                                "Are the sales figures annotated on the chart?",
                                "Are the bars uniquely colored?",
                                "What are the dimensions of the figure?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000838_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "6",
                                "North, South, East, West, Central, International",
                                "Regions",
                                "Sales (in thousands)",
                                "Regional Sales Figures",
                                "Grid lines are shown only on the y-axis",
                                "Yes, each bar has its corresponding sales figure displayed above it",
                                "Yes, each bar uses a distinct color from the 'viridis' colormap",
                                "10 inches wide by 6 inches tall"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing students' study hours and corresponding exam scores.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Study Hours\" and the y-axis labeled as \"Exam Score\".\n- Include a title at the top of the plot with the text \"Study Hours vs Exam Scores\".\n- Plot exactly 12 data points representing data collected from individual students.\n- Use red circular markers for each data point.\n- Overlay a dashed green line that represents the best-fit regression line calculated from the data.\n- Add grid lines exclusively along the y-axis to aid in assessing score intervals.\n- Set the x-axis range from 0 to 10 and the y-axis range from 0 to 100.\n- Place a legend in the lower right corner with the label \"Student Data\".\n- Ensure each marker is large enough (e.g., marker size 8) to be easily visible without overlapping excessively.",
            "task_id": "000839",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the x-axis label on the scatter plot?",
                "What is the label on the y-axis?",
                "What title is displayed at the top of the plot?",
                "How many data points are plotted on the scatter plot?",
                "What color and shape are the markers used for the data points?",
                "What type of line is overlaid to represent the best-fit regression line?",
                "Which axis has grid lines displayed?",
                "What are the specified ranges for the x-axis and y-axis?",
                "Where is the legend placed and what label does it display?",
                "What is the approximate marker size used in the scatter plot?"
            ],
            "VQA_answers": [
                "Study Hours",
                "Exam Score",
                "Study Hours vs Exam Scores",
                "12",
                "Red circular markers",
                "Dashed green line",
                "Only the y-axis",
                "x-axis: 0 to 10, y-axis: 0 to 100",
                "Lower right corner, label 'Student Data'",
                "Size 8"
            ],
            "raw_output_metric": [
                "Study Hours",
                "Exam Score",
                "Study Hours vs Exam Scores",
                "Student Data",
                "plt.scatter",
                "red",
                "o",
                "markersize=8",
                "plt.plot",
                "linestyle='--'",
                "green",
                "plt.xlim(0, 10)",
                "plt.ylim(0, 100)",
                "plt.grid",
                "axis='y'",
                "12"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000839_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing students' study hours and corresponding exam scores.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Study Hours\" and the y-axis labeled as \"Exam Score\".\n- Include a title at the top of the plot with the text \"Study Hours vs Exam Scores\".\n- Plot exactly 12 data points representing data collected from individual students.\n- Use red circular markers for each data point.\n- Overlay a dashed green line that represents the best-fit regression line calculated from the data.\n- Add grid lines exclusively along the y-axis to aid in assessing score intervals.\n- Set the x-axis range from 0 to 10 and the y-axis range from 0 to 100.\n- Place a legend in the lower right corner with the label \"Student Data\".\n- Ensure each marker is large enough (e.g., marker size 8) to be easily visible without overlapping excessively."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000839_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Study Hours",
                                "Exam Score",
                                "Study Hours vs Exam Scores",
                                "Student Data",
                                "plt.scatter",
                                "red",
                                "o",
                                "markersize=8",
                                "plt.plot",
                                "linestyle='--'",
                                "green",
                                "plt.xlim(0, 10)",
                                "plt.ylim(0, 100)",
                                "plt.grid",
                                "axis='y'",
                                "12"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000839_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000839_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the x-axis label on the scatter plot?",
                                "What is the label on the y-axis?",
                                "What title is displayed at the top of the plot?",
                                "How many data points are plotted on the scatter plot?",
                                "What color and shape are the markers used for the data points?",
                                "What type of line is overlaid to represent the best-fit regression line?",
                                "Which axis has grid lines displayed?",
                                "What are the specified ranges for the x-axis and y-axis?",
                                "Where is the legend placed and what label does it display?",
                                "What is the approximate marker size used in the scatter plot?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000839_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Study Hours",
                                "Exam Score",
                                "Study Hours vs Exam Scores",
                                "12",
                                "Red circular markers",
                                "Dashed green line",
                                "Only the y-axis",
                                "x-axis: 0 to 10, y-axis: 0 to 100",
                                "Lower right corner, label 'Student Data'",
                                "Size 8"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing study hours and exam scores.\n\nFeature Requirements:\n- Plot exactly 15 data points representing individual students' study hours and corresponding exam scores.\n- Label the x-axis as \"Study Hours\" and the y-axis as \"Exam Scores\".\n- Include a title at the top with the text \"Study Hours vs Exam Scores Distribution\".\n- Use red circular markers with a size of 8 to display each data point.\n- Add grid lines to both the x-axis and y-axis to enhance plot readability.\n- Draw a horizontal dashed black line at y = 50 to indicate the minimum passing score.\n- Include a legend in the upper right corner with the label \"Student Data\".",
            "task_id": "000840",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many data points are plotted in the scatter plot?",
                "What is the label on the x-axis?",
                "What is the label on the y-axis?",
                "What is the title displayed at the top of the plot?",
                "What are the characteristics of the data markers used in the scatter plot?",
                "Are grid lines visible on the plot?",
                "What horizontal line is drawn on the plot and what does it indicate?",
                "Where is the legend located and what label does it show?"
            ],
            "VQA_answers": [
                "15",
                "Study Hours",
                "Exam Scores",
                "Study Hours vs Exam Scores Distribution",
                "Red circular markers with a size of 8",
                "Yes, on both the x-axis and y-axis",
                "A dashed black line at y = 50 indicating the minimum passing score",
                "In the upper right corner with the label 'Student Data'"
            ],
            "raw_output_metric": [
                "Study Hours",
                "Exam Scores",
                "Study Hours vs Exam Scores Distribution",
                "Student Data",
                "50",
                "red",
                "o",
                "8",
                "black",
                "dashed",
                "grid"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000840_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing study hours and exam scores.\n\nFeature Requirements:\n- Plot exactly 15 data points representing individual students' study hours and corresponding exam scores.\n- Label the x-axis as \"Study Hours\" and the y-axis as \"Exam Scores\".\n- Include a title at the top with the text \"Study Hours vs Exam Scores Distribution\".\n- Use red circular markers with a size of 8 to display each data point.\n- Add grid lines to both the x-axis and y-axis to enhance plot readability.\n- Draw a horizontal dashed black line at y = 50 to indicate the minimum passing score.\n- Include a legend in the upper right corner with the label \"Student Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000840_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Study Hours",
                                "Exam Scores",
                                "Study Hours vs Exam Scores Distribution",
                                "Student Data",
                                "50",
                                "red",
                                "o",
                                "8",
                                "black",
                                "dashed",
                                "grid"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000840_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000840_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many data points are plotted in the scatter plot?",
                                "What is the label on the x-axis?",
                                "What is the label on the y-axis?",
                                "What is the title displayed at the top of the plot?",
                                "What are the characteristics of the data markers used in the scatter plot?",
                                "Are grid lines visible on the plot?",
                                "What horizontal line is drawn on the plot and what does it indicate?",
                                "Where is the legend located and what label does it show?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000840_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "15",
                                "Study Hours",
                                "Exam Scores",
                                "Study Hours vs Exam Scores Distribution",
                                "Red circular markers with a size of 8",
                                "Yes, on both the x-axis and y-axis",
                                "A dashed black line at y = 50 indicating the minimum passing score",
                                "In the upper right corner with the label 'Student Data'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using generated data arrays representing engine RPM and vehicle speed.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Engine RPM\" and the y-axis labeled as \"Vehicle Speed (km/h)\".\n- Set the plot title to \"Performance Analysis: RPM vs Speed\".\n- Plot exactly 15 data points with x values ranging from 1000 to 5000 and y values ranging from 50 to 200.\n- Use red circular markers with a marker size of 50 for all plotted points.\n- Add grid lines to both axes using a dotted line style for clear reference.\n- Define the x-axis limit from 800 to 5200 and the y-axis limit from 40 to 210.",
            "task_id": "000841",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the title of the scatter plot?",
                "What label is assigned to the x-axis?",
                "What label is assigned to the y-axis?",
                "How many data points are plotted?",
                "What are the color and shape of the markers?",
                "What is the size of the markers?",
                "What is the defined limit for the x-axis?",
                "What is the defined limit for the y-axis?",
                "How are the grid lines styled?"
            ],
            "VQA_answers": [
                "Performance Analysis: RPM vs Speed",
                "Engine RPM",
                "Vehicle Speed (km/h)",
                "15",
                "Red circular markers",
                "50",
                "800 to 5200",
                "40 to 210",
                "Dotted lines on both axes"
            ],
            "raw_output_metric": [
                "Engine RPM",
                "Vehicle Speed (km/h)",
                "Performance Analysis: RPM vs Speed",
                "plt.scatter",
                "15",
                "red",
                "o",
                "s=50",
                "plt.xlabel",
                "plt.ylabel",
                "plt.title",
                "plt.grid",
                "linestyle=':'",
                "plt.xlim(800, 5200)",
                "plt.ylim(40, 210)"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000841_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using generated data arrays representing engine RPM and vehicle speed.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Engine RPM\" and the y-axis labeled as \"Vehicle Speed (km/h)\".\n- Set the plot title to \"Performance Analysis: RPM vs Speed\".\n- Plot exactly 15 data points with x values ranging from 1000 to 5000 and y values ranging from 50 to 200.\n- Use red circular markers with a marker size of 50 for all plotted points.\n- Add grid lines to both axes using a dotted line style for clear reference.\n- Define the x-axis limit from 800 to 5200 and the y-axis limit from 40 to 210."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000841_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Engine RPM",
                                "Vehicle Speed (km/h)",
                                "Performance Analysis: RPM vs Speed",
                                "plt.scatter",
                                "15",
                                "red",
                                "o",
                                "s=50",
                                "plt.xlabel",
                                "plt.ylabel",
                                "plt.title",
                                "plt.grid",
                                "linestyle=':'",
                                "plt.xlim(800, 5200)",
                                "plt.ylim(40, 210)"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000841_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000841_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title of the scatter plot?",
                                "What label is assigned to the x-axis?",
                                "What label is assigned to the y-axis?",
                                "How many data points are plotted?",
                                "What are the color and shape of the markers?",
                                "What is the size of the markers?",
                                "What is the defined limit for the x-axis?",
                                "What is the defined limit for the y-axis?",
                                "How are the grid lines styled?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000841_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Performance Analysis: RPM vs Speed",
                                "Engine RPM",
                                "Vehicle Speed (km/h)",
                                "15",
                                "Red circular markers",
                                "50",
                                "800 to 5200",
                                "40 to 210",
                                "Dotted lines on both axes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing height and weight measurements.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Height (cm)\" and the y-axis labeled as \"Weight (kg)\".\n- Include a title at the top of the plot with the text \"Height vs Weight Scatter Plot\".\n- Plot exactly 15 data points representing individual measurements.\n- Use red circle markers with a marker size of 50 for each data point.\n- Add grid lines on both the x and y axes to enhance visualization.\n- Set the x-axis range from 140 to 200 and the y-axis range from 40 to 100.\n- Include a legend in the lower right corner with the label \"Measurement Data\".",
            "task_id": "000842",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the title displayed at the top of the scatter plot?",
                "What label is used on the x-axis?",
                "What label is used on the y-axis?",
                "How many data points are shown in the plot?",
                "What color and shape are the markers used for the data points?",
                "What marker size is applied to each data point?",
                "Are grid lines visible on both the x and y axes?",
                "What are the x-axis and y-axis ranges set for the plot?",
                "Where is the legend located and what is its label?"
            ],
            "VQA_answers": [
                "Height vs Weight Scatter Plot",
                "Height (cm)",
                "Weight (kg)",
                "15",
                "Red circles",
                "50",
                "Yes",
                "x-axis: 140 to 200, y-axis: 40 to 100",
                "Lower right; Measurement Data"
            ],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000842_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing height and weight measurements.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled as \"Height (cm)\" and the y-axis labeled as \"Weight (kg)\".\n- Include a title at the top of the plot with the text \"Height vs Weight Scatter Plot\".\n- Plot exactly 15 data points representing individual measurements.\n- Use red circle markers with a marker size of 50 for each data point.\n- Add grid lines on both the x and y axes to enhance visualization.\n- Set the x-axis range from 140 to 200 and the y-axis range from 40 to 100.\n- Include a legend in the lower right corner with the label \"Measurement Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000842_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000842_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000842_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the scatter plot?",
                                "What label is used on the x-axis?",
                                "What label is used on the y-axis?",
                                "How many data points are shown in the plot?",
                                "What color and shape are the markers used for the data points?",
                                "What marker size is applied to each data point?",
                                "Are grid lines visible on both the x and y axes?",
                                "What are the x-axis and y-axis ranges set for the plot?",
                                "Where is the legend located and what is its label?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000842_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Height vs Weight Scatter Plot",
                                "Height (cm)",
                                "Weight (kg)",
                                "15",
                                "Red circles",
                                "50",
                                "Yes",
                                "x-axis: 140 to 200, y-axis: 40 to 100",
                                "Lower right; Measurement Data"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart displaying quarterly sales figures for three different products.\n\nFeature Requirements:\n- Use a grouped bar layout to display three products side by side for each of the 4 quarters.\n- Label the x-axis as \"Quarter\" with ticks labeled \"Q1\", \"Q2\", \"Q3\", and \"Q4\".\n- Label the y-axis as \"Sales (in Thousands)\".\n- Include a centered title \"Product Sales per Quarter\" at the top of the chart.\n- Use distinct colors for each product, such as red for Product A, green for Product B, and blue for Product C.\n- Draw horizontal grid lines across the y-axis to help indicate sales values.\n- Place a legend in the upper right corner identifying each product by name.",
            "task_id": "000843",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the title of the chart?",
                "What label is used for the x-axis?",
                "What are the x-axis tick labels?",
                "What label is used for the y-axis?",
                "How many products are represented in each quarter?",
                "What color represents Product A?",
                "What color represents Product B?",
                "What color represents Product C?",
                "Where is the legend positioned?"
            ],
            "VQA_answers": [
                "Product Sales per Quarter",
                "Quarter",
                "Q1, Q2, Q3, Q4",
                "Sales (in Thousands)",
                "Three",
                "Red",
                "Green",
                "Blue",
                "Upper right corner"
            ],
            "raw_output_metric": [
                "Quarter",
                "Q1",
                "Q2",
                "Q3",
                "Q4",
                "Sales (in Thousands)",
                "Product Sales per Quarter",
                "Product A",
                "Product B",
                "Product C",
                "red",
                "green",
                "blue",
                "upper right"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000843_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart displaying quarterly sales figures for three different products.\n\nFeature Requirements:\n- Use a grouped bar layout to display three products side by side for each of the 4 quarters.\n- Label the x-axis as \"Quarter\" with ticks labeled \"Q1\", \"Q2\", \"Q3\", and \"Q4\".\n- Label the y-axis as \"Sales (in Thousands)\".\n- Include a centered title \"Product Sales per Quarter\" at the top of the chart.\n- Use distinct colors for each product, such as red for Product A, green for Product B, and blue for Product C.\n- Draw horizontal grid lines across the y-axis to help indicate sales values.\n- Place a legend in the upper right corner identifying each product by name."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000843_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Quarter",
                                "Q1",
                                "Q2",
                                "Q3",
                                "Q4",
                                "Sales (in Thousands)",
                                "Product Sales per Quarter",
                                "Product A",
                                "Product B",
                                "Product C",
                                "red",
                                "green",
                                "blue",
                                "upper right"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000843_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000843_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title of the chart?",
                                "What label is used for the x-axis?",
                                "What are the x-axis tick labels?",
                                "What label is used for the y-axis?",
                                "How many products are represented in each quarter?",
                                "What color represents Product A?",
                                "What color represents Product B?",
                                "What color represents Product C?",
                                "Where is the legend positioned?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000843_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Product Sales per Quarter",
                                "Quarter",
                                "Q1, Q2, Q3, Q4",
                                "Sales (in Thousands)",
                                "Three",
                                "Red",
                                "Green",
                                "Blue",
                                "Upper right corner"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart that visualizes monthly sales data for a retail store.\n\nFeature Requirements:\n- Create a bar chart with the x-axis labeled as \"Month\" and the y-axis labeled as \"Sales (in USD)\".\n- Set the title of the chart as \"Monthly Sales Performance for 2022\" and position it at the top of the plot.\n- Plot exactly 12 bars, each representing a month from January to December.\n- Assign each bar a deep red color for a uniform appearance.\n- Add grid lines along the y-axis to clearly indicate the sales levels.\n- Display x-axis tick labels using abbreviated month names (e.g., Jan, Feb, Mar, etc.).\n- Include a legend in the upper right corner with the label \"Sales Data\".",
            "task_id": "000844",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many bars are displayed in the chart?",
                "What is the x-axis label?",
                "What is the y-axis label?",
                "What is the title of the chart?",
                "What color are the bars?",
                "Are grid lines present, and if so, along which axis?",
                "How are the x-axis tick labels formatted?",
                "Where is the legend placed in the plot?",
                "What label does the legend display?"
            ],
            "VQA_answers": [
                "12",
                "Month",
                "Sales (in USD)",
                "Monthly Sales Performance for 2022",
                "Deep red",
                "Yes, along the y-axis",
                "Abbreviated month names (Jan, Feb, Mar, etc.)",
                "Upper right corner",
                "Sales Data"
            ],
            "raw_output_metric": [
                "Month",
                "Sales (in USD)",
                "Monthly Sales Performance for 2022",
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
                "deep red",
                "Sales Data",
                "upper right"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000844_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart that visualizes monthly sales data for a retail store.\n\nFeature Requirements:\n- Create a bar chart with the x-axis labeled as \"Month\" and the y-axis labeled as \"Sales (in USD)\".\n- Set the title of the chart as \"Monthly Sales Performance for 2022\" and position it at the top of the plot.\n- Plot exactly 12 bars, each representing a month from January to December.\n- Assign each bar a deep red color for a uniform appearance.\n- Add grid lines along the y-axis to clearly indicate the sales levels.\n- Display x-axis tick labels using abbreviated month names (e.g., Jan, Feb, Mar, etc.).\n- Include a legend in the upper right corner with the label \"Sales Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000844_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Month",
                                "Sales (in USD)",
                                "Monthly Sales Performance for 2022",
                                "Jan",
                                "Feb",
                                "Mar",
                                "Apr",
                                "May",
                                "Jun",
                                "Jul",
                                "Aug",
                                "Sep",
                                "Oct",
                                "Nov",
                                "Dec",
                                "deep red",
                                "Sales Data",
                                "upper right"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000844_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000844_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many bars are displayed in the chart?",
                                "What is the x-axis label?",
                                "What is the y-axis label?",
                                "What is the title of the chart?",
                                "What color are the bars?",
                                "Are grid lines present, and if so, along which axis?",
                                "How are the x-axis tick labels formatted?",
                                "Where is the legend placed in the plot?",
                                "What label does the legend display?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000844_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "12",
                                "Month",
                                "Sales (in USD)",
                                "Monthly Sales Performance for 2022",
                                "Deep red",
                                "Yes, along the y-axis",
                                "Abbreviated month names (Jan, Feb, Mar, etc.)",
                                "Upper right corner",
                                "Sales Data"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot visualizing the relationship between study hours and exam scores.\n\nFeature Requirements:\n- Create a scatter plot with the x-axis labeled as \"Study Hours\" and the y-axis labeled as \"Exam Scores\".\n- Include exactly 15 data points where the x-values (study hours) range from 1 to 15 and the y-values represent randomly assigned exam scores between 50 and 100.\n- Use red circular markers for each data point in the plot.\n- Add a title at the top reading \"Study Hours vs Exam Scores\".\n- Include grid lines for both the x and y axes to improve data readability.\n- Set the x-axis range from 0 to 16 and the y-axis range from 45 to 105.\n- Display a legend in the lower right corner with the label \"Student Data\".",
            "task_id": "000845",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the label of the x-axis?",
                "What is the label of the y-axis?",
                "How many data points are shown in the scatter plot?",
                "What range of values is displayed on the x-axis?",
                "What range of values is displayed on the y-axis?",
                "What is the title of the scatter plot?",
                "What color are the scatter plot markers?",
                "What shape are the scatter plot markers?",
                "Where is the legend located and what is its label?"
            ],
            "VQA_answers": [
                "Study Hours",
                "Exam Scores",
                "15",
                "0 to 16",
                "45 to 105",
                "Study Hours vs Exam Scores",
                "Red",
                "Circular",
                "Lower right corner, 'Student Data'"
            ],
            "raw_output_metric": [
                "Study Hours",
                "Exam Scores",
                "Study Hours vs Exam Scores",
                "Student Data",
                "red",
                "range(1, 16)",
                "np.random.randint(50, 101)",
                "plt.scatter",
                "plt.xlim(0, 16)",
                "plt.ylim(45, 105)",
                "plt.grid(True)"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000845_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot visualizing the relationship between study hours and exam scores.\n\nFeature Requirements:\n- Create a scatter plot with the x-axis labeled as \"Study Hours\" and the y-axis labeled as \"Exam Scores\".\n- Include exactly 15 data points where the x-values (study hours) range from 1 to 15 and the y-values represent randomly assigned exam scores between 50 and 100.\n- Use red circular markers for each data point in the plot.\n- Add a title at the top reading \"Study Hours vs Exam Scores\".\n- Include grid lines for both the x and y axes to improve data readability.\n- Set the x-axis range from 0 to 16 and the y-axis range from 45 to 105.\n- Display a legend in the lower right corner with the label \"Student Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000845_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Study Hours",
                                "Exam Scores",
                                "Study Hours vs Exam Scores",
                                "Student Data",
                                "red",
                                "range(1, 16)",
                                "np.random.randint(50, 101)",
                                "plt.scatter",
                                "plt.xlim(0, 16)",
                                "plt.ylim(45, 105)",
                                "plt.grid(True)"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000845_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000845_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the label of the x-axis?",
                                "What is the label of the y-axis?",
                                "How many data points are shown in the scatter plot?",
                                "What range of values is displayed on the x-axis?",
                                "What range of values is displayed on the y-axis?",
                                "What is the title of the scatter plot?",
                                "What color are the scatter plot markers?",
                                "What shape are the scatter plot markers?",
                                "Where is the legend located and what is its label?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000845_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Study Hours",
                                "Exam Scores",
                                "15",
                                "0 to 16",
                                "45 to 105",
                                "Study Hours vs Exam Scores",
                                "Red",
                                "Circular",
                                "Lower right corner, 'Student Data'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar plot using predefined data arrays representing sales figures for five distinct products across different regions.\n\nFeature Requirements:\n- Create a bar plot with exactly 5 bars, each representing a unique product labeled \"Product A\" through \"Product E\".\n- Label the x-axis as \"Products\" and the y-axis as \"Sales (in Thousand Units)\".\n- Set the plot title at the top with the text \"Regional Sales Distribution\".\n- Use a distinct shade of red for each bar while ensuring the colors remain within a similar tone range.\n- Display grid lines only along the y-axis to highlight sales values.\n- Ensure each bar has a uniform width of 0.6 and is evenly spaced across the x-axis.\n- Include a legend in the upper right corner with the label \"Sales Data\".",
            "task_id": "000846",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many bars are displayed in the plot?",
                "What are the labels for the 5 bars?",
                "What is the label on the x-axis?",
                "What is the label on the y-axis?",
                "What text is shown as the title of the plot?",
                "What color theme is used for the bars?",
                "Where are the grid lines displayed?",
                "What is the legend text and where is it positioned?",
                "What is the uniform width of each bar?"
            ],
            "VQA_answers": [
                "5",
                "Product A, Product B, Product C, Product D, Product E",
                "Products",
                "Sales (in Thousand Units)",
                "Regional Sales Distribution",
                "Distinct shades of red, all within a similar tone range",
                "Along the y-axis only",
                "Sales Data in the upper right corner",
                "0.6"
            ],
            "raw_output_metric": [
                "Product A",
                "Product B",
                "Product C",
                "Product D",
                "Product E",
                "Products",
                "Sales (in Thousand Units)",
                "Regional Sales Distribution",
                "Sales Data",
                "0.6",
                "plt.bar",
                "axis='y'"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000846_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar plot using predefined data arrays representing sales figures for five distinct products across different regions.\n\nFeature Requirements:\n- Create a bar plot with exactly 5 bars, each representing a unique product labeled \"Product A\" through \"Product E\".\n- Label the x-axis as \"Products\" and the y-axis as \"Sales (in Thousand Units)\".\n- Set the plot title at the top with the text \"Regional Sales Distribution\".\n- Use a distinct shade of red for each bar while ensuring the colors remain within a similar tone range.\n- Display grid lines only along the y-axis to highlight sales values.\n- Ensure each bar has a uniform width of 0.6 and is evenly spaced across the x-axis.\n- Include a legend in the upper right corner with the label \"Sales Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000846_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Product A",
                                "Product B",
                                "Product C",
                                "Product D",
                                "Product E",
                                "Products",
                                "Sales (in Thousand Units)",
                                "Regional Sales Distribution",
                                "Sales Data",
                                "0.6",
                                "plt.bar",
                                "axis='y'"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000846_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000846_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many bars are displayed in the plot?",
                                "What are the labels for the 5 bars?",
                                "What is the label on the x-axis?",
                                "What is the label on the y-axis?",
                                "What text is shown as the title of the plot?",
                                "What color theme is used for the bars?",
                                "Where are the grid lines displayed?",
                                "What is the legend text and where is it positioned?",
                                "What is the uniform width of each bar?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000846_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "5",
                                "Product A, Product B, Product C, Product D, Product E",
                                "Products",
                                "Sales (in Thousand Units)",
                                "Regional Sales Distribution",
                                "Distinct shades of red, all within a similar tone range",
                                "Along the y-axis only",
                                "Sales Data in the upper right corner",
                                "0.6"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing altitude and wind speed measurements.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled \"Altitude (m)\" and the y-axis labeled \"Wind Speed (km/h)\".\n- Include a title at the top with the text \"Altitude vs Wind Speed Analysis\".\n- Plot exactly 12 data points representing various measurement recordings.\n- Use red circular markers with a defined size for each data point and do not connect the points with lines.\n- Configure the x-axis to show ticks at every 100 meters in the range of 0 to 1100.\n- Configure the y-axis to show ticks at every 10 km/h in the range of 0 to 120.\n- Add grid lines to both axes to improve data readability.\n- Place a legend in the lower right corner with the label \"Data Points\".\n- Ensure the plot background is set with a white canvas and no additional external graphics.",
            "task_id": "000847",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "What is the title text displayed at the top of the plot?",
                "What label is assigned to the x-axis?",
                "What label is assigned to the y-axis?",
                "How many data points are plotted in the scatter plot?",
                "What type and color of markers are used for the data points?",
                "What is the tick interval and range on the x-axis?",
                "What is the tick interval and range on the y-axis?",
                "Where is the legend positioned and what is its label?",
                "Are grid lines visible on the plot?"
            ],
            "VQA_answers": [
                "Altitude vs Wind Speed Analysis",
                "Altitude (m)",
                "Wind Speed (km/h)",
                "12",
                "Red circular markers",
                "Every 100 meters from 0 to 1100",
                "Every 10 km/h from 0 to 120",
                "Lower right corner, labeled 'Data Points'",
                "Yes"
            ],
            "raw_output_metric": [
                "Altitude (m)",
                "Wind Speed (km/h)",
                "Altitude vs Wind Speed Analysis",
                "Data Points",
                "red",
                "o",
                "100",
                "1100",
                "10",
                "120",
                "lower right"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000847_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing altitude and wind speed measurements.\n\nFeature Requirements:\n- Display a scatter plot with the x-axis labeled \"Altitude (m)\" and the y-axis labeled \"Wind Speed (km/h)\".\n- Include a title at the top with the text \"Altitude vs Wind Speed Analysis\".\n- Plot exactly 12 data points representing various measurement recordings.\n- Use red circular markers with a defined size for each data point and do not connect the points with lines.\n- Configure the x-axis to show ticks at every 100 meters in the range of 0 to 1100.\n- Configure the y-axis to show ticks at every 10 km/h in the range of 0 to 120.\n- Add grid lines to both axes to improve data readability.\n- Place a legend in the lower right corner with the label \"Data Points\".\n- Ensure the plot background is set with a white canvas and no additional external graphics."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000847_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Altitude (m)",
                                "Wind Speed (km/h)",
                                "Altitude vs Wind Speed Analysis",
                                "Data Points",
                                "red",
                                "o",
                                "100",
                                "1100",
                                "10",
                                "120",
                                "lower right"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000847_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000847_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title text displayed at the top of the plot?",
                                "What label is assigned to the x-axis?",
                                "What label is assigned to the y-axis?",
                                "How many data points are plotted in the scatter plot?",
                                "What type and color of markers are used for the data points?",
                                "What is the tick interval and range on the x-axis?",
                                "What is the tick interval and range on the y-axis?",
                                "Where is the legend positioned and what is its label?",
                                "Are grid lines visible on the plot?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000847_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Altitude vs Wind Speed Analysis",
                                "Altitude (m)",
                                "Wind Speed (km/h)",
                                "12",
                                "Red circular markers",
                                "Every 100 meters from 0 to 1100",
                                "Every 10 km/h from 0 to 120",
                                "Lower right corner, labeled 'Data Points'",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using predefined data arrays representing daily rainfall measurements for a week.\n\nFeature Requirements:\n- Create a bar chart with the x-axis labeled as \"Day of Week\" and the y-axis labeled as \"Rainfall (mm)\".\n- Plot exactly 7 bars, each representing one day starting from Monday through Sunday.\n- Use a distinct color for each bar chosen from a predefined list of 7 colors.\n- Add grid lines along the y-axis to clearly indicate the increments of rainfall.\n- Place a title at the top of the chart with the text \"Weekly Rainfall Distribution\".\n- Rotate the x-axis labels by 45 degrees to ensure they are easily readable.\n- Ensure that each bar has a contrasting black outline to differentiate adjacent bars.",
            "task_id": "000848",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many bars are displayed on the chart?",
                "What is the title of the chart?",
                "What label is shown on the x-axis?",
                "What label is shown on the y-axis?",
                "Are there grid lines along the y-axis?",
                "By how many degrees are the x-axis labels rotated?",
                "Do the bars have a contrasting black outline?"
            ],
            "VQA_answers": [
                "7",
                "Weekly Rainfall Distribution",
                "Day of Week",
                "Rainfall (mm)",
                "Yes",
                "45",
                "Yes"
            ],
            "raw_output_metric": [
                "Day of Week",
                "Rainfall (mm)",
                "Weekly Rainfall Distribution",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday",
                "45",
                "black"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000848_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib bar chart using predefined data arrays representing daily rainfall measurements for a week.\n\nFeature Requirements:\n- Create a bar chart with the x-axis labeled as \"Day of Week\" and the y-axis labeled as \"Rainfall (mm)\".\n- Plot exactly 7 bars, each representing one day starting from Monday through Sunday.\n- Use a distinct color for each bar chosen from a predefined list of 7 colors.\n- Add grid lines along the y-axis to clearly indicate the increments of rainfall.\n- Place a title at the top of the chart with the text \"Weekly Rainfall Distribution\".\n- Rotate the x-axis labels by 45 degrees to ensure they are easily readable.\n- Ensure that each bar has a contrasting black outline to differentiate adjacent bars."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000848_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Day of Week",
                                "Rainfall (mm)",
                                "Weekly Rainfall Distribution",
                                "Monday",
                                "Tuesday",
                                "Wednesday",
                                "Thursday",
                                "Friday",
                                "Saturday",
                                "Sunday",
                                "45",
                                "black"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000848_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000848_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many bars are displayed on the chart?",
                                "What is the title of the chart?",
                                "What label is shown on the x-axis?",
                                "What label is shown on the y-axis?",
                                "Are there grid lines along the y-axis?",
                                "By how many degrees are the x-axis labels rotated?",
                                "Do the bars have a contrasting black outline?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000848_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "7",
                                "Weekly Rainfall Distribution",
                                "Day of Week",
                                "Rainfall (mm)",
                                "Yes",
                                "45",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing each month of the year and corresponding sales revenue.\n\nFeature Requirements:\n- Plot exactly 12 data points representing the months from January to December.\n- Set the x-axis label to \"Month\" and configure the x-ticks to display abbreviated month names (\"Jan\", \"Feb\", ..., \"Dec\").\n- Set the y-axis label to \"Sales (in thousands)\" and define the y-axis range from 0 to 100.\n- Include a centered title at the top with the text \"Monthly Sales Overview\".\n- Use red circle markers with a marker size of 50 to represent the data points.\n- Add grid lines along both the x and y axes for improved readability.\n- Include a legend in the lower right corner with the label \"Sales Data\".",
            "task_id": "000849",
            "task_name": "Text to Matplotlib",
            "input_type": "Text",
            "output_type": "Matplotlib",
            "query_example": "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib line plot using predefined data arrays representing time and temperature measurements.\n\nFeature Requirements:\n- Display a line plot with the x-axis labeled as \"Time (hours)\" and the y-axis labeled as \"Temperature (°C)\".\n- Include a title for the plot at the top with the text \"Temperature Over Time\".\n- Plot exactly 10 data points representing time intervals evenly distributed on the x-axis.\n- Use a solid blue line to connect the data points.\n- Add grid lines to both the x and y axes to enhance readability.\n- Include a legend in the upper left corner with the label \"Temp Data\".\n- Use a range from 0 to 24 for the x-axis and a range from 15 to 30 for the y-axis.",
            "VQA_questions": [
                "How many data points are plotted in the scatter plot?",
                "What is the label of the x-axis?",
                "What abbreviated month names are shown on the x-ticks?",
                "What is the label of the y-axis?",
                "What is the y-axis range?",
                "What is the title displayed at the top of the plot?",
                "What marker style and color are used for the data points?",
                "What is the marker size used in the plot?",
                "Are grid lines present in the scatter plot?",
                "Where is the legend located and what label does it display?"
            ],
            "VQA_answers": [
                "12",
                "Month",
                "Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec",
                "Sales (in thousands)",
                "0 to 100",
                "Monthly Sales Overview",
                "Red circle markers",
                "50",
                "Yes, along both the x and y axes",
                "Lower right corner; Sales Data"
            ],
            "raw_output_metric": [
                "Month",
                "Sales (in thousands)",
                "Monthly Sales Overview",
                "Sales Data",
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
                "0",
                "100",
                "red",
                "o",
                "50"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000849_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Matplotlib:\n\nTask:\nGenerate a Matplotlib scatter plot using predefined data arrays representing each month of the year and corresponding sales revenue.\n\nFeature Requirements:\n- Plot exactly 12 data points representing the months from January to December.\n- Set the x-axis label to \"Month\" and configure the x-ticks to display abbreviated month names (\"Jan\", \"Feb\", ..., \"Dec\").\n- Set the y-axis label to \"Sales (in thousands)\" and define the y-axis range from 0 to 100.\n- Include a centered title at the top with the text \"Monthly Sales Overview\".\n- Use red circle markers with a marker size of 50 to represent the data points.\n- Add grid lines along both the x and y axes for improved readability.\n- Include a legend in the lower right corner with the label \"Sales Data\"."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000849_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Month",
                                "Sales (in thousands)",
                                "Monthly Sales Overview",
                                "Sales Data",
                                "Jan",
                                "Feb",
                                "Mar",
                                "Apr",
                                "May",
                                "Jun",
                                "Jul",
                                "Aug",
                                "Sep",
                                "Oct",
                                "Nov",
                                "Dec",
                                "0",
                                "100",
                                "red",
                                "o",
                                "50"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000849_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000849_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many data points are plotted in the scatter plot?",
                                "What is the label of the x-axis?",
                                "What abbreviated month names are shown on the x-ticks?",
                                "What is the label of the y-axis?",
                                "What is the y-axis range?",
                                "What is the title displayed at the top of the plot?",
                                "What marker style and color are used for the data points?",
                                "What is the marker size used in the plot?",
                                "Are grid lines present in the scatter plot?",
                                "Where is the legend located and what label does it display?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000849_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "12",
                                "Month",
                                "Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec",
                                "Sales (in thousands)",
                                "0 to 100",
                                "Monthly Sales Overview",
                                "Red circle markers",
                                "50",
                                "Yes, along both the x and y axes",
                                "Lower right corner; Sales Data"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of a customer support ticket resolution process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Support Ticket Flowchart\".\n- Display exactly 4 main process steps, each within a unique node, connected sequentially with arrows.\n- Use a circle-shaped node to represent the initial ticket submission.\n- Use a diamond-shaped node to represent a decision point for escalation during the triage step.\n- Include a loopback arrow from the resolution step back to the triage step to indicate possible re-evaluation.\n- Assign a specific fill color (e.g., green) to the initial node and a different fill color (e.g., blue) to the final closure node.\n- Use rectangular nodes exclusively for process actions like ticket review and resolution.\n- Add a legend at the bottom of the diagram explaining the shapes used for the start, decision, and action nodes.\n- Ensure all arrows clearly indicate the directional flow from one node to the next.",
            "task_id": "000900",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many main process steps are included in the diagram?",
                "Which shape is used to represent the initial ticket submission?",
                "What fill color is assigned to the initial ticket submission node?",
                "Which shape is used to represent the escalation decision point during triage?",
                "What fill color is assigned to the final closure node in the flowchart?",
                "Are the ticket review and resolution steps depicted using rectangular nodes?",
                "Is there a loopback arrow present, and where does it point from and to?",
                "Does the flowchart include a legend explaining the shapes used for start, decision, and action nodes?"
            ],
            "VQA_answers": [
                "Support Ticket Flowchart",
                "4",
                "Circle",
                "Green",
                "Diamond",
                "Blue",
                "Yes",
                "From the resolution step back to the triage step",
                "Yes"
            ],
            "raw_output_metric": [
                "Support Ticket Flowchart",
                "Ticket Submission",
                "Triage",
                "Ticket Review",
                "Closure",
                "circle",
                "diamond",
                "rectangle",
                "green",
                "blue",
                "loopback arrow",
                "legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000900_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of a customer support ticket resolution process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Support Ticket Flowchart\".\n- Display exactly 4 main process steps, each within a unique node, connected sequentially with arrows.\n- Use a circle-shaped node to represent the initial ticket submission.\n- Use a diamond-shaped node to represent a decision point for escalation during the triage step.\n- Include a loopback arrow from the resolution step back to the triage step to indicate possible re-evaluation.\n- Assign a specific fill color (e.g., green) to the initial node and a different fill color (e.g., blue) to the final closure node.\n- Use rectangular nodes exclusively for process actions like ticket review and resolution.\n- Add a legend at the bottom of the diagram explaining the shapes used for the start, decision, and action nodes.\n- Ensure all arrows clearly indicate the directional flow from one node to the next."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000900_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Support Ticket Flowchart",
                                "Ticket Submission",
                                "Triage",
                                "Ticket Review",
                                "Closure",
                                "circle",
                                "diamond",
                                "rectangle",
                                "green",
                                "blue",
                                "loopback arrow",
                                "legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000900_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000900_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many main process steps are included in the diagram?",
                                "Which shape is used to represent the initial ticket submission?",
                                "What fill color is assigned to the initial ticket submission node?",
                                "Which shape is used to represent the escalation decision point during triage?",
                                "What fill color is assigned to the final closure node in the flowchart?",
                                "Are the ticket review and resolution steps depicted using rectangular nodes?",
                                "Is there a loopback arrow present, and where does it point from and to?",
                                "Does the flowchart include a legend explaining the shapes used for start, decision, and action nodes?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000900_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Support Ticket Flowchart",
                                "4",
                                "Circle",
                                "Green",
                                "Diamond",
                                "Blue",
                                "Yes",
                                "From the resolution step back to the triage step",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual restaurant order management process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Restaurant Order Process Workflow\".\n- Display exactly 4 main process steps, each within its own unique rectangular node.\n- Use an oval-shaped node to represent the order confirmation stage.\n- Connect all nodes with solid arrows to indicate the sequential flow of the process.\n- Incorporate a loopback arrow that points from the order confirmation stage back to the initial order reception step.\n- Apply a green fill color for the order reception node and an orange fill color for the final delivery node.\n- Label each arrow with the specific action or decision taken between steps.\n- Add a legend at the bottom of the diagram that explains the meanings of the rectangular and oval node shapes.",
            "task_id": "000901",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many main process steps are represented by rectangular nodes?",
                "Which stage is depicted using an oval shape?",
                "What fill color is applied to the Order Reception node?",
                "What fill color is used for the Final Delivery node?",
                "How are the nodes connected?",
                "What does the loopback arrow indicate?",
                "What is explained in the legend at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Restaurant Order Process Workflow",
                "4",
                "The Order Confirmation stage",
                "Green",
                "Orange",
                "With solid arrows labeled with specific actions or decisions",
                "It points from the Order Confirmation stage back to the Order Reception step",
                "The meanings of rectangular and oval node shapes"
            ],
            "raw_output_metric": [
                "Restaurant Order Process Workflow",
                "Order Reception",
                "Meal Preparation",
                "Order Packaging",
                "Final Delivery",
                "Order Confirmation",
                "green",
                "orange",
                "legend",
                "rectangular",
                "oval",
                "-->"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000901_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual restaurant order management process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Restaurant Order Process Workflow\".\n- Display exactly 4 main process steps, each within its own unique rectangular node.\n- Use an oval-shaped node to represent the order confirmation stage.\n- Connect all nodes with solid arrows to indicate the sequential flow of the process.\n- Incorporate a loopback arrow that points from the order confirmation stage back to the initial order reception step.\n- Apply a green fill color for the order reception node and an orange fill color for the final delivery node.\n- Label each arrow with the specific action or decision taken between steps.\n- Add a legend at the bottom of the diagram that explains the meanings of the rectangular and oval node shapes."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000901_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Restaurant Order Process Workflow",
                                "Order Reception",
                                "Meal Preparation",
                                "Order Packaging",
                                "Final Delivery",
                                "Order Confirmation",
                                "green",
                                "orange",
                                "legend",
                                "rectangular",
                                "oval",
                                "-->"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000901_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000901_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many main process steps are represented by rectangular nodes?",
                                "Which stage is depicted using an oval shape?",
                                "What fill color is applied to the Order Reception node?",
                                "What fill color is used for the Final Delivery node?",
                                "How are the nodes connected?",
                                "What does the loopback arrow indicate?",
                                "What is explained in the legend at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000901_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Restaurant Order Process Workflow",
                                "4",
                                "The Order Confirmation stage",
                                "Green",
                                "Orange",
                                "With solid arrows labeled with specific actions or decisions",
                                "It points from the Order Confirmation stage back to the Order Reception step",
                                "The meanings of rectangular and oval node shapes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual supply chain process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Supply Chain Overview\".\n- Display exactly 4 main stages: Procurement, Manufacturing, Distribution, and Retail, each represented as a unique node.\n- Connect all nodes sequentially with arrows that clearly indicate the flow from one stage to the next.\n- Use a parallelogram-shaped node to depict a Quality Check step immediately after the Manufacturing stage.\n- Include a loopback arrow from the Retail node back to the Procurement node, symbolizing a restock or feedback cycle.\n- Distinguish the starting Procurement node with one background color and the final Retail node with another distinct color.\n- Represent the Manufacturing and Distribution stages using rectangular nodes.\n- Integrate an additional oval-shaped node labeled \"Logistics\" connected to the Distribution stage to indicate a side process.\n- Add a note section at the bottom of the diagram labeled \"Annotations\" that explains the meanings of the node shapes and color codes.\n- Ensure the overall diagram follows a left-to-right directional flow.",
            "task_id": "000902",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the diagram?",
                "How many main stages are shown in the diagram?",
                "Which main stages are included?",
                "What shape is used for the Quality Check step placed after Manufacturing?",
                "Which stages are represented as rectangular nodes?",
                "Which additional node is connected to the Distribution stage and what is its shape?",
                "Is there a loopback arrow from the Retail stage to the Procurement stage?",
                "What note section is included at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Supply Chain Overview",
                "4",
                "Procurement, Manufacturing, Distribution, and Retail",
                "Parallelogram",
                "Manufacturing and Distribution",
                "Logistics; Oval",
                "Yes",
                "Annotations"
            ],
            "raw_output_metric": [
                "flowchart LR",
                "Supply Chain Overview",
                "Procurement",
                "Manufacturing",
                "Quality Check",
                "Distribution",
                "Logistics",
                "Retail",
                "Annotations",
                "-->"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000902_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual supply chain process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Supply Chain Overview\".\n- Display exactly 4 main stages: Procurement, Manufacturing, Distribution, and Retail, each represented as a unique node.\n- Connect all nodes sequentially with arrows that clearly indicate the flow from one stage to the next.\n- Use a parallelogram-shaped node to depict a Quality Check step immediately after the Manufacturing stage.\n- Include a loopback arrow from the Retail node back to the Procurement node, symbolizing a restock or feedback cycle.\n- Distinguish the starting Procurement node with one background color and the final Retail node with another distinct color.\n- Represent the Manufacturing and Distribution stages using rectangular nodes.\n- Integrate an additional oval-shaped node labeled \"Logistics\" connected to the Distribution stage to indicate a side process.\n- Add a note section at the bottom of the diagram labeled \"Annotations\" that explains the meanings of the node shapes and color codes.\n- Ensure the overall diagram follows a left-to-right directional flow."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000902_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "flowchart LR",
                                "Supply Chain Overview",
                                "Procurement",
                                "Manufacturing",
                                "Quality Check",
                                "Distribution",
                                "Logistics",
                                "Retail",
                                "Annotations",
                                "-->"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000902_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000902_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the diagram?",
                                "How many main stages are shown in the diagram?",
                                "Which main stages are included?",
                                "What shape is used for the Quality Check step placed after Manufacturing?",
                                "Which stages are represented as rectangular nodes?",
                                "Which additional node is connected to the Distribution stage and what is its shape?",
                                "Is there a loopback arrow from the Retail stage to the Procurement stage?",
                                "What note section is included at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000902_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Supply Chain Overview",
                                "4",
                                "Procurement, Manufacturing, Distribution, and Retail",
                                "Parallelogram",
                                "Manufacturing and Distribution",
                                "Logistics; Oval",
                                "Yes",
                                "Annotations"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of an organization hierarchy into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Organization Hierarchy\".\n- Display exactly 4 main branches representing distinct departments, each within its own node, arranged horizontally.\n- Use a circular-shaped node to depict the CEO at the top of the hierarchy.\n- Connect all nodes with arrows to represent direct reporting lines.\n- Include at least one subnode under each department to illustrate the position of a team lead.\n- Utilize rectangular nodes exclusively for department head positions.\n- Apply a unique fill color for each department branch to differentiate them visually.\n- Incorporate a loopback arrow on one department branch to indicate a recurring reporting cycle.\n- Arrange the diagram in a top-down hierarchical layout with clear directional flow.\n- Include a legend at the bottom of the diagram that clearly explains the meaning of all node shapes and colors used.",
            "task_id": "000903",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the flowchart?",
                "How many main department branches are displayed?",
                "What shape is used for the CEO node?",
                "What shape are the department head nodes?",
                "Does each department branch include at least one subnode for a team lead?",
                "How are the 4 main department nodes arranged?",
                "Is there a loopback arrow shown on one of the department branches?",
                "What is the directional layout of the diagram?",
                "Do the department branches use unique fill colors?",
                "Is there a legend included at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Organization Hierarchy",
                "4",
                "Circular",
                "Rectangular",
                "Yes",
                "Horizontally",
                "Yes",
                "Top-down hierarchical layout",
                "Yes",
                "Yes"
            ],
            "raw_output_metric": [
                "graph TD",
                "Organization Hierarchy",
                "((CEO))",
                "[Department 1]",
                "[Department 2]",
                "[Department 3]",
                "[Department 4]",
                "Team Lead",
                "-->",
                "style",
                "fill:#",
                "legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000903_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of an organization hierarchy into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Organization Hierarchy\".\n- Display exactly 4 main branches representing distinct departments, each within its own node, arranged horizontally.\n- Use a circular-shaped node to depict the CEO at the top of the hierarchy.\n- Connect all nodes with arrows to represent direct reporting lines.\n- Include at least one subnode under each department to illustrate the position of a team lead.\n- Utilize rectangular nodes exclusively for department head positions.\n- Apply a unique fill color for each department branch to differentiate them visually.\n- Incorporate a loopback arrow on one department branch to indicate a recurring reporting cycle.\n- Arrange the diagram in a top-down hierarchical layout with clear directional flow.\n- Include a legend at the bottom of the diagram that clearly explains the meaning of all node shapes and colors used."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000903_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "graph TD",
                                "Organization Hierarchy",
                                "((CEO))",
                                "[Department 1]",
                                "[Department 2]",
                                "[Department 3]",
                                "[Department 4]",
                                "Team Lead",
                                "-->",
                                "style",
                                "fill:#",
                                "legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000903_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000903_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the flowchart?",
                                "How many main department branches are displayed?",
                                "What shape is used for the CEO node?",
                                "What shape are the department head nodes?",
                                "Does each department branch include at least one subnode for a team lead?",
                                "How are the 4 main department nodes arranged?",
                                "Is there a loopback arrow shown on one of the department branches?",
                                "What is the directional layout of the diagram?",
                                "Do the department branches use unique fill colors?",
                                "Is there a legend included at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000903_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Organization Hierarchy",
                                "4",
                                "Circular",
                                "Rectangular",
                                "Yes",
                                "Horizontally",
                                "Yes",
                                "Top-down hierarchical layout",
                                "Yes",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of an online course enrollment process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Course Enrollment Process\".\n- Display exactly 4 main action steps, each contained in a unique rectangular node.\n- Use an oval-shaped node to represent the starting point and a hexagon-shaped node to denote the completion of the process.\n- Incorporate a diamond-shaped decision node labeled \"Prerequisites Met?\" that directs the flow into two distinct branches.\n- Draw a loopback arrow from the course selection step back to the decision node to allow re-evaluation.\n- Connect all nodes with clear directional arrows to maintain a sequential and logical flow.\n- Highlight the enrollment confirmation step by applying a distinct background color fill.\n- Append a legend at the bottom of the diagram that explains the meaning of the different node shapes and colors.",
            "task_id": "000904",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the flowchart?",
                "What shape is used to represent the starting point?",
                "How many main action steps (rectangular nodes) are present?",
                "What shape is used for the decision node labeled 'Prerequisites Met?'?",
                "What shape denotes the completion of the process?",
                "Is there a loopback arrow from the course selection step back to the decision node?",
                "How is the enrollment confirmation step highlighted?",
                "What additional element is included at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Course Enrollment Process",
                "Oval",
                "4",
                "Diamond",
                "Hexagon",
                "Yes",
                "With a distinct background color fill",
                "A legend explaining the meaning of node shapes and colors"
            ],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000904_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of an online course enrollment process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Course Enrollment Process\".\n- Display exactly 4 main action steps, each contained in a unique rectangular node.\n- Use an oval-shaped node to represent the starting point and a hexagon-shaped node to denote the completion of the process.\n- Incorporate a diamond-shaped decision node labeled \"Prerequisites Met?\" that directs the flow into two distinct branches.\n- Draw a loopback arrow from the course selection step back to the decision node to allow re-evaluation.\n- Connect all nodes with clear directional arrows to maintain a sequential and logical flow.\n- Highlight the enrollment confirmation step by applying a distinct background color fill.\n- Append a legend at the bottom of the diagram that explains the meaning of the different node shapes and colors."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000904_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000904_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000904_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the flowchart?",
                                "What shape is used to represent the starting point?",
                                "How many main action steps (rectangular nodes) are present?",
                                "What shape is used for the decision node labeled 'Prerequisites Met?'?",
                                "What shape denotes the completion of the process?",
                                "Is there a loopback arrow from the course selection step back to the decision node?",
                                "How is the enrollment confirmation step highlighted?",
                                "What additional element is included at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000904_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Course Enrollment Process",
                                "Oval",
                                "4",
                                "Diamond",
                                "Hexagon",
                                "Yes",
                                "With a distinct background color fill",
                                "A legend explaining the meaning of node shapes and colors"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of a weather monitoring system's architecture into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Weather Monitoring Architecture\".\n- Display exactly 4 main system components, each represented as distinct nodes.\n- Use a cylindrical shaped node to represent the data storage element.\n- Connect the components sequentially with directional arrows that illustrate the flow from data collection to processing and then to data output.\n- Use a diamond-shaped node to indicate a decision point for triggering weather alerts.\n- Incorporate a loopback arrow from the decision node to the data collection node to emphasize continuous monitoring.\n- Apply a unique color fill for the data collection and data output nodes to distinguish them from other components.\n- Include a legend at the bottom of the diagram that explains the meaning of each different node shape used.",
            "task_id": "000905",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the diagram?",
                "How many main system components are depicted as nodes?",
                "Which node is represented using a cylindrical shape?",
                "What shape is used for the decision point that triggers weather alerts?",
                "How are the components connected to illustrate the flow?",
                "Which nodes have a unique color fill?",
                "What does the legend at the bottom of the diagram explain?"
            ],
            "VQA_answers": [
                "Weather Monitoring Architecture",
                "4",
                "Data Storage element",
                "Diamond",
                "They are connected sequentially with directional arrows from data collection to processing to data output, with a loopback arrow from the decision node to data collection",
                "The data collection and data output nodes",
                "It explains the meaning of each different node shape used"
            ],
            "raw_output_metric": [
                "Weather Monitoring Architecture",
                "Data Collection",
                "Data Processing",
                "Data Storage",
                "Data Output",
                "((Data Storage))",
                "{",
                "Weather Alerts",
                "-->",
                "legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000905_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of a weather monitoring system's architecture into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Weather Monitoring Architecture\".\n- Display exactly 4 main system components, each represented as distinct nodes.\n- Use a cylindrical shaped node to represent the data storage element.\n- Connect the components sequentially with directional arrows that illustrate the flow from data collection to processing and then to data output.\n- Use a diamond-shaped node to indicate a decision point for triggering weather alerts.\n- Incorporate a loopback arrow from the decision node to the data collection node to emphasize continuous monitoring.\n- Apply a unique color fill for the data collection and data output nodes to distinguish them from other components.\n- Include a legend at the bottom of the diagram that explains the meaning of each different node shape used."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000905_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Weather Monitoring Architecture",
                                "Data Collection",
                                "Data Processing",
                                "Data Storage",
                                "Data Output",
                                "((Data Storage))",
                                "{",
                                "Weather Alerts",
                                "-->",
                                "legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000905_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000905_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the diagram?",
                                "How many main system components are depicted as nodes?",
                                "Which node is represented using a cylindrical shape?",
                                "What shape is used for the decision point that triggers weather alerts?",
                                "How are the components connected to illustrate the flow?",
                                "Which nodes have a unique color fill?",
                                "What does the legend at the bottom of the diagram explain?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000905_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Weather Monitoring Architecture",
                                "4",
                                "Data Storage element",
                                "Diamond",
                                "They are connected sequentially with directional arrows from data collection to processing to data output, with a loopback arrow from the decision node to data collection",
                                "The data collection and data output nodes",
                                "It explains the meaning of each different node shape used"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nTransform a detailed description of a space station maintenance procedure into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Space Station Maintenance\".\n- Represent exactly 4 distinct maintenance phases as individual nodes.\n- Use circular nodes for the start and finish steps, each with a unique fill color.\n- Incorporate one diamond-shaped node to signify a quality inspection decision point during the process.\n- Connect all nodes with directional arrows to indicate the sequence of operations.\n- Add one loop arrow from the quality inspection node back to the repair action to represent a repeatable step.\n- Use rectangular nodes exclusively for all standard action steps.\n- Label every node clearly with the name of the maintenance phase or action.\n- Include a legend at the bottom describing the meanings of the circular, diamond, and rectangular node shapes.",
            "task_id": "000906",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the flowchart?",
                "How many maintenance phase nodes (standard actions) are depicted as rectangular nodes?",
                "Are the start and finish steps represented as circular nodes with unique fill colors?",
                "Is there a single diamond-shaped node representing the quality inspection decision point?",
                "Is there a loop arrow from the quality inspection node back to the repair action?",
                "Are all nodes connected by directional arrows indicating the process sequence?",
                "Does the diagram include a legend at the bottom that describes the meanings of circular, diamond, and rectangular shapes?"
            ],
            "VQA_answers": [
                "Space Station Maintenance",
                "4",
                "Yes",
                "Yes",
                "Yes",
                "Yes",
                "Yes"
            ],
            "raw_output_metric": [
                "graph LR",
                "Space Station Maintenance",
                "start",
                "finish",
                "Maintenance Phase 1",
                "Maintenance Phase 2",
                "Maintenance Phase 3",
                "Maintenance Phase 4",
                "Quality Inspection",
                "Repair Action",
                "loop",
                "legend",
                "circular",
                "diamond",
                "rectangular"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000906_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nTransform a detailed description of a space station maintenance procedure into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Space Station Maintenance\".\n- Represent exactly 4 distinct maintenance phases as individual nodes.\n- Use circular nodes for the start and finish steps, each with a unique fill color.\n- Incorporate one diamond-shaped node to signify a quality inspection decision point during the process.\n- Connect all nodes with directional arrows to indicate the sequence of operations.\n- Add one loop arrow from the quality inspection node back to the repair action to represent a repeatable step.\n- Use rectangular nodes exclusively for all standard action steps.\n- Label every node clearly with the name of the maintenance phase or action.\n- Include a legend at the bottom describing the meanings of the circular, diamond, and rectangular node shapes."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000906_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "graph LR",
                                "Space Station Maintenance",
                                "start",
                                "finish",
                                "Maintenance Phase 1",
                                "Maintenance Phase 2",
                                "Maintenance Phase 3",
                                "Maintenance Phase 4",
                                "Quality Inspection",
                                "Repair Action",
                                "loop",
                                "legend",
                                "circular",
                                "diamond",
                                "rectangular"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000906_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000906_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the flowchart?",
                                "How many maintenance phase nodes (standard actions) are depicted as rectangular nodes?",
                                "Are the start and finish steps represented as circular nodes with unique fill colors?",
                                "Is there a single diamond-shaped node representing the quality inspection decision point?",
                                "Is there a loop arrow from the quality inspection node back to the repair action?",
                                "Are all nodes connected by directional arrows indicating the process sequence?",
                                "Does the diagram include a legend at the bottom that describes the meanings of circular, diamond, and rectangular shapes?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000906_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Space Station Maintenance",
                                "4",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a narrative about a fictional treasure hunt into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- The diagram must include exactly 4 sequential checkpoints, each represented as a unique node detailing a step in the treasure hunt.\n- A round-shaped node labeled \"Start Hunt\" should denote the beginning, and a star-shaped node labeled \"Treasure Found\" must mark the end.\n- Include a diamond-shaped node to illustrate a decision point where the participant chooses between two paths.\n- Incorporate a parallel branch that splits into two separate nodes after the decision point, each representing different clue options.\n- Connect all nodes with directional arrows to clearly indicate the flow from the starting point to the final treasure.\n- Add a loopback arrow from the decision node to one of the checkpoint nodes to signify revisiting a clue.\n- Use rectangular nodes for all actions or movement steps during the hunt.\n- Provide a legend at the bottom of the diagram that explains the specific shapes used for start, decision, action, and end nodes.",
            "task_id": "000907",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "How many sequential checkpoints are depicted in the diagram?",
                "What label is given to the round-shaped starting node?",
                "What shape is used for the decision point node?",
                "How many nodes form the parallel branch for the clue options after the decision point?",
                "What label is assigned to the star-shaped ending node?",
                "Which shape is used for representing all actions or movement steps?",
                "Is a legend included in the diagram to explain the node shapes?"
            ],
            "VQA_answers": [
                "4",
                "Start Hunt",
                "Diamond",
                "2",
                "Treasure Found",
                "Rectangle",
                "Yes"
            ],
            "raw_output_metric": [
                "Start Hunt",
                "Checkpoint 1",
                "Checkpoint 2",
                "Checkpoint 3",
                "Checkpoint 4",
                "Decision",
                "Clue Option A",
                "Clue Option B",
                "Treasure Found",
                "Legend: Start (round)",
                "Legend: Decision (diamond)",
                "Legend: Action (rectangular)",
                "Legend: End (star)"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000907_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a narrative about a fictional treasure hunt into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- The diagram must include exactly 4 sequential checkpoints, each represented as a unique node detailing a step in the treasure hunt.\n- A round-shaped node labeled \"Start Hunt\" should denote the beginning, and a star-shaped node labeled \"Treasure Found\" must mark the end.\n- Include a diamond-shaped node to illustrate a decision point where the participant chooses between two paths.\n- Incorporate a parallel branch that splits into two separate nodes after the decision point, each representing different clue options.\n- Connect all nodes with directional arrows to clearly indicate the flow from the starting point to the final treasure.\n- Add a loopback arrow from the decision node to one of the checkpoint nodes to signify revisiting a clue.\n- Use rectangular nodes for all actions or movement steps during the hunt.\n- Provide a legend at the bottom of the diagram that explains the specific shapes used for start, decision, action, and end nodes."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000907_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Start Hunt",
                                "Checkpoint 1",
                                "Checkpoint 2",
                                "Checkpoint 3",
                                "Checkpoint 4",
                                "Decision",
                                "Clue Option A",
                                "Clue Option B",
                                "Treasure Found",
                                "Legend: Start (round)",
                                "Legend: Decision (diamond)",
                                "Legend: Action (rectangular)",
                                "Legend: End (star)"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000907_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000907_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many sequential checkpoints are depicted in the diagram?",
                                "What label is given to the round-shaped starting node?",
                                "What shape is used for the decision point node?",
                                "How many nodes form the parallel branch for the clue options after the decision point?",
                                "What label is assigned to the star-shaped ending node?",
                                "Which shape is used for representing all actions or movement steps?",
                                "Is a legend included in the diagram to explain the node shapes?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000907_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "4",
                                "Start Hunt",
                                "Diamond",
                                "2",
                                "Treasure Found",
                                "Rectangle",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nCreate a Mermaid diagram that represents a simplified customer support escalation process.\n\nFeature Requirements:\n- The diagram must have a title at the top reading \"Customer Support Escalation\".\n- Include exactly 4 main process steps, each represented by a unique rectangular node.\n- Display a decision point using a diamond-shaped node labeled \"Escalate?\" positioned between the second and third steps.\n- Use an arrow to indicate a loop from the decision node back to the first action step for cases requiring additional verification.\n- Include a distinct colored node for the start step and another distinct colored node for the end step, ensuring they are different.\n- Connect all nodes sequentially with clear directional arrows to illustrate the process flow.\n- Insert a node labeled \"Log Issue\" after the decision node, using a rectangular node, which leads to the end step if the decision is negative.\n- Add a legend at the bottom of the diagram that defines the shapes used (rectangular for actions and diamond for decisions).\n- Present the entire process in one continuous flow without any separate sub-processes.\n- Ensure that each node is visibly labeled with the step number and description to clearly identify the order of steps.",
            "task_id": "000908",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the diagram?",
                "How many main process steps (rectangular nodes) are included, each labeled with a step number and description?",
                "Is there a diamond-shaped decision node labeled 'Escalate?' positioned between the second and third steps?",
                "Is there a loop arrow from the decision node back to the first action step for additional verification?",
                "Is there a 'Log Issue' rectangular node placed after the decision node that connects to the end step when the decision is negative?",
                "Are the start and end steps depicted using distinct colored nodes that are different from each other?",
                "Is there a legend at the bottom of the diagram that defines the shapes (rectangular for actions and diamond for decisions)?"
            ],
            "VQA_answers": [
                "Customer Support Escalation",
                "4",
                "Yes",
                "Yes",
                "Yes",
                "Yes",
                "Yes"
            ],
            "raw_output_metric": [
                "Customer Support Escalation",
                "Step 1",
                "Step 2",
                "Step 3",
                "Step 4",
                "Start",
                "End",
                "Escalate?",
                "Log Issue",
                "Legend",
                "rectangular",
                "diamond",
                "loop"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000908_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nCreate a Mermaid diagram that represents a simplified customer support escalation process.\n\nFeature Requirements:\n- The diagram must have a title at the top reading \"Customer Support Escalation\".\n- Include exactly 4 main process steps, each represented by a unique rectangular node.\n- Display a decision point using a diamond-shaped node labeled \"Escalate?\" positioned between the second and third steps.\n- Use an arrow to indicate a loop from the decision node back to the first action step for cases requiring additional verification.\n- Include a distinct colored node for the start step and another distinct colored node for the end step, ensuring they are different.\n- Connect all nodes sequentially with clear directional arrows to illustrate the process flow.\n- Insert a node labeled \"Log Issue\" after the decision node, using a rectangular node, which leads to the end step if the decision is negative.\n- Add a legend at the bottom of the diagram that defines the shapes used (rectangular for actions and diamond for decisions).\n- Present the entire process in one continuous flow without any separate sub-processes.\n- Ensure that each node is visibly labeled with the step number and description to clearly identify the order of steps."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000908_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Customer Support Escalation",
                                "Step 1",
                                "Step 2",
                                "Step 3",
                                "Step 4",
                                "Start",
                                "End",
                                "Escalate?",
                                "Log Issue",
                                "Legend",
                                "rectangular",
                                "diamond",
                                "loop"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000908_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000908_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the diagram?",
                                "How many main process steps (rectangular nodes) are included, each labeled with a step number and description?",
                                "Is there a diamond-shaped decision node labeled 'Escalate?' positioned between the second and third steps?",
                                "Is there a loop arrow from the decision node back to the first action step for additional verification?",
                                "Is there a 'Log Issue' rectangular node placed after the decision node that connects to the end step when the decision is negative?",
                                "Are the start and end steps depicted using distinct colored nodes that are different from each other?",
                                "Is there a legend at the bottom of the diagram that defines the shapes (rectangular for actions and diamond for decisions)?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000908_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Customer Support Escalation",
                                "4",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of an outdoor treasure hunt adventure into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Treasure Hunt Map\".\n- Represent exactly 4 main adventure stages, each within a unique node, connected sequentially with arrows.\n- Use an ellipse-shaped node for the starting point and a hexagon-shaped node for the endpoint.\n- Use a diamond-shaped node to illustrate a decision point where a choice between two clues is made.\n- Include at least one loopback arrow from a later stage to an earlier one to denote a repeated search.\n- Connect all nodes using clearly directed arrows to indicate the order of events.\n- Represent all intermediate action steps with rectangular nodes.\n- Apply a distinct fill color to the start node (red) and another to the end node (blue) for visual differentiation.\n- Label each node with descriptive names such as \"Clue Discovery\", \"Obstacle Challenge\", etc.\n- Include a legend at the bottom of the diagram that explains the significance of each node shape.",
            "task_id": "000909",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the flowchart?",
                "How many main adventure stages are represented in unique nodes?",
                "How is the starting point node visually represented?",
                "How is the endpoint node visually represented?",
                "What shape is used for the decision point where a choice between two clues is made?",
                "How are intermediate action steps depicted?",
                "How are the nodes visually connected?",
                "Is there a loopback arrow in the diagram?",
                "What does the legend at the bottom of the diagram explain?"
            ],
            "VQA_answers": [
                "Treasure Hunt Map",
                "4",
                "Ellipse shape with red fill",
                "Hexagon shape with blue fill",
                "Diamond shape",
                "Rectangular nodes",
                "Directed arrows",
                "Yes, at least one loopback arrow is included",
                "The significance of each node shape"
            ],
            "raw_output_metric": [
                "graph TD",
                "Treasure Hunt Map",
                "Clue Discovery",
                "Obstacle Challenge",
                "Map Reading",
                "Treasure Found",
                "ellipse",
                "hexagon",
                "diamond",
                "rect",
                "red",
                "blue",
                "legend",
                "->",
                "loop"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000909_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of an outdoor treasure hunt adventure into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Treasure Hunt Map\".\n- Represent exactly 4 main adventure stages, each within a unique node, connected sequentially with arrows.\n- Use an ellipse-shaped node for the starting point and a hexagon-shaped node for the endpoint.\n- Use a diamond-shaped node to illustrate a decision point where a choice between two clues is made.\n- Include at least one loopback arrow from a later stage to an earlier one to denote a repeated search.\n- Connect all nodes using clearly directed arrows to indicate the order of events.\n- Represent all intermediate action steps with rectangular nodes.\n- Apply a distinct fill color to the start node (red) and another to the end node (blue) for visual differentiation.\n- Label each node with descriptive names such as \"Clue Discovery\", \"Obstacle Challenge\", etc.\n- Include a legend at the bottom of the diagram that explains the significance of each node shape."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000909_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "graph TD",
                                "Treasure Hunt Map",
                                "Clue Discovery",
                                "Obstacle Challenge",
                                "Map Reading",
                                "Treasure Found",
                                "ellipse",
                                "hexagon",
                                "diamond",
                                "rect",
                                "red",
                                "blue",
                                "legend",
                                "->",
                                "loop"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000909_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000909_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the flowchart?",
                                "How many main adventure stages are represented in unique nodes?",
                                "How is the starting point node visually represented?",
                                "How is the endpoint node visually represented?",
                                "What shape is used for the decision point where a choice between two clues is made?",
                                "How are intermediate action steps depicted?",
                                "How are the nodes visually connected?",
                                "Is there a loopback arrow in the diagram?",
                                "What does the legend at the bottom of the diagram explain?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000909_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Treasure Hunt Map",
                                "4",
                                "Ellipse shape with red fill",
                                "Hexagon shape with blue fill",
                                "Diamond shape",
                                "Rectangular nodes",
                                "Directed arrows",
                                "Yes, at least one loopback arrow is included",
                                "The significance of each node shape"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual software release timeline description into a Mermaid Gantt chart.\n\nFeature Requirements:\n- Include a title at the top of the chart labeled \"Release Timeline\".\n- Display exactly 4 project phases, each represented as a distinct task with specific start and end dates.\n- Use a milestone marker to highlight critical deadlines within the timeline.\n- Color-code each phase differently based on its category (e.g., planning, development, testing, deployment).\n- Include vertical dashed lines to indicate review checkpoints on specified dates.\n- Ensure that tasks are arranged sequentially across a 6-month period.\n- Add a legend at the bottom of the chart explaining the meaning of each color used.",
            "task_id": "000910",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the chart?",
                "How many project phases are shown in the chart?",
                "Does each project phase display specific start and end dates?",
                "Is there a milestone marker to highlight critical deadlines?",
                "Are the project phases color-coded by category?",
                "Are vertical dashed lines used to indicate review checkpoints?",
                "Over what period are the tasks arranged?",
                "Where is the legend that explains the color coding located?"
            ],
            "VQA_answers": [
                "Release Timeline",
                "4",
                "Yes",
                "Yes",
                "Yes, with categories Planning, Development, Testing, and Deployment",
                "Yes",
                "6 months",
                "At the bottom of the chart"
            ],
            "raw_output_metric": [
                "gantt",
                "title Release Timeline",
                "section Planning",
                "section Development",
                "section Testing",
                "section Deployment",
                "milestone",
                "dashed",
                "legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000910_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual software release timeline description into a Mermaid Gantt chart.\n\nFeature Requirements:\n- Include a title at the top of the chart labeled \"Release Timeline\".\n- Display exactly 4 project phases, each represented as a distinct task with specific start and end dates.\n- Use a milestone marker to highlight critical deadlines within the timeline.\n- Color-code each phase differently based on its category (e.g., planning, development, testing, deployment).\n- Include vertical dashed lines to indicate review checkpoints on specified dates.\n- Ensure that tasks are arranged sequentially across a 6-month period.\n- Add a legend at the bottom of the chart explaining the meaning of each color used."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000910_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "gantt",
                                "title Release Timeline",
                                "section Planning",
                                "section Development",
                                "section Testing",
                                "section Deployment",
                                "milestone",
                                "dashed",
                                "legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000910_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000910_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the chart?",
                                "How many project phases are shown in the chart?",
                                "Does each project phase display specific start and end dates?",
                                "Is there a milestone marker to highlight critical deadlines?",
                                "Are the project phases color-coded by category?",
                                "Are vertical dashed lines used to indicate review checkpoints?",
                                "Over what period are the tasks arranged?",
                                "Where is the legend that explains the color coding located?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000910_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Release Timeline",
                                "4",
                                "Yes",
                                "Yes",
                                "Yes, with categories Planning, Development, Testing, and Deployment",
                                "Yes",
                                "6 months",
                                "At the bottom of the chart"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual narrative describing an emergency management workflow into a Mermaid diagram that visually outlines the series of events and decisions.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Emergency Management Workflow\".\n- Display exactly 4 distinct process steps, each represented by a unique rectangular node with descriptive labels.\n- Use a hexagon-shaped node to indicate a high-priority trigger event within the workflow.\n- Connect the nodes in a sequential order with clearly marked arrow directions to show process flow.\n- Incorporate at least one branching arrow that splits into two parallel process paths before converging back into a main flow.\n- Assign a green color fill for the start node, an orange fill for the decision node, and a red fill for the end node to visually distinguish them.\n- Include a legend at the bottom of the diagram that explains the meaning and shape of each node used.",
            "task_id": "000911",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the diagram's title displayed at the top?",
                "How many distinct process steps (rectangular nodes) are present?",
                "What shape is used to represent the high-priority trigger event?",
                "Which node is filled with green color?",
                "Which node uses an orange fill to indicate its function?",
                "Which node is highlighted with a red fill?",
                "Does the diagram include a branching arrow that splits into two parallel process paths?",
                "What does the legend at the bottom of the diagram explain?"
            ],
            "VQA_answers": [
                "Emergency Management Workflow",
                "4",
                "Hexagon",
                "The start node",
                "The decision node",
                "The end node",
                "Yes",
                "It explains the meaning and shape of each node used"
            ],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000911_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual narrative describing an emergency management workflow into a Mermaid diagram that visually outlines the series of events and decisions.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Emergency Management Workflow\".\n- Display exactly 4 distinct process steps, each represented by a unique rectangular node with descriptive labels.\n- Use a hexagon-shaped node to indicate a high-priority trigger event within the workflow.\n- Connect the nodes in a sequential order with clearly marked arrow directions to show process flow.\n- Incorporate at least one branching arrow that splits into two parallel process paths before converging back into a main flow.\n- Assign a green color fill for the start node, an orange fill for the decision node, and a red fill for the end node to visually distinguish them.\n- Include a legend at the bottom of the diagram that explains the meaning and shape of each node used."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000911_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000911_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000911_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the diagram's title displayed at the top?",
                                "How many distinct process steps (rectangular nodes) are present?",
                                "What shape is used to represent the high-priority trigger event?",
                                "Which node is filled with green color?",
                                "Which node uses an orange fill to indicate its function?",
                                "Which node is highlighted with a red fill?",
                                "Does the diagram include a branching arrow that splits into two parallel process paths?",
                                "What does the legend at the bottom of the diagram explain?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000911_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Emergency Management Workflow",
                                "4",
                                "Hexagon",
                                "The start node",
                                "The decision node",
                                "The end node",
                                "Yes",
                                "It explains the meaning and shape of each node used"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nTransform a textual event itinerary into a Mermaid diagram that displays the arranged schedule of a local festival.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Festival Schedule\".\n- Represent exactly 5 main events as rectangular nodes, each clearly labeled with the event name.\n- Connect the nodes with clearly directed arrows indicating the sequential order of events.\n- Incorporate an elliptical node to represent scheduled break periods between events.\n- Use a diamond-shaped node to indicate a decision point where attendees choose between concurrent sessions.\n- Add a loopback arrow from the after-party event node that connects back to an earlier event node for repeated viewing.\n- Apply a unique blue fill color to the starting event node and a unique green fill color to the ending event node.\n- Group two overlapping events within a subgraph to highlight parallel scheduling.\n- Include a legend at the bottom of the diagram that explains the meaning of each node shape used.",
            "task_id": "000912",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the diagram?",
                "How many main event nodes (rectangular) are present?",
                "What shape is used to represent the scheduled break periods?",
                "What shape is used to indicate the decision point for concurrent sessions?",
                "What unique colors are used for the starting and ending event nodes?",
                "Is there a loopback arrow from the after-party event node back to an earlier event?",
                "Are two overlapping events grouped within a subgraph for parallel scheduling?",
                "Does the diagram include a legend at the bottom explaining the meaning of each node shape?"
            ],
            "VQA_answers": [
                "Festival Schedule",
                "5",
                "Ellipse",
                "Diamond",
                "Blue for the starting event and green for the ending event",
                "Yes",
                "Yes",
                "Yes"
            ],
            "raw_output_metric": [
                "graph TD",
                "Festival Schedule",
                "Event 1",
                "Event 2",
                "Event 3",
                "Event 4",
                "After Party",
                "((Break))",
                "{Decision}",
                "subgraph",
                "legend",
                "blue",
                "green",
                "->"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000912_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nTransform a textual event itinerary into a Mermaid diagram that displays the arranged schedule of a local festival.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Festival Schedule\".\n- Represent exactly 5 main events as rectangular nodes, each clearly labeled with the event name.\n- Connect the nodes with clearly directed arrows indicating the sequential order of events.\n- Incorporate an elliptical node to represent scheduled break periods between events.\n- Use a diamond-shaped node to indicate a decision point where attendees choose between concurrent sessions.\n- Add a loopback arrow from the after-party event node that connects back to an earlier event node for repeated viewing.\n- Apply a unique blue fill color to the starting event node and a unique green fill color to the ending event node.\n- Group two overlapping events within a subgraph to highlight parallel scheduling.\n- Include a legend at the bottom of the diagram that explains the meaning of each node shape used."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000912_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "graph TD",
                                "Festival Schedule",
                                "Event 1",
                                "Event 2",
                                "Event 3",
                                "Event 4",
                                "After Party",
                                "((Break))",
                                "{Decision}",
                                "subgraph",
                                "legend",
                                "blue",
                                "green",
                                "->"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000912_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000912_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the diagram?",
                                "How many main event nodes (rectangular) are present?",
                                "What shape is used to represent the scheduled break periods?",
                                "What shape is used to indicate the decision point for concurrent sessions?",
                                "What unique colors are used for the starting and ending event nodes?",
                                "Is there a loopback arrow from the after-party event node back to an earlier event?",
                                "Are two overlapping events grouped within a subgraph for parallel scheduling?",
                                "Does the diagram include a legend at the bottom explaining the meaning of each node shape?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000912_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Festival Schedule",
                                "5",
                                "Ellipse",
                                "Diamond",
                                "Blue for the starting event and green for the ending event",
                                "Yes",
                                "Yes",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a project management timeline description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a main title at the top of the flowchart labeled \"Project Timeline\".\n- Display exactly 4 primary process step nodes arranged sequentially, each uniquely labeled.\n- Use ellipse-shaped nodes to represent both the starting and ending points, with the start node filled in green and the end node filled in red.\n- Incorporate a diamond-shaped node immediately after the second process step to indicate a decision point with two distinct direction arrows.\n- Create a sub-process group containing 2 rectangular nodes that represent review phases, connected by arrows and clearly separated from the main flow.\n- Ensure that all text labels within nodes are clearly visible using a consistent font style and size.\n- Include a legend at the bottom of the diagram that explains the meaning of each node shape and the color scheme used for the start and end nodes.",
            "task_id": "000913",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the main title displayed at the top of the flowchart?",
                "How many primary process step nodes are arranged sequentially?",
                "What shape is used for the starting and ending nodes?",
                "What are the fill colors of the start and end nodes respectively?",
                "What shape is used immediately after the second process step to indicate a decision point?",
                "How many nodes are present in the sub-process group representing review phases?",
                "What shape are the nodes in the sub-process group?",
                "What does the legend at the bottom of the diagram explain?"
            ],
            "VQA_answers": [
                "Project Timeline",
                "4",
                "Ellipse",
                "Green for start, red for end",
                "Diamond",
                "2",
                "Rectangle",
                "The meaning of each node shape and the color scheme used for the start and end nodes"
            ],
            "raw_output_metric": [
                "flowchart TD",
                "Project Timeline",
                "((Start))",
                "Step 1",
                "Step 2",
                "Decision",
                "Step 3",
                "Step 4",
                "((End))",
                "Review Phase 1",
                "Review Phase 2",
                "Legend",
                "fill:green",
                "fill:red"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000913_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a project management timeline description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a main title at the top of the flowchart labeled \"Project Timeline\".\n- Display exactly 4 primary process step nodes arranged sequentially, each uniquely labeled.\n- Use ellipse-shaped nodes to represent both the starting and ending points, with the start node filled in green and the end node filled in red.\n- Incorporate a diamond-shaped node immediately after the second process step to indicate a decision point with two distinct direction arrows.\n- Create a sub-process group containing 2 rectangular nodes that represent review phases, connected by arrows and clearly separated from the main flow.\n- Ensure that all text labels within nodes are clearly visible using a consistent font style and size.\n- Include a legend at the bottom of the diagram that explains the meaning of each node shape and the color scheme used for the start and end nodes."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000913_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "flowchart TD",
                                "Project Timeline",
                                "((Start))",
                                "Step 1",
                                "Step 2",
                                "Decision",
                                "Step 3",
                                "Step 4",
                                "((End))",
                                "Review Phase 1",
                                "Review Phase 2",
                                "Legend",
                                "fill:green",
                                "fill:red"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000913_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000913_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed at the top of the flowchart?",
                                "How many primary process step nodes are arranged sequentially?",
                                "What shape is used for the starting and ending nodes?",
                                "What are the fill colors of the start and end nodes respectively?",
                                "What shape is used immediately after the second process step to indicate a decision point?",
                                "How many nodes are present in the sub-process group representing review phases?",
                                "What shape are the nodes in the sub-process group?",
                                "What does the legend at the bottom of the diagram explain?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000913_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Project Timeline",
                                "4",
                                "Ellipse",
                                "Green for start, red for end",
                                "Diamond",
                                "2",
                                "Rectangle",
                                "The meaning of each node shape and the color scheme used for the start and end nodes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual supply chain process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Supply Chain Overview\".\n- Display exactly 4 main process steps, each represented by a distinct node.\n- Use a hexagon-shaped node to represent an inspection checkpoint within the process.\n- Include a bidirectional arrow between two nodes to indicate a feedback loop.\n- Apply only rectangular shapes for processing steps.\n- Assign a green fill color to the start node and a red fill color to the end node to clearly distinguish them.\n- Add a caption at the bottom of the diagram that serves as a legend explaining the shape symbols and color meanings.",
            "task_id": "000914",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the flowchart?",
                "How many main process steps are displayed in the diagram?",
                "What shape is used for processing steps?",
                "Which node is represented by a hexagon shape?",
                "What color is assigned to the start node?",
                "What color is assigned to the end node?",
                "What type of arrow is used to indicate the feedback loop between two nodes?",
                "What does the caption at the bottom of the diagram explain?"
            ],
            "VQA_answers": [
                "Supply Chain Overview",
                "4",
                "Rectangle",
                "Inspection checkpoint",
                "Green",
                "Red",
                "Bidirectional arrow",
                "The shape symbols and color meanings"
            ],
            "raw_output_metric": [
                "Supply Chain Overview",
                "graph LR",
                "Process 1",
                "Process 2",
                "Process 3",
                "Process 4",
                "Inspection Checkpoint",
                "<-->",
                "rectangular",
                "hexagon",
                "green",
                "red",
                "Legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000914_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual supply chain process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Supply Chain Overview\".\n- Display exactly 4 main process steps, each represented by a distinct node.\n- Use a hexagon-shaped node to represent an inspection checkpoint within the process.\n- Include a bidirectional arrow between two nodes to indicate a feedback loop.\n- Apply only rectangular shapes for processing steps.\n- Assign a green fill color to the start node and a red fill color to the end node to clearly distinguish them.\n- Add a caption at the bottom of the diagram that serves as a legend explaining the shape symbols and color meanings."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000914_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Supply Chain Overview",
                                "graph LR",
                                "Process 1",
                                "Process 2",
                                "Process 3",
                                "Process 4",
                                "Inspection Checkpoint",
                                "<-->",
                                "rectangular",
                                "hexagon",
                                "green",
                                "red",
                                "Legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000914_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000914_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the flowchart?",
                                "How many main process steps are displayed in the diagram?",
                                "What shape is used for processing steps?",
                                "Which node is represented by a hexagon shape?",
                                "What color is assigned to the start node?",
                                "What color is assigned to the end node?",
                                "What type of arrow is used to indicate the feedback loop between two nodes?",
                                "What does the caption at the bottom of the diagram explain?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000914_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Supply Chain Overview",
                                "4",
                                "Rectangle",
                                "Inspection checkpoint",
                                "Green",
                                "Red",
                                "Bidirectional arrow",
                                "The shape symbols and color meanings"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a narrative describing a product development cycle into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Product Development Cycle\".\n- Display exactly 4 main process steps, each contained within a uniquely labeled rectangular node.\n- Use an elliptical node to represent the starting point and another elliptical node for the endpoint.\n- Incorporate a diamond-shaped node immediately after the second process step to indicate a decision point.\n- Add a loopback arrow from the decision node back to the first process step, signifying an iterative revision.\n- Apply a distinct fill color for the start node, a different color for the decision node, and a separate color for the end node.\n- Ensure that all nodes are connected with clear directional arrows to depict the sequential flow of the process.\n- Include a legend at the bottom of the diagram that explains the meaning of each node shape (rectangular, elliptical, and diamond).",
            "task_id": "000915",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many main process steps are represented as rectangular nodes?",
                "What shape is used for the starting point?",
                "What shape is used immediately after the second process step to indicate a decision point?",
                "Is there a loopback arrow from the decision node back to the first process step?",
                "Are distinct fill colors applied to the start, decision, and end nodes?",
                "What shape is used for the endpoint of the flowchart?",
                "Is a legend provided at the bottom of the diagram explaining node shapes?",
                "According to the legend, what does the rectangular shape represent?",
                "According to the legend, what do the elliptical nodes represent?"
            ],
            "VQA_answers": [
                "Product Development Cycle",
                "4",
                "Ellipse",
                "Diamond",
                "Yes",
                "Yes",
                "Ellipse",
                "Yes",
                "Main process steps",
                "The start and end points"
            ],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000915_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a narrative describing a product development cycle into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Product Development Cycle\".\n- Display exactly 4 main process steps, each contained within a uniquely labeled rectangular node.\n- Use an elliptical node to represent the starting point and another elliptical node for the endpoint.\n- Incorporate a diamond-shaped node immediately after the second process step to indicate a decision point.\n- Add a loopback arrow from the decision node back to the first process step, signifying an iterative revision.\n- Apply a distinct fill color for the start node, a different color for the decision node, and a separate color for the end node.\n- Ensure that all nodes are connected with clear directional arrows to depict the sequential flow of the process.\n- Include a legend at the bottom of the diagram that explains the meaning of each node shape (rectangular, elliptical, and diamond)."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000915_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000915_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000915_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many main process steps are represented as rectangular nodes?",
                                "What shape is used for the starting point?",
                                "What shape is used immediately after the second process step to indicate a decision point?",
                                "Is there a loopback arrow from the decision node back to the first process step?",
                                "Are distinct fill colors applied to the start, decision, and end nodes?",
                                "What shape is used for the endpoint of the flowchart?",
                                "Is a legend provided at the bottom of the diagram explaining node shapes?",
                                "According to the legend, what does the rectangular shape represent?",
                                "According to the legend, what do the elliptical nodes represent?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000915_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Product Development Cycle",
                                "4",
                                "Ellipse",
                                "Diamond",
                                "Yes",
                                "Yes",
                                "Ellipse",
                                "Yes",
                                "Main process steps",
                                "The start and end points"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nGenerate a Mermaid sequence diagram visualizing the steps involved in processing a customer support ticket.\n\nFeature Requirements:\n- Include a title at the top labeled \"Support Ticket Flow\".\n- Illustrate exactly 4 main steps: \"Ticket Submission\", \"Initial Review\", \"Technical Resolution\", and \"Ticket Closure\".\n- Use rectangular nodes for all processing steps except the beginning and end, which must be shown in oval nodes.\n- Incorporate a diamond-shaped node to represent a decision point at the \"Initial Review\" stage where the ticket may either be resolved or escalated.\n- Connect nodes sequentially with arrows indicating a left-to-right flow.\n- Include at least one loopback arrow from \"Technical Resolution\" back to \"Initial Review\" to handle cases requiring re-assessment.\n- Assign unique color fills to the start and end nodes to differentiate them from the process steps.\n- Add a legend at the bottom of the diagram that explains the meaning of the oval, rectangular, and diamond nodes.",
            "task_id": "000916",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the diagram?",
                "How many main processing steps are depicted in the diagram?",
                "Which steps are represented in the diagram?",
                "How are the start and end nodes visually represented?",
                "What shape is used for the intermediate processing steps?",
                "Which node is depicted as a diamond shape and what does it represent?",
                "How are the nodes connected in the diagram?",
                "Is there a loopback arrow present, and if so, what does it connect?",
                "What detail does the legend at the bottom of the diagram provide?",
                "How are the start and end nodes differentiated from the other processing steps?"
            ],
            "VQA_answers": [
                "Support Ticket Flow",
                "4",
                "Ticket Submission, Initial Review, Technical Resolution, and Ticket Closure",
                "They are shown as oval nodes with unique color fills.",
                "Rectangular nodes.",
                "The decision point at 'Initial Review', representing whether the ticket is resolved or escalated.",
                "They are connected with left-to-right flow arrows.",
                "Yes, from 'Technical Resolution' back to 'Initial Review'.",
                "It explains the shapes used: oval for start/end, rectangular for process steps, and diamond for decision points.",
                "They are uniquely colored and shown as oval nodes."
            ],
            "raw_output_metric": [
                "sequenceDiagram",
                "Support Ticket Flow",
                "Ticket Submission",
                "Initial Review",
                "Technical Resolution",
                "Ticket Closure",
                "diamond",
                "escalated",
                "resolved",
                "loop",
                "legend",
                "oval",
                "rectangular"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000916_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nGenerate a Mermaid sequence diagram visualizing the steps involved in processing a customer support ticket.\n\nFeature Requirements:\n- Include a title at the top labeled \"Support Ticket Flow\".\n- Illustrate exactly 4 main steps: \"Ticket Submission\", \"Initial Review\", \"Technical Resolution\", and \"Ticket Closure\".\n- Use rectangular nodes for all processing steps except the beginning and end, which must be shown in oval nodes.\n- Incorporate a diamond-shaped node to represent a decision point at the \"Initial Review\" stage where the ticket may either be resolved or escalated.\n- Connect nodes sequentially with arrows indicating a left-to-right flow.\n- Include at least one loopback arrow from \"Technical Resolution\" back to \"Initial Review\" to handle cases requiring re-assessment.\n- Assign unique color fills to the start and end nodes to differentiate them from the process steps.\n- Add a legend at the bottom of the diagram that explains the meaning of the oval, rectangular, and diamond nodes."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000916_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "sequenceDiagram",
                                "Support Ticket Flow",
                                "Ticket Submission",
                                "Initial Review",
                                "Technical Resolution",
                                "Ticket Closure",
                                "diamond",
                                "escalated",
                                "resolved",
                                "loop",
                                "legend",
                                "oval",
                                "rectangular"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000916_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000916_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the diagram?",
                                "How many main processing steps are depicted in the diagram?",
                                "Which steps are represented in the diagram?",
                                "How are the start and end nodes visually represented?",
                                "What shape is used for the intermediate processing steps?",
                                "Which node is depicted as a diamond shape and what does it represent?",
                                "How are the nodes connected in the diagram?",
                                "Is there a loopback arrow present, and if so, what does it connect?",
                                "What detail does the legend at the bottom of the diagram provide?",
                                "How are the start and end nodes differentiated from the other processing steps?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000916_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Support Ticket Flow",
                                "4",
                                "Ticket Submission, Initial Review, Technical Resolution, and Ticket Closure",
                                "They are shown as oval nodes with unique color fills.",
                                "Rectangular nodes.",
                                "The decision point at 'Initial Review', representing whether the ticket is resolved or escalated.",
                                "They are connected with left-to-right flow arrows.",
                                "Yes, from 'Technical Resolution' back to 'Initial Review'.",
                                "It explains the shapes used: oval for start/end, rectangular for process steps, and diamond for decision points.",
                                "They are uniquely colored and shown as oval nodes."
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of a museum tour itinerary into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- The flowchart must have a title at the top labeled \"Museum Tour Itinerary\".\n- Include exactly 4 main tour stops represented by unique rectangular nodes.\n- Use a diamond-shaped node to indicate a visitor decision point where they choose between a guided tour or self-exploration.\n- Display an arrow looping back from the diamond node to the first tour stop to show a revisit option.\n- Distinguish the initial starting node with a blue fill color and the final exit node with a red fill color.\n- All nodes must be connected sequentially with clearly directed arrows showing the order of activities.\n- At least one node must include a descriptive subtitle text inside it.\n- Include a separate branch after the decision node that leads to an optional snack break represented by an oval node.\n- Present a key/legend at the bottom of the diagram that explains the meaning of each node shape used.",
            "task_id": "000917",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the flowchart?",
                "How many main tour stops are represented by rectangular nodes?",
                "Which node shape indicates the visitor decision point?",
                "What option does the diamond node offer?",
                "Which node is filled with blue and which with red?",
                "Is there a looping arrow displayed in the diagram, and where does it point?",
                "Does at least one node include a descriptive subtitle text?",
                "Is there a branch after the decision node, and what shape is the optional snack break node?",
                "What information is provided at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Museum Tour Itinerary",
                "4",
                "Diamond",
                "Choose between a guided tour or self-exploration",
                "The initial starting node is blue and the final exit node is red",
                "Yes, it loops back from the diamond node to the first tour stop",
                "Yes",
                "Yes, it leads to an oval node",
                "A key/legend explaining the meaning of each node shape used"
            ],
            "raw_output_metric": [
                "Museum Tour Itinerary",
                "Tour Stop 1",
                "Tour Stop 2",
                "Tour Stop 3",
                "Tour Stop 4",
                "diamond",
                "guided tour",
                "self-exploration",
                "blue",
                "red",
                "Snack Break",
                "oval",
                "legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000917_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of a museum tour itinerary into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- The flowchart must have a title at the top labeled \"Museum Tour Itinerary\".\n- Include exactly 4 main tour stops represented by unique rectangular nodes.\n- Use a diamond-shaped node to indicate a visitor decision point where they choose between a guided tour or self-exploration.\n- Display an arrow looping back from the diamond node to the first tour stop to show a revisit option.\n- Distinguish the initial starting node with a blue fill color and the final exit node with a red fill color.\n- All nodes must be connected sequentially with clearly directed arrows showing the order of activities.\n- At least one node must include a descriptive subtitle text inside it.\n- Include a separate branch after the decision node that leads to an optional snack break represented by an oval node.\n- Present a key/legend at the bottom of the diagram that explains the meaning of each node shape used."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000917_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Museum Tour Itinerary",
                                "Tour Stop 1",
                                "Tour Stop 2",
                                "Tour Stop 3",
                                "Tour Stop 4",
                                "diamond",
                                "guided tour",
                                "self-exploration",
                                "blue",
                                "red",
                                "Snack Break",
                                "oval",
                                "legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000917_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000917_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the flowchart?",
                                "How many main tour stops are represented by rectangular nodes?",
                                "Which node shape indicates the visitor decision point?",
                                "What option does the diamond node offer?",
                                "Which node is filled with blue and which with red?",
                                "Is there a looping arrow displayed in the diagram, and where does it point?",
                                "Does at least one node include a descriptive subtitle text?",
                                "Is there a branch after the decision node, and what shape is the optional snack break node?",
                                "What information is provided at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000917_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Museum Tour Itinerary",
                                "4",
                                "Diamond",
                                "Choose between a guided tour or self-exploration",
                                "The initial starting node is blue and the final exit node is red",
                                "Yes, it loops back from the diamond node to the first tour stop",
                                "Yes",
                                "Yes, it leads to an oval node",
                                "A key/legend explaining the meaning of each node shape used"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nTransform a detailed description of a whimsical culinary journey into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- The flowchart must have the title \"Culinary Adventure\" displayed at the top.\n- Exactly 4 main process steps should be represented by distinct rectangular nodes, arranged sequentially.\n- Include one hexagon-shaped node to denote an \"Ingredient Check\" decision point.\n- Use arrows to clearly connect all nodes in a left-to-right directional flow.\n- Incorporate a loopback arrow from the last process step back to the \"Ingredient Check\" node to indicate a review process.\n- Differentiate the starting and finishing nodes by assigning them unique fill colors.\n- Each node must include a label that is visible and clearly describes its function.\n- Add a triangle-shaped node specifically to mark a timed cooking phase midway through the process.\n- Append a legend at the bottom of the diagram that explains the significance of the rectangle, hexagon, and triangle shapes.",
            "task_id": "000918",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many main process steps (rectangular nodes) are present in the diagram?",
                "What shape is used to denote the 'Ingredient Check' decision point?",
                "What directional flow is indicated by the connecting arrows?",
                "Is there a loopback arrow in the diagram, and if so, what does it connect?",
                "How are the starting and finishing nodes visually distinguished?",
                "What shape marks the timed cooking phase in the process?",
                "What information does the legend at the bottom of the diagram provide?"
            ],
            "VQA_answers": [
                "Culinary Adventure",
                "4",
                "Hexagon",
                "Left-to-right",
                "Yes, from the last process step back to the Ingredient Check node",
                "They have unique fill colors",
                "Triangle",
                "It explains the significance of the rectangle, hexagon, and triangle shapes"
            ],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000918_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nTransform a detailed description of a whimsical culinary journey into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- The flowchart must have the title \"Culinary Adventure\" displayed at the top.\n- Exactly 4 main process steps should be represented by distinct rectangular nodes, arranged sequentially.\n- Include one hexagon-shaped node to denote an \"Ingredient Check\" decision point.\n- Use arrows to clearly connect all nodes in a left-to-right directional flow.\n- Incorporate a loopback arrow from the last process step back to the \"Ingredient Check\" node to indicate a review process.\n- Differentiate the starting and finishing nodes by assigning them unique fill colors.\n- Each node must include a label that is visible and clearly describes its function.\n- Add a triangle-shaped node specifically to mark a timed cooking phase midway through the process.\n- Append a legend at the bottom of the diagram that explains the significance of the rectangle, hexagon, and triangle shapes."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000918_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000918_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000918_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many main process steps (rectangular nodes) are present in the diagram?",
                                "What shape is used to denote the 'Ingredient Check' decision point?",
                                "What directional flow is indicated by the connecting arrows?",
                                "Is there a loopback arrow in the diagram, and if so, what does it connect?",
                                "How are the starting and finishing nodes visually distinguished?",
                                "What shape marks the timed cooking phase in the process?",
                                "What information does the legend at the bottom of the diagram provide?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000918_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Culinary Adventure",
                                "4",
                                "Hexagon",
                                "Left-to-right",
                                "Yes, from the last process step back to the Ingredient Check node",
                                "They have unique fill colors",
                                "Triangle",
                                "It explains the significance of the rectangle, hexagon, and triangle shapes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a step-by-step conference scheduling process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Conference Scheduler\".\n- Display exactly 4 primary process steps, each represented within a unique node connected in sequential order by arrows.\n- Use a circle-shaped node with a green fill to represent the process start.\n- Represent a decision point using a diamond-shaped node labeled \"Availability Conflict?\" within the flow.\n- Use rectangular nodes exclusively for all standard action steps between the start and end nodes.\n- Include a branch that splits from the decision node into a sub-process that loops back to one of the main action nodes.\n- Clearly differentiate the end of the process by using a square-shaped node with a blue fill.\n- Provide a legend at the bottom of the diagram that explains the meanings of all node shapes used.",
            "task_id": "000919",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many primary process steps are shown in the diagram?",
                "What shape and color fill is used to represent the process start?",
                "Which shape is used for the decision node labeled 'Availability Conflict?'?",
                "What shape is used exclusively for the standard action steps between the start and end nodes?",
                "Is there a branch from the decision node that loops back to one of the main action nodes?",
                "What shape and fill color is used to denote the end of the process?",
                "Is there a legend at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Conference Scheduler",
                "4",
                "Circle with green fill",
                "Diamond",
                "Rectangular",
                "Yes",
                "Square with blue fill",
                "Yes"
            ],
            "raw_output_metric": [
                "flowchart",
                "Conference Scheduler",
                "circle",
                "green",
                "4 primary process steps",
                "rectangular",
                "Availability Conflict?",
                "diamond",
                "sub-process",
                "square",
                "blue",
                "Legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000919_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a step-by-step conference scheduling process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Conference Scheduler\".\n- Display exactly 4 primary process steps, each represented within a unique node connected in sequential order by arrows.\n- Use a circle-shaped node with a green fill to represent the process start.\n- Represent a decision point using a diamond-shaped node labeled \"Availability Conflict?\" within the flow.\n- Use rectangular nodes exclusively for all standard action steps between the start and end nodes.\n- Include a branch that splits from the decision node into a sub-process that loops back to one of the main action nodes.\n- Clearly differentiate the end of the process by using a square-shaped node with a blue fill.\n- Provide a legend at the bottom of the diagram that explains the meanings of all node shapes used."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000919_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "flowchart",
                                "Conference Scheduler",
                                "circle",
                                "green",
                                "4 primary process steps",
                                "rectangular",
                                "Availability Conflict?",
                                "diamond",
                                "sub-process",
                                "square",
                                "blue",
                                "Legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000919_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000919_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many primary process steps are shown in the diagram?",
                                "What shape and color fill is used to represent the process start?",
                                "Which shape is used for the decision node labeled 'Availability Conflict?'?",
                                "What shape is used exclusively for the standard action steps between the start and end nodes?",
                                "Is there a branch from the decision node that loops back to one of the main action nodes?",
                                "What shape and fill color is used to denote the end of the process?",
                                "Is there a legend at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000919_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Conference Scheduler",
                                "4",
                                "Circle with green fill",
                                "Diamond",
                                "Rectangular",
                                "Yes",
                                "Square with blue fill",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nTransform a detailed description of a festival schedule into a Mermaid timeline diagram.\n\nFeature Requirements:\n- Place a title \"Festival Timeline\" at the top of the diagram.\n- Display exactly 4 sequential events, each represented by a unique node aligned horizontally.\n- Use rectangular nodes exclusively for scheduled performance events.\n- Represent a break period with a hexagon-shaped node placed between performance events.\n- Connect all event nodes with solid arrows indicating the progression in time.\n- Include a loop arrow from the final event back to the break period node to suggest a recurring schedule.\n- Highlight the start and end events by applying distinct fill colors (e.g., green for start, red for end).\n- Ensure each node label contains a time indicator formatted as \"HH:MM\".\n- Provide a legend at the bottom that explains the meaning of the different node shapes and colors in the diagram.",
            "task_id": "000920",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the diagram's title?",
                "How many sequential performance events are displayed?",
                "What shape is used for the performance events?",
                "What shape is used to represent the break period?",
                "Which nodes have distinct fill colors and what are they?",
                "What does each node label include?",
                "How are the nodes connected in the diagram?",
                "What additional element is provided at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Festival Timeline",
                "4",
                "Rectangular",
                "Hexagon",
                "The start event is green and the final event is red",
                "A time indicator formatted as 'HH:MM'",
                "All event nodes are connected with solid arrows, and there is a loop arrow from the final event back to the break period",
                "A legend that explains the meaning of different node shapes and colors"
            ],
            "raw_output_metric": [
                "Festival Timeline",
                "HH:MM",
                "->",
                "hexagon",
                "rect",
                "green",
                "red",
                "legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000920_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nTransform a detailed description of a festival schedule into a Mermaid timeline diagram.\n\nFeature Requirements:\n- Place a title \"Festival Timeline\" at the top of the diagram.\n- Display exactly 4 sequential events, each represented by a unique node aligned horizontally.\n- Use rectangular nodes exclusively for scheduled performance events.\n- Represent a break period with a hexagon-shaped node placed between performance events.\n- Connect all event nodes with solid arrows indicating the progression in time.\n- Include a loop arrow from the final event back to the break period node to suggest a recurring schedule.\n- Highlight the start and end events by applying distinct fill colors (e.g., green for start, red for end).\n- Ensure each node label contains a time indicator formatted as \"HH:MM\".\n- Provide a legend at the bottom that explains the meaning of the different node shapes and colors in the diagram."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000920_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Festival Timeline",
                                "HH:MM",
                                "->",
                                "hexagon",
                                "rect",
                                "green",
                                "red",
                                "legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000920_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000920_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the diagram's title?",
                                "How many sequential performance events are displayed?",
                                "What shape is used for the performance events?",
                                "What shape is used to represent the break period?",
                                "Which nodes have distinct fill colors and what are they?",
                                "What does each node label include?",
                                "How are the nodes connected in the diagram?",
                                "What additional element is provided at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000920_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Festival Timeline",
                                "4",
                                "Rectangular",
                                "Hexagon",
                                "The start event is green and the final event is red",
                                "A time indicator formatted as 'HH:MM'",
                                "All event nodes are connected with solid arrows, and there is a loop arrow from the final event back to the break period",
                                "A legend that explains the meaning of different node shapes and colors"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a narrative of a coastal town festival planning process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Festival Planning Flow\".\n- Display exactly 4 major planning phases, each represented by a unique node, and arranged sequentially from start to finish.\n- Use rectangular nodes for all planning stages.\n- Incorporate a diamond-shaped node to represent a decision point regarding weather contingency.\n- Link all nodes with directional arrows indicating the flow of the planning process.\n- Include a loopback arrow from the decision point back to the stage of \"Vendor Coordination\" to show process repetition if needed.\n- Style the start node with a blue fill and the end node with an orange fill for visual distinction.\n- Attach a separate subgraph at the bottom containing a legend that explains the significance of rectangular and diamond-shaped nodes.\n- Ensure all node labels clearly indicate the phase names and decision point.",
            "task_id": "000921",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many major planning phase nodes are visible and what shape are they?",
                "Which node is styled with a blue fill?",
                "Which node is styled with an orange fill?",
                "Is there a diamond-shaped node and what decision does it represent?",
                "What does the loopback arrow connect?",
                "How are all nodes connected in the flowchart?",
                "What additional element is attached at the bottom of the chart?"
            ],
            "VQA_answers": [
                "Festival Planning Flow",
                "4 rectangular nodes",
                "The start node",
                "The end node",
                "Yes, it represents the weather contingency decision point",
                "It connects the weather decision node back to Vendor Coordination",
                "With directional arrows indicating the sequential flow",
                "A subgraph containing a legend explaining the rectangular and diamond-shaped nodes"
            ],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000921_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a narrative of a coastal town festival planning process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Festival Planning Flow\".\n- Display exactly 4 major planning phases, each represented by a unique node, and arranged sequentially from start to finish.\n- Use rectangular nodes for all planning stages.\n- Incorporate a diamond-shaped node to represent a decision point regarding weather contingency.\n- Link all nodes with directional arrows indicating the flow of the planning process.\n- Include a loopback arrow from the decision point back to the stage of \"Vendor Coordination\" to show process repetition if needed.\n- Style the start node with a blue fill and the end node with an orange fill for visual distinction.\n- Attach a separate subgraph at the bottom containing a legend that explains the significance of rectangular and diamond-shaped nodes.\n- Ensure all node labels clearly indicate the phase names and decision point."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000921_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000921_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000921_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many major planning phase nodes are visible and what shape are they?",
                                "Which node is styled with a blue fill?",
                                "Which node is styled with an orange fill?",
                                "Is there a diamond-shaped node and what decision does it represent?",
                                "What does the loopback arrow connect?",
                                "How are all nodes connected in the flowchart?",
                                "What additional element is attached at the bottom of the chart?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000921_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Festival Planning Flow",
                                "4 rectangular nodes",
                                "The start node",
                                "The end node",
                                "Yes, it represents the weather contingency decision point",
                                "It connects the weather decision node back to Vendor Coordination",
                                "With directional arrows indicating the sequential flow",
                                "A subgraph containing a legend explaining the rectangular and diamond-shaped nodes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a descriptive narrative outlining a customer support troubleshooting procedure into a Mermaid sequence diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Customer Support Flow\".\n- Display exactly 4 process steps, each represented as a unique node in sequence.\n- Represent the initial contact step with a star-shaped node.\n- Use rectangular nodes for all action-oriented steps throughout the flow.\n- Incorporate a diamond-shaped decision node to indicate a customer confirmation checkpoint.\n- Connect all nodes with arrows that clearly denote the sequential order and process flow.\n- Apply one branch arrow stemming from the decision node to represent an alternative troubleshooting path.\n- Highlight the final resolution outcome with a circular node.\n- Add a footer legend that explains the meanings of the star, rectangle, diamond, and circle node shapes.",
            "task_id": "000922",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the diagram's title displayed at the top?",
                "How many process steps are represented as unique nodes?",
                "Which shape represents the initial contact step?",
                "What shape is used for all action-oriented steps in the sequence?",
                "What shape is used to display the customer confirmation checkpoint?",
                "What shape highlights the final resolution outcome?",
                "How many different node shapes are explained in the footer legend?",
                "What does the branch arrow from the decision node represent?"
            ],
            "VQA_answers": [
                "Customer Support Flow",
                "4",
                "Star",
                "Rectangle",
                "Diamond",
                "Circle",
                "4",
                "Alternative troubleshooting path"
            ],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000922_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a descriptive narrative outlining a customer support troubleshooting procedure into a Mermaid sequence diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Customer Support Flow\".\n- Display exactly 4 process steps, each represented as a unique node in sequence.\n- Represent the initial contact step with a star-shaped node.\n- Use rectangular nodes for all action-oriented steps throughout the flow.\n- Incorporate a diamond-shaped decision node to indicate a customer confirmation checkpoint.\n- Connect all nodes with arrows that clearly denote the sequential order and process flow.\n- Apply one branch arrow stemming from the decision node to represent an alternative troubleshooting path.\n- Highlight the final resolution outcome with a circular node.\n- Add a footer legend that explains the meanings of the star, rectangle, diamond, and circle node shapes."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000922_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000922_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000922_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the diagram's title displayed at the top?",
                                "How many process steps are represented as unique nodes?",
                                "Which shape represents the initial contact step?",
                                "What shape is used for all action-oriented steps in the sequence?",
                                "What shape is used to display the customer confirmation checkpoint?",
                                "What shape highlights the final resolution outcome?",
                                "How many different node shapes are explained in the footer legend?",
                                "What does the branch arrow from the decision node represent?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000922_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Customer Support Flow",
                                "4",
                                "Star",
                                "Rectangle",
                                "Diamond",
                                "Circle",
                                "4",
                                "Alternative troubleshooting path"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of a customer support ticketing workflow into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- The diagram must include a header titled \"Support Ticket Workflow\" at the top.\n- Display exactly 4 main stages as nodes: Submission, Triage, Resolution, and Closure.\n- Use a circular node to represent the starting point of the workflow.\n- Include one diamond-shaped node to indicate a decision point where a ticket can be either escalated or resolved.\n- Draw arrows to connect nodes sequentially, ensuring a clear directional flow and including a loop arrow from \"Resolution\" back to \"Triage\" for reopened tickets.\n- Label each node with a corresponding abbreviation (e.g., S for Submission, T for Triage, etc.).\n- Use rectangular nodes exclusively for action-based stages, with the exception of the start and decision nodes.\n- Apply distinct background colors for the start and end nodes to differentiate them visually.\n- Add a legend at the bottom of the diagram that explains the shapes and colors used in the chart.",
            "task_id": "000923",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the header title displayed at the top of the diagram?",
                "How many main stage nodes are included in the workflow?",
                "What are the names and abbreviations of the main stage nodes?",
                "Which node shape is used to represent the starting point of the workflow?",
                "What shape is used for the decision point where a ticket is escalated or resolved?",
                "Is there a loop arrow from the Resolution node back to the Triage node for reopened tickets?",
                "What type of shape is used for the action-based stages?",
                "Are distinct background colors applied to the start and end nodes?",
                "What information does the legend at the bottom of the diagram provide?"
            ],
            "VQA_answers": [
                "Support Ticket Workflow",
                "4",
                "Submission (S), Triage (T), Resolution (R), Closure (C)",
                "Circular",
                "Diamond",
                "Yes",
                "Rectangular",
                "Yes",
                "It explains the shapes and colors used"
            ],
            "raw_output_metric": [
                "graph LR",
                "Support Ticket Workflow",
                "Submission",
                "S",
                "Triage",
                "T",
                "Resolution",
                "R",
                "Closure",
                "C",
                "((Start))",
                "{Decision}",
                "-->",
                "loop",
                "legend",
                "fill:"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000923_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of a customer support ticketing workflow into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- The diagram must include a header titled \"Support Ticket Workflow\" at the top.\n- Display exactly 4 main stages as nodes: Submission, Triage, Resolution, and Closure.\n- Use a circular node to represent the starting point of the workflow.\n- Include one diamond-shaped node to indicate a decision point where a ticket can be either escalated or resolved.\n- Draw arrows to connect nodes sequentially, ensuring a clear directional flow and including a loop arrow from \"Resolution\" back to \"Triage\" for reopened tickets.\n- Label each node with a corresponding abbreviation (e.g., S for Submission, T for Triage, etc.).\n- Use rectangular nodes exclusively for action-based stages, with the exception of the start and decision nodes.\n- Apply distinct background colors for the start and end nodes to differentiate them visually.\n- Add a legend at the bottom of the diagram that explains the shapes and colors used in the chart."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000923_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "graph LR",
                                "Support Ticket Workflow",
                                "Submission",
                                "S",
                                "Triage",
                                "T",
                                "Resolution",
                                "R",
                                "Closure",
                                "C",
                                "((Start))",
                                "{Decision}",
                                "-->",
                                "loop",
                                "legend",
                                "fill:"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000923_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000923_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the header title displayed at the top of the diagram?",
                                "How many main stage nodes are included in the workflow?",
                                "What are the names and abbreviations of the main stage nodes?",
                                "Which node shape is used to represent the starting point of the workflow?",
                                "What shape is used for the decision point where a ticket is escalated or resolved?",
                                "Is there a loop arrow from the Resolution node back to the Triage node for reopened tickets?",
                                "What type of shape is used for the action-based stages?",
                                "Are distinct background colors applied to the start and end nodes?",
                                "What information does the legend at the bottom of the diagram provide?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000923_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Support Ticket Workflow",
                                "4",
                                "Submission (S), Triage (T), Resolution (R), Closure (C)",
                                "Circular",
                                "Diamond",
                                "Yes",
                                "Rectangular",
                                "Yes",
                                "It explains the shapes and colors used"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nTransform a descriptive narrative of a community garden’s seasonal workflow into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram reading \"Garden Growth Cycle\".\n- Display exactly 4 main stages as nodes, each clearly labeled with its season and represented using rectangular shapes.\n- Use a circular node to indicate the \"Preparation\" stage, distinct from the other rectangular stages.\n- Connect the nodes with directional arrows showing the sequential flow from one season to the next.\n- Insert a loopback arrow from the \"Harvest\" stage back to the \"Preparation\" stage to represent the recurring annual cycle.\n- Highlight the \"Harvest\" node with a different color fill to visually differentiate it from the other stages.\n- Add a legend at the bottom of the diagram that explains the meaning of the different node shapes and arrow types.",
            "task_id": "000924",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the diagram?",
                "How many main season stages are represented as rectangular nodes?",
                "Which stage is depicted using a circular node?",
                "Is there a loopback arrow connecting the Harvest stage back to the Preparation stage?",
                "Which stage node is highlighted with a different color fill?",
                "Does the diagram include a legend at the bottom explaining node shapes and arrow types?",
                "Are all the nodes connected by directional arrows showing sequential flow?"
            ],
            "VQA_answers": [
                "Garden Growth Cycle",
                "4",
                "Preparation",
                "Yes",
                "Harvest",
                "Yes",
                "Yes"
            ],
            "raw_output_metric": [
                "Garden Growth Cycle",
                "flowchart TD",
                "Preparation",
                "Spring",
                "Summer",
                "Harvest",
                "(Preparation)",
                "[Spring]",
                "[Summer]",
                "[Harvest]",
                "-->",
                "H --> P",
                "style",
                "fill:",
                "subgraph Legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000924_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nTransform a descriptive narrative of a community garden’s seasonal workflow into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram reading \"Garden Growth Cycle\".\n- Display exactly 4 main stages as nodes, each clearly labeled with its season and represented using rectangular shapes.\n- Use a circular node to indicate the \"Preparation\" stage, distinct from the other rectangular stages.\n- Connect the nodes with directional arrows showing the sequential flow from one season to the next.\n- Insert a loopback arrow from the \"Harvest\" stage back to the \"Preparation\" stage to represent the recurring annual cycle.\n- Highlight the \"Harvest\" node with a different color fill to visually differentiate it from the other stages.\n- Add a legend at the bottom of the diagram that explains the meaning of the different node shapes and arrow types."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000924_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Garden Growth Cycle",
                                "flowchart TD",
                                "Preparation",
                                "Spring",
                                "Summer",
                                "Harvest",
                                "(Preparation)",
                                "[Spring]",
                                "[Summer]",
                                "[Harvest]",
                                "-->",
                                "H --> P",
                                "style",
                                "fill:",
                                "subgraph Legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000924_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000924_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the diagram?",
                                "How many main season stages are represented as rectangular nodes?",
                                "Which stage is depicted using a circular node?",
                                "Is there a loopback arrow connecting the Harvest stage back to the Preparation stage?",
                                "Which stage node is highlighted with a different color fill?",
                                "Does the diagram include a legend at the bottom explaining node shapes and arrow types?",
                                "Are all the nodes connected by directional arrows showing sequential flow?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000924_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Garden Growth Cycle",
                                "4",
                                "Preparation",
                                "Yes",
                                "Harvest",
                                "Yes",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of an e-commerce checkout process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title \"E-commerce Checkout Journey\" at the top of the diagram.\n- Display exactly 4 main process steps: Cart Review, Payment Processing, Shipping Selection, and Order Confirmation, each in a unique rectangular node.\n- Incorporate a diamond-shaped node to represent the decision point on payment approval.\n- Use a red fill for the \"Cart Review\" start node and a green fill for the \"Order Confirmation\" end node.\n- Connect all nodes sequentially using directional arrows, with clear labels indicating the step numbers (e.g., Step 1, Step 2, etc.).\n- Add a loopback arrow from \"Payment Processing\" back to \"Cart Review\" to indicate a retry in case of payment failure.\n- Position all nodes with specific directional links, ensuring that the decision node is clearly connected between the payment and shipping steps.\n- Include a legend at the bottom of the diagram that explains the meanings of the different node shapes and color codes.",
            "task_id": "000925",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the diagram title displayed at the top?",
                "How many main process steps are depicted in the diagram?",
                "What are the names of the main process steps?",
                "Which node is shown with a red fill?",
                "Which node is shown with a green fill?",
                "What shape is used to represent the payment approval decision point?",
                "Are all nodes connected sequentially with arrows labeled as steps (e.g., Step 1, Step 2)?",
                "Is there a loopback arrow to indicate a retry in case of payment failure and which nodes does it connect?",
                "How is the decision node positioned in relation to the payment and shipping steps?",
                "Does the diagram include a legend at the bottom that explains the node shapes and color codes?"
            ],
            "VQA_answers": [
                "E-commerce Checkout Journey",
                "4",
                "Cart Review, Payment Processing, Shipping Selection, Order Confirmation",
                "Cart Review",
                "Order Confirmation",
                "Diamond",
                "Yes",
                "Yes, from Payment Processing back to Cart Review",
                "It is clearly connected between Payment Processing and Shipping Selection",
                "Yes"
            ],
            "raw_output_metric": [
                "graph TD",
                "E-commerce Checkout Journey",
                "Cart Review",
                "Payment Processing",
                "Shipping Selection",
                "Order Confirmation",
                "Step 1",
                "Step 2",
                "Step 3",
                "Step 4",
                "Payment Approval",
                "red",
                "green",
                "legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000925_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of an e-commerce checkout process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title \"E-commerce Checkout Journey\" at the top of the diagram.\n- Display exactly 4 main process steps: Cart Review, Payment Processing, Shipping Selection, and Order Confirmation, each in a unique rectangular node.\n- Incorporate a diamond-shaped node to represent the decision point on payment approval.\n- Use a red fill for the \"Cart Review\" start node and a green fill for the \"Order Confirmation\" end node.\n- Connect all nodes sequentially using directional arrows, with clear labels indicating the step numbers (e.g., Step 1, Step 2, etc.).\n- Add a loopback arrow from \"Payment Processing\" back to \"Cart Review\" to indicate a retry in case of payment failure.\n- Position all nodes with specific directional links, ensuring that the decision node is clearly connected between the payment and shipping steps.\n- Include a legend at the bottom of the diagram that explains the meanings of the different node shapes and color codes."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000925_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "graph TD",
                                "E-commerce Checkout Journey",
                                "Cart Review",
                                "Payment Processing",
                                "Shipping Selection",
                                "Order Confirmation",
                                "Step 1",
                                "Step 2",
                                "Step 3",
                                "Step 4",
                                "Payment Approval",
                                "red",
                                "green",
                                "legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000925_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000925_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the diagram title displayed at the top?",
                                "How many main process steps are depicted in the diagram?",
                                "What are the names of the main process steps?",
                                "Which node is shown with a red fill?",
                                "Which node is shown with a green fill?",
                                "What shape is used to represent the payment approval decision point?",
                                "Are all nodes connected sequentially with arrows labeled as steps (e.g., Step 1, Step 2)?",
                                "Is there a loopback arrow to indicate a retry in case of payment failure and which nodes does it connect?",
                                "How is the decision node positioned in relation to the payment and shipping steps?",
                                "Does the diagram include a legend at the bottom that explains the node shapes and color codes?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000925_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "E-commerce Checkout Journey",
                                "4",
                                "Cart Review, Payment Processing, Shipping Selection, Order Confirmation",
                                "Cart Review",
                                "Order Confirmation",
                                "Diamond",
                                "Yes",
                                "Yes, from Payment Processing back to Cart Review",
                                "It is clearly connected between Payment Processing and Shipping Selection",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nCreate a Mermaid diagram that illustrates an innovative recycling initiative process in an urban setting.\n\nFeature Requirements:\n- Include a title at the top labeled \"Urban Recycling Initiative\".\n- Display exactly 5 main stages: Collection, Sorting, Processing, Distribution, and Feedback.\n- Represent the Collection and Distribution stages with nodes that have a unique color fill different from the other stages.\n- Use rectangular nodes exclusively for action steps and a parallelogram-shaped node to represent the environmental review step linked to the Sorting stage.\n- Connect all nodes sequentially with arrows that clearly show the process flow from Collection to Feedback.\n- Add a branch from Processing to Sorting to indicate a re-evaluation loop in the process.\n- Place a legend at the bottom of the diagram explaining the meaning of each node shape and color code.",
            "task_id": "000926",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the diagram?",
                "How many main stages are depicted in the process?",
                "What are the names of the five main stages?",
                "Which stages are represented with a unique color fill?",
                "What shape is used exclusively for action steps in the diagram?",
                "What shape is used for the environmental review step linked to the Sorting stage?",
                "Which stage is directly connected to the environmental review step?",
                "Is there a re-evaluation loop in the process, and if so, between which stages?",
                "What information is provided in the legend at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Urban Recycling Initiative",
                "5",
                "Collection, Sorting, Processing, Distribution, and Feedback",
                "Collection and Distribution",
                "Rectangular",
                "Parallelogram",
                "Sorting",
                "Yes, from Processing to Sorting",
                "Explanation of each node shape and color code"
            ],
            "raw_output_metric": [
                "flowchart",
                "Urban Recycling Initiative",
                "Collection",
                "Sorting",
                "Processing",
                "Distribution",
                "Feedback",
                "environmental review",
                "rect",
                "parallelogram",
                "->",
                "legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000926_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nCreate a Mermaid diagram that illustrates an innovative recycling initiative process in an urban setting.\n\nFeature Requirements:\n- Include a title at the top labeled \"Urban Recycling Initiative\".\n- Display exactly 5 main stages: Collection, Sorting, Processing, Distribution, and Feedback.\n- Represent the Collection and Distribution stages with nodes that have a unique color fill different from the other stages.\n- Use rectangular nodes exclusively for action steps and a parallelogram-shaped node to represent the environmental review step linked to the Sorting stage.\n- Connect all nodes sequentially with arrows that clearly show the process flow from Collection to Feedback.\n- Add a branch from Processing to Sorting to indicate a re-evaluation loop in the process.\n- Place a legend at the bottom of the diagram explaining the meaning of each node shape and color code."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000926_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "flowchart",
                                "Urban Recycling Initiative",
                                "Collection",
                                "Sorting",
                                "Processing",
                                "Distribution",
                                "Feedback",
                                "environmental review",
                                "rect",
                                "parallelogram",
                                "->",
                                "legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000926_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000926_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the diagram?",
                                "How many main stages are depicted in the process?",
                                "What are the names of the five main stages?",
                                "Which stages are represented with a unique color fill?",
                                "What shape is used exclusively for action steps in the diagram?",
                                "What shape is used for the environmental review step linked to the Sorting stage?",
                                "Which stage is directly connected to the environmental review step?",
                                "Is there a re-evaluation loop in the process, and if so, between which stages?",
                                "What information is provided in the legend at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000926_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Urban Recycling Initiative",
                                "5",
                                "Collection, Sorting, Processing, Distribution, and Feedback",
                                "Collection and Distribution",
                                "Rectangular",
                                "Parallelogram",
                                "Sorting",
                                "Yes, from Processing to Sorting",
                                "Explanation of each node shape and color code"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual machine maintenance schedule into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Machine Maintenance Schedule\".\n- Display exactly 4 main maintenance steps, each within a unique rectangular action node.\n- Use an oval-shaped node for the process start point and another oval-shaped node for the ending point.\n- Incorporate a diamond-shaped decision node to represent a maintenance check, with two distinct outward arrows labeled \"Pass\" and \"Fail\".\n- Add a loopback arrow from the \"Fail\" decision output directing back to the maintenance steps to indicate a recheck.\n- Apply a green fill color for the starting node and a red fill color for the ending node to visually differentiate them.\n- Connect all nodes sequentially from left to right with clear directional arrows indicating the process flow.\n- Include a legend at the bottom of the diagram that explains the meaning of the oval, rectangular, and diamond-shaped nodes.",
            "task_id": "000927",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the diagram?",
                "How many main maintenance steps (rectangular nodes) are included?",
                "What shape is used for the starting node and what is its fill color?",
                "What shape is used for the ending node and what is its fill color?",
                "What shape is used for the maintenance check decision node?",
                "How many outward arrows come from the decision node and what labels do they have?",
                "Is there a loopback arrow present and where does it direct?",
                "How are the nodes connected in terms of directional flow?",
                "What additional information is included at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Machine Maintenance Schedule",
                "4",
                "Oval with green fill",
                "Oval with red fill",
                "Diamond",
                "Two arrows labeled 'Pass' and 'Fail'",
                "Yes, from the 'Fail' decision output back to the maintenance steps",
                "Sequentially from left to right",
                "A legend explaining the meaning of the oval, rectangular, and diamond-shaped nodes"
            ],
            "raw_output_metric": [
                "Machine Maintenance Schedule",
                "flowchart LR",
                "Start",
                "Maintenance Step 1",
                "Maintenance Step 2",
                "Maintenance Step 3",
                "Maintenance Step 4",
                "maintenance check",
                "Pass",
                "Fail",
                "End",
                "green",
                "red",
                "legend",
                "oval",
                "rectangular",
                "diamond",
                "recheck"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000927_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual machine maintenance schedule into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Machine Maintenance Schedule\".\n- Display exactly 4 main maintenance steps, each within a unique rectangular action node.\n- Use an oval-shaped node for the process start point and another oval-shaped node for the ending point.\n- Incorporate a diamond-shaped decision node to represent a maintenance check, with two distinct outward arrows labeled \"Pass\" and \"Fail\".\n- Add a loopback arrow from the \"Fail\" decision output directing back to the maintenance steps to indicate a recheck.\n- Apply a green fill color for the starting node and a red fill color for the ending node to visually differentiate them.\n- Connect all nodes sequentially from left to right with clear directional arrows indicating the process flow.\n- Include a legend at the bottom of the diagram that explains the meaning of the oval, rectangular, and diamond-shaped nodes."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000927_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Machine Maintenance Schedule",
                                "flowchart LR",
                                "Start",
                                "Maintenance Step 1",
                                "Maintenance Step 2",
                                "Maintenance Step 3",
                                "Maintenance Step 4",
                                "maintenance check",
                                "Pass",
                                "Fail",
                                "End",
                                "green",
                                "red",
                                "legend",
                                "oval",
                                "rectangular",
                                "diamond",
                                "recheck"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000927_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000927_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the diagram?",
                                "How many main maintenance steps (rectangular nodes) are included?",
                                "What shape is used for the starting node and what is its fill color?",
                                "What shape is used for the ending node and what is its fill color?",
                                "What shape is used for the maintenance check decision node?",
                                "How many outward arrows come from the decision node and what labels do they have?",
                                "Is there a loopback arrow present and where does it direct?",
                                "How are the nodes connected in terms of directional flow?",
                                "What additional information is included at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000927_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Machine Maintenance Schedule",
                                "4",
                                "Oval with green fill",
                                "Oval with red fill",
                                "Diamond",
                                "Two arrows labeled 'Pass' and 'Fail'",
                                "Yes, from the 'Fail' decision output back to the maintenance steps",
                                "Sequentially from left to right",
                                "A legend explaining the meaning of the oval, rectangular, and diamond-shaped nodes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a maintenance procedure description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Maintenance Workflow\".\n- Display exactly 4 main process steps, each within a distinct node, connected with directional arrows.\n- Represent the initial step with an ellipse-shaped node to indicate the start of the procedure.\n- Use a diamond-shaped node to depict a decision point that branches into parallel task sequences.\n- Incorporate a loopback arrow from the final process node back to the second process node to indicate a recurring check.\n- Distinguish the first and last nodes by applying a red fill for the start node and a green fill for the end node.\n- Use rectangular nodes exclusively for all standard task steps in the process.\n- Include a legend at the bottom of the diagram that explains the meaning of the ellipse, rectangle, and diamond shapes.",
            "task_id": "000928",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many main process step nodes are present in the diagram?",
                "What shape is used for the initial step node and what fill color does it have?",
                "What shape is used to represent the decision point node?",
                "What shape are all the standard task step nodes?",
                "What fill color is applied to the final process node?",
                "Which nodes are connected by a loopback arrow?",
                "What information is provided by the legend at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Maintenance Workflow",
                "4",
                "Ellipse with red fill",
                "Diamond",
                "Rectangles",
                "Green",
                "From the final process node back to the second process node",
                "The meaning of the ellipse, rectangle, and diamond shapes"
            ],
            "raw_output_metric": [
                "Maintenance Workflow",
                "((Start))",
                "[Step 1]",
                "[Step 2]",
                "[Step 3]",
                "[Step 4]",
                "{Decision}",
                "fill:#ff0000",
                "fill:#00ff00",
                "loopback",
                "legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000928_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a maintenance procedure description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Maintenance Workflow\".\n- Display exactly 4 main process steps, each within a distinct node, connected with directional arrows.\n- Represent the initial step with an ellipse-shaped node to indicate the start of the procedure.\n- Use a diamond-shaped node to depict a decision point that branches into parallel task sequences.\n- Incorporate a loopback arrow from the final process node back to the second process node to indicate a recurring check.\n- Distinguish the first and last nodes by applying a red fill for the start node and a green fill for the end node.\n- Use rectangular nodes exclusively for all standard task steps in the process.\n- Include a legend at the bottom of the diagram that explains the meaning of the ellipse, rectangle, and diamond shapes."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000928_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Maintenance Workflow",
                                "((Start))",
                                "[Step 1]",
                                "[Step 2]",
                                "[Step 3]",
                                "[Step 4]",
                                "{Decision}",
                                "fill:#ff0000",
                                "fill:#00ff00",
                                "loopback",
                                "legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000928_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000928_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many main process step nodes are present in the diagram?",
                                "What shape is used for the initial step node and what fill color does it have?",
                                "What shape is used to represent the decision point node?",
                                "What shape are all the standard task step nodes?",
                                "What fill color is applied to the final process node?",
                                "Which nodes are connected by a loopback arrow?",
                                "What information is provided by the legend at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000928_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Maintenance Workflow",
                                "4",
                                "Ellipse with red fill",
                                "Diamond",
                                "Rectangles",
                                "Green",
                                "From the final process node back to the second process node",
                                "The meaning of the ellipse, rectangle, and diamond shapes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a narrative describing an automated software deployment process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Software Deployment Pipeline\".\n- Display exactly 4 distinct process steps in separate nodes, connected sequentially using arrows.\n- Use a circular node for the initial step, a rectangular node for a mid-deployment action, and a parallelogram node for deployment validation.\n- Include at least one branch with an arrow representing a rollback procedure in case of deployment failure.\n- Incorporate a loopback arrow from the deployment validation node to the deployment action node to indicate a reattempt.\n- Differentiate nodes by applying a unique color fill for the initial step versus the rollback step.\n- Place a legend at the bottom of the diagram explaining the meaning of each node shape and color used.\n- Ensure all nodes have clear, labeled text describing their function in the process.",
            "task_id": "000929",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the diagram?",
                "How many distinct process steps (nodes) are shown in the diagram?",
                "What shape is used for the initial deployment step node?",
                "What shape is used for the mid-deployment action node?",
                "What shape represents the deployment validation step?",
                "Is there a branch with an arrow indicating a rollback procedure in case of failure?",
                "Is there a loopback arrow from the deployment validation node to the deployment action node?",
                "Are different color fills used to differentiate the initial step from the rollback step?",
                "Is a legend present at the bottom of the diagram, explaining node shapes and colors?",
                "Do all nodes feature clear, labeled text describing their respective functions?"
            ],
            "VQA_answers": [
                "Software Deployment Pipeline",
                "4",
                "Circular",
                "Rectangular",
                "Parallelogram",
                "Yes",
                "Yes",
                "Yes",
                "Yes",
                "Yes"
            ],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000929_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a narrative describing an automated software deployment process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Software Deployment Pipeline\".\n- Display exactly 4 distinct process steps in separate nodes, connected sequentially using arrows.\n- Use a circular node for the initial step, a rectangular node for a mid-deployment action, and a parallelogram node for deployment validation.\n- Include at least one branch with an arrow representing a rollback procedure in case of deployment failure.\n- Incorporate a loopback arrow from the deployment validation node to the deployment action node to indicate a reattempt.\n- Differentiate nodes by applying a unique color fill for the initial step versus the rollback step.\n- Place a legend at the bottom of the diagram explaining the meaning of each node shape and color used.\n- Ensure all nodes have clear, labeled text describing their function in the process."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000929_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000929_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000929_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the diagram?",
                                "How many distinct process steps (nodes) are shown in the diagram?",
                                "What shape is used for the initial deployment step node?",
                                "What shape is used for the mid-deployment action node?",
                                "What shape represents the deployment validation step?",
                                "Is there a branch with an arrow indicating a rollback procedure in case of failure?",
                                "Is there a loopback arrow from the deployment validation node to the deployment action node?",
                                "Are different color fills used to differentiate the initial step from the rollback step?",
                                "Is a legend present at the bottom of the diagram, explaining node shapes and colors?",
                                "Do all nodes feature clear, labeled text describing their respective functions?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000929_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Software Deployment Pipeline",
                                "4",
                                "Circular",
                                "Rectangular",
                                "Parallelogram",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a narrative description of a renewable energy project into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Renewable Energy Cycle\".\n- Display exactly 4 main stages in the project, each contained in its own uniquely labeled node.\n- Use an oval-shaped node for the start of the process and an oval-shaped node for the end to distinguish these stages.\n- Represent a decision point with a diamond-shaped node at a stage where a funding evaluation occurs.\n- Connect all nodes sequentially with arrows indicating clear directional flow between each stage.\n- Incorporate a loopback arrow from a mid-process stage returning to the funding evaluation decision point to indicate reassessment.\n- Use rectangular nodes exclusively for all action steps that occur between the start and decision point.\n- Apply a distinct color fill for the start node and a separate color fill for the end node to enhance visual differentiation.\n- Include a legend at the bottom of the diagram that explains the meaning of the different node shapes and color fills.\n- Ensure that each connection between nodes is clearly labeled with the transition condition or stage description.",
            "task_id": "000930",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many main stages are shown in the project?",
                "Which shape is used for the start and end nodes?",
                "What shape represents the funding evaluation decision point?",
                "What shape is used for the action steps between the start and the decision point?",
                "Is there a loopback arrow included in the diagram?",
                "How are the start and end nodes visually differentiated?",
                "Are the connections between nodes clearly labeled with transition conditions or stage descriptions?",
                "Is there a legend provided at the bottom of the diagram?",
                "What information does the legend explain?"
            ],
            "VQA_answers": [
                "Renewable Energy Cycle",
                "4",
                "Oval",
                "Diamond",
                "Rectangle",
                "Yes",
                "Distinct color fills",
                "Yes",
                "Yes",
                "Node shapes and color fills"
            ],
            "raw_output_metric": [
                "flowchart LR",
                "Renewable Energy Cycle",
                "(Start)",
                "Funding Evaluation",
                "(End)",
                "Legend",
                "-->",
                "loopback"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000930_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a narrative description of a renewable energy project into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Renewable Energy Cycle\".\n- Display exactly 4 main stages in the project, each contained in its own uniquely labeled node.\n- Use an oval-shaped node for the start of the process and an oval-shaped node for the end to distinguish these stages.\n- Represent a decision point with a diamond-shaped node at a stage where a funding evaluation occurs.\n- Connect all nodes sequentially with arrows indicating clear directional flow between each stage.\n- Incorporate a loopback arrow from a mid-process stage returning to the funding evaluation decision point to indicate reassessment.\n- Use rectangular nodes exclusively for all action steps that occur between the start and decision point.\n- Apply a distinct color fill for the start node and a separate color fill for the end node to enhance visual differentiation.\n- Include a legend at the bottom of the diagram that explains the meaning of the different node shapes and color fills.\n- Ensure that each connection between nodes is clearly labeled with the transition condition or stage description."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000930_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "flowchart LR",
                                "Renewable Energy Cycle",
                                "(Start)",
                                "Funding Evaluation",
                                "(End)",
                                "Legend",
                                "-->",
                                "loopback"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000930_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000930_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many main stages are shown in the project?",
                                "Which shape is used for the start and end nodes?",
                                "What shape represents the funding evaluation decision point?",
                                "What shape is used for the action steps between the start and the decision point?",
                                "Is there a loopback arrow included in the diagram?",
                                "How are the start and end nodes visually differentiated?",
                                "Are the connections between nodes clearly labeled with transition conditions or stage descriptions?",
                                "Is there a legend provided at the bottom of the diagram?",
                                "What information does the legend explain?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000930_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Renewable Energy Cycle",
                                "4",
                                "Oval",
                                "Diamond",
                                "Rectangle",
                                "Yes",
                                "Distinct color fills",
                                "Yes",
                                "Yes",
                                "Node shapes and color fills"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a narrative description of an interstellar mission launch sequence into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Mission Launch Sequence\".\n- Display exactly 4 main mission stages, each within a unique rectangular node, connected with directional arrows.\n- Use an elliptical-shaped node to represent the start of the mission and a differently colored elliptical node for the mission completion.\n- Incorporate a diamond-shaped node to depict a critical decision point for communications clearance before liftoff.\n- Include a loopback arrow from the decision node back to one of the main mission stage nodes, indicating a recheck step if clearance is not granted.\n- Label each arrow with clear text such as \"proceed\" or \"retry\" to indicate the transition between stages.\n- Ensure all nodes are sequentially connected with arrows showing a clear, linear progression of events.\n- Add a legend at the bottom of the diagram to explain the meanings of each node shape and the arrow labels.",
            "task_id": "000931",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many main mission stages (rectangular nodes) are shown?",
                "What shape is used to represent the start of the mission?",
                "Which node represents the mission completion and what is distinctive about it?",
                "What shape is used for the communications clearance decision point?",
                "How are the arrows labeled to indicate transitions between stages?",
                "Is there a loopback arrow, and what is its purpose?",
                "What additional element is included at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Mission Launch Sequence",
                "4",
                "Elliptical",
                "An elliptical node with a different color",
                "Diamond",
                "Labels such as 'proceed' and 'retry'",
                "Yes, it indicates a recheck step if clearance is not granted",
                "A legend explaining node shapes and arrow labels"
            ],
            "raw_output_metric": [
                "Mission Launch Sequence",
                "Stage 1",
                "Stage 2",
                "Stage 3",
                "Stage 4",
                "Start",
                "Mission Complete",
                "Communications Clearance",
                "proceed",
                "retry",
                "Legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000931_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a narrative description of an interstellar mission launch sequence into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Mission Launch Sequence\".\n- Display exactly 4 main mission stages, each within a unique rectangular node, connected with directional arrows.\n- Use an elliptical-shaped node to represent the start of the mission and a differently colored elliptical node for the mission completion.\n- Incorporate a diamond-shaped node to depict a critical decision point for communications clearance before liftoff.\n- Include a loopback arrow from the decision node back to one of the main mission stage nodes, indicating a recheck step if clearance is not granted.\n- Label each arrow with clear text such as \"proceed\" or \"retry\" to indicate the transition between stages.\n- Ensure all nodes are sequentially connected with arrows showing a clear, linear progression of events.\n- Add a legend at the bottom of the diagram to explain the meanings of each node shape and the arrow labels."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000931_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Mission Launch Sequence",
                                "Stage 1",
                                "Stage 2",
                                "Stage 3",
                                "Stage 4",
                                "Start",
                                "Mission Complete",
                                "Communications Clearance",
                                "proceed",
                                "retry",
                                "Legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000931_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000931_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many main mission stages (rectangular nodes) are shown?",
                                "What shape is used to represent the start of the mission?",
                                "Which node represents the mission completion and what is distinctive about it?",
                                "What shape is used for the communications clearance decision point?",
                                "How are the arrows labeled to indicate transitions between stages?",
                                "Is there a loopback arrow, and what is its purpose?",
                                "What additional element is included at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000931_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Mission Launch Sequence",
                                "4",
                                "Elliptical",
                                "An elliptical node with a different color",
                                "Diamond",
                                "Labels such as 'proceed' and 'retry'",
                                "Yes, it indicates a recheck step if clearance is not granted",
                                "A legend explaining node shapes and arrow labels"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a written description of a coffee shop order and preparation process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Coffee Shop Workflow.\"\n- Provide exactly 4 main sequential steps shown within rectangular nodes.\n- Use an oval-shaped node for the start point and a different-colored oval-shaped node for the end point.\n- Integrate one diamond-shaped node to represent a decision point where the customer chooses between dine-in or take-away.\n- Add a loopback arrow illustrating the possibility of a reorder in the process.\n- Introduce a separate branch with two additional steps to detail the customization of a specialty drink.\n- Utilize colored arrows to depict different paths with clear directional flow between nodes.\n- Label all nodes with descriptive text explaining their role in the process.\n- Place a legend at the bottom of the diagram that explains the meaning of each node shape and the color distinctions used.",
            "task_id": "000932",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many main sequential steps are depicted within rectangular nodes?",
                "What shape is used for the start point?",
                "What is unique about the end point node compared to the start point?",
                "What shape is used to represent the decision point where the customer chooses between dine-in and take-away?",
                "What options does the decision point provide?",
                "How many additional steps are included in the branch for customizing a specialty drink?",
                "What element in the diagram explains the meaning of each node shape and color distinctions?"
            ],
            "VQA_answers": [
                "Coffee Shop Workflow",
                "4",
                "Oval",
                "It is an oval with a different color",
                "Diamond",
                "Dine-in or take-away",
                "2",
                "The legend at the bottom"
            ],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000932_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a written description of a coffee shop order and preparation process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Coffee Shop Workflow.\"\n- Provide exactly 4 main sequential steps shown within rectangular nodes.\n- Use an oval-shaped node for the start point and a different-colored oval-shaped node for the end point.\n- Integrate one diamond-shaped node to represent a decision point where the customer chooses between dine-in or take-away.\n- Add a loopback arrow illustrating the possibility of a reorder in the process.\n- Introduce a separate branch with two additional steps to detail the customization of a specialty drink.\n- Utilize colored arrows to depict different paths with clear directional flow between nodes.\n- Label all nodes with descriptive text explaining their role in the process.\n- Place a legend at the bottom of the diagram that explains the meaning of each node shape and the color distinctions used."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000932_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000932_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000932_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many main sequential steps are depicted within rectangular nodes?",
                                "What shape is used for the start point?",
                                "What is unique about the end point node compared to the start point?",
                                "What shape is used to represent the decision point where the customer chooses between dine-in and take-away?",
                                "What options does the decision point provide?",
                                "How many additional steps are included in the branch for customizing a specialty drink?",
                                "What element in the diagram explains the meaning of each node shape and color distinctions?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000932_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Coffee Shop Workflow",
                                "4",
                                "Oval",
                                "It is an oval with a different color",
                                "Diamond",
                                "Dine-in or take-away",
                                "2",
                                "The legend at the bottom"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a narrative description of an online ordering system into a Mermaid sequence diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Online Order Sequence\".\n- Represent exactly four actors: Customer, Website, Payment System, and Shipping Center, each depicted with a distinct rectangular node.\n- Arrange the actors vertically with clear sequential flow of interactions.\n- Use solid arrows to depict standard message passing between the actors.\n- Include a diamond-shaped node to represent a decision point for payment authorization.\n- Depict a dashed arrow to illustrate the alternate flow in case of payment failure.\n- Add a loopback arrow from the Website node back to the Customer node for order corrections.\n- Label each arrow with a descriptive action such as \"Place Order\", \"Confirm Payment\", \"Dispatch Order\", and \"Report Issue\".\n- Include a footer legend that explains the meaning of the shapes (rectangular nodes for actors and diamond for decision point).",
            "task_id": "000933",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title labeled at the top of the diagram?",
                "How many actors are depicted in the diagram?",
                "Which names are assigned to the actors?",
                "What shape is used to represent each actor?",
                "What shape is used to represent the payment authorization decision point?",
                "What type of arrow represents the alternate flow in case of payment failure?",
                "Which arrow is used to indicate order corrections?",
                "What does the footer legend explain?"
            ],
            "VQA_answers": [
                "Online Order Sequence",
                "4",
                "Customer, Website, Payment System, Shipping Center",
                "Rectangular node",
                "Diamond-shaped node",
                "Dashed arrow",
                "Loopback arrow from the Website node back to the Customer node",
                "Rectangular nodes represent actors and the diamond represents the decision point"
            ],
            "raw_output_metric": [
                "sequenceDiagram",
                "title Online Order Sequence",
                "Customer",
                "Website",
                "Payment System",
                "Shipping Center",
                "Place Order",
                "Confirm Payment",
                "Payment Authorization",
                "Dispatch Order",
                "Report Issue",
                "alt",
                "-.->",
                "loop",
                "legend",
                "rectangular",
                "diamond"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000933_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a narrative description of an online ordering system into a Mermaid sequence diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Online Order Sequence\".\n- Represent exactly four actors: Customer, Website, Payment System, and Shipping Center, each depicted with a distinct rectangular node.\n- Arrange the actors vertically with clear sequential flow of interactions.\n- Use solid arrows to depict standard message passing between the actors.\n- Include a diamond-shaped node to represent a decision point for payment authorization.\n- Depict a dashed arrow to illustrate the alternate flow in case of payment failure.\n- Add a loopback arrow from the Website node back to the Customer node for order corrections.\n- Label each arrow with a descriptive action such as \"Place Order\", \"Confirm Payment\", \"Dispatch Order\", and \"Report Issue\".\n- Include a footer legend that explains the meaning of the shapes (rectangular nodes for actors and diamond for decision point)."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000933_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "sequenceDiagram",
                                "title Online Order Sequence",
                                "Customer",
                                "Website",
                                "Payment System",
                                "Shipping Center",
                                "Place Order",
                                "Confirm Payment",
                                "Payment Authorization",
                                "Dispatch Order",
                                "Report Issue",
                                "alt",
                                "-.->",
                                "loop",
                                "legend",
                                "rectangular",
                                "diamond"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000933_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000933_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title labeled at the top of the diagram?",
                                "How many actors are depicted in the diagram?",
                                "Which names are assigned to the actors?",
                                "What shape is used to represent each actor?",
                                "What shape is used to represent the payment authorization decision point?",
                                "What type of arrow represents the alternate flow in case of payment failure?",
                                "Which arrow is used to indicate order corrections?",
                                "What does the footer legend explain?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000933_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Online Order Sequence",
                                "4",
                                "Customer, Website, Payment System, Shipping Center",
                                "Rectangular node",
                                "Diamond-shaped node",
                                "Dashed arrow",
                                "Loopback arrow from the Website node back to the Customer node",
                                "Rectangular nodes represent actors and the diamond represents the decision point"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a descriptive narrative of a weekly workout schedule into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Display a header titled \"Weekly Workout Schedule\" at the top of the diagram.\n- Include exactly 4 distinct workout days represented by rectangular nodes.\n- Use a diamond-shaped node to represent a decision point for \"Intensity Adjustment\".\n- Connect all nodes with directional arrows showing a sequential order from the first to the last workout day.\n- Insert a parallel branch after the second workout day for an optional \"Recovery Session\" represented by a rectangular node.\n- Include a loopback arrow from the final workout day returning to the first day to illustrate the repeating weekly cycle.\n- Apply a unique fill color to the starting node and a different fill color to the ending node.\n- Use an ellipse shape exclusively for the designated rest day node.\n- Attach an annotation near the decision node containing the text \"Intensity Adjustment\".\n- Place a legend at the bottom of the diagram that clearly defines the meanings of each node shape and the applied color codes.",
            "task_id": "000934",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the header title in the diagram?",
                "How many distinct workout day nodes are displayed?",
                "What shape is used for the workout day nodes?",
                "What shape is used for the 'Intensity Adjustment' decision node?",
                "Is there an optional branch for a 'Recovery Session' and what is its node shape?",
                "Does the diagram include a loopback arrow from the final workout day back to the first?",
                "Are unique fill colors applied to the starting and ending workout day nodes?",
                "What shape is used to represent the designated rest day?",
                "Is there an annotation near the decision node, and what does it state?",
                "What does the legend at the bottom of the diagram define?"
            ],
            "VQA_answers": [
                "Weekly Workout Schedule",
                "4",
                "Rectangle",
                "Diamond",
                "Yes, it is a rectangle",
                "Yes",
                "Yes, different colors are used",
                "Ellipse",
                "It states 'Intensity Adjustment'",
                "Node shapes and color codes"
            ],
            "raw_output_metric": [
                "Weekly Workout Schedule",
                "Workout Day 1",
                "Workout Day 2",
                "Workout Day 3",
                "Workout Day 4",
                "Recovery Session",
                "Intensity Adjustment",
                "Rest Day",
                "Legend",
                "rect",
                "diamond",
                "ellipse",
                "fill:",
                "loopback"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000934_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a descriptive narrative of a weekly workout schedule into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Display a header titled \"Weekly Workout Schedule\" at the top of the diagram.\n- Include exactly 4 distinct workout days represented by rectangular nodes.\n- Use a diamond-shaped node to represent a decision point for \"Intensity Adjustment\".\n- Connect all nodes with directional arrows showing a sequential order from the first to the last workout day.\n- Insert a parallel branch after the second workout day for an optional \"Recovery Session\" represented by a rectangular node.\n- Include a loopback arrow from the final workout day returning to the first day to illustrate the repeating weekly cycle.\n- Apply a unique fill color to the starting node and a different fill color to the ending node.\n- Use an ellipse shape exclusively for the designated rest day node.\n- Attach an annotation near the decision node containing the text \"Intensity Adjustment\".\n- Place a legend at the bottom of the diagram that clearly defines the meanings of each node shape and the applied color codes."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000934_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Weekly Workout Schedule",
                                "Workout Day 1",
                                "Workout Day 2",
                                "Workout Day 3",
                                "Workout Day 4",
                                "Recovery Session",
                                "Intensity Adjustment",
                                "Rest Day",
                                "Legend",
                                "rect",
                                "diamond",
                                "ellipse",
                                "fill:",
                                "loopback"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000934_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000934_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the header title in the diagram?",
                                "How many distinct workout day nodes are displayed?",
                                "What shape is used for the workout day nodes?",
                                "What shape is used for the 'Intensity Adjustment' decision node?",
                                "Is there an optional branch for a 'Recovery Session' and what is its node shape?",
                                "Does the diagram include a loopback arrow from the final workout day back to the first?",
                                "Are unique fill colors applied to the starting and ending workout day nodes?",
                                "What shape is used to represent the designated rest day?",
                                "Is there an annotation near the decision node, and what does it state?",
                                "What does the legend at the bottom of the diagram define?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000934_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Weekly Workout Schedule",
                                "4",
                                "Rectangle",
                                "Diamond",
                                "Yes, it is a rectangle",
                                "Yes",
                                "Yes, different colors are used",
                                "Ellipse",
                                "It states 'Intensity Adjustment'",
                                "Node shapes and color codes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a written narrative of a fictional space mission into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart reading \"Interstellar Voyage\".\n- Display exactly 4 main mission stages, each represented by a unique rectangular node labeled with the stage name (e.g., Launch, Orbit Insertion, Exploration, Return).\n- Represent the mission start with an oval-shaped node labeled \"Mission Commence\" and the end with an ellipse-shaped node labeled \"Mission Complete\", each having a distinct fill color.\n- Use a diamond-shaped node to denote a critical decision point labeled \"Navigate Asteroid Field\".\n- Connect all nodes with clear directional arrows to depict the sequential flow of the mission stages.\n- Add a loopback arrow from the \"Navigate Asteroid Field\" node back to the \"Orbit Insertion\" node, labeled \"Re-assess Trajectory\".\n- Include a node shaped as a parallelogram to show \"Fuel Check\" between Exploration and Return stages.\n- Append a legend at the bottom of the diagram that defines each node shape and its corresponding role in the mission.",
            "task_id": "000935",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the flowchart?",
                "How many main mission stages are depicted and what are they?",
                "What node shape and label represent the start of the mission?",
                "What node shape and label indicate the mission's completion?",
                "Which node is diamond-shaped and what decision does it represent?",
                "What is the label on the loopback arrow, and between which nodes does it connect?",
                "What node shape is used for the 'Fuel Check' and where is it placed?",
                "What information does the legend at the bottom of the diagram provide?"
            ],
            "VQA_answers": [
                "Interstellar Voyage",
                "4 stages: Launch, Orbit Insertion, Exploration, Return",
                "Oval-shaped node labeled 'Mission Commence' with a distinct fill color",
                "Ellipse-shaped node labeled 'Mission Complete' with a distinct fill color",
                "Diamond-shaped node representing 'Navigate Asteroid Field'",
                "Re-assess Trajectory; connects 'Navigate Asteroid Field' back to 'Orbit Insertion'",
                "Parallelogram-shaped node placed between the Exploration and Return stages",
                "It defines each node shape and its corresponding role in the mission"
            ],
            "raw_output_metric": [
                "Interstellar Voyage",
                "Mission Commence",
                "Launch",
                "Orbit Insertion",
                "Exploration",
                "Return",
                "Navigate Asteroid Field",
                "Re-assess Trajectory",
                "Fuel Check",
                "Mission Complete",
                "legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000935_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a written narrative of a fictional space mission into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart reading \"Interstellar Voyage\".\n- Display exactly 4 main mission stages, each represented by a unique rectangular node labeled with the stage name (e.g., Launch, Orbit Insertion, Exploration, Return).\n- Represent the mission start with an oval-shaped node labeled \"Mission Commence\" and the end with an ellipse-shaped node labeled \"Mission Complete\", each having a distinct fill color.\n- Use a diamond-shaped node to denote a critical decision point labeled \"Navigate Asteroid Field\".\n- Connect all nodes with clear directional arrows to depict the sequential flow of the mission stages.\n- Add a loopback arrow from the \"Navigate Asteroid Field\" node back to the \"Orbit Insertion\" node, labeled \"Re-assess Trajectory\".\n- Include a node shaped as a parallelogram to show \"Fuel Check\" between Exploration and Return stages.\n- Append a legend at the bottom of the diagram that defines each node shape and its corresponding role in the mission."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000935_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Interstellar Voyage",
                                "Mission Commence",
                                "Launch",
                                "Orbit Insertion",
                                "Exploration",
                                "Return",
                                "Navigate Asteroid Field",
                                "Re-assess Trajectory",
                                "Fuel Check",
                                "Mission Complete",
                                "legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000935_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000935_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the flowchart?",
                                "How many main mission stages are depicted and what are they?",
                                "What node shape and label represent the start of the mission?",
                                "What node shape and label indicate the mission's completion?",
                                "Which node is diamond-shaped and what decision does it represent?",
                                "What is the label on the loopback arrow, and between which nodes does it connect?",
                                "What node shape is used for the 'Fuel Check' and where is it placed?",
                                "What information does the legend at the bottom of the diagram provide?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000935_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Interstellar Voyage",
                                "4 stages: Launch, Orbit Insertion, Exploration, Return",
                                "Oval-shaped node labeled 'Mission Commence' with a distinct fill color",
                                "Ellipse-shaped node labeled 'Mission Complete' with a distinct fill color",
                                "Diamond-shaped node representing 'Navigate Asteroid Field'",
                                "Re-assess Trajectory; connects 'Navigate Asteroid Field' back to 'Orbit Insertion'",
                                "Parallelogram-shaped node placed between the Exploration and Return stages",
                                "It defines each node shape and its corresponding role in the mission"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of an urban transportation network into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Urban Transit Map\".\n- Display exactly 4 main transit hubs, each represented as a rectangular node.\n- Connect all transit hubs sequentially with directional arrows indicating major transit routes.\n- Integrate a diamond-shaped node at one hub representing a critical decision point for route diversion.\n- Add a cylinder-shaped node connected to one hub to represent a maintenance facility.\n- Incorporate at least one looping arrow from a transit hub to itself symbolizing a circular bus route.\n- Apply distinct fill colors: one color for transit hubs and a different color for the maintenance facility.\n- Provide a legend at the bottom of the diagram clearly explaining the meanings of each node shape and assigned color.",
            "task_id": "000936",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the diagram?",
                "How many main transit hubs (rectangular nodes) are shown?",
                "Are the transit hubs connected sequentially by directional arrows?",
                "What shape is used at one hub to represent a critical decision point for route diversion?",
                "What shape represents the maintenance facility connected to one of the hubs?",
                "Is there a looping arrow from at least one transit hub to itself indicating a circular bus route?",
                "Are distinct fill colors used for the transit hubs and the maintenance facility?",
                "Is a legend provided at the bottom of the diagram explaining node shapes and assigned colors?"
            ],
            "VQA_answers": [
                "Urban Transit Map",
                "4",
                "Yes",
                "Diamond",
                "Cylinder",
                "Yes",
                "Yes",
                "Yes"
            ],
            "raw_output_metric": [
                "flowchart LR",
                "Urban Transit Map",
                "Hub 1",
                "Hub 2",
                "Hub 3",
                "Hub 4",
                "-->",
                "[",
                "]",
                "{",
                "}",
                "((Maintenance Facility))",
                "loop",
                "Legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000936_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of an urban transportation network into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Urban Transit Map\".\n- Display exactly 4 main transit hubs, each represented as a rectangular node.\n- Connect all transit hubs sequentially with directional arrows indicating major transit routes.\n- Integrate a diamond-shaped node at one hub representing a critical decision point for route diversion.\n- Add a cylinder-shaped node connected to one hub to represent a maintenance facility.\n- Incorporate at least one looping arrow from a transit hub to itself symbolizing a circular bus route.\n- Apply distinct fill colors: one color for transit hubs and a different color for the maintenance facility.\n- Provide a legend at the bottom of the diagram clearly explaining the meanings of each node shape and assigned color."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000936_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "flowchart LR",
                                "Urban Transit Map",
                                "Hub 1",
                                "Hub 2",
                                "Hub 3",
                                "Hub 4",
                                "-->",
                                "[",
                                "]",
                                "{",
                                "}",
                                "((Maintenance Facility))",
                                "loop",
                                "Legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000936_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000936_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the diagram?",
                                "How many main transit hubs (rectangular nodes) are shown?",
                                "Are the transit hubs connected sequentially by directional arrows?",
                                "What shape is used at one hub to represent a critical decision point for route diversion?",
                                "What shape represents the maintenance facility connected to one of the hubs?",
                                "Is there a looping arrow from at least one transit hub to itself indicating a circular bus route?",
                                "Are distinct fill colors used for the transit hubs and the maintenance facility?",
                                "Is a legend provided at the bottom of the diagram explaining node shapes and assigned colors?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000936_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Urban Transit Map",
                                "4",
                                "Yes",
                                "Diamond",
                                "Cylinder",
                                "Yes",
                                "Yes",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a detailed workflow of organizing a virtual conference into a structured Mermaid diagram.\n\nFeature Requirements:\n- The diagram must have a title labeled \"Virtual Conference Workflow\" at the top.\n- Display exactly 4 main milestones, each contained within a uniquely labeled node connected sequentially with directional arrows.\n- Use a circle-shaped node to represent the \"Registration\" step.\n- Include a branching structure where the process splits into \"Speaker Sessions\" and \"Networking\" nodes.\n- Include a feedback loop arrow from the \"Post-Conference Survey\" node that loops back to the \"Planning\" node.\n- Utilize distinct color fills for \"Planning\", \"Execution\", and \"Follow-Up\" nodes.\n- Anchor a legend at the bottom of the diagram, explaining the meanings of the node shapes and colors used.",
            "task_id": "000937",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the diagram title displayed at the top?",
                "How many main milestone nodes are shown in the diagram?",
                "Which step is represented with a circle-shaped node?",
                "What are the two nodes branching from the main sequence?",
                "Which node has a feedback loop arrow returning to another node and what is that target?",
                "Which nodes are styled with distinct color fills?",
                "Is there a legend present in the diagram?",
                "What does the legend explain?"
            ],
            "VQA_answers": [
                "Virtual Conference Workflow",
                "4",
                "Registration",
                "Speaker Sessions and Networking",
                "Post-Conference Survey loops back to Planning",
                "Planning, Execution, and Follow-Up",
                "Yes",
                "Node shapes and color meanings"
            ],
            "raw_output_metric": [
                "Virtual Conference Workflow",
                "Planning",
                "Registration",
                "Execution",
                "Follow-Up",
                "Speaker Sessions",
                "Networking",
                "Post-Conference Survey",
                "legend",
                "circle"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000937_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a detailed workflow of organizing a virtual conference into a structured Mermaid diagram.\n\nFeature Requirements:\n- The diagram must have a title labeled \"Virtual Conference Workflow\" at the top.\n- Display exactly 4 main milestones, each contained within a uniquely labeled node connected sequentially with directional arrows.\n- Use a circle-shaped node to represent the \"Registration\" step.\n- Include a branching structure where the process splits into \"Speaker Sessions\" and \"Networking\" nodes.\n- Include a feedback loop arrow from the \"Post-Conference Survey\" node that loops back to the \"Planning\" node.\n- Utilize distinct color fills for \"Planning\", \"Execution\", and \"Follow-Up\" nodes.\n- Anchor a legend at the bottom of the diagram, explaining the meanings of the node shapes and colors used."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000937_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Virtual Conference Workflow",
                                "Planning",
                                "Registration",
                                "Execution",
                                "Follow-Up",
                                "Speaker Sessions",
                                "Networking",
                                "Post-Conference Survey",
                                "legend",
                                "circle"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000937_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000937_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the diagram title displayed at the top?",
                                "How many main milestone nodes are shown in the diagram?",
                                "Which step is represented with a circle-shaped node?",
                                "What are the two nodes branching from the main sequence?",
                                "Which node has a feedback loop arrow returning to another node and what is that target?",
                                "Which nodes are styled with distinct color fills?",
                                "Is there a legend present in the diagram?",
                                "What does the legend explain?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000937_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Virtual Conference Workflow",
                                "4",
                                "Registration",
                                "Speaker Sessions and Networking",
                                "Post-Conference Survey loops back to Planning",
                                "Planning, Execution, and Follow-Up",
                                "Yes",
                                "Node shapes and color meanings"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nTransform a written narrative about a treasure hunt event into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Treasure Hunt Adventure.\"\n- Display exactly 4 key locations as circular nodes, each representing a distinct phase of the hunt, connected sequentially with arrows.\n- Use a parallelogram-shaped node to represent a clue decoding step within the narrative.\n- Include an offshoot arrow indicating an optional detour to collect bonus items.\n- Ensure all nodes are labeled with clear names and connected by directional arrows showing the progression of the hunt.\n- Apply a unique border style to the starting node to visually distinguish it as the entry point.\n- Use square nodes exclusively for event action steps throughout the diagram.\n- Include a legend at the bottom of the diagram explaining the meaning of each node shape.",
            "task_id": "000938",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many key location nodes are included in the flowchart?",
                "What shape are the key location nodes representing distinct phases of the hunt?",
                "What shape is used to represent the clue decoding step?",
                "What does the offshoot arrow indicate in the diagram?",
                "What border style is applied to the starting node?",
                "What shape is used exclusively for event action steps?",
                "What is included at the bottom of the diagram to explain the node shapes?"
            ],
            "VQA_answers": [
                "Treasure Hunt Adventure",
                "4",
                "Circular",
                "Parallelogram",
                "An optional detour to collect bonus items",
                "A unique border style to visually distinguish it as the entry point",
                "Square",
                "A legend explaining the meaning of each node shape"
            ],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000938_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nTransform a written narrative about a treasure hunt event into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Treasure Hunt Adventure.\"\n- Display exactly 4 key locations as circular nodes, each representing a distinct phase of the hunt, connected sequentially with arrows.\n- Use a parallelogram-shaped node to represent a clue decoding step within the narrative.\n- Include an offshoot arrow indicating an optional detour to collect bonus items.\n- Ensure all nodes are labeled with clear names and connected by directional arrows showing the progression of the hunt.\n- Apply a unique border style to the starting node to visually distinguish it as the entry point.\n- Use square nodes exclusively for event action steps throughout the diagram.\n- Include a legend at the bottom of the diagram explaining the meaning of each node shape."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000938_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000938_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000938_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many key location nodes are included in the flowchart?",
                                "What shape are the key location nodes representing distinct phases of the hunt?",
                                "What shape is used to represent the clue decoding step?",
                                "What does the offshoot arrow indicate in the diagram?",
                                "What border style is applied to the starting node?",
                                "What shape is used exclusively for event action steps?",
                                "What is included at the bottom of the diagram to explain the node shapes?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000938_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Treasure Hunt Adventure",
                                "4",
                                "Circular",
                                "Parallelogram",
                                "An optional detour to collect bonus items",
                                "A unique border style to visually distinguish it as the entry point",
                                "Square",
                                "A legend explaining the meaning of each node shape"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nTransform a narrative description of a smart home security system into a Mermaid diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Smart Home Security Workflow\".\n- Display exactly 4 main steps, each contained in a uniquely labeled node and connected with directional arrows.\n- Use a diamond-shaped node to indicate a sensor activation decision point.\n- Represent the data processing step in an oval-shaped node to differentiate from other steps.\n- Ensure a feedback loop arrow is present from the final node back to the initial sensor status verification step.\n- Distinguish the initial alarm trigger step with a blue fill and the resolution step with a green fill.\n- Use rectangular nodes for all standard processing actions.\n- Arrange nodes in a left-to-right sequence with explicit arrow markers indicating process flow.\n- Include a sub-section at the bottom of the diagram listing each node shape along with its corresponding function.\n- Ensure all nodes include a brief description of the step occurring in that part of the system.",
            "task_id": "000939",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the diagram?",
                "How many main steps are explicitly shown in the workflow?",
                "Which node is drawn in a diamond shape?",
                "Which step is represented in an oval-shaped node?",
                "Is there a feedback loop arrow in the diagram and where does it connect from/to?",
                "Which node is distinguished with a blue fill?",
                "Which node is marked with a green fill?",
                "Is there a sub-section listing node shapes along with their corresponding functions at the bottom?"
            ],
            "VQA_answers": [
                "Smart Home Security Workflow",
                "4",
                "The sensor activation decision point",
                "The data processing step",
                "Yes, from the final node back to the initial sensor status verification step",
                "The initial alarm trigger step",
                "The resolution step",
                "Yes"
            ],
            "raw_output_metric": [
                "Smart Home Security Workflow",
                "graph LR",
                "->",
                "diamond",
                "oval",
                "rectangle",
                "blue",
                "green",
                "Initial Alarm Trigger",
                "Sensor Activation Decision",
                "Data Processing",
                "Resolution",
                "Legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000939_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nTransform a narrative description of a smart home security system into a Mermaid diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Smart Home Security Workflow\".\n- Display exactly 4 main steps, each contained in a uniquely labeled node and connected with directional arrows.\n- Use a diamond-shaped node to indicate a sensor activation decision point.\n- Represent the data processing step in an oval-shaped node to differentiate from other steps.\n- Ensure a feedback loop arrow is present from the final node back to the initial sensor status verification step.\n- Distinguish the initial alarm trigger step with a blue fill and the resolution step with a green fill.\n- Use rectangular nodes for all standard processing actions.\n- Arrange nodes in a left-to-right sequence with explicit arrow markers indicating process flow.\n- Include a sub-section at the bottom of the diagram listing each node shape along with its corresponding function.\n- Ensure all nodes include a brief description of the step occurring in that part of the system."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000939_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Smart Home Security Workflow",
                                "graph LR",
                                "->",
                                "diamond",
                                "oval",
                                "rectangle",
                                "blue",
                                "green",
                                "Initial Alarm Trigger",
                                "Sensor Activation Decision",
                                "Data Processing",
                                "Resolution",
                                "Legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000939_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000939_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the diagram?",
                                "How many main steps are explicitly shown in the workflow?",
                                "Which node is drawn in a diamond shape?",
                                "Which step is represented in an oval-shaped node?",
                                "Is there a feedback loop arrow in the diagram and where does it connect from/to?",
                                "Which node is distinguished with a blue fill?",
                                "Which node is marked with a green fill?",
                                "Is there a sub-section listing node shapes along with their corresponding functions at the bottom?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000939_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Smart Home Security Workflow",
                                "4",
                                "The sensor activation decision point",
                                "The data processing step",
                                "Yes, from the final node back to the initial sensor status verification step",
                                "The initial alarm trigger step",
                                "The resolution step",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of a troubleshooting workflow into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Troubleshooting Workflow\".\n- Display exactly 4 main steps for error detection, analysis, resolution, and testing, each within separate nodes.\n- Use a diamond-shaped node to represent a decision point where the error is confirmed.\n- Incorporate a loopback arrow from the testing node that points back to the error detection node.\n- Clearly mark \"Start\" and \"End\" nodes with distinctive color fills to differentiate them.\n- Use rectangular nodes exclusively for actions and procedural steps in the process.\n- Include a legend at the bottom of the diagram that explains the meaning of each node shape.",
            "task_id": "000940",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many main steps are included for error detection, analysis, resolution, and testing?",
                "What labels are used for the 4 main procedural steps?",
                "Which node is represented using a diamond shape?",
                "Which two nodes have distinctive color fills to differentiate them?",
                "What shape is used exclusively for the action and procedural step nodes?",
                "Where does the loopback arrow originate and terminate?",
                "What is provided at the bottom of the diagram to explain the node shapes?"
            ],
            "VQA_answers": [
                "Troubleshooting Workflow",
                "4",
                "Error Detection, Analysis, Resolution, Testing",
                "The decision point where the error is confirmed",
                "Start and End",
                "Rectangular",
                "From the Testing node back to the Error Detection node",
                "A legend detailing the meaning of each node shape"
            ],
            "raw_output_metric": [
                "graph TD",
                "Troubleshooting Workflow",
                "Start",
                "End",
                "Error Detection",
                "Analysis",
                "Resolution",
                "Testing",
                "Error Confirmed?",
                "legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000940_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of a troubleshooting workflow into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Troubleshooting Workflow\".\n- Display exactly 4 main steps for error detection, analysis, resolution, and testing, each within separate nodes.\n- Use a diamond-shaped node to represent a decision point where the error is confirmed.\n- Incorporate a loopback arrow from the testing node that points back to the error detection node.\n- Clearly mark \"Start\" and \"End\" nodes with distinctive color fills to differentiate them.\n- Use rectangular nodes exclusively for actions and procedural steps in the process.\n- Include a legend at the bottom of the diagram that explains the meaning of each node shape."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000940_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "graph TD",
                                "Troubleshooting Workflow",
                                "Start",
                                "End",
                                "Error Detection",
                                "Analysis",
                                "Resolution",
                                "Testing",
                                "Error Confirmed?",
                                "legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000940_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000940_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many main steps are included for error detection, analysis, resolution, and testing?",
                                "What labels are used for the 4 main procedural steps?",
                                "Which node is represented using a diamond shape?",
                                "Which two nodes have distinctive color fills to differentiate them?",
                                "What shape is used exclusively for the action and procedural step nodes?",
                                "Where does the loopback arrow originate and terminate?",
                                "What is provided at the bottom of the diagram to explain the node shapes?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000940_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Troubleshooting Workflow",
                                "4",
                                "Error Detection, Analysis, Resolution, Testing",
                                "The decision point where the error is confirmed",
                                "Start and End",
                                "Rectangular",
                                "From the Testing node back to the Error Detection node",
                                "A legend detailing the meaning of each node shape"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a narrative description of an automated ticket booking process into a Mermaid sequence diagram.\n\nFeature Requirements:\n- Include a header titled \"Ticket Booking Sequence\" centered at the top of the diagram.\n- Represent the interactions between exactly 4 actors: \"User\", \"Web Server\", \"Payment Gateway\", and \"Database\" with distinct lifelines.\n- Display a synchronous message from the User to the Web Server initiating the booking process, clearly labeled \"Start Booking\".\n- Use dashed arrow lines for return messages, ensuring that every synchronous call has a corresponding response.\n- Clearly indicate a decision point by using a note labeled \"Payment Approved?\" connected to the Payment Gateway.\n- Incorporate a loop to simulate the retry mechanism for a failed payment, with a label \"Retry Payment\".\n- Include a clear termination message at the end of the process for both successful and unsuccessful outcomes.\n- Attach a legend at the bottom of the diagram explaining the meaning of solid and dashed message arrows.",
            "task_id": "000941",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the header title at the top of the diagram?",
                "How many actors are represented in the diagram?",
                "Which actors are involved in the sequence diagram?",
                "Which actor initiates the booking process and what is the message label?",
                "How are the return messages visually depicted in the diagram?",
                "What decision point is indicated in the diagram and what is its label?",
                "What loop mechanism is included to handle failed payment attempts?",
                "Is there a termination message shown at the end of the process?",
                "What explanation is provided in the legend attached at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Ticket Booking Sequence (centered)",
                "4 actors",
                "User, Web Server, Payment Gateway, and Database",
                "User initiates with 'Start Booking'",
                "With dashed arrow lines",
                "A note labeled 'Payment Approved?' connected to the Payment Gateway",
                "A loop labeled 'Retry Payment'",
                "Yes, for both successful and unsuccessful outcomes",
                "The legend explains the meaning of solid and dashed arrow messages"
            ],
            "raw_output_metric": [
                "Ticket Booking Sequence",
                "User",
                "Web Server",
                "Payment Gateway",
                "Database",
                "Start Booking",
                "Payment Approved?",
                "Retry Payment",
                "legend",
                "solid",
                "dashed",
                "loop"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000941_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a narrative description of an automated ticket booking process into a Mermaid sequence diagram.\n\nFeature Requirements:\n- Include a header titled \"Ticket Booking Sequence\" centered at the top of the diagram.\n- Represent the interactions between exactly 4 actors: \"User\", \"Web Server\", \"Payment Gateway\", and \"Database\" with distinct lifelines.\n- Display a synchronous message from the User to the Web Server initiating the booking process, clearly labeled \"Start Booking\".\n- Use dashed arrow lines for return messages, ensuring that every synchronous call has a corresponding response.\n- Clearly indicate a decision point by using a note labeled \"Payment Approved?\" connected to the Payment Gateway.\n- Incorporate a loop to simulate the retry mechanism for a failed payment, with a label \"Retry Payment\".\n- Include a clear termination message at the end of the process for both successful and unsuccessful outcomes.\n- Attach a legend at the bottom of the diagram explaining the meaning of solid and dashed message arrows."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000941_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Ticket Booking Sequence",
                                "User",
                                "Web Server",
                                "Payment Gateway",
                                "Database",
                                "Start Booking",
                                "Payment Approved?",
                                "Retry Payment",
                                "legend",
                                "solid",
                                "dashed",
                                "loop"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000941_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000941_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the header title at the top of the diagram?",
                                "How many actors are represented in the diagram?",
                                "Which actors are involved in the sequence diagram?",
                                "Which actor initiates the booking process and what is the message label?",
                                "How are the return messages visually depicted in the diagram?",
                                "What decision point is indicated in the diagram and what is its label?",
                                "What loop mechanism is included to handle failed payment attempts?",
                                "Is there a termination message shown at the end of the process?",
                                "What explanation is provided in the legend attached at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000941_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Ticket Booking Sequence (centered)",
                                "4 actors",
                                "User, Web Server, Payment Gateway, and Database",
                                "User initiates with 'Start Booking'",
                                "With dashed arrow lines",
                                "A note labeled 'Payment Approved?' connected to the Payment Gateway",
                                "A loop labeled 'Retry Payment'",
                                "Yes, for both successful and unsuccessful outcomes",
                                "The legend explains the meaning of solid and dashed arrow messages"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a company structure description into a Mermaid organizational chart diagram.\n\nFeature Requirements:\n- Include a title at the top of the chart labeled \"Organizational Structure\".\n- Display exactly 4 distinct departments, each represented as a unique node, connected with directional arrows.\n- Use elliptical nodes for managerial positions and rectangular nodes for staff positions.\n- Designate one node as the CEO with a highlighted border style distinct from all other nodes.\n- Apply a specific fill color for managerial nodes and a different fill color for staff nodes.\n- Include horizontal and vertical arrows to demonstrate both same-level connections and hierarchical reporting.\n- Annotate each node with text that indicates its role and department.\n- Insert a branch with a sub-department that loops back to its parent, represented by a curved arrow.\n- Include a legend at the bottom of the diagram explaining the different shapes and color codes.\n- Arrange all nodes to clearly depict a top-down reporting structure with precise arrow directions.",
            "task_id": "000942",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the chart?",
                "How many distinct department nodes are shown?",
                "Which shape is used for managerial positions?",
                "Which shape is used for staff positions?",
                "Which node is designated as the CEO with a highlighted border style?",
                "Are different fill colors applied to managerial and staff nodes?",
                "Does the chart include both horizontal and vertical directional arrows?",
                "Is there a branch with a sub-department that loops back to its parent using a curved arrow?",
                "Is a legend explaining shapes and color codes included at the bottom of the diagram?",
                "How is the overall node arrangement structured?"
            ],
            "VQA_answers": [
                "Organizational Structure",
                "4",
                "Elliptical",
                "Rectangular",
                "CEO",
                "Yes",
                "Yes",
                "Yes",
                "Yes",
                "Top-down reporting structure"
            ],
            "raw_output_metric": [
                "graph TD",
                "Organizational Structure",
                "CEO",
                "((CEO))",
                "Department 1",
                "Department 2",
                "Department 3",
                "Department 4",
                "((Manager))",
                "[Staff]",
                "-->",
                "-.->",
                "legend",
                "classDef"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000942_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a company structure description into a Mermaid organizational chart diagram.\n\nFeature Requirements:\n- Include a title at the top of the chart labeled \"Organizational Structure\".\n- Display exactly 4 distinct departments, each represented as a unique node, connected with directional arrows.\n- Use elliptical nodes for managerial positions and rectangular nodes for staff positions.\n- Designate one node as the CEO with a highlighted border style distinct from all other nodes.\n- Apply a specific fill color for managerial nodes and a different fill color for staff nodes.\n- Include horizontal and vertical arrows to demonstrate both same-level connections and hierarchical reporting.\n- Annotate each node with text that indicates its role and department.\n- Insert a branch with a sub-department that loops back to its parent, represented by a curved arrow.\n- Include a legend at the bottom of the diagram explaining the different shapes and color codes.\n- Arrange all nodes to clearly depict a top-down reporting structure with precise arrow directions."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000942_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "graph TD",
                                "Organizational Structure",
                                "CEO",
                                "((CEO))",
                                "Department 1",
                                "Department 2",
                                "Department 3",
                                "Department 4",
                                "((Manager))",
                                "[Staff]",
                                "-->",
                                "-.->",
                                "legend",
                                "classDef"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000942_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000942_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the chart?",
                                "How many distinct department nodes are shown?",
                                "Which shape is used for managerial positions?",
                                "Which shape is used for staff positions?",
                                "Which node is designated as the CEO with a highlighted border style?",
                                "Are different fill colors applied to managerial and staff nodes?",
                                "Does the chart include both horizontal and vertical directional arrows?",
                                "Is there a branch with a sub-department that loops back to its parent using a curved arrow?",
                                "Is a legend explaining shapes and color codes included at the bottom of the diagram?",
                                "How is the overall node arrangement structured?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000942_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Organizational Structure",
                                "4",
                                "Elliptical",
                                "Rectangular",
                                "CEO",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Top-down reporting structure"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of an online flight booking process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Place a title at the top of the diagram labeled \"Flight Booking Process\".\n- Create exactly 4 primary action steps in rectangular nodes with the labels \"Search Flights\", \"Select Flight\", \"Enter Passenger Info\", and \"Confirm Booking\".\n- Include one diamond-shaped node labeled \"Payment Successful?\" to mark the decision point.\n- Draw a loop-back arrow from the \"Payment Failed\" branch of the decision node back to the \"Enter Passenger Info\" node.\n- Use a red fill for the initial \"Start\" node and a green fill for the final \"End\" node.\n- Connect every node with clear, straight-line arrows that indicate the sequential flow of the process.\n- Add a legend at the bottom of the diagram explaining the meanings of the rectangular nodes (for actions) and the diamond-shaped node (for decisions).",
            "task_id": "000943",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the diagram?",
                "How many primary action steps are depicted using rectangular nodes?",
                "What are the labels of the primary action steps?",
                "What shape is used for the decision node?",
                "What is the label of the decision node?",
                "Which node has a red fill color?",
                "Which node has a green fill color?",
                "Is there a loop-back arrow included in the diagram?",
                "From which branch does the loop-back arrow originate and to which node does it point?",
                "What does the legend at the bottom explain?"
            ],
            "VQA_answers": [
                "Flight Booking Process",
                "4",
                "Search Flights, Select Flight, Enter Passenger Info, Confirm Booking",
                "Diamond",
                "Payment Successful?",
                "Start",
                "End",
                "Yes",
                "From Payment Failed branch of the decision node to Enter Passenger Info",
                "Rectangular nodes represent actions and the diamond-shaped node represents a decision"
            ],
            "raw_output_metric": [
                "Flight Booking Process",
                "Search Flights",
                "Select Flight",
                "Enter Passenger Info",
                "Confirm Booking",
                "Payment Successful?",
                "Payment Failed",
                "Start",
                "End",
                "legend",
                "red",
                "green"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000943_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of an online flight booking process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Place a title at the top of the diagram labeled \"Flight Booking Process\".\n- Create exactly 4 primary action steps in rectangular nodes with the labels \"Search Flights\", \"Select Flight\", \"Enter Passenger Info\", and \"Confirm Booking\".\n- Include one diamond-shaped node labeled \"Payment Successful?\" to mark the decision point.\n- Draw a loop-back arrow from the \"Payment Failed\" branch of the decision node back to the \"Enter Passenger Info\" node.\n- Use a red fill for the initial \"Start\" node and a green fill for the final \"End\" node.\n- Connect every node with clear, straight-line arrows that indicate the sequential flow of the process.\n- Add a legend at the bottom of the diagram explaining the meanings of the rectangular nodes (for actions) and the diamond-shaped node (for decisions)."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000943_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Flight Booking Process",
                                "Search Flights",
                                "Select Flight",
                                "Enter Passenger Info",
                                "Confirm Booking",
                                "Payment Successful?",
                                "Payment Failed",
                                "Start",
                                "End",
                                "legend",
                                "red",
                                "green"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000943_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000943_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the diagram?",
                                "How many primary action steps are depicted using rectangular nodes?",
                                "What are the labels of the primary action steps?",
                                "What shape is used for the decision node?",
                                "What is the label of the decision node?",
                                "Which node has a red fill color?",
                                "Which node has a green fill color?",
                                "Is there a loop-back arrow included in the diagram?",
                                "From which branch does the loop-back arrow originate and to which node does it point?",
                                "What does the legend at the bottom explain?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000943_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Flight Booking Process",
                                "4",
                                "Search Flights, Select Flight, Enter Passenger Info, Confirm Booking",
                                "Diamond",
                                "Payment Successful?",
                                "Start",
                                "End",
                                "Yes",
                                "From Payment Failed branch of the decision node to Enter Passenger Info",
                                "Rectangular nodes represent actions and the diamond-shaped node represents a decision"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nTransform a restaurant ordering process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Ordering Process\".\n- Display exactly 4 main process steps: \"Place Order\", \"Prepare Food\", \"Deliver Order\", and \"Receive Payment\", each within a unique rectangular node.\n- Use a diamond-shaped node labeled \"Order Verification\" as a decision point between \"Place Order\" and \"Prepare Food\".\n- Incorporate a loopback arrow from \"Prepare Food\" back to \"Order Verification\" to represent order adjustments.\n- Apply a distinct green fill for the starting node (\"Place Order\") and a blue fill for the ending node (\"Receive Payment\").\n- Ensure all nodes are connected sequentially with clear directional arrows indicating the order of operations.\n- Include a legend at the bottom of the diagram that explains the meaning of each node shape: circle for start, rectangular for actions, and diamond for decisions.\n- Add a textual note within the diagram labeled \"Time-sensitive Process\" using a clearly differentiated text style.",
            "task_id": "000944",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the flowchart?",
                "How many main process steps are included in the flowchart?",
                "Which node is used as the decision point and what is its shape?",
                "What labels are on the rectangular nodes representing actions?",
                "What fill color is applied to the starting node 'Place Order'?",
                "What fill color is applied to the ending node 'Receive Payment'?",
                "Is there a loopback from 'Prepare Food' to 'Order Verification'?",
                "What note is included in the diagram and how is it differentiated?",
                "What does the legend at the bottom specify about the node shapes?"
            ],
            "VQA_answers": [
                "Ordering Process",
                "4",
                "Order Verification is a diamond-shaped node",
                "Place Order, Prepare Food, Deliver Order, Receive Payment",
                "Green",
                "Blue",
                "Yes",
                "Time-sensitive Process with a clearly differentiated text style",
                "Circle for start, rectangular for actions, diamond for decisions"
            ],
            "raw_output_metric": [
                "Ordering Process",
                "Place Order",
                "Order Verification",
                "Prepare Food",
                "Deliver Order",
                "Receive Payment",
                "Time-sensitive Process",
                "legend",
                "circle",
                "rectangular",
                "diamond",
                "green",
                "blue"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000944_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nTransform a restaurant ordering process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Ordering Process\".\n- Display exactly 4 main process steps: \"Place Order\", \"Prepare Food\", \"Deliver Order\", and \"Receive Payment\", each within a unique rectangular node.\n- Use a diamond-shaped node labeled \"Order Verification\" as a decision point between \"Place Order\" and \"Prepare Food\".\n- Incorporate a loopback arrow from \"Prepare Food\" back to \"Order Verification\" to represent order adjustments.\n- Apply a distinct green fill for the starting node (\"Place Order\") and a blue fill for the ending node (\"Receive Payment\").\n- Ensure all nodes are connected sequentially with clear directional arrows indicating the order of operations.\n- Include a legend at the bottom of the diagram that explains the meaning of each node shape: circle for start, rectangular for actions, and diamond for decisions.\n- Add a textual note within the diagram labeled \"Time-sensitive Process\" using a clearly differentiated text style."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000944_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Ordering Process",
                                "Place Order",
                                "Order Verification",
                                "Prepare Food",
                                "Deliver Order",
                                "Receive Payment",
                                "Time-sensitive Process",
                                "legend",
                                "circle",
                                "rectangular",
                                "diamond",
                                "green",
                                "blue"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000944_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000944_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the flowchart?",
                                "How many main process steps are included in the flowchart?",
                                "Which node is used as the decision point and what is its shape?",
                                "What labels are on the rectangular nodes representing actions?",
                                "What fill color is applied to the starting node 'Place Order'?",
                                "What fill color is applied to the ending node 'Receive Payment'?",
                                "Is there a loopback from 'Prepare Food' to 'Order Verification'?",
                                "What note is included in the diagram and how is it differentiated?",
                                "What does the legend at the bottom specify about the node shapes?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000944_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Ordering Process",
                                "4",
                                "Order Verification is a diamond-shaped node",
                                "Place Order, Prepare Food, Deliver Order, Receive Payment",
                                "Green",
                                "Blue",
                                "Yes",
                                "Time-sensitive Process with a clearly differentiated text style",
                                "Circle for start, rectangular for actions, diamond for decisions"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a narrative that explains the process of organizing a community workshop into a Mermaid sequence diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Community Workshop Sequence\".\n- Display exactly 4 sequential steps within rectangular nodes, each representing a distinct phase in the organization process.\n- Incorporate a circular node to represent a pivotal review milestone between the planning and execution phases.\n- Represent a parallel task scenario using a fork-like structure to show simultaneous activities during preparations.\n- Use directional arrows to connect all nodes, ensuring that the flow of events is clearly indicated.\n- Color the initial planning node in blue and the final evaluation node in orange to differentiate the beginning and end.\n- Add a loopback arrow from the evaluation node to the planning node to indicate revision based on feedback.\n- Include a legend at the bottom explaining the shapes used: rectangles for process steps and a circle for milestone reviews.\n- Label each node with both a phase name and a brief description of the actions involved in that phase.",
            "task_id": "000945",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the diagram?",
                "How many sequential rectangular nodes representing process steps are displayed?",
                "Which node is colored blue?",
                "Which node is colored orange?",
                "Is there a circular node in the diagram, and what does it represent?",
                "Does the diagram include a fork-like structure showing parallel tasks?",
                "Is there a loopback arrow from the evaluation node to the planning node?",
                "What does the legend at the bottom explain?"
            ],
            "VQA_answers": [
                "Community Workshop Sequence",
                "4",
                "The initial planning node",
                "The final evaluation node",
                "Yes, a pivotal review milestone",
                "Yes, during preparations",
                "Yes",
                "Rectangles for process steps and a circle for milestone reviews"
            ],
            "raw_output_metric": [
                "Community Workshop Sequence",
                "sequenceDiagram",
                "Planning",
                "Preparation",
                "Execution",
                "Evaluation",
                "Review Milestone",
                "blue",
                "orange",
                "fork",
                "par",
                "->",
                "loop",
                "legend",
                "rectangles for process steps",
                "circle for milestone reviews"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000945_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a narrative that explains the process of organizing a community workshop into a Mermaid sequence diagram.\n\nFeature Requirements:\n- Include a title at the top of the diagram labeled \"Community Workshop Sequence\".\n- Display exactly 4 sequential steps within rectangular nodes, each representing a distinct phase in the organization process.\n- Incorporate a circular node to represent a pivotal review milestone between the planning and execution phases.\n- Represent a parallel task scenario using a fork-like structure to show simultaneous activities during preparations.\n- Use directional arrows to connect all nodes, ensuring that the flow of events is clearly indicated.\n- Color the initial planning node in blue and the final evaluation node in orange to differentiate the beginning and end.\n- Add a loopback arrow from the evaluation node to the planning node to indicate revision based on feedback.\n- Include a legend at the bottom explaining the shapes used: rectangles for process steps and a circle for milestone reviews.\n- Label each node with both a phase name and a brief description of the actions involved in that phase."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000945_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Community Workshop Sequence",
                                "sequenceDiagram",
                                "Planning",
                                "Preparation",
                                "Execution",
                                "Evaluation",
                                "Review Milestone",
                                "blue",
                                "orange",
                                "fork",
                                "par",
                                "->",
                                "loop",
                                "legend",
                                "rectangles for process steps",
                                "circle for milestone reviews"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000945_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000945_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the diagram?",
                                "How many sequential rectangular nodes representing process steps are displayed?",
                                "Which node is colored blue?",
                                "Which node is colored orange?",
                                "Is there a circular node in the diagram, and what does it represent?",
                                "Does the diagram include a fork-like structure showing parallel tasks?",
                                "Is there a loopback arrow from the evaluation node to the planning node?",
                                "What does the legend at the bottom explain?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000945_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Community Workshop Sequence",
                                "4",
                                "The initial planning node",
                                "The final evaluation node",
                                "Yes, a pivotal review milestone",
                                "Yes, during preparations",
                                "Yes",
                                "Rectangles for process steps and a circle for milestone reviews"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of a university course registration process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Registration Process\".\n- Display exactly 4 main process steps: \"Start\", \"Input Student Details\", \"Evaluate Prerequisites\", and \"Complete Registration\", each represented in distinct nodes.\n- Use a diamond-shaped node to represent a decision point labeled \"Prerequisite Check\".\n- Connect the nodes with arrows in a left-to-right sequential flow.\n- Include a loopback arrow from the \"Prerequisite Check\" node back to the \"Input Student Details\" node if prerequisites are not met.\n- Use circular nodes exclusively for the \"Start\" and \"Complete Registration\" steps.\n- Use rectangular nodes exclusively for the \"Input Student Details\" and \"Evaluate Prerequisites\" process steps.\n- Color the \"Prerequisite Check\" decision node with a distinct fill color (e.g., yellow) to differentiate it from action nodes.\n- Add a legend at the bottom of the diagram that explains the meaning of the node shapes: circular for start/end, rectangular for actions, and diamond for decisions.\n- Ensure all nodes are clearly labeled with their respective step names as provided in the process description.",
            "task_id": "000946",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the flowchart?",
                "How many main process steps are displayed?",
                "Which processes are represented as main steps?",
                "What shape is used for the 'Start' node?",
                "What shape is used for the 'Input Student Details' node?",
                "Which node is represented as a diamond shape and how is it colored?",
                "Is there a loopback arrow visible from any node? If so, which nodes does it connect?",
                "How is the flow direction indicated in the diagram?",
                "What shape is used for the 'Complete Registration' node?",
                "What does the legend at the bottom explain?"
            ],
            "VQA_answers": [
                "Registration Process",
                "4",
                "Start, Input Student Details, Evaluate Prerequisites, Complete Registration",
                "Circular",
                "Rectangular",
                "Prerequisite Check, colored yellow",
                "Yes, from Prerequisite Check back to Input Student Details",
                "Left-to-right sequential flow",
                "Circular",
                "It explains that circular nodes are for start/end, rectangular nodes for actions, and diamond nodes for decisions"
            ],
            "raw_output_metric": [
                "graph LR",
                "Registration Process",
                "((Start))",
                "[Input Student Details]",
                "[Evaluate Prerequisites]",
                "((Complete Registration))",
                "{Prerequisite Check}",
                "yellow",
                "Legend",
                "circular",
                "rectangular",
                "diamond",
                "->",
                "loopback"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000946_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of a university course registration process into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Registration Process\".\n- Display exactly 4 main process steps: \"Start\", \"Input Student Details\", \"Evaluate Prerequisites\", and \"Complete Registration\", each represented in distinct nodes.\n- Use a diamond-shaped node to represent a decision point labeled \"Prerequisite Check\".\n- Connect the nodes with arrows in a left-to-right sequential flow.\n- Include a loopback arrow from the \"Prerequisite Check\" node back to the \"Input Student Details\" node if prerequisites are not met.\n- Use circular nodes exclusively for the \"Start\" and \"Complete Registration\" steps.\n- Use rectangular nodes exclusively for the \"Input Student Details\" and \"Evaluate Prerequisites\" process steps.\n- Color the \"Prerequisite Check\" decision node with a distinct fill color (e.g., yellow) to differentiate it from action nodes.\n- Add a legend at the bottom of the diagram that explains the meaning of the node shapes: circular for start/end, rectangular for actions, and diamond for decisions.\n- Ensure all nodes are clearly labeled with their respective step names as provided in the process description."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000946_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "graph LR",
                                "Registration Process",
                                "((Start))",
                                "[Input Student Details]",
                                "[Evaluate Prerequisites]",
                                "((Complete Registration))",
                                "{Prerequisite Check}",
                                "yellow",
                                "Legend",
                                "circular",
                                "rectangular",
                                "diamond",
                                "->",
                                "loopback"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000946_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000946_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the flowchart?",
                                "How many main process steps are displayed?",
                                "Which processes are represented as main steps?",
                                "What shape is used for the 'Start' node?",
                                "What shape is used for the 'Input Student Details' node?",
                                "Which node is represented as a diamond shape and how is it colored?",
                                "Is there a loopback arrow visible from any node? If so, which nodes does it connect?",
                                "How is the flow direction indicated in the diagram?",
                                "What shape is used for the 'Complete Registration' node?",
                                "What does the legend at the bottom explain?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000946_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Registration Process",
                                "4",
                                "Start, Input Student Details, Evaluate Prerequisites, Complete Registration",
                                "Circular",
                                "Rectangular",
                                "Prerequisite Check, colored yellow",
                                "Yes, from Prerequisite Check back to Input Student Details",
                                "Left-to-right sequential flow",
                                "Circular",
                                "It explains that circular nodes are for start/end, rectangular nodes for actions, and diamond nodes for decisions"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of a space mission launch sequence into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- The diagram must have a title at the top labeled \"Launch Sequence\".\n- Include exactly 4 primary process steps as nodes: \"Pre-Launch Check\", \"Fueling\", \"Countdown\", and \"Liftoff\".\n- Represent a decision point with a diamond-shaped node labeled \"Abort?\" placed between \"Fueling\" and \"Countdown\".\n- Connect all nodes in a clear top-to-bottom sequential order using directional arrows.\n- Use a circular node exclusively for the \"Countdown\" step to differentiate it from other rectangular action nodes.\n- Draw a loopback arrow from the \"Abort?\" node returning to the \"Pre-Launch Check\" node to indicate a re-initiation process.\n- Apply a blue fill color for the \"Pre-Launch Check\" node and a red fill color for the \"Liftoff\" node.\n- Incorporate a side branch with a rectangular node labeled \"Mission Control\" connected beneath \"Fueling\" via dotted arrows.\n- Include a legend at the bottom of the diagram explaining the meaning of each node shape and the specified color fills.",
            "task_id": "000947",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the flowchart?",
                "How many primary process step nodes are there?",
                "Which nodes represent the primary process steps?",
                "What shape is used for the 'Countdown' node?",
                "Which node is presented as a diamond-shaped decision point?",
                "From which node does the loopback arrow originate and to which node does it return?",
                "Which node is filled with blue color?",
                "Which node is filled with red color?",
                "What is the label of the side branch node connected by dotted arrows?",
                "What additional visual element is included at the bottom of the diagram?"
            ],
            "VQA_answers": [
                "Launch Sequence",
                "4",
                "Pre-Launch Check, Fueling, Countdown, Liftoff",
                "Circular",
                "Abort?",
                "It originates from 'Abort?' and loops back to 'Pre-Launch Check'",
                "Pre-Launch Check",
                "Liftoff",
                "Mission Control",
                "A legend explaining node shapes and color fills"
            ],
            "raw_output_metric": [
                "graph TD",
                "Launch Sequence",
                "Pre-Launch Check",
                "Fueling",
                "Countdown",
                "Liftoff",
                "Abort?",
                "Mission Control",
                "dotted",
                "loopback",
                "legend",
                "blue",
                "red"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000947_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of a space mission launch sequence into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- The diagram must have a title at the top labeled \"Launch Sequence\".\n- Include exactly 4 primary process steps as nodes: \"Pre-Launch Check\", \"Fueling\", \"Countdown\", and \"Liftoff\".\n- Represent a decision point with a diamond-shaped node labeled \"Abort?\" placed between \"Fueling\" and \"Countdown\".\n- Connect all nodes in a clear top-to-bottom sequential order using directional arrows.\n- Use a circular node exclusively for the \"Countdown\" step to differentiate it from other rectangular action nodes.\n- Draw a loopback arrow from the \"Abort?\" node returning to the \"Pre-Launch Check\" node to indicate a re-initiation process.\n- Apply a blue fill color for the \"Pre-Launch Check\" node and a red fill color for the \"Liftoff\" node.\n- Incorporate a side branch with a rectangular node labeled \"Mission Control\" connected beneath \"Fueling\" via dotted arrows.\n- Include a legend at the bottom of the diagram explaining the meaning of each node shape and the specified color fills."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000947_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "graph TD",
                                "Launch Sequence",
                                "Pre-Launch Check",
                                "Fueling",
                                "Countdown",
                                "Liftoff",
                                "Abort?",
                                "Mission Control",
                                "dotted",
                                "loopback",
                                "legend",
                                "blue",
                                "red"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000947_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000947_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the flowchart?",
                                "How many primary process step nodes are there?",
                                "Which nodes represent the primary process steps?",
                                "What shape is used for the 'Countdown' node?",
                                "Which node is presented as a diamond-shaped decision point?",
                                "From which node does the loopback arrow originate and to which node does it return?",
                                "Which node is filled with blue color?",
                                "Which node is filled with red color?",
                                "What is the label of the side branch node connected by dotted arrows?",
                                "What additional visual element is included at the bottom of the diagram?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000947_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Launch Sequence",
                                "4",
                                "Pre-Launch Check, Fueling, Countdown, Liftoff",
                                "Circular",
                                "Abort?",
                                "It originates from 'Abort?' and loops back to 'Pre-Launch Check'",
                                "Pre-Launch Check",
                                "Liftoff",
                                "Mission Control",
                                "A legend explaining node shapes and color fills"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nGenerate a flowchart that describes a machine troubleshooting process using Mermaid.\n\nFeature Requirements:\n- The diagram must have a title at the top labeled \"Machine Troubleshoot Flowchart\".\n- Include an oval-shaped Start node and a rounded rectangle-shaped End node with distinct color fills.\n- Display exactly 4 action steps, each enclosed in a rectangular node with unique identifiers.\n- Incorporate a diamond-shaped node labeled \"Issue Resolved?\" to indicate a decision point.\n- Create a loopback arrow from the negative decision branch of \"Issue Resolved?\" back to the first action step.\n- Draw an additional branch that originates from the second action step, diverges, and merges with the main flow before the End node.\n- Use arrows for all transitions to clearly indicate the sequential flow.\n- Apply distinct fill colors for decision nodes compared to action nodes.\n- Add a legend at the bottom of the diagram explaining the meanings of the oval, rectangular, diamond, and rounded rectangle node shapes.",
            "task_id": "000948",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title at the top of the diagram?",
                "What shape is used for the Start node?",
                "How many action steps are displayed as rectangular nodes?",
                "What is the label on the decision (diamond-shaped) node?",
                "Is there a loopback arrow from the negative branch of the 'Issue Resolved?' node back to the first action step?",
                "Does the second action step have an additional branch that diverges and then merges with the main flow?",
                "Are arrows used for all transitions in the diagram?",
                "Are distinct fill colors used to differentiate decision nodes from action nodes?",
                "What shape is used for the End node?",
                "Is there a legend at the bottom of the diagram explaining the node shapes?"
            ],
            "VQA_answers": [
                "Machine Troubleshoot Flowchart",
                "Oval",
                "4",
                "Issue Resolved?",
                "Yes",
                "Yes",
                "Yes",
                "Yes",
                "Rounded rectangle",
                "Yes"
            ],
            "raw_output_metric": [
                "Machine Troubleshoot Flowchart",
                "Start",
                "End",
                "Action1",
                "Action2",
                "Action3",
                "Action4",
                "Issue Resolved?",
                "legend",
                "oval",
                "rectangular",
                "diamond",
                "rounded rectangle",
                "fill"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000948_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nGenerate a flowchart that describes a machine troubleshooting process using Mermaid.\n\nFeature Requirements:\n- The diagram must have a title at the top labeled \"Machine Troubleshoot Flowchart\".\n- Include an oval-shaped Start node and a rounded rectangle-shaped End node with distinct color fills.\n- Display exactly 4 action steps, each enclosed in a rectangular node with unique identifiers.\n- Incorporate a diamond-shaped node labeled \"Issue Resolved?\" to indicate a decision point.\n- Create a loopback arrow from the negative decision branch of \"Issue Resolved?\" back to the first action step.\n- Draw an additional branch that originates from the second action step, diverges, and merges with the main flow before the End node.\n- Use arrows for all transitions to clearly indicate the sequential flow.\n- Apply distinct fill colors for decision nodes compared to action nodes.\n- Add a legend at the bottom of the diagram explaining the meanings of the oval, rectangular, diamond, and rounded rectangle node shapes."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000948_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Machine Troubleshoot Flowchart",
                                "Start",
                                "End",
                                "Action1",
                                "Action2",
                                "Action3",
                                "Action4",
                                "Issue Resolved?",
                                "legend",
                                "oval",
                                "rectangular",
                                "diamond",
                                "rounded rectangle",
                                "fill"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000948_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000948_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title at the top of the diagram?",
                                "What shape is used for the Start node?",
                                "How many action steps are displayed as rectangular nodes?",
                                "What is the label on the decision (diamond-shaped) node?",
                                "Is there a loopback arrow from the negative branch of the 'Issue Resolved?' node back to the first action step?",
                                "Does the second action step have an additional branch that diverges and then merges with the main flow?",
                                "Are arrows used for all transitions in the diagram?",
                                "Are distinct fill colors used to differentiate decision nodes from action nodes?",
                                "What shape is used for the End node?",
                                "Is there a legend at the bottom of the diagram explaining the node shapes?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000948_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Machine Troubleshoot Flowchart",
                                "Oval",
                                "4",
                                "Issue Resolved?",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Yes",
                                "Rounded rectangle",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output Mermaid:\n\nTask:\nConvert a textual description of a smart home automation routine into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top labeled \"Smart Home Routine\".\n- Display exactly 4 distinct process steps (e.g., \"Detect\", \"Decide\", \"Actuate\", \"Verify\"), each within its own unique node.\n- Use a parallelogram-shaped node to represent a decision point where the system chooses between manual or automatic intervention.\n- Connect all nodes sequentially with arrows showing a clear, directional flow from start to finish.\n- Add a loopback arrow from the final \"Verify\" node back to the \"Detect\" node to indicate continuous monitoring.\n- Apply a unique fill color for the \"Detect\" start node and a contrasting fill color for the \"Verify\" end node to visually distinguish them.\n- Use rectangular nodes exclusively for action steps such as \"Actuate\".\n- Include a legend at the bottom of the diagram that explains the meaning of each node shape and the significance of the applied colors.\n- Label each arrow with a brief description of the transition to ensure clarity in the process flow.\n- Specify that all text within nodes and arrows should be centered and clearly legible.",
            "task_id": "000949",
            "task_name": "Text to Mermaid",
            "input_type": "Text",
            "output_type": "Mermaid",
            "query_example": "Please output Mermaid:\n\nTask:\nConvert a textual process description into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top of the flowchart labeled \"Process Flow\".\n- Display exactly 3 main process steps, each within a unique node, connected with arrows.\n- Use a diamond-shaped node to represent a decision point in the process.\n- Include at least one loopback arrow indicating a repeatable step in the process.\n- Ensure all nodes are linked in a sequential order, with clear directional flow indicated by arrows.\n- Apply a different color fill for start and end nodes to distinguish them visually.\n- Use rectangular nodes exclusively for action steps in the process.\n- Include a legend explaining the meaning of node shapes at the bottom of the diagram.",
            "VQA_questions": [
                "What is the title displayed at the top of the diagram?",
                "How many distinct process steps are shown as nodes?",
                "What are the four process steps labeled in the diagram?",
                "Which node is designed with a parallelogram shape for decision making?",
                "Which process step is represented with a rectangular node as an action step?",
                "Which two nodes have unique fill colors to distinguish them?",
                "Is there a loopback arrow present, and if so, which nodes does it connect?",
                "Does every arrow in the diagram include a brief label describing the transition?",
                "Is there a legend included at the bottom of the diagram that explains node shapes and color significance?"
            ],
            "VQA_answers": [
                "Smart Home Routine",
                "4",
                "Detect, Decide, Actuate, Verify",
                "Decide",
                "Actuate",
                "Detect and Verify",
                "Yes; it connects the Verify node back to the Detect node",
                "Yes",
                "Yes"
            ],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "000949_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output Mermaid:\n\nTask:\nConvert a textual description of a smart home automation routine into a Mermaid flowchart diagram.\n\nFeature Requirements:\n- Include a title at the top labeled \"Smart Home Routine\".\n- Display exactly 4 distinct process steps (e.g., \"Detect\", \"Decide\", \"Actuate\", \"Verify\"), each within its own unique node.\n- Use a parallelogram-shaped node to represent a decision point where the system chooses between manual or automatic intervention.\n- Connect all nodes sequentially with arrows showing a clear, directional flow from start to finish.\n- Add a loopback arrow from the final \"Verify\" node back to the \"Detect\" node to indicate continuous monitoring.\n- Apply a unique fill color for the \"Detect\" start node and a contrasting fill color for the \"Verify\" end node to visually distinguish them.\n- Use rectangular nodes exclusively for action steps such as \"Actuate\".\n- Include a legend at the bottom of the diagram that explains the meaning of each node shape and the significance of the applied colors.\n- Label each arrow with a brief description of the transition to ensure clarity in the process flow.\n- Specify that all text within nodes and arrows should be centered and clearly legible."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "000949_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "000949_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "000949_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the diagram?",
                                "How many distinct process steps are shown as nodes?",
                                "What are the four process steps labeled in the diagram?",
                                "Which node is designed with a parallelogram shape for decision making?",
                                "Which process step is represented with a rectangular node as an action step?",
                                "Which two nodes have unique fill colors to distinguish them?",
                                "Is there a loopback arrow present, and if so, which nodes does it connect?",
                                "Does every arrow in the diagram include a brief label describing the transition?",
                                "Is there a legend included at the bottom of the diagram that explains node shapes and color significance?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "000949_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Smart Home Routine",
                                "4",
                                "Detect, Decide, Actuate, Verify",
                                "Decide",
                                "Actuate",
                                "Detect and Verify",
                                "Yes; it connects the Verify node back to the Detect node",
                                "Yes",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    }
]