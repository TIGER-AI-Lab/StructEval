[
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.gridspec import GridSpec\n\n# Set up sample data for visualization\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny = np.sin(x) + np.random.normal(scale=0.3, size=x.shape)\ncategories = ['Category A', 'Category B', 'Category C', 'Category D']\nvalues = np.array([20, 35, 30, 15])\n\n# Create a figure with a GridSpec layout to organize multiple subplots\nfig = plt.figure(figsize=(12, 10))\ngs = GridSpec(nrows=3, ncols=2, figure=fig, height_ratios=[1, 2, 2], hspace=0.4, wspace=0.3)\n\n# TOP PANEL: Title and Dashboard Header Information\nax0 = fig.add_subplot(gs[0, :])\nax0.axis('off')\nheader_text = (\n    \"DASHBOARD OVERVIEW\\n\\n\"\n    \"This dashboard provides a detailed view of:\\n\"\n    \" - Time Series Data Analysis\\n\"\n    \" - Categorical Data Distribution\\n\"\n    \" - Scatter Plot Correlations\\n\\n\"\n    \"Report ID: 2023-10-EX001 | Version: 1.0 | Generated by: Matplotlib Script\"\n)\nax0.text(0.5, 0.5, header_text, ha='center', va='center', fontsize=12, fontweight='bold', family='monospace')\n\n# SECTION 1: Time Series Plot\nax1 = fig.add_subplot(gs[1, 0])\nax1.plot(x, y, color='tab:blue', linestyle='-', marker='o', markersize=4, label='Sample Signal')\nax1.set_title(\"Section 1: Time Series Data\", fontsize=14, fontweight='bold')\nax1.set_xlabel(\"Time (s)\")\nax1.set_ylabel(\"Amplitude\")\nax1.grid(True, which='both', linestyle='--', linewidth=0.5)\nax1.legend(loc='upper right')\n# Annotate some key points\nmax_index = np.argmax(y)\nmin_index = np.argmin(y)\nax1.annotate(f\"Max (x={x[max_index]:.2f}, y={y[max_index]:.2f})\",\n             xy=(x[max_index], y[max_index]), xytext=(x[max_index]+1, y[max_index]),\n             arrowprops=dict(arrowstyle=\"->\", color='green'))\nax1.annotate(f\"Min (x={x[min_index]:.2f}, y={y[min_index]:.2f})\",\n             xy=(x[min_index], y[min_index]), xytext=(x[min_index]-2, y[min_index]-0.5),\n             arrowprops=dict(arrowstyle=\"->\", color='red'))\n\n# SECTION 2: Bar Chart for Categorical Data\nax2 = fig.add_subplot(gs[1, 1])\nbars = ax2.bar(categories, values, color=['#ff9999','#66b3ff','#99ff99','#ffcc99'])\nax2.set_title(\"Section 2: Categorical Data Distribution\", fontsize=14, fontweight='bold')\nax2.set_ylabel(\"Values\")\nax2.grid(axis='y', linestyle='--', linewidth=0.5)\n# Adding data labels on bars\nfor bar in bars:\n    height = bar.get_height()\n    ax2.text(bar.get_x() + bar.get_width()/2.0, height, f'{height}', ha='center', va='bottom', fontweight='bold')\n\n# SECTION 3: Scatter Plot with Structured Annotations\nax3 = fig.add_subplot(gs[2, 0])\n# Generate some random scatter data\nscatter_x = np.random.rand(50) * 10\nscatter_y = np.random.rand(50) * 10\nscatter_sizes = np.random.rand(50) * 100 + 20\nscatter_colors = np.random.rand(50)\nsc = ax3.scatter(scatter_x, scatter_y, s=scatter_sizes, c=scatter_colors, cmap='viridis', alpha=0.7)\nax3.set_title(\"Section 3: Scatter Plot Analysis\", fontsize=14, fontweight='bold')\nax3.set_xlabel(\"X Value\")\nax3.set_ylabel(\"Y Value\")\nax3.grid(True, linestyle='--', alpha=0.6)\n# Adding formatted text as an annotation block inside the scatter plot\nannotation_text = (\n    \"Analysis Summary:\\n\"\n    \" - Points represent random samples.\\n\"\n    \" - Size relates to weight factor.\\n\"\n    \" - Color indicates classification score.\\n\"\n    \"\\nKey Observations:\\n\"\n    \" -> Clusters in region [5,5] are denser\\n\"\n    \" -> Variability is high at extremes\"\n)\nax3.text(0.05, 0.95, annotation_text, transform=ax3.transAxes, fontsize=10,\n         verticalalignment='top', bbox=dict(boxstyle=\"round\", edgecolor='black', facecolor='white'))\n\n# SECTION 4: Line Plot with Multiple Datasets and Legends\nax4 = fig.add_subplot(gs[2, 1])\n# Generate additional datasets\ny2 = np.cos(x) + np.random.normal(scale=0.2, size=x.shape)\ny3 = np.tan(x/5) + np.random.normal(scale=0.1, size=x.shape)\nline1, = ax4.plot(x, y, label=\"Sine Signal\", color='tab:blue', linestyle='-')\nline2, = ax4.plot(x, y2, label=\"Cosine Signal\", color='tab:orange', linestyle='--')\nline3, = ax4.plot(x, y3, label=\"Tangent Variation\", color='tab:green', linestyle='-.')\nax4.set_title(\"Section 4: Multiple Line Plot\", fontsize=14, fontweight='bold')\nax4.set_xlabel(\"Time (s)\")\nax4.set_ylabel(\"Value\")\nax4.grid(True, linestyle='--', linewidth=0.5)\nax4.legend(loc='upper left', fontsize=10)\n# Adding a data insight box\ndata_info = (\n    \"Data Insights:\\n\"\n    \" - Sine and Cosine show periodic behavior.\\n\"\n    \" - Tangent values escalate rapidly near asymptotes.\\n\"\n    \" - Noise introduced simulates measurement error.\"\n)\nax4.text(0.95, 0.05, data_info, transform=ax4.transAxes, fontsize=9, \n         va='bottom', ha='right',\n         bbox=dict(boxstyle=\"round,pad=0.5\", edgecolor='gray', facecolor='lightyellow'))\n\n# Final adjustments and display the figure\nfig.suptitle(\"Comprehensive Matplotlib Dashboard\", fontsize=16, fontweight='bold', y=0.98)\nplt.tight_layout(rect=[0, 0, 1, 0.96])\nplt.show()\n</code>",
            "feature_requirements": "• A main title reading “Comprehensive Matplotlib Dashboard” prominently displayed at the top of the output.\n\n• A top header panel spanning the full width that contains formatted multi‐line text, including the “DASHBOARD OVERVIEW” title, descriptive bullet points about the dashboard contents, and report identification information.\n\n• A time series plot section with clearly labeled x‑axis (“Time (s)”) and y‑axis (“Amplitude”), a dashed grid, a plotted line with marker symbols, and a legend indicating “Sample Signal.”\n\n• Annotations on the time series plot that mark the maximum and minimum points with arrow indicators and corresponding text labels displaying their x and y values.\n\n• A bar chart section showing four bars (one for each category: Category A, B, C, and D), with each bar colored distinctly (matching the provided color codes) and displaying the numerical value on top of each bar.\n\n• A scatter plot section that plots points with varying sizes and colors (using a gradient like the ‘viridis’ colormap), labeled x (“X Value”) and y (“Y Value”) axes, a dashed grid, and an embedded annotation box containing multi‑line analysis summary text.\n\n• A multi‑line plot section that includes three different line plots (representing sine, cosine, and tangent datasets) each with unique line styles and colors, x (“Time (s)”) and y (“Value”) labels, a dashed grid, and a legend positioned in the upper left.\n\n• A data insight annotation in the multi‑line plot area, displayed in a box styled distinctly (e.g., rounded edges with a light background), containing multi‑line text summarizing the data behavior.\n\n• An overall layout that mimics a grid structure with a top-wide header and two rows below it, each row containing two side‑by‑side plot sections, similar to the GridSpec arrangement in the original code.",
            "task_id": "08XX19",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed at the top of the dashboard?",
                "What title is shown in the top header panel?",
                "What are the x‑axis and y‑axis labels in the time series plot?",
                "What legend entry is displayed in the time series plot?",
                "What do the annotations on the time series plot mark?",
                "How many bars are shown in the bar chart section and what categories do they represent?",
                "Are numerical values displayed on the bar chart?",
                "What are the axis labels and colormap used in the scatter plot section?",
                "How many line plots are included in the multi‑line plot section and what functions do they represent?",
                "Where is the legend positioned in the multi‑line plot and what additional annotation is present?"
            ],
            "VQA_answers": [
                "Comprehensive Matplotlib Dashboard",
                "DASHBOARD OVERVIEW",
                "Time (s) and Amplitude",
                "Sample Signal",
                "Maximum and minimum points with arrow indicators and text labels",
                "4 bars for Category A, B, C, and D",
                "Yes",
                "X Value, Y Value and viridis",
                "3 plots representing sine, cosine, and tangent",
                "Legend is in the upper left and a distinct data insight annotation box is displayed"
            ],
            "raw_output_metric": [
                "Comprehensive Matplotlib Dashboard",
                "DASHBOARD OVERVIEW",
                "Time (s)",
                "Amplitude",
                "Sample Signal",
                "Category A",
                "Category B",
                "Category C",
                "Category D",
                "X Value",
                "Y Value",
                "viridis",
                "sine",
                "cosine",
                "tangent"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX19_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.gridspec import GridSpec\n\n# Set up sample data for visualization\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny = np.sin(x) + np.random.normal(scale=0.3, size=x.shape)\ncategories = ['Category A', 'Category B', 'Category C', 'Category D']\nvalues = np.array([20, 35, 30, 15])\n\n# Create a figure with a GridSpec layout to organize multiple subplots\nfig = plt.figure(figsize=(12, 10))\ngs = GridSpec(nrows=3, ncols=2, figure=fig, height_ratios=[1, 2, 2], hspace=0.4, wspace=0.3)\n\n# TOP PANEL: Title and Dashboard Header Information\nax0 = fig.add_subplot(gs[0, :])\nax0.axis('off')\nheader_text = (\n    \"DASHBOARD OVERVIEW\\n\\n\"\n    \"This dashboard provides a detailed view of:\\n\"\n    \" - Time Series Data Analysis\\n\"\n    \" - Categorical Data Distribution\\n\"\n    \" - Scatter Plot Correlations\\n\\n\"\n    \"Report ID: 2023-10-EX001 | Version: 1.0 | Generated by: Matplotlib Script\"\n)\nax0.text(0.5, 0.5, header_text, ha='center', va='center', fontsize=12, fontweight='bold', family='monospace')\n\n# SECTION 1: Time Series Plot\nax1 = fig.add_subplot(gs[1, 0])\nax1.plot(x, y, color='tab:blue', linestyle='-', marker='o', markersize=4, label='Sample Signal')\nax1.set_title(\"Section 1: Time Series Data\", fontsize=14, fontweight='bold')\nax1.set_xlabel(\"Time (s)\")\nax1.set_ylabel(\"Amplitude\")\nax1.grid(True, which='both', linestyle='--', linewidth=0.5)\nax1.legend(loc='upper right')\n# Annotate some key points\nmax_index = np.argmax(y)\nmin_index = np.argmin(y)\nax1.annotate(f\"Max (x={x[max_index]:.2f}, y={y[max_index]:.2f})\",\n             xy=(x[max_index], y[max_index]), xytext=(x[max_index]+1, y[max_index]),\n             arrowprops=dict(arrowstyle=\"->\", color='green'))\nax1.annotate(f\"Min (x={x[min_index]:.2f}, y={y[min_index]:.2f})\",\n             xy=(x[min_index], y[min_index]), xytext=(x[min_index]-2, y[min_index]-0.5),\n             arrowprops=dict(arrowstyle=\"->\", color='red'))\n\n# SECTION 2: Bar Chart for Categorical Data\nax2 = fig.add_subplot(gs[1, 1])\nbars = ax2.bar(categories, values, color=['#ff9999','#66b3ff','#99ff99','#ffcc99'])\nax2.set_title(\"Section 2: Categorical Data Distribution\", fontsize=14, fontweight='bold')\nax2.set_ylabel(\"Values\")\nax2.grid(axis='y', linestyle='--', linewidth=0.5)\n# Adding data labels on bars\nfor bar in bars:\n    height = bar.get_height()\n    ax2.text(bar.get_x() + bar.get_width()/2.0, height, f'{height}', ha='center', va='bottom', fontweight='bold')\n\n# SECTION 3: Scatter Plot with Structured Annotations\nax3 = fig.add_subplot(gs[2, 0])\n# Generate some random scatter data\nscatter_x = np.random.rand(50) * 10\nscatter_y = np.random.rand(50) * 10\nscatter_sizes = np.random.rand(50) * 100 + 20\nscatter_colors = np.random.rand(50)\nsc = ax3.scatter(scatter_x, scatter_y, s=scatter_sizes, c=scatter_colors, cmap='viridis', alpha=0.7)\nax3.set_title(\"Section 3: Scatter Plot Analysis\", fontsize=14, fontweight='bold')\nax3.set_xlabel(\"X Value\")\nax3.set_ylabel(\"Y Value\")\nax3.grid(True, linestyle='--', alpha=0.6)\n# Adding formatted text as an annotation block inside the scatter plot\nannotation_text = (\n    \"Analysis Summary:\\n\"\n    \" - Points represent random samples.\\n\"\n    \" - Size relates to weight factor.\\n\"\n    \" - Color indicates classification score.\\n\"\n    \"\\nKey Observations:\\n\"\n    \" -> Clusters in region [5,5] are denser\\n\"\n    \" -> Variability is high at extremes\"\n)\nax3.text(0.05, 0.95, annotation_text, transform=ax3.transAxes, fontsize=10,\n         verticalalignment='top', bbox=dict(boxstyle=\"round\", edgecolor='black', facecolor='white'))\n\n# SECTION 4: Line Plot with Multiple Datasets and Legends\nax4 = fig.add_subplot(gs[2, 1])\n# Generate additional datasets\ny2 = np.cos(x) + np.random.normal(scale=0.2, size=x.shape)\ny3 = np.tan(x/5) + np.random.normal(scale=0.1, size=x.shape)\nline1, = ax4.plot(x, y, label=\"Sine Signal\", color='tab:blue', linestyle='-')\nline2, = ax4.plot(x, y2, label=\"Cosine Signal\", color='tab:orange', linestyle='--')\nline3, = ax4.plot(x, y3, label=\"Tangent Variation\", color='tab:green', linestyle='-.')\nax4.set_title(\"Section 4: Multiple Line Plot\", fontsize=14, fontweight='bold')\nax4.set_xlabel(\"Time (s)\")\nax4.set_ylabel(\"Value\")\nax4.grid(True, linestyle='--', linewidth=0.5)\nax4.legend(loc='upper left', fontsize=10)\n# Adding a data insight box\ndata_info = (\n    \"Data Insights:\\n\"\n    \" - Sine and Cosine show periodic behavior.\\n\"\n    \" - Tangent values escalate rapidly near asymptotes.\\n\"\n    \" - Noise introduced simulates measurement error.\"\n)\nax4.text(0.95, 0.05, data_info, transform=ax4.transAxes, fontsize=9, \n         va='bottom', ha='right',\n         bbox=dict(boxstyle=\"round,pad=0.5\", edgecolor='gray', facecolor='lightyellow'))\n\n# Final adjustments and display the figure\nfig.suptitle(\"Comprehensive Matplotlib Dashboard\", fontsize=16, fontweight='bold', y=0.98)\nplt.tight_layout(rect=[0, 0, 1, 0.96])\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX19_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Matplotlib Dashboard",
                                "DASHBOARD OVERVIEW",
                                "Time (s)",
                                "Amplitude",
                                "Sample Signal",
                                "Category A",
                                "Category B",
                                "Category C",
                                "Category D",
                                "X Value",
                                "Y Value",
                                "viridis",
                                "sine",
                                "cosine",
                                "tangent"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX19_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX19_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed at the top of the dashboard?",
                                "What title is shown in the top header panel?",
                                "What are the x‑axis and y‑axis labels in the time series plot?",
                                "What legend entry is displayed in the time series plot?",
                                "What do the annotations on the time series plot mark?",
                                "How many bars are shown in the bar chart section and what categories do they represent?",
                                "Are numerical values displayed on the bar chart?",
                                "What are the axis labels and colormap used in the scatter plot section?",
                                "How many line plots are included in the multi‑line plot section and what functions do they represent?",
                                "Where is the legend positioned in the multi‑line plot and what additional annotation is present?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX19_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Matplotlib Dashboard",
                                "DASHBOARD OVERVIEW",
                                "Time (s) and Amplitude",
                                "Sample Signal",
                                "Maximum and minimum points with arrow indicators and text labels",
                                "4 bars for Category A, B, C, and D",
                                "Yes",
                                "X Value, Y Value and viridis",
                                "3 plots representing sine, cosine, and tangent",
                                "Legend is in the upper left and a distinct data insight annotation box is displayed"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# -----------------------------------------------------\n# SECTION 1: Data Preparation\n# -----------------------------------------------------\nnp.random.seed(42)\n\n# Generate smooth data for line plots\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\nnoise = np.random.normal(scale=0.2, size=100)\ny_noisy = np.sin(x) + noise\n\n# Generate random data for scatter plot\nx_scatter = np.random.rand(50) * 10\ny_scatter = np.sin(x_scatter) + np.random.normal(scale=0.3, size=50)\n\n# Data for bar chart, comparing two categories across some groups\ncategories = ['A', 'B', 'C', 'D']\nvalues_cat1 = [5, 7, 3, 4]\nvalues_cat2 = [6, 9, 5, 2]\nindex = np.arange(len(categories))\nbar_width = 0.35\n\n# -----------------------------------------------------\n# SECTION 2: Initialize the Figure and Layout\n# -----------------------------------------------------\nfig, axs = plt.subplots(2, 2, figsize=(12, 8))\nfig.suptitle(\"Complex Matplotlib Visualization\", fontsize=16, fontweight='bold')\n\n# -----------------------------------------------------\n# Plot 1: Trigonometric Functions\n# Description:\n# - Plots sin(x) in blue \n# - Plots cos(x) in orange with dashed lines\n# -----------------------------------------------------\nax = axs[0, 0]\nax.plot(x, y_sin, label='sin(x)', color='blue', linewidth=2)\nax.plot(x, y_cos, label='cos(x)', color='orange', linestyle='--', linewidth=2)\nax.set_title(\"Trigonometric Functions\")\nax.set_xlabel(\"X values\")\nax.set_ylabel(\"Function Values\")\nax.legend()\nax.grid(True)\n\n# -----------------------------------------------------\n# Plot 2: Noisy Sine Wave Comparison\n# Description:\n# - Displays the clean sine wave versus a noisy version.\n# - Analysis:\n#   * Noise standard deviation: 0.2\n#   * Typical sinusoidal shape is retained with variations.\n# -----------------------------------------------------\nax = axs[0, 1]\nax.plot(x, y_sin, label='Clean sin(x)', color='green', linewidth=1.5)\nax.plot(x, y_noisy, label='Noisy sin(x)', color='red', linestyle='-', marker='o', markersize=4, linewidth=1)\nax.set_title(\"Noisy Sine Wave\")\nax.set_xlabel(\"X values\")\nax.set_ylabel(\"Amplitude\")\nax.legend(loc='",
            "feature_requirements": "• The TikZ output must depict a 2×2 grid of subplots, emulating the original figure layout.  \n• The top-level figure must include a bold, large title \"Complex Matplotlib Visualization\" (matching a visible font size of approximately 16 points).  \n• The first subplot (top-left) must have the title \"Trigonometric Functions\", an x-axis labeled as \"X values\" and a y-axis labeled as \"Function Values\", with a visible grid overlay.  \n• In the first subplot, there must be two plotted curves: one representing sin(x) in a blue line with a noticeable line thickness (approximately 2 units), and another representing cos(x) in an orange dashed line with the same line thickness.  \n• Both curves in the first subplot must be identifiable by a legend, displaying labels for \"sin(x)\" and \"cos(x)\".  \n• The second subplot (top-right) must have the title \"Noisy Sine Wave\", an x-axis labeled \"X values\" and a y-axis labeled \"Amplitude\".  \n• In the second subplot, there must be two plotted curves: a clean sine wave in green (with a line thickness around 1.5) and a noisy sine wave in red that includes circular markers (with markers approximately 4 units in size) and a slightly thinner line (approximately 1 unit in thickness).  \n• Each plotted curve in the second subplot must be accompanied by a legend indicating \"Clean sin(x)\" and \"Noisy sin(x)\".  \n• The TikZ code output should visually capture all specified titles, labels, legends, line styles, and marker properties, ensuring the conversion from Matplotlib maintains these measurable visual features.",
            "task_id": "08XX20",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main, bold title displayed at the top of the figure?",
                "How many subplots are arranged in the grid layout?",
                "What is the title of the top-left subplot?",
                "Which labels are used for the x-axis and y-axis in the first subplot?",
                "What functions are plotted in the first subplot and how are they distinguished?",
                "Does the first subplot display a grid overlay?",
                "What is the title of the top-right subplot and what are its axis labels?",
                "What curves are drawn in the second subplot and what are their visual properties?"
            ],
            "VQA_answers": [
                "Complex Matplotlib Visualization",
                "4",
                "Trigonometric Functions",
                "X values and Function Values",
                "sin(x) in a blue solid line (thickness ~2) and cos(x) in an orange dashed line (thickness ~2) with legends 'sin(x)' and 'cos(x)'",
                "Yes",
                "Title: Noisy Sine Wave, x-axis: X values, y-axis: Amplitude",
                "A clean sine wave in green (line thickness ~1.5) and a noisy sine wave in red with circular markers (marker size ~4, line thickness ~1) with legends 'Clean sin(x)' and 'Noisy sin(x)'"
            ],
            "raw_output_metric": [
                "Complex Matplotlib Visualization",
                "Trigonometric Functions",
                "X values",
                "Function Values",
                "sin(x)",
                "cos(x)",
                "Noisy Sine Wave",
                "Amplitude",
                "Clean sin(x)",
                "Noisy sin(x)"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX20_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# -----------------------------------------------------\n# SECTION 1: Data Preparation\n# -----------------------------------------------------\nnp.random.seed(42)\n\n# Generate smooth data for line plots\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\nnoise = np.random.normal(scale=0.2, size=100)\ny_noisy = np.sin(x) + noise\n\n# Generate random data for scatter plot\nx_scatter = np.random.rand(50) * 10\ny_scatter = np.sin(x_scatter) + np.random.normal(scale=0.3, size=50)\n\n# Data for bar chart, comparing two categories across some groups\ncategories = ['A', 'B', 'C', 'D']\nvalues_cat1 = [5, 7, 3, 4]\nvalues_cat2 = [6, 9, 5, 2]\nindex = np.arange(len(categories))\nbar_width = 0.35\n\n# -----------------------------------------------------\n# SECTION 2: Initialize the Figure and Layout\n# -----------------------------------------------------\nfig, axs = plt.subplots(2, 2, figsize=(12, 8))\nfig.suptitle(\"Complex Matplotlib Visualization\", fontsize=16, fontweight='bold')\n\n# -----------------------------------------------------\n# Plot 1: Trigonometric Functions\n# Description:\n# - Plots sin(x) in blue \n# - Plots cos(x) in orange with dashed lines\n# -----------------------------------------------------\nax = axs[0, 0]\nax.plot(x, y_sin, label='sin(x)', color='blue', linewidth=2)\nax.plot(x, y_cos, label='cos(x)', color='orange', linestyle='--', linewidth=2)\nax.set_title(\"Trigonometric Functions\")\nax.set_xlabel(\"X values\")\nax.set_ylabel(\"Function Values\")\nax.legend()\nax.grid(True)\n\n# -----------------------------------------------------\n# Plot 2: Noisy Sine Wave Comparison\n# Description:\n# - Displays the clean sine wave versus a noisy version.\n# - Analysis:\n#   * Noise standard deviation: 0.2\n#   * Typical sinusoidal shape is retained with variations.\n# -----------------------------------------------------\nax = axs[0, 1]\nax.plot(x, y_sin, label='Clean sin(x)', color='green', linewidth=1.5)\nax.plot(x, y_noisy, label='Noisy sin(x)', color='red', linestyle='-', marker='o', markersize=4, linewidth=1)\nax.set_title(\"Noisy Sine Wave\")\nax.set_xlabel(\"X values\")\nax.set_ylabel(\"Amplitude\")\nax.legend(loc='"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX20_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Complex Matplotlib Visualization",
                                "Trigonometric Functions",
                                "X values",
                                "Function Values",
                                "sin(x)",
                                "cos(x)",
                                "Noisy Sine Wave",
                                "Amplitude",
                                "Clean sin(x)",
                                "Noisy sin(x)"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX20_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX20_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main, bold title displayed at the top of the figure?",
                                "How many subplots are arranged in the grid layout?",
                                "What is the title of the top-left subplot?",
                                "Which labels are used for the x-axis and y-axis in the first subplot?",
                                "What functions are plotted in the first subplot and how are they distinguished?",
                                "Does the first subplot display a grid overlay?",
                                "What is the title of the top-right subplot and what are its axis labels?",
                                "What curves are drawn in the second subplot and what are their visual properties?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX20_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Complex Matplotlib Visualization",
                                "4",
                                "Trigonometric Functions",
                                "X values and Function Values",
                                "sin(x) in a blue solid line (thickness ~2) and cos(x) in an orange dashed line (thickness ~2) with legends 'sin(x)' and 'cos(x)'",
                                "Yes",
                                "Title: Noisy Sine Wave, x-axis: X values, y-axis: Amplitude",
                                "A clean sine wave in green (line thickness ~1.5) and a noisy sine wave in red with circular markers (marker size ~4, line thickness ~1) with legends 'Clean sin(x)' and 'Noisy sin(x)'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport numpy as np\n\n# =====================================================================\n# Section 0: Initialization and Figure Layout Configuration\n# =====================================================================\nfig = plt.figure(constrained_layout=True, figsize=(12, 10))\ngs = gridspec.GridSpec(3, 2, figure=fig)\n\n# =====================================================================\n# Section 1: Header / Main Title\n# =====================================================================\nax_header = fig.add_subplot(gs[0, :])\nax_header.axis('off')\nheader_text = \"Dashboard: Visual Data Analysis\"\nax_header.text(0.5, 0.5, header_text,\n               fontsize=24, fontweight='bold',\n               ha='center', va='center')\n\n# =====================================================================\n# Section 2: Summary Chart - Bar Plot of Random Data\n# =====================================================================\nax_summary = fig.add_subplot(gs[1, 0])\nnp.random.seed(42)\nrandom_data = np.random.rand(10)  # Generate 10 random values\n\n# Bar plot to mimic summary statistics by category\nax_summary.bar(range(1, 11), random_data,\n               color='skyblue', edgecolor='steelblue')\nax_summary.set_title(\"Summary Data: Random Values\", fontsize=14, pad=15)\nax_summary.set_xlabel(\"Category\", fontsize=12)\nax_summary.set_ylabel(\"Value\", fontsize=12)\nax_summary.set_xticks(range(1, 11))\nax_summary.set_xticklabels([f\"Cat {i}\" for i in range(1, 11)])\n\n# Annotating each bar with its corresponding numerical value\nfor i, val in enumerate(random_data, start=1):\n    ax_summary.text(i, val + 0.02, f\"{val:.2f}\",\n                    ha='center', va='bottom', fontsize=9)\n\n# =====================================================================\n# Section 3: Detailed Analysis - Sine Function Plot\n# =====================================================================\nax_detail = fig.add_subplot(gs[1, 1])\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax_detail.plot(x, y, label='Sine Wave',\n               color='coral', linewidth=2)\nax_detail.set_title(\"Detail Analysis: Sine Function\", fontsize=14, pad=15)\nax_detail.set_xlabel(\"Time\", fontsize=12)\nax_detail.set_ylabel(\"Amplitude\", fontsize=12)\nax_detail.axhline(0, color='gray', lw=0.5, ls='--')\nax_detail.legend(loc='upper right', fontsize=10)\n\n# =====================================================================\n# Section 4: Statistics and Data Lists (Labeled Values)\n# =====================================================================\nax_stats = fig.add_subplot(gs[2, 0])\nax_stats.axis('off')\n# Compute descriptive statistics from the random data\ncomputed_stats = [\n    f\"Mean Value: {np.mean(random_data):.2f}\",\n    f\"Standard Deviation: {np.std(random_data):.2f}\",\n    f\"Max Value: {np.max(random_data):.2f}\",\n    f\"Min Value: {np.min(random_data):.2f}\"\n]\n# Format the statistics list with bullet points\nstats_text = \"Statistics:\\n\" + \"\\n\".join(f\" - {stat}\" for stat in computed_stats)\n\n# Display the section header and the stats list\nax_stats.text(0.02, 0.8, \"Section 1: Data Summary\",\n              fontsize=16, fontweight='bold')\nax_stats.text(0.02, 0.5, stats_text,\n              fontsize=12, verticalalignment='top', family='monospace')\n\n# =====================================================================\n# Section 5: Additional Information and User Comments\n# =====================================================================\nax_comments = fig.add_subplot(gs[2, 1])\nax_comments.axis('off')\ncomments = (\n    \"Notes:\\n\"\n    \"1. Data is generated randomly for demonstration purposes.\\n\"\n    \"2. The sine function plot illustrates a",
            "feature_requirements": "• A header section displaying the title “Dashboard: Visual Data Analysis” centered, with large, bold text and no surrounding plot axes.  \n• A bar plot section consisting of 10 vertical bars arranged in a single subplot, where each bar is colored in a light blue hue with a contrasting edge, and the x-axis is labeled with “Cat 1” through “Cat 10”.  \n• Each bar in the summary chart must have its exact numerical value (formatted to two decimal places) visible just above the bar.  \n• A sine function plot section plotting a smooth sine curve over the interval from 0 to 10 with 100 sample points, drawn in a coral color and thicker line, together with a horizontal dashed line at y = 0 and an accompanying legend placed in the upper right corner.  \n• A statistics section presented as a text block (with a clear header “Section 1: Data Summary”) that lists computed statistics (mean, standard deviation, max, and min) as bullet-pointed or clearly separated items, using a monospace style for the values.  \n• An additional comments section displaying multi-line notes regarding the data generation and the demonstration purpose, with the axes turned off to emphasize pure text.",
            "task_id": "08XX21",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the header title displayed at the top of the dashboard?",
                "How many vertical bars are presented in the bar plot section?",
                "What labels are used on the x-axis of the bar plot?",
                "Where is the numerical value of each bar shown?",
                "What color is used to fill the vertical bars?",
                "How many sample points are used for the sine curve plot?",
                "What color is the sine curve drawn in?",
                "Where is the legend for the sine function plot placed?",
                "What is the header of the statistics section?",
                "What statistical measures are listed in the statistics section?"
            ],
            "VQA_answers": [
                "Dashboard: Visual Data Analysis",
                "10",
                "Cat 1 through Cat 10",
                "Just above each bar",
                "Light blue with a contrasting edge",
                "100",
                "Coral",
                "Upper right corner",
                "Section 1: Data Summary",
                "Mean, standard deviation, max, and min"
            ],
            "raw_output_metric": [
                "Dashboard: Visual Data Analysis",
                "Cat 1",
                "Cat 2",
                "Cat 3",
                "Cat 4",
                "Cat 5",
                "Cat 6",
                "Cat 7",
                "Cat 8",
                "Cat 9",
                "Cat 10",
                "Section 1: Data Summary",
                "mean",
                "standard deviation",
                "max",
                "min",
                "light blue",
                "coral",
                "100 sample points",
                "y = 0",
                "legend",
                "dashed"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX21_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport numpy as np\n\n# =====================================================================\n# Section 0: Initialization and Figure Layout Configuration\n# =====================================================================\nfig = plt.figure(constrained_layout=True, figsize=(12, 10))\ngs = gridspec.GridSpec(3, 2, figure=fig)\n\n# =====================================================================\n# Section 1: Header / Main Title\n# =====================================================================\nax_header = fig.add_subplot(gs[0, :])\nax_header.axis('off')\nheader_text = \"Dashboard: Visual Data Analysis\"\nax_header.text(0.5, 0.5, header_text,\n               fontsize=24, fontweight='bold',\n               ha='center', va='center')\n\n# =====================================================================\n# Section 2: Summary Chart - Bar Plot of Random Data\n# =====================================================================\nax_summary = fig.add_subplot(gs[1, 0])\nnp.random.seed(42)\nrandom_data = np.random.rand(10)  # Generate 10 random values\n\n# Bar plot to mimic summary statistics by category\nax_summary.bar(range(1, 11), random_data,\n               color='skyblue', edgecolor='steelblue')\nax_summary.set_title(\"Summary Data: Random Values\", fontsize=14, pad=15)\nax_summary.set_xlabel(\"Category\", fontsize=12)\nax_summary.set_ylabel(\"Value\", fontsize=12)\nax_summary.set_xticks(range(1, 11))\nax_summary.set_xticklabels([f\"Cat {i}\" for i in range(1, 11)])\n\n# Annotating each bar with its corresponding numerical value\nfor i, val in enumerate(random_data, start=1):\n    ax_summary.text(i, val + 0.02, f\"{val:.2f}\",\n                    ha='center', va='bottom', fontsize=9)\n\n# =====================================================================\n# Section 3: Detailed Analysis - Sine Function Plot\n# =====================================================================\nax_detail = fig.add_subplot(gs[1, 1])\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax_detail.plot(x, y, label='Sine Wave',\n               color='coral', linewidth=2)\nax_detail.set_title(\"Detail Analysis: Sine Function\", fontsize=14, pad=15)\nax_detail.set_xlabel(\"Time\", fontsize=12)\nax_detail.set_ylabel(\"Amplitude\", fontsize=12)\nax_detail.axhline(0, color='gray', lw=0.5, ls='--')\nax_detail.legend(loc='upper right', fontsize=10)\n\n# =====================================================================\n# Section 4: Statistics and Data Lists (Labeled Values)\n# =====================================================================\nax_stats = fig.add_subplot(gs[2, 0])\nax_stats.axis('off')\n# Compute descriptive statistics from the random data\ncomputed_stats = [\n    f\"Mean Value: {np.mean(random_data):.2f}\",\n    f\"Standard Deviation: {np.std(random_data):.2f}\",\n    f\"Max Value: {np.max(random_data):.2f}\",\n    f\"Min Value: {np.min(random_data):.2f}\"\n]\n# Format the statistics list with bullet points\nstats_text = \"Statistics:\\n\" + \"\\n\".join(f\" - {stat}\" for stat in computed_stats)\n\n# Display the section header and the stats list\nax_stats.text(0.02, 0.8, \"Section 1: Data Summary\",\n              fontsize=16, fontweight='bold')\nax_stats.text(0.02, 0.5, stats_text,\n              fontsize=12, verticalalignment='top', family='monospace')\n\n# =====================================================================\n# Section 5: Additional Information and User Comments\n# =====================================================================\nax_comments = fig.add_subplot(gs[2, 1])\nax_comments.axis('off')\ncomments = (\n    \"Notes:\\n\"\n    \"1. Data is generated randomly for demonstration purposes.\\n\"\n    \"2. The sine function plot illustrates a"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX21_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard: Visual Data Analysis",
                                "Cat 1",
                                "Cat 2",
                                "Cat 3",
                                "Cat 4",
                                "Cat 5",
                                "Cat 6",
                                "Cat 7",
                                "Cat 8",
                                "Cat 9",
                                "Cat 10",
                                "Section 1: Data Summary",
                                "mean",
                                "standard deviation",
                                "max",
                                "min",
                                "light blue",
                                "coral",
                                "100 sample points",
                                "y = 0",
                                "legend",
                                "dashed"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX21_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX21_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the header title displayed at the top of the dashboard?",
                                "How many vertical bars are presented in the bar plot section?",
                                "What labels are used on the x-axis of the bar plot?",
                                "Where is the numerical value of each bar shown?",
                                "What color is used to fill the vertical bars?",
                                "How many sample points are used for the sine curve plot?",
                                "What color is the sine curve drawn in?",
                                "Where is the legend for the sine function plot placed?",
                                "What is the header of the statistics section?",
                                "What statistical measures are listed in the statistics section?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX21_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard: Visual Data Analysis",
                                "10",
                                "Cat 1 through Cat 10",
                                "Just above each bar",
                                "Light blue with a contrasting edge",
                                "100",
                                "Coral",
                                "Upper right corner",
                                "Section 1: Data Summary",
                                "Mean, standard deviation, max, and min"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ============================================================\n# Section 1: Data Generation\n# ============================================================\n# Generating synthetic data for plotting\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)                  # Sine wave data\ny2 = np.cos(x)                  # Cosine wave data\nnoise = np.random.normal(0, 0.2, x.shape)\ny3 = 0.5 * x + noise            # Linear trend with added noise\n\n# ============================================================\n# Section 2: Create Figure with Multiple Subplots\n# ============================================================\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle('Comprehensive Analysis Report', fontsize=18, fontweight='bold', color='navy')\n\n# ---------------------\n# Subplot 1: Sine Wave Analysis\n# ---------------------\naxs[0, 0].plot(x, y1, color='blue', label='sin(x)')\naxs[0, 0].set_title('Section 1: Sine Wave', fontsize=14, fontweight='bold')\naxs[0, 0].set_xlabel('Time')\naxs[0, 0].set_ylabel('Amplitude')\naxs[0, 0].legend(loc='upper right')\n# Annotate the maximum point in the sine wave\nmax_index = np.argmax(y1)\naxs[0, 0].annotate(f'Max: {y1[max_index]:.2f}', \n                   xy=(x[max_index], y1[max_index]), \n                   xytext=(x[max_index] + 1, y1[max_index] + 0.5),\n                   arrowprops=dict(facecolor='black', arrowstyle='->'),\n                   fontsize=9)\naxs[0, 0].grid(True)\n\n# ---------------------\n# Subplot 2: Cosine Wave Overview\n# ---------------------\naxs[0, 1].plot(x, y2, color='green', label='cos(x)')\naxs[0, 1].set_title('Section 2: Cosine Wave', fontsize=14, fontweight='bold')\naxs[0, 1].set_xlabel('Time')\naxs[0, 1].set_ylabel('Amplitude')\naxs[0, 1].legend(loc='upper right')\n# Annotate the minimum point in the",
            "feature_requirements": "• The output must create a figure with a main title “Comprehensive Analysis Report” rendered at the top in a bold, navy-colored, large font (approximately size 18).  \n• The figure must be divided into four subplots arranged in a 2×2 grid layout.  \n• In the first subplot, there must be a blue curve representing sin(x) along with its legend “sin(x)”; the axes must be labeled “Time” (x-axis) and “Amplitude” (y-axis) and the subplot titled “Section 1: Sine Wave” with bold formatting and a font size around 14.  \n• The first subplot must include an annotation marking the maximum point on the sine wave. This annotation should display text (e.g., “Max: <value>”) positioned near the maximum data point and connected by an arrow, and the subplot should display grid lines.  \n• In the second subplot, there must be a green curve representing cos(x) along with its legend “cos(x)”; the axes must be labeled “Time” (x-axis) and “Amplitude” (y-axis) and the subplot titled “Section 2: Cosine Wave” with similar bold and size formatting.  \n• The TikZ code should visually represent all these plot elements—including lines, legends, axis labels, subplot titles, annotations with arrows, and grid lines—so that a rendered version of the graphic clearly shows the intended layout and styling.",
            "task_id": "08XX22",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title at the top of the figure?",
                "How many subplots are arranged in the figure?",
                "How are the subplots arranged?",
                "What is the title of the first subplot?",
                "Which function is plotted in the first subplot and what color is its curve?",
                "What labels are assigned to the axes in the first subplot?",
                "What annotation is present in the first subplot?",
                "What is the title of the second subplot?",
                "Which function is represented in the second subplot and in what color?",
                "Does the first subplot display grid lines?"
            ],
            "VQA_answers": [
                "Comprehensive Analysis Report",
                "Four",
                "2×2 grid",
                "Section 1: Sine Wave",
                "sin(x) in blue",
                "Time (x-axis) and Amplitude (y-axis)",
                "An arrowed note marking the maximum point, labeled 'Max: <value>'",
                "Section 2: Cosine Wave",
                "cos(x) in green",
                "Yes"
            ],
            "raw_output_metric": [
                "Comprehensive Analysis Report",
                "Section 1: Sine Wave",
                "Section 2: Cosine Wave",
                "sin(x)",
                "cos(x)",
                "Time",
                "Amplitude",
                "Max:"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX22_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ============================================================\n# Section 1: Data Generation\n# ============================================================\n# Generating synthetic data for plotting\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)                  # Sine wave data\ny2 = np.cos(x)                  # Cosine wave data\nnoise = np.random.normal(0, 0.2, x.shape)\ny3 = 0.5 * x + noise            # Linear trend with added noise\n\n# ============================================================\n# Section 2: Create Figure with Multiple Subplots\n# ============================================================\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle('Comprehensive Analysis Report', fontsize=18, fontweight='bold', color='navy')\n\n# ---------------------\n# Subplot 1: Sine Wave Analysis\n# ---------------------\naxs[0, 0].plot(x, y1, color='blue', label='sin(x)')\naxs[0, 0].set_title('Section 1: Sine Wave', fontsize=14, fontweight='bold')\naxs[0, 0].set_xlabel('Time')\naxs[0, 0].set_ylabel('Amplitude')\naxs[0, 0].legend(loc='upper right')\n# Annotate the maximum point in the sine wave\nmax_index = np.argmax(y1)\naxs[0, 0].annotate(f'Max: {y1[max_index]:.2f}', \n                   xy=(x[max_index], y1[max_index]), \n                   xytext=(x[max_index] + 1, y1[max_index] + 0.5),\n                   arrowprops=dict(facecolor='black', arrowstyle='->'),\n                   fontsize=9)\naxs[0, 0].grid(True)\n\n# ---------------------\n# Subplot 2: Cosine Wave Overview\n# ---------------------\naxs[0, 1].plot(x, y2, color='green', label='cos(x)')\naxs[0, 1].set_title('Section 2: Cosine Wave', fontsize=14, fontweight='bold')\naxs[0, 1].set_xlabel('Time')\naxs[0, 1].set_ylabel('Amplitude')\naxs[0, 1].legend(loc='upper right')\n# Annotate the minimum point in the"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX22_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Analysis Report",
                                "Section 1: Sine Wave",
                                "Section 2: Cosine Wave",
                                "sin(x)",
                                "cos(x)",
                                "Time",
                                "Amplitude",
                                "Max:"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX22_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX22_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title at the top of the figure?",
                                "How many subplots are arranged in the figure?",
                                "How are the subplots arranged?",
                                "What is the title of the first subplot?",
                                "Which function is plotted in the first subplot and what color is its curve?",
                                "What labels are assigned to the axes in the first subplot?",
                                "What annotation is present in the first subplot?",
                                "What is the title of the second subplot?",
                                "Which function is represented in the second subplot and in what color?",
                                "Does the first subplot display grid lines?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX22_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Analysis Report",
                                "Four",
                                "2×2 grid",
                                "Section 1: Sine Wave",
                                "sin(x) in blue",
                                "Time (x-axis) and Amplitude (y-axis)",
                                "An arrowed note marking the maximum point, labeled 'Max: <value>'",
                                "Section 2: Cosine Wave",
                                "cos(x) in green",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# =============================================================================\n# Matplotlib Visualization for Project Overview\n# =============================================================================\n# This code demonstrates a structured layout of multiple visualizations.\n# The layout includes a title section, a line plot, a bar chart, and an inset table.\n# Each section has labeled headings and formatted text to indicate clear structure.\n\n# Generate sample data for plots\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny_line = np.sin(x) + np.random.normal(scale=0.2, size=x.shape)\ncategories = ['Alpha', 'Beta', 'Gamma', 'Delta']\nvalues = np.random.randint(10, 50, size=len(categories))\n\n# Create figure and subplots with specific layout\nfig = plt.figure(figsize=(12, 10))\n# Main Title for the entire figure\nfig.suptitle('Project Overview Dashboard', fontsize=20, fontweight='bold', color='navy', y=0.96)\n\n# -----------------------------------------------------------------------------\n# Section 1: Line Plot - Trend Analysis\n# -----------------------------------------------------------------------------\nax1 = plt.subplot2grid((3, 2), (0, 0), colspan=2)\nax1.plot(x, y_line, color='teal', linewidth=2, label='Sine Wave with Noise')\nax1.set_title('Section 1: Trend Analysis', fontsize=16, fontweight='bold')\nax1.set_xlabel('Time (s)', fontsize=12)\nax1.set_ylabel('Amplitude', fontsize=12)\nax1.legend(loc='upper right')\nax1.grid(True, linestyle='--', alpha=0.6)\n# Annotated value on the line plot\nmax_idx = np.argmax(y_line)\nax1.annotate(f'Peak: {y_line[max_idx]:.2f}',\n             xy=(x[max_idx], y_line[max_idx]),\n             xytext=(x[max_idx]+1, y_line[max_idx]+0.5),\n             arrowprops=dict(facecolor='black', arrowstyle='->'),\n             fontsize=10, backgroundcolor='white')\n\n# -----------------------------------------------------------------------------\n# Section 2: Bar Chart - Category Breakdown\n# -----------------------------------------------------------------------------\nax2 = plt.subplot2grid((3, 2), (1, 0))\nbars = ax2.bar(categories, values, color=['#FF9999', '#66B3FF', '#99FF99', '#FFCC99'])\nax2.set_title('Section 2: Category Breakdown', fontsize=16, fontweight='bold')\nax2.set_xlabel('Category', fontsize=12)\nax2.set_ylabel('Value', fontsize=12)\n# Add value labels above bars\nfor bar in bars:\n    height = bar.get_height()\n    ax2.text(bar.get_x() + bar.get_width()/2, height+1, f'{height}', ha='center', va='bottom', fontsize=10)\n\n# -----------------------------------------------------------------------------\n# Section 3: Distribution - Histogram\n# -----------------------------------------------------------------------------\nax3 = plt.subplot2grid((3, 2), (1, 1))\ndata = np.random.normal(loc=20, scale=5, size=200)\nax3.hist(data, bins=15, color='coral', edgecolor='black')\nax3.set_title('Section 3: Data Distribution', fontsize=16, fontweight='bold')\nax3.set_xlabel('Data Value', fontsize=12)\nax3.set_ylabel('Frequency', fontsize=12)\nax3.grid(True, linestyle='--', alpha=0.5)\n\n# -----------------------------------------------------------------------------\n# Section 4: Summary Table\n# -----------------------------------------------------------------------------\nax4 = plt.subplot2grid((3, 2), (2, 0), colspan=2)\nax4.axis('off')  # Hide the axes for a table-like display\nheadings = ['Metric', 'Value']\nmetrics = [\n    ['Total Samples', '400'],\n    ['Mean Trend', f'{np.mean(y_line):.2f}'],\n    ['Max Trend', f'{np.max(y_line):.2f}'],\n    ['Min Trend', f'{np.min(y_line):.2f}'],\n    ['Category Highest', categories[np.argmax(values)]],\n]\n# Starting coordinates for the table text\nstart_x = 0.1\nstart_y = 0.8\nline_height = 0.1\n\n# Write table headings\nax4.text(start_x, start_y, f\"{headings[0]:<20} {headings[1]:<10}\",\n         fontsize=14, fontweight='bold', color='darkblue')\n# Draw a horizontal line under the header\nax4.plot([start_x, start_x+0.8], [start_y-0.03, start_y-0.03], color='black', linewidth=1)\n\n# Write each metric row\nfor i, row in enumerate(metrics):\n    current_y = start_y - (i+1)*line_height\n    ax4.text(start_x, current_y, f\"{row[0]:<20} {row[1]:<10}\", fontsize=12, color='black')\n\n# =============================================================================\n# End of Visualization\n# =============================================================================\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\n</code>",
            "feature_requirements": "• A main title labeled \"Project Overview Dashboard\" that appears at the top with bold styling and a distinct color (navy), verifying that the primary header is clearly visible.  \n• A line plot section (Section 1: Trend Analysis) containing a sine wave with noise, including labeled axes (\"Time (s)\" and \"Amplitude\"), a legend labeled \"Sine Wave with Noise\", grid lines with dashed styling, and an annotation marking the peak value with an arrow.  \n• A bar chart section (Section 2: Category Breakdown) featuring four distinct bars for the categories \"Alpha\", \"Beta\", \"Gamma\", and \"Delta\", each with specific colors, and a value label displayed above each bar.  \n• A histogram section (Section 3: Data Distribution) that shows a frequency distribution with a designated number of bins (15), labeled axes (\"Data Value\" and \"Frequency\"), and grid lines styled with dashes.  \n• A table section (Section 4: Summary Table) presented without visible axes, including a header row with two columns (\"Metric\" and \"Value\"), a horizontal line under the header, and five rows of data such as \"Total Samples\", \"Mean Trend\", \"Max Trend\", \"Min Trend\", and \"Category Highest\".  \n• Clearly separated sections with individual titles (e.g., \"Section 1: Trend Analysis\", \"Section 2: Category Breakdown\", etc.) that are formatted in bold with increased font size, ensuring each part is easily identifiable.",
            "task_id": "08XX23",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the text of the main title at the top of the page?",
                "What styling and color is the main title rendered with?",
                "Which section contains a line plot displaying a sine wave with noise?",
                "What are the labels for the x-axis and y-axis in the line plot?",
                "What label is used in the legend of the line plot?",
                "Which section features a bar chart with four bars for 'Alpha', 'Beta', 'Gamma', and 'Delta'?",
                "How many bins are specified for the histogram in Section 3: Data Distribution?",
                "What are the column headers in the summary table of Section 4: Summary Table?"
            ],
            "VQA_answers": [
                "Project Overview Dashboard",
                "Bold with navy color",
                "Section 1: Trend Analysis",
                "Time (s) and Amplitude",
                "Sine Wave with Noise",
                "Section 2: Category Breakdown",
                "15",
                "Metric and Value"
            ],
            "raw_output_metric": [
                "Project Overview Dashboard",
                "navy",
                "Section 1: Trend Analysis",
                "Time (s)",
                "Amplitude",
                "Sine Wave with Noise",
                "dashed",
                "arrow",
                "peak value",
                "Section 2: Category Breakdown",
                "Alpha",
                "Beta",
                "Gamma",
                "Delta",
                "Section 3: Data Distribution",
                "15",
                "Data Value",
                "Frequency",
                "Section 4: Summary Table",
                "Metric",
                "Value",
                "Total Samples",
                "Mean Trend",
                "Max Trend",
                "Min Trend",
                "Category Highest"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX23_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# =============================================================================\n# Matplotlib Visualization for Project Overview\n# =============================================================================\n# This code demonstrates a structured layout of multiple visualizations.\n# The layout includes a title section, a line plot, a bar chart, and an inset table.\n# Each section has labeled headings and formatted text to indicate clear structure.\n\n# Generate sample data for plots\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny_line = np.sin(x) + np.random.normal(scale=0.2, size=x.shape)\ncategories = ['Alpha', 'Beta', 'Gamma', 'Delta']\nvalues = np.random.randint(10, 50, size=len(categories))\n\n# Create figure and subplots with specific layout\nfig = plt.figure(figsize=(12, 10))\n# Main Title for the entire figure\nfig.suptitle('Project Overview Dashboard', fontsize=20, fontweight='bold', color='navy', y=0.96)\n\n# -----------------------------------------------------------------------------\n# Section 1: Line Plot - Trend Analysis\n# -----------------------------------------------------------------------------\nax1 = plt.subplot2grid((3, 2), (0, 0), colspan=2)\nax1.plot(x, y_line, color='teal', linewidth=2, label='Sine Wave with Noise')\nax1.set_title('Section 1: Trend Analysis', fontsize=16, fontweight='bold')\nax1.set_xlabel('Time (s)', fontsize=12)\nax1.set_ylabel('Amplitude', fontsize=12)\nax1.legend(loc='upper right')\nax1.grid(True, linestyle='--', alpha=0.6)\n# Annotated value on the line plot\nmax_idx = np.argmax(y_line)\nax1.annotate(f'Peak: {y_line[max_idx]:.2f}',\n             xy=(x[max_idx], y_line[max_idx]),\n             xytext=(x[max_idx]+1, y_line[max_idx]+0.5),\n             arrowprops=dict(facecolor='black', arrowstyle='->'),\n             fontsize=10, backgroundcolor='white')\n\n# -----------------------------------------------------------------------------\n# Section 2: Bar Chart - Category Breakdown\n# -----------------------------------------------------------------------------\nax2 = plt.subplot2grid((3, 2), (1, 0))\nbars = ax2.bar(categories, values, color=['#FF9999', '#66B3FF', '#99FF99', '#FFCC99'])\nax2.set_title('Section 2: Category Breakdown', fontsize=16, fontweight='bold')\nax2.set_xlabel('Category', fontsize=12)\nax2.set_ylabel('Value', fontsize=12)\n# Add value labels above bars\nfor bar in bars:\n    height = bar.get_height()\n    ax2.text(bar.get_x() + bar.get_width()/2, height+1, f'{height}', ha='center', va='bottom', fontsize=10)\n\n# -----------------------------------------------------------------------------\n# Section 3: Distribution - Histogram\n# -----------------------------------------------------------------------------\nax3 = plt.subplot2grid((3, 2), (1, 1))\ndata = np.random.normal(loc=20, scale=5, size=200)\nax3.hist(data, bins=15, color='coral', edgecolor='black')\nax3.set_title('Section 3: Data Distribution', fontsize=16, fontweight='bold')\nax3.set_xlabel('Data Value', fontsize=12)\nax3.set_ylabel('Frequency', fontsize=12)\nax3.grid(True, linestyle='--', alpha=0.5)\n\n# -----------------------------------------------------------------------------\n# Section 4: Summary Table\n# -----------------------------------------------------------------------------\nax4 = plt.subplot2grid((3, 2), (2, 0), colspan=2)\nax4.axis('off')  # Hide the axes for a table-like display\nheadings = ['Metric', 'Value']\nmetrics = [\n    ['Total Samples', '400'],\n    ['Mean Trend', f'{np.mean(y_line):.2f}'],\n    ['Max Trend', f'{np.max(y_line):.2f}'],\n    ['Min Trend', f'{np.min(y_line):.2f}'],\n    ['Category Highest', categories[np.argmax(values)]],\n]\n# Starting coordinates for the table text\nstart_x = 0.1\nstart_y = 0.8\nline_height = 0.1\n\n# Write table headings\nax4.text(start_x, start_y, f\"{headings[0]:<20} {headings[1]:<10}\",\n         fontsize=14, fontweight='bold', color='darkblue')\n# Draw a horizontal line under the header\nax4.plot([start_x, start_x+0.8], [start_y-0.03, start_y-0.03], color='black', linewidth=1)\n\n# Write each metric row\nfor i, row in enumerate(metrics):\n    current_y = start_y - (i+1)*line_height\n    ax4.text(start_x, current_y, f\"{row[0]:<20} {row[1]:<10}\", fontsize=12, color='black')\n\n# =============================================================================\n# End of Visualization\n# =============================================================================\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX23_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Project Overview Dashboard",
                                "navy",
                                "Section 1: Trend Analysis",
                                "Time (s)",
                                "Amplitude",
                                "Sine Wave with Noise",
                                "dashed",
                                "arrow",
                                "peak value",
                                "Section 2: Category Breakdown",
                                "Alpha",
                                "Beta",
                                "Gamma",
                                "Delta",
                                "Section 3: Data Distribution",
                                "15",
                                "Data Value",
                                "Frequency",
                                "Section 4: Summary Table",
                                "Metric",
                                "Value",
                                "Total Samples",
                                "Mean Trend",
                                "Max Trend",
                                "Min Trend",
                                "Category Highest"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX23_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX23_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the text of the main title at the top of the page?",
                                "What styling and color is the main title rendered with?",
                                "Which section contains a line plot displaying a sine wave with noise?",
                                "What are the labels for the x-axis and y-axis in the line plot?",
                                "What label is used in the legend of the line plot?",
                                "Which section features a bar chart with four bars for 'Alpha', 'Beta', 'Gamma', and 'Delta'?",
                                "How many bins are specified for the histogram in Section 3: Data Distribution?",
                                "What are the column headers in the summary table of Section 4: Summary Table?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX23_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Project Overview Dashboard",
                                "Bold with navy color",
                                "Section 1: Trend Analysis",
                                "Time (s) and Amplitude",
                                "Sine Wave with Noise",
                                "Section 2: Category Breakdown",
                                "15",
                                "Metric and Value"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib.gridspec as gridspec\n\n# Seed for reproducibility.\nnp.random.seed(0)\n\n# Generate data for the plots\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\ny2 = np.cos(x)\ncategories = ['A', 'B', 'C', 'D']\nvalues = [23, 17, 35, 29]\n\n# =============================================================================\n# Create a figure with a grid layout for various sections.\n# The grid has 4 rows and 2 columns with custom height ratios.\n# =============================================================================\nfig = plt.figure(figsize=(12, 10))\ngs = gridspec.GridSpec(4, 2, figure=fig, height_ratios=[1, 1, 2, 2])\n\n# -----------------------------------------------------------------------------\n# Section 1: Header Information (Title and Subtitles)\n# -----------------------------------------------------------------------------\nax_header = fig.add_subplot(gs[0, :])\nax_header.axis('off')  # Hide axes for header.\nax_header.text(0.5, 0.7, \"Dashboard Overview\", fontsize=22, fontweight='bold', ha='center')\nax_header.text(0.5, 0.45, \"Analysis of Trends and Categorized Data\", fontsize=16, ha='center')\nax_header.text(0.5, 0.2, \"Report generated using Matplotlib\", fontsize=12, ha='center')\n\n# -----------------------------------------------------------------------------\n# Section 2: Key Metrics List (Bullet list with labeled values)\n# -----------------------------------------------------------------------------\nax_list = fig.add_subplot(gs[1, 0])\nax_list.axis('off')  # Remove axes to focus on text content.\n\n# Header text for key metrics\nheader_text = \"Key Metrics:\\n\"\nmetrics = [\n    \"• Average Sine Value: {:.2f}\".format(np.mean(y)),\n    \"• Average Cosine Value: {:.2f}\".format(np.mean(y2)),\n    \"• Data Points Count: {}\".format(len(x)),\n    \"• Category Count: {}\".format(len(categories))\n]\n\n# Display header and list items\nax_list.text(0, 0.8, header_text, fontsize=14, fontweight='bold', va='top')\nfor i, metric in enumerate(metrics):\n    y_position = 0.6 - i * 0.2\n    ax_list.text(0, y_position, metric, fontsize=12, va='top')\n\n# -----------------------------------------------------------------------------\n# Section 3: Categorical Data Bar Chart\n# -----------------------------------------------------------------------------\nax_bar = fig.add_subplot(gs[1, 1])\nax_bar.bar(categories, values, color='skyblue', edgecolor='black')\nax_bar.set_title(\"Categorized Values\", fontsize=14)\nax_bar.set_xlabel(\"Categories\")\nax_bar.set_ylabel(\"Values\")\n\n# Annotate bars with their respective values.\nfor i, val in enumerate(values):\n    ax_bar.text(i, val + 1, str(val), ha='center', va='bottom', fontsize=10)\n\n# -----------------------------------------------------------------------------\n# Section 4: Data Trends - Multi-Line Plot with Annotations\n# -----------------------------------------------------------------------------\nax_trends = fig.add_subplot(gs[2:, :])\nax_trends.plot(x, y, label=\"Sine\", color='red', linewidth=2, marker='o', markersize=4)\nax_trends.plot(x, y2, label=\"Cosine\", color='blue', linestyle='--', linewidth=2)\nax_trends.set_title(\"Data Trends Over Time\", fontsize=16, fontweight='bold')\nax_trends.set_xlabel(\"Time (",
            "feature_requirements": "• A header section at the top that displays three centered text lines: a large, bold title (\"Dashboard Overview\"), a medium subtitle (\"Analysis of Trends and Categorized Data\"), and a smaller caption (\"Report generated using Matplotlib\").  \n• A section that shows a key metrics list with bullet-point items including \"Average Sine Value\", \"Average Cosine Value\", \"Data Points Count\", and \"Category Count\" along with their numerical values.  \n• A bar chart section displaying four bars—one for each category (A, B, C, D)—with bars filled in skyblue and bordered in black, and the chart having clearly labeled x-axis (\"Categories\") and y-axis (\"Values\") plus a title (\"Categorized Values\").  \n• Each bar in the bar chart must include a text annotation located just above it that shows its specific numerical value.  \n• A data trends section featuring two plotted lines: one representing the sine values (drawn in red with circle markers) labeled \"Sine\", and one representing cosine values (drawn in blue with a dashed line) labeled \"Cosine\".  \n• The trends section should include a bold, larger title (\"Data Trends Over Time\") and have labeled axes (with at least an x-axis labeled, e.g. \"Time\").  \n• The overall TikZ output must visually mimic a grid layout organizing the header, key metrics list, bar chart, and multi-line plot into separate, clearly defined sections.",
            "task_id": "08XX24",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the large title displayed in the header section?",
                "What is the medium subtitle shown under the title?",
                "What is the caption text in the header section?",
                "How many key metrics bullet points are displayed?",
                "Which key metric items are listed?",
                "What is the title of the bar chart section?",
                "How many bars are shown in the bar chart and what are their colors?",
                "What labels are used on the axes of the bar chart?",
                "What annotation is provided for each bar in the bar chart?",
                "What are the two plotted lines in the data trends section and their styles?"
            ],
            "VQA_answers": [
                "Dashboard Overview",
                "Analysis of Trends and Categorized Data",
                "Report generated using Matplotlib",
                "4",
                "Average Sine Value, Average Cosine Value, Data Points Count, Category Count",
                "Categorized Values",
                "4 bars, filled in skyblue with black borders",
                "x-axis: Categories, y-axis: Values",
                "A text annotation above the bar showing its numerical value",
                "Sine line in red with circle markers and Cosine line in blue with a dashed style"
            ],
            "raw_output_metric": [
                "Dashboard Overview",
                "Analysis of Trends and Categorized Data",
                "Report generated using Matplotlib",
                "Average Sine Value",
                "Average Cosine Value",
                "Data Points Count",
                "Category Count",
                "Categories",
                "Values",
                "Categorized Values",
                "Sine",
                "Cosine",
                "Data Trends Over Time",
                "Time",
                "skyblue",
                "black",
                "red",
                "circle",
                "blue",
                "dashed"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX24_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib.gridspec as gridspec\n\n# Seed for reproducibility.\nnp.random.seed(0)\n\n# Generate data for the plots\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\ny2 = np.cos(x)\ncategories = ['A', 'B', 'C', 'D']\nvalues = [23, 17, 35, 29]\n\n# =============================================================================\n# Create a figure with a grid layout for various sections.\n# The grid has 4 rows and 2 columns with custom height ratios.\n# =============================================================================\nfig = plt.figure(figsize=(12, 10))\ngs = gridspec.GridSpec(4, 2, figure=fig, height_ratios=[1, 1, 2, 2])\n\n# -----------------------------------------------------------------------------\n# Section 1: Header Information (Title and Subtitles)\n# -----------------------------------------------------------------------------\nax_header = fig.add_subplot(gs[0, :])\nax_header.axis('off')  # Hide axes for header.\nax_header.text(0.5, 0.7, \"Dashboard Overview\", fontsize=22, fontweight='bold', ha='center')\nax_header.text(0.5, 0.45, \"Analysis of Trends and Categorized Data\", fontsize=16, ha='center')\nax_header.text(0.5, 0.2, \"Report generated using Matplotlib\", fontsize=12, ha='center')\n\n# -----------------------------------------------------------------------------\n# Section 2: Key Metrics List (Bullet list with labeled values)\n# -----------------------------------------------------------------------------\nax_list = fig.add_subplot(gs[1, 0])\nax_list.axis('off')  # Remove axes to focus on text content.\n\n# Header text for key metrics\nheader_text = \"Key Metrics:\\n\"\nmetrics = [\n    \"• Average Sine Value: {:.2f}\".format(np.mean(y)),\n    \"• Average Cosine Value: {:.2f}\".format(np.mean(y2)),\n    \"• Data Points Count: {}\".format(len(x)),\n    \"• Category Count: {}\".format(len(categories))\n]\n\n# Display header and list items\nax_list.text(0, 0.8, header_text, fontsize=14, fontweight='bold', va='top')\nfor i, metric in enumerate(metrics):\n    y_position = 0.6 - i * 0.2\n    ax_list.text(0, y_position, metric, fontsize=12, va='top')\n\n# -----------------------------------------------------------------------------\n# Section 3: Categorical Data Bar Chart\n# -----------------------------------------------------------------------------\nax_bar = fig.add_subplot(gs[1, 1])\nax_bar.bar(categories, values, color='skyblue', edgecolor='black')\nax_bar.set_title(\"Categorized Values\", fontsize=14)\nax_bar.set_xlabel(\"Categories\")\nax_bar.set_ylabel(\"Values\")\n\n# Annotate bars with their respective values.\nfor i, val in enumerate(values):\n    ax_bar.text(i, val + 1, str(val), ha='center', va='bottom', fontsize=10)\n\n# -----------------------------------------------------------------------------\n# Section 4: Data Trends - Multi-Line Plot with Annotations\n# -----------------------------------------------------------------------------\nax_trends = fig.add_subplot(gs[2:, :])\nax_trends.plot(x, y, label=\"Sine\", color='red', linewidth=2, marker='o', markersize=4)\nax_trends.plot(x, y2, label=\"Cosine\", color='blue', linestyle='--', linewidth=2)\nax_trends.set_title(\"Data Trends Over Time\", fontsize=16, fontweight='bold')\nax_trends.set_xlabel(\"Time ("
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX24_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard Overview",
                                "Analysis of Trends and Categorized Data",
                                "Report generated using Matplotlib",
                                "Average Sine Value",
                                "Average Cosine Value",
                                "Data Points Count",
                                "Category Count",
                                "Categories",
                                "Values",
                                "Categorized Values",
                                "Sine",
                                "Cosine",
                                "Data Trends Over Time",
                                "Time",
                                "skyblue",
                                "black",
                                "red",
                                "circle",
                                "blue",
                                "dashed"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX24_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX24_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the large title displayed in the header section?",
                                "What is the medium subtitle shown under the title?",
                                "What is the caption text in the header section?",
                                "How many key metrics bullet points are displayed?",
                                "Which key metric items are listed?",
                                "What is the title of the bar chart section?",
                                "How many bars are shown in the bar chart and what are their colors?",
                                "What labels are used on the axes of the bar chart?",
                                "What annotation is provided for each bar in the bar chart?",
                                "What are the two plotted lines in the data trends section and their styles?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX24_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard Overview",
                                "Analysis of Trends and Categorized Data",
                                "Report generated using Matplotlib",
                                "4",
                                "Average Sine Value, Average Cosine Value, Data Points Count, Category Count",
                                "Categorized Values",
                                "4 bars, filled in skyblue with black borders",
                                "x-axis: Categories, y-axis: Values",
                                "A text annotation above the bar showing its numerical value",
                                "Sine line in red with circle markers and Cosine line in blue with a dashed style"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# =============================================================================\n#  MATPLOTLIB VISUAL CONVERSION TASK\n# -----------------------------------------------------------------------------\n#  This script demonstrates a multi-section report using Matplotlib.\n#  It uses structured layout, headings, sub-headings, and labels to show\n#  a realistic report with two distinct sections:\n#    1. A Time-Series Line Plot with annotations.\n#    2. A Horizontal Bar Chart displaying summary metrics.\n# =============================================================================\n\n# Generate sample data for time series\nnp.random.seed(42)\ntime = np.arange(0, 100)\ntrend = np.linspace(0, 10, 100)\nnoise = np.random.normal(0, 1, 100)\nseries_data = trend + noise\n\n# Generate sample data for bar chart metrics\ncategories = ['Metric A', 'Metric B', 'Metric C', 'Metric D', 'Metric E']\nvalues = np.random.randint(10, 100, size=len(categories))\n\n# Create the main figure with a specified size\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle(\"Structured Data Visualization Report\", fontsize=18, fontweight=\"bold\", color=\"navy\", y=0.95)\n\n# -----------------------------------------------------------------------------\n# SECTION 1: Time-Series Analysis\n# -----------------------------------------------------------------------------\n# Create subplot for time-series line plot (Top portion of the figure)\nax1 = fig.add_subplot(2, 1, 1)\nax1.plot(time, series_data, label=\"Value Over Time\", color=\"teal\", linewidth=2)\nax1.set_title(\"Section 1: Time-Series Analysis\", fontsize=14, fontweight=\"bold\", loc=\"left\")\nax1.set_xlabel(\"Time (s)\")\nax1.set_ylabel(\"Value\")\nax1.grid(True, which='both', linestyle='--', linewidth=0.5)\n\n# Adding Annotations: Marking Local Maximum and Minimum\nmax_idx = np.argmax(series_data)\nmin_idx = np.argmin(series_data)\nax1.annotate(f'Peak Value: {series_data[max_idx]:.2f}', xy=(time[max_idx], series_data[max_idx]),\n             xytext=(time[max_idx] + 5, series_data[max_idx] + 2),\n             arrowprops=dict(facecolor='black', shrink=0.05), fontsize=10, color='darkgreen')\n\nax1.annotate(f'Valley: {series_data[min_idx]:.2f}', xy=(time[min_idx], series_data[min_idx]),\n             xytext=(time[min_idx] + 5, series_data[min_idx] - 2),\n             arrowprops=dict(facecolor='red', shrink=0.05), fontsize=10, color='darkred')\n\n# Add a legend with a border and shadow\nax1.legend(frameon=True, shadow=True)\n\n# Display a list of summary statistics on the right side\nstats_text = (\n    \"Summary Statistics:\\n\"\n    \"--------------------\\n\"\n    f\"Mean: {np.mean(series_data):.2f}\\n\"\n    f\"Std Dev: {np.std(series_data):.2f}\\n\"\n    f\"Max: {np.max(series_data):.2f}\\n\"\n    f\"Min: {np.min(series_data):.2f}\"\n)\nax1.text(1.02, 0.5, stats_text, transform=ax1.transAxes, fontsize=10, \n         verticalalignment='center', bbox=dict(facecolor='lightyellow', edgecolor='black', boxstyle='round'))\n\n# -----------------------------------------------------------------------------\n# SECTION 2: Summary Metrics\n# -----------------------------------------------------------------------------\n# Create subplot for horizontal bar chart (Bottom portion of the figure)\nax2 = fig.add_subplot(2, 1, 2)\ny_pos = np.arange(len(categories))\nbars = ax2.barh(y_pos, values, color=\"skyblue\", edgecolor=\"black\")\n\nax2.set_title(\"Section 2: Summary Metrics Overview\", fontsize=14, fontweight=\"bold\", loc=\"left\")\nax2.set_xlabel(\"Score\")\nax2.set_yticks(y_pos)\nax2.set_yticklabels(categories)\nax2.invert_yaxis()  # Highest values on top\nax2.grid(True, axis='x', linestyle='--', linewidth=0.5)\n\n# Annotate each bar with its corresponding value\nfor i, bar in enumerate(bars):\n    width = bar.get_width()\n    ax2.text(width + 2, bar.get_y() + bar.get_height()/2,\n             f\"{values[i]}\", va='center', fontsize=10, color='black')\n\n# Additional layout details for visual hierarchy\nfig.text(0.5, 0.02, \"Data Visualization Report generated using Matplotlib\", \n         ha=\"center\", fontsize=10, color=\"dimgray\")\nfig.text(0.01, 0.5, \"Left Margin: Detailed Annotations & Summary\", \n         va=\"center\", rotation=90, fontsize=10, color=\"gray\")\n\n# Adjust layout to prevent overlap and improve visual hierarchy\nplt.subplots_adjust(top=0.88, bottom=0.08, left=0.08, right=0.92, hspace=0.35)\n\n# =============================================================================\n# FINAL RENDERING\n# =============================================================================\nplt.show()\n</code>",
            "feature_requirements": "• The output must display a main title “Structured Data Visualization Report” centered at the top with a navy or dark-colored bold font.\n\n• There must be a time-series line plot section featuring a line plot of data over time with an x-axis labeled “Time (s)” and a y-axis labeled “Value”, where the line is rendered in a teal color with a visibly thick stroke.\n\n• The time-series plot must include grid lines drawn with a dashed style that cross both the x and y axes.\n\n• Two annotations must be visible on the time-series plot: one marking the local maximum (peak) with an arrow in a dark green style and labeled with “Peak Value: <value>”, and another marking the local minimum (valley) with an arrow in a dark red style labeled “Valley: <value>”.\n\n• A legend must be present for the time-series plot that displays the label “Value Over Time”, and the legend should include a bordered frame and a shadow effect.\n\n• There must be a text box displayed on the right side of the time-series plot containing summary statistics (Mean, Std Dev, Max, and Min) with a light yellow background and rounded border.\n\n• A distinct section header labeled “Section 1: Time-Series Analysis” should be positioned at the top-left of the time-series plot area in bold text.\n\n• The output must also contain a horizontal bar chart section that features bars corresponding to the categories “Metric A”, “Metric B”, “Metric C”, “Metric D”, and “Metric E”. The bars should be drawn in sky blue with a black edge, and the values must be annotated adjacent to the end of each bar.\n\n• The horizontal bar chart must include an x-axis labeled “Score” and y-axis labels showing each category in order, with the bars arranged in an inverted vertical order (i.e., highest values at the top).\n\n• A section header reading “Section 2: Summary Metrics Overview” should be displayed at the top-left of the bar chart area in bold text, and additional footer text should be visible at the bottom center stating “Data Visualization Report generated using Matplotlib” along with vertical side text on the left margin describing “Left Margin: Detailed Annotations & Summary”.",
            "task_id": "08XX25",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed at the top of the report?",
                "What is the font style and color of the main title?",
                "How is the time-series line rendered in its plot?",
                "What type of grid lines are shown in the time-series plot?",
                "Which annotations are visible on the time-series plot?",
                "What label and effects does the legend have in the time-series plot?",
                "Where are the summary statistics displayed and what details do they include?",
                "What section header is found in the time-series plot area?",
                "What categories are used in the horizontal bar chart?",
                "What footer and side texts are visible in the bar chart section?"
            ],
            "VQA_answers": [
                "Structured Data Visualization Report",
                "Bold with a navy or dark-colored font",
                "A teal colored line with a visibly thick stroke",
                "Dashed grid lines that cross both the x and y axes",
                "A dark green arrow marking the local maximum labeled 'Peak Value: <value>' and a dark red arrow marking the local minimum labeled 'Valley: <value>'",
                "It displays 'Value Over Time' with a bordered frame and a shadow effect",
                "In a text box on the right side containing Mean, Std Dev, Max, and Min, with a light yellow background and rounded border",
                "Section 1: Time-Series Analysis in bold text at the top-left",
                "Metric A, Metric B, Metric C, Metric D, and Metric E",
                "A footer stating 'Data Visualization Report generated using Matplotlib' at the bottom center, and vertical side text 'Left Margin: Detailed Annotations & Summary' on the left margin"
            ],
            "raw_output_metric": [
                "Structured Data Visualization Report",
                "Time (s)",
                "Value",
                "Peak Value: <value>",
                "Valley: <value>",
                "Value Over Time",
                "Section 1: Time-Series Analysis",
                "Mean",
                "Std Dev",
                "Max",
                "Min",
                "Metric A",
                "Metric B",
                "Metric C",
                "Metric D",
                "Metric E",
                "Score",
                "Section 2: Summary Metrics Overview",
                "Data Visualization Report generated using Matplotlib",
                "Left Margin: Detailed Annotations & Summary"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX25_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# =============================================================================\n#  MATPLOTLIB VISUAL CONVERSION TASK\n# -----------------------------------------------------------------------------\n#  This script demonstrates a multi-section report using Matplotlib.\n#  It uses structured layout, headings, sub-headings, and labels to show\n#  a realistic report with two distinct sections:\n#    1. A Time-Series Line Plot with annotations.\n#    2. A Horizontal Bar Chart displaying summary metrics.\n# =============================================================================\n\n# Generate sample data for time series\nnp.random.seed(42)\ntime = np.arange(0, 100)\ntrend = np.linspace(0, 10, 100)\nnoise = np.random.normal(0, 1, 100)\nseries_data = trend + noise\n\n# Generate sample data for bar chart metrics\ncategories = ['Metric A', 'Metric B', 'Metric C', 'Metric D', 'Metric E']\nvalues = np.random.randint(10, 100, size=len(categories))\n\n# Create the main figure with a specified size\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle(\"Structured Data Visualization Report\", fontsize=18, fontweight=\"bold\", color=\"navy\", y=0.95)\n\n# -----------------------------------------------------------------------------\n# SECTION 1: Time-Series Analysis\n# -----------------------------------------------------------------------------\n# Create subplot for time-series line plot (Top portion of the figure)\nax1 = fig.add_subplot(2, 1, 1)\nax1.plot(time, series_data, label=\"Value Over Time\", color=\"teal\", linewidth=2)\nax1.set_title(\"Section 1: Time-Series Analysis\", fontsize=14, fontweight=\"bold\", loc=\"left\")\nax1.set_xlabel(\"Time (s)\")\nax1.set_ylabel(\"Value\")\nax1.grid(True, which='both', linestyle='--', linewidth=0.5)\n\n# Adding Annotations: Marking Local Maximum and Minimum\nmax_idx = np.argmax(series_data)\nmin_idx = np.argmin(series_data)\nax1.annotate(f'Peak Value: {series_data[max_idx]:.2f}', xy=(time[max_idx], series_data[max_idx]),\n             xytext=(time[max_idx] + 5, series_data[max_idx] + 2),\n             arrowprops=dict(facecolor='black', shrink=0.05), fontsize=10, color='darkgreen')\n\nax1.annotate(f'Valley: {series_data[min_idx]:.2f}', xy=(time[min_idx], series_data[min_idx]),\n             xytext=(time[min_idx] + 5, series_data[min_idx] - 2),\n             arrowprops=dict(facecolor='red', shrink=0.05), fontsize=10, color='darkred')\n\n# Add a legend with a border and shadow\nax1.legend(frameon=True, shadow=True)\n\n# Display a list of summary statistics on the right side\nstats_text = (\n    \"Summary Statistics:\\n\"\n    \"--------------------\\n\"\n    f\"Mean: {np.mean(series_data):.2f}\\n\"\n    f\"Std Dev: {np.std(series_data):.2f}\\n\"\n    f\"Max: {np.max(series_data):.2f}\\n\"\n    f\"Min: {np.min(series_data):.2f}\"\n)\nax1.text(1.02, 0.5, stats_text, transform=ax1.transAxes, fontsize=10, \n         verticalalignment='center', bbox=dict(facecolor='lightyellow', edgecolor='black', boxstyle='round'))\n\n# -----------------------------------------------------------------------------\n# SECTION 2: Summary Metrics\n# -----------------------------------------------------------------------------\n# Create subplot for horizontal bar chart (Bottom portion of the figure)\nax2 = fig.add_subplot(2, 1, 2)\ny_pos = np.arange(len(categories))\nbars = ax2.barh(y_pos, values, color=\"skyblue\", edgecolor=\"black\")\n\nax2.set_title(\"Section 2: Summary Metrics Overview\", fontsize=14, fontweight=\"bold\", loc=\"left\")\nax2.set_xlabel(\"Score\")\nax2.set_yticks(y_pos)\nax2.set_yticklabels(categories)\nax2.invert_yaxis()  # Highest values on top\nax2.grid(True, axis='x', linestyle='--', linewidth=0.5)\n\n# Annotate each bar with its corresponding value\nfor i, bar in enumerate(bars):\n    width = bar.get_width()\n    ax2.text(width + 2, bar.get_y() + bar.get_height()/2,\n             f\"{values[i]}\", va='center', fontsize=10, color='black')\n\n# Additional layout details for visual hierarchy\nfig.text(0.5, 0.02, \"Data Visualization Report generated using Matplotlib\", \n         ha=\"center\", fontsize=10, color=\"dimgray\")\nfig.text(0.01, 0.5, \"Left Margin: Detailed Annotations & Summary\", \n         va=\"center\", rotation=90, fontsize=10, color=\"gray\")\n\n# Adjust layout to prevent overlap and improve visual hierarchy\nplt.subplots_adjust(top=0.88, bottom=0.08, left=0.08, right=0.92, hspace=0.35)\n\n# =============================================================================\n# FINAL RENDERING\n# =============================================================================\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX25_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Structured Data Visualization Report",
                                "Time (s)",
                                "Value",
                                "Peak Value: <value>",
                                "Valley: <value>",
                                "Value Over Time",
                                "Section 1: Time-Series Analysis",
                                "Mean",
                                "Std Dev",
                                "Max",
                                "Min",
                                "Metric A",
                                "Metric B",
                                "Metric C",
                                "Metric D",
                                "Metric E",
                                "Score",
                                "Section 2: Summary Metrics Overview",
                                "Data Visualization Report generated using Matplotlib",
                                "Left Margin: Detailed Annotations & Summary"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX25_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX25_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed at the top of the report?",
                                "What is the font style and color of the main title?",
                                "How is the time-series line rendered in its plot?",
                                "What type of grid lines are shown in the time-series plot?",
                                "Which annotations are visible on the time-series plot?",
                                "What label and effects does the legend have in the time-series plot?",
                                "Where are the summary statistics displayed and what details do they include?",
                                "What section header is found in the time-series plot area?",
                                "What categories are used in the horizontal bar chart?",
                                "What footer and side texts are visible in the bar chart section?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX25_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Structured Data Visualization Report",
                                "Bold with a navy or dark-colored font",
                                "A teal colored line with a visibly thick stroke",
                                "Dashed grid lines that cross both the x and y axes",
                                "A dark green arrow marking the local maximum labeled 'Peak Value: <value>' and a dark red arrow marking the local minimum labeled 'Valley: <value>'",
                                "It displays 'Value Over Time' with a bordered frame and a shadow effect",
                                "In a text box on the right side containing Mean, Std Dev, Max, and Min, with a light yellow background and rounded border",
                                "Section 1: Time-Series Analysis in bold text at the top-left",
                                "Metric A, Metric B, Metric C, Metric D, and Metric E",
                                "A footer stating 'Data Visualization Report generated using Matplotlib' at the bottom center, and vertical side text 'Left Margin: Detailed Annotations & Summary' on the left margin"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n\"\"\"\nMatplotlib Visualization with Structured Layout and Annotations\n-----------------------------------------------------------------\nThis script generates a multi-panel figure using Matplotlib,\ndemonstrating the use of headings, sections, lists, and labeled values.\nThe figure contains four subplots:\n  - Top Left: A scatter plot with annotated sample points.\n  - Top Right: A line chart with labeled axes.\n  - Bottom Left: A bar chart summarizing key metrics.\n  - Bottom Right: A pie chart with a legend.\n\"\"\"\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Set random seed for reproducibility\nnp.random.seed(42)\n\n# ========================\n# Data Generation Section\n# ========================\n# Scatter plot data\nx_scatter = np.random.rand(50) * 100\ny_scatter = np.random.rand(50) * 100\n\n# Line chart data - simulating a time series\ntime = np.linspace(0, 10, 100)\namplitude = np.sin(time) * 10 + np.linspace(0, 5, 100)\n\n# Bar chart data - key metrics\nmetrics = ['Metric A', 'Metric B', 'Metric C', 'Metric D']\nvalues = [23, 17, 35, 29]\n\n# Pie chart data - distribution\npie_labels = ['Category 1', 'Category 2', 'Category 3', 'Category 4']\npie_sizes = [15, 30, 45, 10]\n\n# ================================\n# Figure and Subplot Initialization\n# ================================\nfig, axs = plt.subplots(2, 2, figsize=(14, 10))\nfig.suptitle(\"Comprehensive Data Visualization Dashboard\", fontsize=16, fontweight='bold')\n\n# -------------------------------\n# Top Left: Scatter Plot Section\n# -------------------------------\nax1 = axs[0, 0]\nax1.scatter(x_scatter, y_scatter, c='teal', marker='o', edgecolor='black', s=50, alpha=0.7)\nax1.set_title(\"Scatter Plot: Random Samples\", fontsize=12, fontweight='bold')\nax1.set_xlabel(\"X Value\")\nax1.set_ylabel(\"Y Value\")\n# Annotate a few points with labeled values\nfor i in range(0, 50, 10):\n    label = f\"({x_scatter[i]:.1f}, {y_scatter[i]:.1f})\"\n    ax1.annotate(label, (x_scatter[i], y_scatter[i]), textcoords=\"offset points\", xytext=(5,5), fontsize=8)\n\n# Add a descriptive text box with bullet list of observations\ntextstr = \"Observations:\\n• Data clustered in mid-range\\n• Outlier at high X\\n• Uniform distribution\"\nprops = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\nax1.text(0.05, 0.95, textstr, transform=ax1.transAxes, fontsize=9,\n         verticalalignment='top', bbox=props)\n\n# ----------------------------\n# Top Right: Line Chart Section\n# ----------------------------\nax2 = axs[0, 1]\nax2.plot(time, amplitude, color='navy', linewidth=2, linestyle='-', marker='o', markersize=4)\nax2.set_title(\"Time Series: Amplitude over Time\", fontsize=12, fontweight='bold')\nax2.set_xlabel(\"Time (seconds)\")\nax2.set_ylabel(\"Amplitude\")\n# Highlight min and max points\nmax_idx = np.argmax(amplitude)\nmin_idx = np.argmin(amplitude)\nax2.plot(time[max_idx], amplitude[max_idx], marker='^', color='red', markersize=10, label='Max Value')\nax2.plot(time[min_idx], amplitude[min_idx], marker='v', color='blue', markersize=10, label='Min Value')\nax2.legend(loc='upper right', fontsize=8)\n\n# ----------------------------\n# Bottom Left: Bar Chart Section\n# ----------------------------\nax3 = axs[1, 0]\nbars = ax3.bar(metrics, values, color=['skyblue', 'salmon', 'limegreen', 'mediumpurple'], edgecolor='black')\nax3.set_title(\"Bar Chart: Key Metrics\", fontsize=12, fontweight='bold')\nax3.set_ylabel(\"Value\")\n# Display exact values on top of bars\nfor bar in bars:\n    height = bar.get_height()\n    ax3.annotate(f'{height}', xy=(bar.get_x() + bar.get_width() / 2, height),\n                 xytext=(0, 3), textcoords=\"offset points\", ha='center', va='bottom', fontsize=9)\n\n# Add a horizontal line for average value\navg_value = np.mean(values)\nax3.axhline(avg_value, color='gray', linestyle='--', linewidth=1)\nax3.text(0.5, avg_value + 1, f'Average: {avg_value:.1f}', color='gray', fontsize=9, ha='center')\n\n# ----------------------------\n# Bottom Right: Pie Chart Section\n# ----------------------------\nax4 = axs[1, 1]\ncolors = ['gold', 'lightcoral', 'lightskyblue', 'lightgreen']\nwedges, texts, autotexts = ax4.pie(pie_sizes, colors=colors, autopct='%1.1f%%', startangle=140)\nax4.set_title(\"Pie Chart: Distribution of Categories\", fontsize=12, fontweight='bold')\n# Add a legend with detailed labels\nlabels_with_values = [f\"{lbl}: {size}\" for lbl, size in zip(pie_labels, pie_sizes)]\nax4.legend(wedges, labels_with_values, title=\"Categories\", loc=\"center left\", bbox_to_anchor=(1, 0, 0.5, 1), fontsize=8)\n\n# ----------------------------\n# Global Annotations\n# ----------------------------\n# Add footer text on the whole figure\nfig.text(0.5, 0.02, \"Generated by Matplotlib Visualization Script\", ha=\"center\", fontsize=10, color=\"gray\")\n\n# ----------------------------\n# Layout Adjustment and Show Plot\n# ----------------------------\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code>",
            "feature_requirements": "• The output must display a 2×2 grid layout, clearly organizing four separate panels (subplots) within a single figure.  \n• A global title reading \"Comprehensive Data Visualization Dashboard\" must appear at the top of the figure, with prominent styling such as increased font size and bold text.  \n• The top left panel must represent a scatter plot titled \"Scatter Plot: Random Samples\" with labeled horizontal and vertical axes (\"X Value\" and \"Y Value\"), and include plotted sample points that are annotated at regular intervals with their coordinate values.  \n• Within the same top left panel, a descriptive text box must be present displaying a bullet list of observations (\"Observations:\" followed by items such as \"Data clustered in mid-range\", \"Outlier at high X\", \"Uniform distribution\").  \n• The top right panel must display a line chart titled \"Time Series: Amplitude over Time\" with axes labeled \"Time (seconds)\" and \"Amplitude\", including markers along the line, and specially highlighted markers for the maximum (triangle up, red) and minimum (triangle down, blue) amplitude points, along with an accompanying legend.  \n• The bottom left panel must contain a bar chart titled \"Bar Chart: Key Metrics\" with the vertical axis labeled \"Value\", showing bars corresponding to categories labeled \"Metric A\", \"Metric B\", \"Metric C\", and \"Metric D\", each adorned with their numerical value displayed on top, and a horizontal line indicating the computed average value annotated with text (e.g., \"Average: 26.0\").  \n• The bottom right panel must illustrate a pie chart titled \"Pie Chart: Distribution of Categories\", with slices representing different categories, each slice labeled with a percentage value, and an external legend detailing category names paired with their corresponding values (e.g., \"Category 1: 15\", etc.).  \n• A footer centered at the bottom of the overall figure must include the text \"Generated by Matplotlib Visualization Script\".",
            "task_id": "08XX26",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the global title displayed at the top of the figure?",
                "How many panels are arranged in the grid layout?",
                "What is the title of the top left panel (scatter plot)?",
                "What bullet points are shown in the descriptive text box in the scatter plot panel?",
                "What are the axes labels in the top right panel (line chart)?",
                "How are the maximum and minimum amplitude points highlighted in the line chart?",
                "What does the footer at the bottom of the figure say?"
            ],
            "VQA_answers": [
                "Comprehensive Data Visualization Dashboard",
                "4",
                "Scatter Plot: Random Samples",
                "Data clustered in mid-range, Outlier at high X, Uniform distribution",
                "Time (seconds) and Amplitude",
                "Maximum is marked with a red triangle up and minimum with a blue triangle down",
                "Generated by Matplotlib Visualization Script"
            ],
            "raw_output_metric": [
                "Comprehensive Data Visualization Dashboard",
                "Scatter Plot: Random Samples",
                "X Value",
                "Y Value",
                "Observations:",
                "Data clustered in mid-range",
                "Outlier at high X",
                "Uniform distribution",
                "Time Series: Amplitude over Time",
                "Time (seconds)",
                "Amplitude",
                "triangle up",
                "red",
                "triangle down",
                "blue",
                "Bar Chart: Key Metrics",
                "Value",
                "Metric A",
                "Metric B",
                "Metric C",
                "Metric D",
                "Average: 26.0",
                "Pie Chart: Distribution of Categories",
                "Category 1: 15",
                "Generated by Matplotlib Visualization Script"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX26_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n\"\"\"\nMatplotlib Visualization with Structured Layout and Annotations\n-----------------------------------------------------------------\nThis script generates a multi-panel figure using Matplotlib,\ndemonstrating the use of headings, sections, lists, and labeled values.\nThe figure contains four subplots:\n  - Top Left: A scatter plot with annotated sample points.\n  - Top Right: A line chart with labeled axes.\n  - Bottom Left: A bar chart summarizing key metrics.\n  - Bottom Right: A pie chart with a legend.\n\"\"\"\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Set random seed for reproducibility\nnp.random.seed(42)\n\n# ========================\n# Data Generation Section\n# ========================\n# Scatter plot data\nx_scatter = np.random.rand(50) * 100\ny_scatter = np.random.rand(50) * 100\n\n# Line chart data - simulating a time series\ntime = np.linspace(0, 10, 100)\namplitude = np.sin(time) * 10 + np.linspace(0, 5, 100)\n\n# Bar chart data - key metrics\nmetrics = ['Metric A', 'Metric B', 'Metric C', 'Metric D']\nvalues = [23, 17, 35, 29]\n\n# Pie chart data - distribution\npie_labels = ['Category 1', 'Category 2', 'Category 3', 'Category 4']\npie_sizes = [15, 30, 45, 10]\n\n# ================================\n# Figure and Subplot Initialization\n# ================================\nfig, axs = plt.subplots(2, 2, figsize=(14, 10))\nfig.suptitle(\"Comprehensive Data Visualization Dashboard\", fontsize=16, fontweight='bold')\n\n# -------------------------------\n# Top Left: Scatter Plot Section\n# -------------------------------\nax1 = axs[0, 0]\nax1.scatter(x_scatter, y_scatter, c='teal', marker='o', edgecolor='black', s=50, alpha=0.7)\nax1.set_title(\"Scatter Plot: Random Samples\", fontsize=12, fontweight='bold')\nax1.set_xlabel(\"X Value\")\nax1.set_ylabel(\"Y Value\")\n# Annotate a few points with labeled values\nfor i in range(0, 50, 10):\n    label = f\"({x_scatter[i]:.1f}, {y_scatter[i]:.1f})\"\n    ax1.annotate(label, (x_scatter[i], y_scatter[i]), textcoords=\"offset points\", xytext=(5,5), fontsize=8)\n\n# Add a descriptive text box with bullet list of observations\ntextstr = \"Observations:\\n• Data clustered in mid-range\\n• Outlier at high X\\n• Uniform distribution\"\nprops = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\nax1.text(0.05, 0.95, textstr, transform=ax1.transAxes, fontsize=9,\n         verticalalignment='top', bbox=props)\n\n# ----------------------------\n# Top Right: Line Chart Section\n# ----------------------------\nax2 = axs[0, 1]\nax2.plot(time, amplitude, color='navy', linewidth=2, linestyle='-', marker='o', markersize=4)\nax2.set_title(\"Time Series: Amplitude over Time\", fontsize=12, fontweight='bold')\nax2.set_xlabel(\"Time (seconds)\")\nax2.set_ylabel(\"Amplitude\")\n# Highlight min and max points\nmax_idx = np.argmax(amplitude)\nmin_idx = np.argmin(amplitude)\nax2.plot(time[max_idx], amplitude[max_idx], marker='^', color='red', markersize=10, label='Max Value')\nax2.plot(time[min_idx], amplitude[min_idx], marker='v', color='blue', markersize=10, label='Min Value')\nax2.legend(loc='upper right', fontsize=8)\n\n# ----------------------------\n# Bottom Left: Bar Chart Section\n# ----------------------------\nax3 = axs[1, 0]\nbars = ax3.bar(metrics, values, color=['skyblue', 'salmon', 'limegreen', 'mediumpurple'], edgecolor='black')\nax3.set_title(\"Bar Chart: Key Metrics\", fontsize=12, fontweight='bold')\nax3.set_ylabel(\"Value\")\n# Display exact values on top of bars\nfor bar in bars:\n    height = bar.get_height()\n    ax3.annotate(f'{height}', xy=(bar.get_x() + bar.get_width() / 2, height),\n                 xytext=(0, 3), textcoords=\"offset points\", ha='center', va='bottom', fontsize=9)\n\n# Add a horizontal line for average value\navg_value = np.mean(values)\nax3.axhline(avg_value, color='gray', linestyle='--', linewidth=1)\nax3.text(0.5, avg_value + 1, f'Average: {avg_value:.1f}', color='gray', fontsize=9, ha='center')\n\n# ----------------------------\n# Bottom Right: Pie Chart Section\n# ----------------------------\nax4 = axs[1, 1]\ncolors = ['gold', 'lightcoral', 'lightskyblue', 'lightgreen']\nwedges, texts, autotexts = ax4.pie(pie_sizes, colors=colors, autopct='%1.1f%%', startangle=140)\nax4.set_title(\"Pie Chart: Distribution of Categories\", fontsize=12, fontweight='bold')\n# Add a legend with detailed labels\nlabels_with_values = [f\"{lbl}: {size}\" for lbl, size in zip(pie_labels, pie_sizes)]\nax4.legend(wedges, labels_with_values, title=\"Categories\", loc=\"center left\", bbox_to_anchor=(1, 0, 0.5, 1), fontsize=8)\n\n# ----------------------------\n# Global Annotations\n# ----------------------------\n# Add footer text on the whole figure\nfig.text(0.5, 0.02, \"Generated by Matplotlib Visualization Script\", ha=\"center\", fontsize=10, color=\"gray\")\n\n# ----------------------------\n# Layout Adjustment and Show Plot\n# ----------------------------\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX26_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization Dashboard",
                                "Scatter Plot: Random Samples",
                                "X Value",
                                "Y Value",
                                "Observations:",
                                "Data clustered in mid-range",
                                "Outlier at high X",
                                "Uniform distribution",
                                "Time Series: Amplitude over Time",
                                "Time (seconds)",
                                "Amplitude",
                                "triangle up",
                                "red",
                                "triangle down",
                                "blue",
                                "Bar Chart: Key Metrics",
                                "Value",
                                "Metric A",
                                "Metric B",
                                "Metric C",
                                "Metric D",
                                "Average: 26.0",
                                "Pie Chart: Distribution of Categories",
                                "Category 1: 15",
                                "Generated by Matplotlib Visualization Script"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX26_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX26_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the global title displayed at the top of the figure?",
                                "How many panels are arranged in the grid layout?",
                                "What is the title of the top left panel (scatter plot)?",
                                "What bullet points are shown in the descriptive text box in the scatter plot panel?",
                                "What are the axes labels in the top right panel (line chart)?",
                                "How are the maximum and minimum amplitude points highlighted in the line chart?",
                                "What does the footer at the bottom of the figure say?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX26_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization Dashboard",
                                "4",
                                "Scatter Plot: Random Samples",
                                "Data clustered in mid-range, Outlier at high X, Uniform distribution",
                                "Time (seconds) and Amplitude",
                                "Maximum is marked with a red triangle up and minimum with a blue triangle down",
                                "Generated by Matplotlib Visualization Script"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef create_comprehensive_visualization():\n    # -----------------------------\n    # Initialize Data & Figure\n    # -----------------------------\n    # Generate x values and corresponding trigonometric functions\n    x = np.linspace(0, 10, 200)\n    sine_values = np.sin(x)\n    cosine_values = np.cos(x)\n    \n    # Sample categorical data for bar chart (Section 4)\n    categories = [\"Category A\", \"Category B\", \"Category C\", \"Category D\"]\n    cat_values = [35, 60, 25, 45]\n\n    # Create main figure and a grid of subplots (2 rows x 2 cols)\n    fig, axs = plt.subplots(2, 2, figsize=(14, 10))\n    fig.suptitle(\"Comprehensive Data Visualization Dashboard\", fontsize=18, fontweight='bold')\n\n    # -----------------------------\n    # Section 1: Sine Function Plot\n    # -----------------------------\n    ax1 = axs[0, 0]\n    ax1.plot(x, sine_values, color='blue', linewidth=2, label='sin(x)')\n    ax1.set_title(\"Section 1: Sine Function Analysis\", fontsize=14, fontweight='bold')\n    ax1.set_xlabel(\"X Values\")\n    ax1.set_ylabel(\"Amplitude\")\n    ax1.grid(True)\n    ax1.legend(loc='upper right')\n    # Adding a heading annotation within the plot\n    ax1.text(0.5, 0.9, \"Heading: Sine Wave Details\",\n             transform=ax1.transAxes, fontsize=10, color='navy', ha='center',\n             bbox=dict(facecolor='wheat', alpha=0.5, boxstyle='round'))\n\n    # -----------------------------\n    # Section 2: Cosine Function Plot\n    # -----------------------------\n    ax2 = axs[0, 1]\n    ax2.plot(x, cosine_values, color='green', linestyle='--', linewidth=2, label='cos(x)')\n    ax2.set_title(\"Section 2: Cosine Function Analysis\", fontsize=14, fontweight='bold')\n    ax2.set_xlabel(\"X Values\")\n    ax2.set_ylabel(\"Amplitude\")\n    ax2.grid(True)\n    ax2.legend(loc='upper right')\n    # Displaying a structured list of labeled values as annotation\n    cosine_info = \"\\n\".join([\n        \"Key Cosine Attributes:\",\n        \" - Amplitude: 1\",\n        \" - Frequency: 1/2π\",\n        \" - Phase Shift: 0\"\n    ])\n    ax2.text(0.05, 0.95, cosine_info, transform=ax2.transAxes,\n             fontsize=9, verticalalignment='top', bbox=dict(facecolor='lightyellow', alpha=0.6))\n\n    # -----------------------------\n    # Section 3: Combined Trigonometric Functions\n    # -----------------------------\n    ax3 = axs[1, 0]\n    ax3.plot(x, sine_values, color='blue', linestyle='-', linewidth=2, label='sin(x)')\n    ax3.plot(x, cosine_values, color='green', linestyle='--', linewidth=2, label='cos(x)')\n    ax3.set_title(\"Section 3: Sine & Cosine Combined\", fontsize=14, fontweight='bold')\n    ax3.set_xlabel(\"X Values\")\n    ax3.set_ylabel(\"Function Values\")\n    ax3.grid(True)\n    ax3.legend(loc='upper right')",
            "feature_requirements": "• The output must depict an overall dashboard with a main title reading \"Comprehensive Data Visualization Dashboard\" prominently displayed above the subplots.  \n• The visualization should be divided into a grid of subplots arranged in 2 rows and 2 columns, with at least three defined sections corresponding to the provided functions.  \n• The first subplot (upper left) must show a blue line representing sin(x) with a clearly labeled curve (\"sin(x)\"), including axis labels (\"X Values\" and \"Amplitude\"), a grid, a legend in the upper right, and an internal text annotation reading \"Heading: Sine Wave Details\" enclosed within a bordered background.  \n• The second subplot (upper right) should display a green dashed line representing cos(x) with its label (\"cos(x)\"), with appropriate axis labels (\"X Values\" and \"Amplitude\"), a grid, and a legend in the upper right, along with a multi-line text annotation that lists cosine attributes (including amplitude, frequency, and phase shift) inside a highlighted text box.  \n• The third subplot (lower left) must combine both function plots: a blue solid line for sin(x) and a green dashed line for cos(x), each with their corresponding labels, axis labels (\"X Values\" and \"Function Values\"), a grid, and a legend indicating which line represents which function.  \n• All textual elements (titles, labels, legends, and annotations) must be clearly legible when rendered, ensuring that font sizes and emphasis (like bold titles) are visually distinct.",
            "task_id": "08XX27",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed at the top of the dashboard?",
                "How many rows and columns are used in the visualization grid?",
                "Which subplot (by position) shows the sin(x) function with a blue line?",
                "What axis labels are used in the first subplot (sin(x))?",
                "What is the internal text annotation in the sin(x) subplot?",
                "Which subplot displays the cos(x) function with a green dashed line and lists cosine attributes?",
                "What details are mentioned in the multi-line text annotation of the cos(x) subplot?",
                "Which subplot combines both sin(x) and cos(x) function plots?",
                "What axis labels are shown in the combined (lower left) subplot?",
                "Where are the legends placed in the sin(x) and cos(x) subplots?"
            ],
            "VQA_answers": [
                "Comprehensive Data Visualization Dashboard",
                "2 rows and 2 columns",
                "Upper left",
                "X Values and Amplitude",
                "Heading: Sine Wave Details",
                "Upper right",
                "Amplitude, frequency, and phase shift",
                "Lower left",
                "X Values and Function Values",
                "Upper right"
            ],
            "raw_output_metric": [
                "Comprehensive Data Visualization Dashboard",
                "sin(x)",
                "cos(x)",
                "X Values",
                "Amplitude",
                "Function Values",
                "Heading: Sine Wave Details",
                "amplitude",
                "frequency",
                "phase shift"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX27_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef create_comprehensive_visualization():\n    # -----------------------------\n    # Initialize Data & Figure\n    # -----------------------------\n    # Generate x values and corresponding trigonometric functions\n    x = np.linspace(0, 10, 200)\n    sine_values = np.sin(x)\n    cosine_values = np.cos(x)\n    \n    # Sample categorical data for bar chart (Section 4)\n    categories = [\"Category A\", \"Category B\", \"Category C\", \"Category D\"]\n    cat_values = [35, 60, 25, 45]\n\n    # Create main figure and a grid of subplots (2 rows x 2 cols)\n    fig, axs = plt.subplots(2, 2, figsize=(14, 10))\n    fig.suptitle(\"Comprehensive Data Visualization Dashboard\", fontsize=18, fontweight='bold')\n\n    # -----------------------------\n    # Section 1: Sine Function Plot\n    # -----------------------------\n    ax1 = axs[0, 0]\n    ax1.plot(x, sine_values, color='blue', linewidth=2, label='sin(x)')\n    ax1.set_title(\"Section 1: Sine Function Analysis\", fontsize=14, fontweight='bold')\n    ax1.set_xlabel(\"X Values\")\n    ax1.set_ylabel(\"Amplitude\")\n    ax1.grid(True)\n    ax1.legend(loc='upper right')\n    # Adding a heading annotation within the plot\n    ax1.text(0.5, 0.9, \"Heading: Sine Wave Details\",\n             transform=ax1.transAxes, fontsize=10, color='navy', ha='center',\n             bbox=dict(facecolor='wheat', alpha=0.5, boxstyle='round'))\n\n    # -----------------------------\n    # Section 2: Cosine Function Plot\n    # -----------------------------\n    ax2 = axs[0, 1]\n    ax2.plot(x, cosine_values, color='green', linestyle='--', linewidth=2, label='cos(x)')\n    ax2.set_title(\"Section 2: Cosine Function Analysis\", fontsize=14, fontweight='bold')\n    ax2.set_xlabel(\"X Values\")\n    ax2.set_ylabel(\"Amplitude\")\n    ax2.grid(True)\n    ax2.legend(loc='upper right')\n    # Displaying a structured list of labeled values as annotation\n    cosine_info = \"\\n\".join([\n        \"Key Cosine Attributes:\",\n        \" - Amplitude: 1\",\n        \" - Frequency: 1/2π\",\n        \" - Phase Shift: 0\"\n    ])\n    ax2.text(0.05, 0.95, cosine_info, transform=ax2.transAxes,\n             fontsize=9, verticalalignment='top', bbox=dict(facecolor='lightyellow', alpha=0.6))\n\n    # -----------------------------\n    # Section 3: Combined Trigonometric Functions\n    # -----------------------------\n    ax3 = axs[1, 0]\n    ax3.plot(x, sine_values, color='blue', linestyle='-', linewidth=2, label='sin(x)')\n    ax3.plot(x, cosine_values, color='green', linestyle='--', linewidth=2, label='cos(x)')\n    ax3.set_title(\"Section 3: Sine & Cosine Combined\", fontsize=14, fontweight='bold')\n    ax3.set_xlabel(\"X Values\")\n    ax3.set_ylabel(\"Function Values\")\n    ax3.grid(True)\n    ax3.legend(loc='upper right')"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX27_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization Dashboard",
                                "sin(x)",
                                "cos(x)",
                                "X Values",
                                "Amplitude",
                                "Function Values",
                                "Heading: Sine Wave Details",
                                "amplitude",
                                "frequency",
                                "phase shift"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX27_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX27_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed at the top of the dashboard?",
                                "How many rows and columns are used in the visualization grid?",
                                "Which subplot (by position) shows the sin(x) function with a blue line?",
                                "What axis labels are used in the first subplot (sin(x))?",
                                "What is the internal text annotation in the sin(x) subplot?",
                                "Which subplot displays the cos(x) function with a green dashed line and lists cosine attributes?",
                                "What details are mentioned in the multi-line text annotation of the cos(x) subplot?",
                                "Which subplot combines both sin(x) and cos(x) function plots?",
                                "What axis labels are shown in the combined (lower left) subplot?",
                                "Where are the legends placed in the sin(x) and cos(x) subplots?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX27_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization Dashboard",
                                "2 rows and 2 columns",
                                "Upper left",
                                "X Values and Amplitude",
                                "Heading: Sine Wave Details",
                                "Upper right",
                                "Amplitude, frequency, and phase shift",
                                "Lower left",
                                "X Values and Function Values",
                                "Upper right"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate sample data for plots\nx = np.linspace(0, 10, 300)\ny = np.sin(x)\ny2 = np.cos(x)\nnp.random.seed(42)\nrandom_data = np.random.rand(10) * 100\n\n# Create a figure with a gridspec layout for multiple sections and plots\nfig = plt.figure(figsize=(12, 14))\ngs = fig.add_gridspec(5, 2, hspace=0.8, wspace=0.4)\n\n# ====================================================\n# TITLE SECTION (Spans top row)\n# ====================================================\nax_title = fig.add_subplot(gs[0, :])\nax_title.axis('off')\ntitle_text = \"Comprehensive Data Report\\n\" + \\\n             \"===========================\\n\" + \\\n             \"This report visualizes computed data and summarizes statistical metrics.\"\nax_title.text(0.5, 0.5, title_text, fontsize=18, fontweight='bold',\n              ha='center', va='center', color='navy')\n\n# ====================================================\n# SECTION 1: Time Series Analysis\n# ====================================================\nax_section1 = fig.add_subplot(gs[1, :])\nax_section1.axis('off')\nsection1_text = (\"Section 1: Time Series Analysis\\n\"\n                 \"-----------------------------------\\n\"\n                 \"• Analysis of sine and cosine behaviors over time.\\n\"\n                 \"• Detecting cyclical patterns and peaks.\\n\"\n                 \"• Applying grid analysis for insight.\\n\")\nax_section1.text(0.02, 0.7, section1_text, fontsize=12, va='center', fontfamily='monospace')\n\n# Plot 1: Sine Wave\nax_plot1 = fig.add_subplot(gs[2, 0])\nax_plot1.plot(x, y, label=\"Sine Wave\", color='blue', linewidth=2)\nax_plot1.set_title(\"Plot 1: Sine Wave\", fontsize=12, fontweight='bold')\nax_plot1.set_xlabel(\"Time\")\nax_plot1.set_ylabel(\"Amplitude\")\nax_plot1.legend(loc=\"upper right\")\nax_plot1.grid(True)\n\n# Plot 2: Cosine Wave\nax_plot2 = fig.add_subplot(gs[2, 1])\nax_plot2.plot(x, y2, label=\"Cosine Wave\", color='green', linestyle='--', linewidth=2)\nax_plot2.set_title(\"Plot 2: Cosine Wave\", fontsize=12, fontweight='bold')\nax_plot2.set_xlabel(\"Time\")\nax_plot2.set_ylabel(\"Amplitude\")\nax_plot2.legend(loc=\"upper right\")\nax_plot2.grid(True)\n\n# ====================================================\n# SECTION 2: Category Analysis\n# ====================================================\nax_section2 = fig.add_subplot(gs[3, :])\nax_section2.axis('off')\nsection2_text = (\"Section 2: Category Analysis\\n\"\n                 \"-------------------------------\\n\"\n                 \"• Comparative metrics for various categories.\\n\"\n                 \"• Visual inspection via bar charts and labeled values.\\n\"\n                 \"• Useful for quick overviews of categorical distributions.\\n\")\nax_section2.text(0.02, 0.7, section2_text, fontsize=12, va='center', fontfamily='monospace')\n\n# Bar Chart: Categorical Data\ncategories = ['Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon']\nvalues = [random_data[i] for i in range(5)]\nax_bar = fig.add_subplot(gs[4, 0])\nbars = ax_bar.bar(categories, values, color='coral', alpha=0.8)\nax_bar.set_title(\"Bar Chart: Sample Categories\", fontsize=12)\nax_bar.set_ylabel(\"Value\")\nax_bar.grid(axis='y', linestyle='--', alpha=0.7)\n# Annotate each bar with its numeric value\nfor bar in bars:\n    height = bar.get_height()\n    ax_bar.text(bar.get_x() + bar.get_width()/2, height + 2, f'{height:.1f}', \n                ha='center', va='bottom', fontsize=10)\n\n# ====================================================\n# STATISTICAL SUMMARY TABLE\n# ====================================================\n# Calculate key statistics\nmax_val = np.max(y)\nmin_val = np.min(y)\navg_val = np.mean(y)\n\n# Create a text box displaying summary statistics in a table-like format\nsummary_text = (\"Statistical Summary:\\n\"\n                \"---------------------\\n\"\n                \" • Maximum Sine Value: {:.2f}\\n\"\n                \" • Minimum Sine Value: {:.2f}\\n\"\n                \" • Average Sine Value: {:.2f}\\n\"\n                \"\\n\"\n                \"Observations:\\",
            "feature_requirements": "• A title section that spans the full width of the output, displaying a centered multiline title with a main headline (\"Comprehensive Data Report\"), a divider (series of equal signs), and descriptive text beneath it.  \n• A distinct \"Section 1: Time Series Analysis\" area presented as a text block with a header and bullet or dash points detailing the analysis of sine and cosine behavior.  \n• A first plot showing a sine wave that includes a title (\"Plot 1: Sine Wave\"), labeled x-axis (\"Time\") and y-axis (\"Amplitude\"), a blue line with a certain thickness, an upper-right positioned legend, and grid lines visible in the background.  \n• A second plot displaying a cosine wave that includes a title (\"Plot 2: Cosine Wave\"), labeled x-axis (\"Time\") and y-axis (\"Amplitude\"), a green dashed line with matching thickness, an upper-right positioned legend, and grid lines rendered in the plot area.  \n• A distinct \"Section 2: Category Analysis\" area presented as a text block with a header and bullet/dashed list items describing the category analysis details.  \n• A bar chart titled \"Bar Chart: Sample Categories\" that presents five distinct categories (\"Alpha\", \"Beta\", \"Gamma\", \"Delta\", \"Epsilon\") as individual bars, with the bars colored in a coral shade and slight transparency; the chart must include a y-axis label (\"Value\"), horizontal gridlines (with dashed style) along the y-axis, and each bar must have its numeric value annotated above it formatted to one decimal place.  \n• A statistical summary section rendered as a text box or table-like text block that clearly displays the maximum, minimum, and average sine values, each formatted to two decimal places, introduced by a header (\"Statistical Summary:\") and separated by a divider line.",
            "task_id": "08XX28",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main headline in the title section?",
                "What divider appears immediately below the main headline?",
                "Which functions are detailed in Section 1: Time Series Analysis?",
                "What is the title and color of the first plot?",
                "How are the axes labeled in the sine wave plot?",
                "What is the style and color used in the cosine wave plot?",
                "Which categories are displayed in the bar chart?",
                "How are the numeric values in the bar chart annotated?",
                "What statistical metrics are summarized in the statistical summary section?"
            ],
            "VQA_answers": [
                "Comprehensive Data Report",
                "A series of equal signs",
                "Sine and cosine",
                "Plot 1: Sine Wave with a blue line",
                "x-axis: Time and y-axis: Amplitude",
                "Green dashed line",
                "Alpha, Beta, Gamma, Delta, Epsilon",
                "Above each bar formatted to one decimal place",
                "Maximum, minimum, and average sine values formatted to two decimal places"
            ],
            "raw_output_metric": [
                "Comprehensive Data Report",
                "====================",
                "Section 1: Time Series Analysis",
                "Plot 1: Sine Wave",
                "Time",
                "Amplitude",
                "blue",
                "upper-right",
                "grid",
                "Plot 2: Cosine Wave",
                "green dashed",
                "Section 2: Category Analysis",
                "Bar Chart: Sample Categories",
                "Alpha",
                "Beta",
                "Gamma",
                "Delta",
                "Epsilon",
                "coral",
                "Value",
                "dashed",
                "Statistical Summary:",
                "Maximum:",
                "Minimum:",
                "Average:"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX28_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate sample data for plots\nx = np.linspace(0, 10, 300)\ny = np.sin(x)\ny2 = np.cos(x)\nnp.random.seed(42)\nrandom_data = np.random.rand(10) * 100\n\n# Create a figure with a gridspec layout for multiple sections and plots\nfig = plt.figure(figsize=(12, 14))\ngs = fig.add_gridspec(5, 2, hspace=0.8, wspace=0.4)\n\n# ====================================================\n# TITLE SECTION (Spans top row)\n# ====================================================\nax_title = fig.add_subplot(gs[0, :])\nax_title.axis('off')\ntitle_text = \"Comprehensive Data Report\\n\" + \\\n             \"===========================\\n\" + \\\n             \"This report visualizes computed data and summarizes statistical metrics.\"\nax_title.text(0.5, 0.5, title_text, fontsize=18, fontweight='bold',\n              ha='center', va='center', color='navy')\n\n# ====================================================\n# SECTION 1: Time Series Analysis\n# ====================================================\nax_section1 = fig.add_subplot(gs[1, :])\nax_section1.axis('off')\nsection1_text = (\"Section 1: Time Series Analysis\\n\"\n                 \"-----------------------------------\\n\"\n                 \"• Analysis of sine and cosine behaviors over time.\\n\"\n                 \"• Detecting cyclical patterns and peaks.\\n\"\n                 \"• Applying grid analysis for insight.\\n\")\nax_section1.text(0.02, 0.7, section1_text, fontsize=12, va='center', fontfamily='monospace')\n\n# Plot 1: Sine Wave\nax_plot1 = fig.add_subplot(gs[2, 0])\nax_plot1.plot(x, y, label=\"Sine Wave\", color='blue', linewidth=2)\nax_plot1.set_title(\"Plot 1: Sine Wave\", fontsize=12, fontweight='bold')\nax_plot1.set_xlabel(\"Time\")\nax_plot1.set_ylabel(\"Amplitude\")\nax_plot1.legend(loc=\"upper right\")\nax_plot1.grid(True)\n\n# Plot 2: Cosine Wave\nax_plot2 = fig.add_subplot(gs[2, 1])\nax_plot2.plot(x, y2, label=\"Cosine Wave\", color='green', linestyle='--', linewidth=2)\nax_plot2.set_title(\"Plot 2: Cosine Wave\", fontsize=12, fontweight='bold')\nax_plot2.set_xlabel(\"Time\")\nax_plot2.set_ylabel(\"Amplitude\")\nax_plot2.legend(loc=\"upper right\")\nax_plot2.grid(True)\n\n# ====================================================\n# SECTION 2: Category Analysis\n# ====================================================\nax_section2 = fig.add_subplot(gs[3, :])\nax_section2.axis('off')\nsection2_text = (\"Section 2: Category Analysis\\n\"\n                 \"-------------------------------\\n\"\n                 \"• Comparative metrics for various categories.\\n\"\n                 \"• Visual inspection via bar charts and labeled values.\\n\"\n                 \"• Useful for quick overviews of categorical distributions.\\n\")\nax_section2.text(0.02, 0.7, section2_text, fontsize=12, va='center', fontfamily='monospace')\n\n# Bar Chart: Categorical Data\ncategories = ['Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon']\nvalues = [random_data[i] for i in range(5)]\nax_bar = fig.add_subplot(gs[4, 0])\nbars = ax_bar.bar(categories, values, color='coral', alpha=0.8)\nax_bar.set_title(\"Bar Chart: Sample Categories\", fontsize=12)\nax_bar.set_ylabel(\"Value\")\nax_bar.grid(axis='y', linestyle='--', alpha=0.7)\n# Annotate each bar with its numeric value\nfor bar in bars:\n    height = bar.get_height()\n    ax_bar.text(bar.get_x() + bar.get_width()/2, height + 2, f'{height:.1f}', \n                ha='center', va='bottom', fontsize=10)\n\n# ====================================================\n# STATISTICAL SUMMARY TABLE\n# ====================================================\n# Calculate key statistics\nmax_val = np.max(y)\nmin_val = np.min(y)\navg_val = np.mean(y)\n\n# Create a text box displaying summary statistics in a table-like format\nsummary_text = (\"Statistical Summary:\\n\"\n                \"---------------------\\n\"\n                \" • Maximum Sine Value: {:.2f}\\n\"\n                \" • Minimum Sine Value: {:.2f}\\n\"\n                \" • Average Sine Value: {:.2f}\\n\"\n                \"\\n\"\n                \"Observations:\\"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX28_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Report",
                                "====================",
                                "Section 1: Time Series Analysis",
                                "Plot 1: Sine Wave",
                                "Time",
                                "Amplitude",
                                "blue",
                                "upper-right",
                                "grid",
                                "Plot 2: Cosine Wave",
                                "green dashed",
                                "Section 2: Category Analysis",
                                "Bar Chart: Sample Categories",
                                "Alpha",
                                "Beta",
                                "Gamma",
                                "Delta",
                                "Epsilon",
                                "coral",
                                "Value",
                                "dashed",
                                "Statistical Summary:",
                                "Maximum:",
                                "Minimum:",
                                "Average:"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX28_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX28_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main headline in the title section?",
                                "What divider appears immediately below the main headline?",
                                "Which functions are detailed in Section 1: Time Series Analysis?",
                                "What is the title and color of the first plot?",
                                "How are the axes labeled in the sine wave plot?",
                                "What is the style and color used in the cosine wave plot?",
                                "Which categories are displayed in the bar chart?",
                                "How are the numeric values in the bar chart annotated?",
                                "What statistical metrics are summarized in the statistical summary section?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX28_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Report",
                                "A series of equal signs",
                                "Sine and cosine",
                                "Plot 1: Sine Wave with a blue line",
                                "x-axis: Time and y-axis: Amplitude",
                                "Green dashed line",
                                "Alpha, Beta, Gamma, Delta, Epsilon",
                                "Above each bar formatted to one decimal place",
                                "Maximum, minimum, and average sine values formatted to two decimal places"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n#!/usr/bin/env python3\n\"\"\"\nMatplotlib Visualization Layout Example\n==========================================\n\nThis script demonstrates a complex visualization layout using Matplotlib.\nThe figure includes multiple sections, such as titles, headings, labeled plots,\nand data annotations, designed for a visual conversion task. \n\nSections:\n----------\n1. Data Overview: Generation and statistical summary of sample data.\n2. Main Plot: A central plot with annotations and labeled values.\n3. Sub-Plots: Detailed views with headings and lists.\n4. Footer: Concluding notes.\n\nUsage:\n    Run this script directly to display the figure.\n\nAuthor: OpenAI Assistant\nDate: 2023-10-xx\n\"\"\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.gridspec import GridSpec\n\n# ----------------------------------\n# Section 1: Data Overview\n# ----------------------------------\nnp.random.seed(42)\n# Generate sample data for demonstration\nx = np.linspace(0, 10, 100)\ny_main = np.sin(x) + np.random.normal(scale=0.2, size=x.shape)\ny_sub1 = np.cos(x) + np.random.normal(scale=0.3, size=x.shape)\ny_sub2 = np.sin(2*x) + np.random.normal(scale=0.15, size=x.shape)\n\n# Compute basic statistics for annotation\nmean_main = np.mean(y_main)\nstd_main = np.std(y_main)\nmean_sub1 = np.mean(y_sub1)\nstd_sub1 = np.std(y_sub1)\nmean_sub2 = np.mean(y_sub2)\nstd_sub2 = np.std(y_sub2)\n\n# ----------------------------------\n# Section 2: Create Figure and Grid Layout\n# ----------------------------------\nfig = plt.figure(figsize=(12, 10))\ngs = GridSpec(3, 2, figure=fig, height_ratios=[1, 3, 1], width_ratios=[1, 1], hspace=0.4, wspace=0.3)\n\n# Main Title for the whole figure\nfig.suptitle(\"Comprehensive Data Visualization Report\", fontsize=18, fontweight='bold')\n\n# ----------------------------------\n# Section 3: Main Plot with Annotations\n# ----------------------------------\nax_main = fig.add_subplot(gs[1, :])\nax_main.plot(x, y_main, color='blue', lw=2, label='Main Data (Sin + Noise)')\nax_main.set_title(\"Main Plot: Sine Wave with Noise\", fontsize=14, fontweight='bold', pad=10)\nax_main.set_xlabel(\"X-Axis Value\", fontsize=12)\nax_main.set_ylabel(\"Y-Axis Value\", fontsize=12)\nax_main.legend(loc='upper right')\n\n# Add annotation box in main plot\ntextstr = '\\n'.join((\n    \"Statistical Summary:\",\n    f\"Mean: {mean_main:.2f}\",\n    f\"Std Dev: {std_main:.2f}\",\n    \"\",\n    \"Key Observation:\",\n    \"- Variability is moderate.\"))\nprops = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\nax_main.text(0.05, 0.95, textstr, transform=ax_main.transAxes, fontsize=10,\n             verticalalignment='top', bbox=props)\n\n# ----------------------------------\n# Section 4: Sub-Plots with Detailed Sections & Lists\n# ----------------------------------\n\n# Subplot 1: Cosine Data Analysis\nax_sub1 = fig.add_subplot(gs[2, 0])\nax_sub1.plot(x, y_sub1, color='green', lw=2, marker='o', markersize=3, label='Cosine Data')\nax_sub1.set_title(\"Section A: Cosine Data Analysis\", fontsize=12, fontweight='bold')\nax_sub1.set_xlabel(\"X Value\", fontsize=10)\nax_sub1.set_ylabel(\"Cos(X) + Noise\", fontsize=10)\nax_sub1.grid(True, linestyle='--', alpha=0.6)\nax_sub1.legend(loc='lower left')\n\n# Add bullet list inside subplot 1 using text\nlist_text = (\"Key Points:\\n\"\n             \"• Data exhibits periodic behavior\\n\"\n             \"• Noise level estimated\\n\"\n             f\"• Mean: {mean_sub1:.2f}\\n\"\n             f\"• Std: {std_sub1:.2f}\")\nax_sub1.text(0.05, 0.65, list_text, transform=ax_sub1.transAxes,\n             fontsize=9, verticalalignment='top', bbox=dict(boxstyle=\"round\", facecolor=\"lavender\", alpha=0.7))\n\n# Subplot 2: Double Frequency Sine Analysis\nax_sub2 = fig.add_subplot(gs[2, 1])\nax_sub2.plot(x, y_sub2, color='red', lw=2, marker='s', markersize=3, label='Double Frequency Sine')\nax_sub2.set_title(\"Section B: Double Frequency Sine Analysis\", fontsize=12, fontweight='bold')\nax_sub2.set_xlabel(\"X Value\", fontsize=10)\nax_sub2.set_ylabel(\"Sin(2x) + Noise\", fontsize=10)\nax_sub2.grid(True, linestyle='--', alpha=0.6)\nax_sub2.legend(loc='upper right')\n\n# Annotate subplot 2 with labeled values\nannotation_text = (\"Analysis Results:\\n\"\n                   \"- Peaks detected\\n\"\n                   f\"- Avg Value: {mean_sub2:.2f}\\n\"\n                   f\"- Variance: {np.var(y_sub2):.2f}\")\nax_sub2.annotate(annotation_text, xy=(0.5, 0.5), xycoords='axes fraction',\n                 fontsize=9, bbox=dict(boxstyle=\"round,pad=0.5\", fc=\"lightyellow\", alpha=0.8))\n\n# ----------------------------------\n# Section 5: Footer Note (Additional Information)\n# ----------------------------------\nfooter_ax = fig.add_subplot(gs[0, :])\nfooter_ax.axis('off')  # Hide axes for footer area\nfooter_text = (\"Report Footer:\\n\"\n               \"---------------------\\n\"\n               \"This report is generated for testing visual conversion tasks.\\n\"\n               \"It demonstrates the use of headings, sections, labeled values, and lists.\\n\"\n               \"Ensure that the structural layout and content formatting are maintained.\")\nfooter_ax.text(0.5, 0.5, footer_text, fontsize=10, ha='center', va='center', \n               bbox=dict(boxstyle=\"round\", facecolor=\"lightblue\", alpha=0.3))\n\n# ----------------------------------\n# Finalize Layout and Render the Figure\n# ----------------------------------\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\n</code>",
            "feature_requirements": "• The output must display an overall title at the top stating \"Comprehensive Data Visualization Report\" in a prominent, bold style.  \n• A central (main) plot must be rendered with a curve representing a sine wave with noise, including a title \"Main Plot: Sine Wave with Noise\", labeled X-axis (\"X-Axis Value\") and Y-axis (\"Y-Axis Value\"), and a legend identifying the curve as \"Main Data (Sin + Noise)\".  \n• Within the main plot, an annotation box must be visible containing a multiline statistical summary with entries for the mean and standard deviation (formatted to two decimals) and a key observation note stating \"Variability is moderate.\"  \n• Two subplots must be included: one for cosine data and one for a double frequency sine analysis.  \n• The first subplot (for cosine data) must display a curve with markers, include a title \"Section A: Cosine Data Analysis\", axis labels (\"X Value\" for the X-axis and \"Cos(X) + Noise\" for the Y-axis), a legend \"Cosine Data\", and a text area featuring a bullet list with key points such as periodic behavior, noise estimation, mean value, and standard deviation.  \n• The second subplot (for double frequency sine analysis) must display a curve with square markers, include a title \"Section B: Double Frequency Sine Analysis\", axis labels (\"X Value\" for the X-axis and \"Sin(2x) + Noise\" for the Y-axis), a legend \"Double Frequency Sine\", and an annotation detailing analysis results with entries such as average value and variance (values formatted to two decimals).  \n• A footer section must be rendered, distinct from the plots, featuring the text \"Report Footer:\" followed by a divider line and explanatory text describing the purpose and nature of the report, all presented in a non-graphical, text-only area.  \n• The overall layout must mirror the original grid structure, clearly organizing the footer, main plot, and subplots in distinct, well-proportioned sections.",
            "task_id": "08XX29",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall title displayed at the top of the report?",
                "What is the title of the main plot?",
                "What are the X-axis and Y-axis labels in the main plot?",
                "What legend entry identifies the main plot's curve?",
                "What details are contained in the annotation box within the main plot?",
                "How many subplots are included and what are their respective topics?",
                "What title and legend are used for the first subplot (cosine data)?",
                "What features are included in the first subplot besides the curve itself?",
                "What title and legend are used for the second subplot (double frequency sine analysis) and what marker style does it use?",
                "What elements are included in the footer section of the report?"
            ],
            "VQA_answers": [
                "Comprehensive Data Visualization Report",
                "Main Plot: Sine Wave with Noise",
                "X-Axis Value and Y-Axis Value",
                "Main Data (Sin + Noise)",
                "A multiline statistical summary with mean, standard deviation (formatted to two decimals), and the key note 'Variability is moderate.'",
                "Two subplots: one for cosine data analysis and one for double frequency sine analysis",
                "Title: Section A: Cosine Data Analysis; Legend: Cosine Data",
                "Markers on the curve and a text area with a bullet list of key points including periodic behavior, noise estimation, mean value, and standard deviation",
                "Title: Section B: Double Frequency Sine Analysis; Legend: Double Frequency Sine; uses square markers",
                "It displays the text 'Report Footer:' followed by a divider line and explanatory text describing the purpose and nature of the report in a non-graphical text-only area"
            ],
            "raw_output_metric": [
                "Comprehensive Data Visualization Report",
                "Main Plot: Sine Wave with Noise",
                "X-Axis Value",
                "Y-Axis Value",
                "Main Data (Sin + Noise)",
                "Variability is moderate.",
                "Section A: Cosine Data Analysis",
                "X Value",
                "Cos(X) + Noise",
                "Cosine Data",
                "periodic behavior",
                "noise estimation",
                "mean value",
                "standard deviation",
                "Section B: Double Frequency Sine Analysis",
                "X Value",
                "Sin(2x) + Noise",
                "Double Frequency Sine",
                "average value",
                "variance",
                "Report Footer:"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX29_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n#!/usr/bin/env python3\n\"\"\"\nMatplotlib Visualization Layout Example\n==========================================\n\nThis script demonstrates a complex visualization layout using Matplotlib.\nThe figure includes multiple sections, such as titles, headings, labeled plots,\nand data annotations, designed for a visual conversion task. \n\nSections:\n----------\n1. Data Overview: Generation and statistical summary of sample data.\n2. Main Plot: A central plot with annotations and labeled values.\n3. Sub-Plots: Detailed views with headings and lists.\n4. Footer: Concluding notes.\n\nUsage:\n    Run this script directly to display the figure.\n\nAuthor: OpenAI Assistant\nDate: 2023-10-xx\n\"\"\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.gridspec import GridSpec\n\n# ----------------------------------\n# Section 1: Data Overview\n# ----------------------------------\nnp.random.seed(42)\n# Generate sample data for demonstration\nx = np.linspace(0, 10, 100)\ny_main = np.sin(x) + np.random.normal(scale=0.2, size=x.shape)\ny_sub1 = np.cos(x) + np.random.normal(scale=0.3, size=x.shape)\ny_sub2 = np.sin(2*x) + np.random.normal(scale=0.15, size=x.shape)\n\n# Compute basic statistics for annotation\nmean_main = np.mean(y_main)\nstd_main = np.std(y_main)\nmean_sub1 = np.mean(y_sub1)\nstd_sub1 = np.std(y_sub1)\nmean_sub2 = np.mean(y_sub2)\nstd_sub2 = np.std(y_sub2)\n\n# ----------------------------------\n# Section 2: Create Figure and Grid Layout\n# ----------------------------------\nfig = plt.figure(figsize=(12, 10))\ngs = GridSpec(3, 2, figure=fig, height_ratios=[1, 3, 1], width_ratios=[1, 1], hspace=0.4, wspace=0.3)\n\n# Main Title for the whole figure\nfig.suptitle(\"Comprehensive Data Visualization Report\", fontsize=18, fontweight='bold')\n\n# ----------------------------------\n# Section 3: Main Plot with Annotations\n# ----------------------------------\nax_main = fig.add_subplot(gs[1, :])\nax_main.plot(x, y_main, color='blue', lw=2, label='Main Data (Sin + Noise)')\nax_main.set_title(\"Main Plot: Sine Wave with Noise\", fontsize=14, fontweight='bold', pad=10)\nax_main.set_xlabel(\"X-Axis Value\", fontsize=12)\nax_main.set_ylabel(\"Y-Axis Value\", fontsize=12)\nax_main.legend(loc='upper right')\n\n# Add annotation box in main plot\ntextstr = '\\n'.join((\n    \"Statistical Summary:\",\n    f\"Mean: {mean_main:.2f}\",\n    f\"Std Dev: {std_main:.2f}\",\n    \"\",\n    \"Key Observation:\",\n    \"- Variability is moderate.\"))\nprops = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\nax_main.text(0.05, 0.95, textstr, transform=ax_main.transAxes, fontsize=10,\n             verticalalignment='top', bbox=props)\n\n# ----------------------------------\n# Section 4: Sub-Plots with Detailed Sections & Lists\n# ----------------------------------\n\n# Subplot 1: Cosine Data Analysis\nax_sub1 = fig.add_subplot(gs[2, 0])\nax_sub1.plot(x, y_sub1, color='green', lw=2, marker='o', markersize=3, label='Cosine Data')\nax_sub1.set_title(\"Section A: Cosine Data Analysis\", fontsize=12, fontweight='bold')\nax_sub1.set_xlabel(\"X Value\", fontsize=10)\nax_sub1.set_ylabel(\"Cos(X) + Noise\", fontsize=10)\nax_sub1.grid(True, linestyle='--', alpha=0.6)\nax_sub1.legend(loc='lower left')\n\n# Add bullet list inside subplot 1 using text\nlist_text = (\"Key Points:\\n\"\n             \"• Data exhibits periodic behavior\\n\"\n             \"• Noise level estimated\\n\"\n             f\"• Mean: {mean_sub1:.2f}\\n\"\n             f\"• Std: {std_sub1:.2f}\")\nax_sub1.text(0.05, 0.65, list_text, transform=ax_sub1.transAxes,\n             fontsize=9, verticalalignment='top', bbox=dict(boxstyle=\"round\", facecolor=\"lavender\", alpha=0.7))\n\n# Subplot 2: Double Frequency Sine Analysis\nax_sub2 = fig.add_subplot(gs[2, 1])\nax_sub2.plot(x, y_sub2, color='red', lw=2, marker='s', markersize=3, label='Double Frequency Sine')\nax_sub2.set_title(\"Section B: Double Frequency Sine Analysis\", fontsize=12, fontweight='bold')\nax_sub2.set_xlabel(\"X Value\", fontsize=10)\nax_sub2.set_ylabel(\"Sin(2x) + Noise\", fontsize=10)\nax_sub2.grid(True, linestyle='--', alpha=0.6)\nax_sub2.legend(loc='upper right')\n\n# Annotate subplot 2 with labeled values\nannotation_text = (\"Analysis Results:\\n\"\n                   \"- Peaks detected\\n\"\n                   f\"- Avg Value: {mean_sub2:.2f}\\n\"\n                   f\"- Variance: {np.var(y_sub2):.2f}\")\nax_sub2.annotate(annotation_text, xy=(0.5, 0.5), xycoords='axes fraction',\n                 fontsize=9, bbox=dict(boxstyle=\"round,pad=0.5\", fc=\"lightyellow\", alpha=0.8))\n\n# ----------------------------------\n# Section 5: Footer Note (Additional Information)\n# ----------------------------------\nfooter_ax = fig.add_subplot(gs[0, :])\nfooter_ax.axis('off')  # Hide axes for footer area\nfooter_text = (\"Report Footer:\\n\"\n               \"---------------------\\n\"\n               \"This report is generated for testing visual conversion tasks.\\n\"\n               \"It demonstrates the use of headings, sections, labeled values, and lists.\\n\"\n               \"Ensure that the structural layout and content formatting are maintained.\")\nfooter_ax.text(0.5, 0.5, footer_text, fontsize=10, ha='center', va='center', \n               bbox=dict(boxstyle=\"round\", facecolor=\"lightblue\", alpha=0.3))\n\n# ----------------------------------\n# Finalize Layout and Render the Figure\n# ----------------------------------\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX29_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization Report",
                                "Main Plot: Sine Wave with Noise",
                                "X-Axis Value",
                                "Y-Axis Value",
                                "Main Data (Sin + Noise)",
                                "Variability is moderate.",
                                "Section A: Cosine Data Analysis",
                                "X Value",
                                "Cos(X) + Noise",
                                "Cosine Data",
                                "periodic behavior",
                                "noise estimation",
                                "mean value",
                                "standard deviation",
                                "Section B: Double Frequency Sine Analysis",
                                "X Value",
                                "Sin(2x) + Noise",
                                "Double Frequency Sine",
                                "average value",
                                "variance",
                                "Report Footer:"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX29_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX29_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall title displayed at the top of the report?",
                                "What is the title of the main plot?",
                                "What are the X-axis and Y-axis labels in the main plot?",
                                "What legend entry identifies the main plot's curve?",
                                "What details are contained in the annotation box within the main plot?",
                                "How many subplots are included and what are their respective topics?",
                                "What title and legend are used for the first subplot (cosine data)?",
                                "What features are included in the first subplot besides the curve itself?",
                                "What title and legend are used for the second subplot (double frequency sine analysis) and what marker style does it use?",
                                "What elements are included in the footer section of the report?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX29_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization Report",
                                "Main Plot: Sine Wave with Noise",
                                "X-Axis Value and Y-Axis Value",
                                "Main Data (Sin + Noise)",
                                "A multiline statistical summary with mean, standard deviation (formatted to two decimals), and the key note 'Variability is moderate.'",
                                "Two subplots: one for cosine data analysis and one for double frequency sine analysis",
                                "Title: Section A: Cosine Data Analysis; Legend: Cosine Data",
                                "Markers on the curve and a text area with a bullet list of key points including periodic behavior, noise estimation, mean value, and standard deviation",
                                "Title: Section B: Double Frequency Sine Analysis; Legend: Double Frequency Sine; uses square markers",
                                "It displays the text 'Report Footer:' followed by a divider line and explanatory text describing the purpose and nature of the report in a non-graphical text-only area"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef generate_main_plot():\n    # Generate sample data\n    x = np.linspace(0, 10, 400)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n    y_diff = y_sin - y_cos\n\n    # Create a figure with two subplots: an Overview and a Detailed Analysis\n    fig, axs = plt.subplots(2, 1, figsize=(10, 12))\n    \n    # ---------------------------\n    # Section 1: Overview\n    # ---------------------------\n    axs[0].plot(x, y_sin, label='Sine Wave', color='blue', linewidth=2)\n    axs[0].plot(x, y_cos, label='Cosine Wave', color='red', linewidth=2)\n    axs[0].set_title('Section 1: Overview', fontsize=16, fontweight='bold')\n    axs[0].set_xlabel('Time (s)', fontsize=12)\n    axs[0].set_ylabel('Amplitude', fontsize=12)\n    axs[0].legend(loc='upper right')\n    axs[0].grid(True, linestyle='--', alpha=0.7)\n    \n    # Add annotations with structured layout info\n    annotation_text = (\n        \"Key Features:\\n\"\n        \" - Sine peaks at π/2\\n\"\n        \" - Cosine troughs at π\\n\"\n        \" - Both functions are periodic\\n\"\n    )\n    axs[0].text(2, 0.9, annotation_text, fontsize=10, \n                bbox=dict(facecolor='white', alpha=0.6), \n                verticalalignment='top')\n\n    # ---------------------------\n    # Section 2: Detailed Analysis\n    # ---------------------------\n    axs[1].plot(x, y_diff, label='Sine - Cosine', color='green', linewidth=2)\n    axs[1].set_title('Section 2: Detailed Analysis', fontsize=16, fontweight='bold')\n    axs[1].set_xlabel('Time (s)', fontsize=12)\n    axs[1].set_ylabel('Difference', fontsize=12)\n    axs[1].legend(loc='upper right')\n    axs[1].grid(True, linestyle='--', alpha=0.7)\n    \n    # Add a block of text as a multi-line list with labeled analysis points\n    detailed_analysis = (\n        \"Analysis Report:\\n\"\n        \"1. Wave Behavior:\\n\"\n        \"   - Periodic oscillation observed\\n\"\n        \"   - Amplitude variations consistent\\n\"\n        \"2. Phase Differences:\\n\"\n        \"   - Phase shift of ~π/2 between sine and cosine\\n\"\n        \"   - Critical zero crossings when combined are evident\\n\"\n        \"3. Additional Observations:\\n\"\n        \"   - Symmetry in sine and cosine functions\\n\"\n        \"   - Difference plot highlights contrast\\n\"\n    )\n    axs[1].text(0.5, -2.5, detailed_analysis, fontsize=10, transform=axs[1].transData, \n                bbox=dict(facecolor='lightgrey', alpha=0.4))\n\n    # ---------------------------\n    # Overall Figure Title and Additional Labeled Info\n    # ---------------------------\n    fig.suptitle('Matplotlib Visualization Layout\\nDetailed and Annotated Analysis Report', \n                 fontsize=18, fontweight='bold')\n    \n    # Insert a labeled value block as a side-note using figure text\n    layout_info = (\n        \"Layout Info:\\n\"\n        \" - Sections: 2\\n\"\n        \" - Plots: Overview & Detailed\\n\"\n        \" - Annotations: Multiple (Text Blocks)\\n\"\n        \" - Data Points: 400 (per plot)\\n\"\n        \" - Title: Detailed Analysis Report\"\n    )\n    plt.gcf().text(0.75, 0.15, layout_info, fontsize=10, \n                   bbox=dict(boxstyle='round',",
            "feature_requirements": "• The output must depict two vertically arranged plot areas corresponding to an \"Overview\" and a \"Detailed Analysis\" section.\n• The upper plot (Overview) must display two curves: a blue \"Sine Wave\" and a red \"Cosine Wave\" with a visible legend identifying each curve.\n• The lower plot (Detailed Analysis) must display a green curve labeled \"Sine - Cosine\" with its corresponding legend displayed in the upper right.\n• Both plots must include x-axis and y-axis labels with the text \"Time (s)\" for the x-axis; the upper plot’s y-axis should be labeled \"Amplitude\" and the lower plot’s y-axis labeled \"Difference.\"\n• Each plot must show gridlines styled as dashed lines with a level of transparency that makes them visibly lighter than the plotted curves.\n• The upper plot must include an annotation text box that contains a multi-line text block starting with \"Key Features:\" and listing specific sine and cosine characteristics.\n• The lower plot must include a multi-line text box containing an \"Analysis Report:\" with numbered sub-points describing wave behavior, phase differences, and additional observations.\n• The overall figure must feature a prominent title at the top with the text \"Matplotlib Visualization Layout\" followed by additional description, rendered clearly.\n• A separate side-note or additional labeled text block must be present on the overall figure, listing layout information such as the number of sections, plots, annotations, data points, and title details.",
            "task_id": "08XX30",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall figure title?",
                "How many plot areas are displayed in the figure?",
                "What are the names of the two vertical plot sections?",
                "What curves and their colors are shown in the Overview plot?",
                "What are the x-axis and y-axis labels in the Overview plot?",
                "What curve is displayed in the Detailed Analysis plot and what is its color?",
                "Where is the legend located in the Detailed Analysis plot?",
                "What is the style of the gridlines in both plots?",
                "What annotation is included in the Overview plot?",
                "What annotation is included in the Detailed Analysis plot?",
                "What additional labeled text block is present on the overall figure?"
            ],
            "VQA_answers": [
                "Matplotlib Visualization Layout with additional description",
                "2",
                "Overview and Detailed Analysis",
                "Blue Sine Wave and Red Cosine Wave",
                "x-axis: Time (s), y-axis: Amplitude",
                "Green curve labeled 'Sine - Cosine'",
                "Upper right",
                "Dashed lines with lighter transparency",
                "A multi-line text box starting with 'Key Features:' listing sine and cosine characteristics",
                "A multi-line text box with 'Analysis Report:' and numbered sub-points describing wave behavior, phase differences, and additional observations",
                "A side-note listing layout information such as the number of sections, plots, annotations, data points, and title details"
            ],
            "raw_output_metric": [
                "Matplotlib Visualization Layout",
                "Overview",
                "Detailed Analysis",
                "Sine Wave",
                "Cosine Wave",
                "Sine - Cosine",
                "Time (s)",
                "Amplitude",
                "Difference",
                "Key Features:",
                "Analysis Report:",
                "blue",
                "red",
                "green",
                "dashed",
                "legend"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX30_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef generate_main_plot():\n    # Generate sample data\n    x = np.linspace(0, 10, 400)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n    y_diff = y_sin - y_cos\n\n    # Create a figure with two subplots: an Overview and a Detailed Analysis\n    fig, axs = plt.subplots(2, 1, figsize=(10, 12))\n    \n    # ---------------------------\n    # Section 1: Overview\n    # ---------------------------\n    axs[0].plot(x, y_sin, label='Sine Wave', color='blue', linewidth=2)\n    axs[0].plot(x, y_cos, label='Cosine Wave', color='red', linewidth=2)\n    axs[0].set_title('Section 1: Overview', fontsize=16, fontweight='bold')\n    axs[0].set_xlabel('Time (s)', fontsize=12)\n    axs[0].set_ylabel('Amplitude', fontsize=12)\n    axs[0].legend(loc='upper right')\n    axs[0].grid(True, linestyle='--', alpha=0.7)\n    \n    # Add annotations with structured layout info\n    annotation_text = (\n        \"Key Features:\\n\"\n        \" - Sine peaks at π/2\\n\"\n        \" - Cosine troughs at π\\n\"\n        \" - Both functions are periodic\\n\"\n    )\n    axs[0].text(2, 0.9, annotation_text, fontsize=10, \n                bbox=dict(facecolor='white', alpha=0.6), \n                verticalalignment='top')\n\n    # ---------------------------\n    # Section 2: Detailed Analysis\n    # ---------------------------\n    axs[1].plot(x, y_diff, label='Sine - Cosine', color='green', linewidth=2)\n    axs[1].set_title('Section 2: Detailed Analysis', fontsize=16, fontweight='bold')\n    axs[1].set_xlabel('Time (s)', fontsize=12)\n    axs[1].set_ylabel('Difference', fontsize=12)\n    axs[1].legend(loc='upper right')\n    axs[1].grid(True, linestyle='--', alpha=0.7)\n    \n    # Add a block of text as a multi-line list with labeled analysis points\n    detailed_analysis = (\n        \"Analysis Report:\\n\"\n        \"1. Wave Behavior:\\n\"\n        \"   - Periodic oscillation observed\\n\"\n        \"   - Amplitude variations consistent\\n\"\n        \"2. Phase Differences:\\n\"\n        \"   - Phase shift of ~π/2 between sine and cosine\\n\"\n        \"   - Critical zero crossings when combined are evident\\n\"\n        \"3. Additional Observations:\\n\"\n        \"   - Symmetry in sine and cosine functions\\n\"\n        \"   - Difference plot highlights contrast\\n\"\n    )\n    axs[1].text(0.5, -2.5, detailed_analysis, fontsize=10, transform=axs[1].transData, \n                bbox=dict(facecolor='lightgrey', alpha=0.4))\n\n    # ---------------------------\n    # Overall Figure Title and Additional Labeled Info\n    # ---------------------------\n    fig.suptitle('Matplotlib Visualization Layout\\nDetailed and Annotated Analysis Report', \n                 fontsize=18, fontweight='bold')\n    \n    # Insert a labeled value block as a side-note using figure text\n    layout_info = (\n        \"Layout Info:\\n\"\n        \" - Sections: 2\\n\"\n        \" - Plots: Overview & Detailed\\n\"\n        \" - Annotations: Multiple (Text Blocks)\\n\"\n        \" - Data Points: 400 (per plot)\\n\"\n        \" - Title: Detailed Analysis Report\"\n    )\n    plt.gcf().text(0.75, 0.15, layout_info, fontsize=10, \n                   bbox=dict(boxstyle='round',"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX30_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Matplotlib Visualization Layout",
                                "Overview",
                                "Detailed Analysis",
                                "Sine Wave",
                                "Cosine Wave",
                                "Sine - Cosine",
                                "Time (s)",
                                "Amplitude",
                                "Difference",
                                "Key Features:",
                                "Analysis Report:",
                                "blue",
                                "red",
                                "green",
                                "dashed",
                                "legend"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX30_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX30_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall figure title?",
                                "How many plot areas are displayed in the figure?",
                                "What are the names of the two vertical plot sections?",
                                "What curves and their colors are shown in the Overview plot?",
                                "What are the x-axis and y-axis labels in the Overview plot?",
                                "What curve is displayed in the Detailed Analysis plot and what is its color?",
                                "Where is the legend located in the Detailed Analysis plot?",
                                "What is the style of the gridlines in both plots?",
                                "What annotation is included in the Overview plot?",
                                "What annotation is included in the Detailed Analysis plot?",
                                "What additional labeled text block is present on the overall figure?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX30_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Matplotlib Visualization Layout with additional description",
                                "2",
                                "Overview and Detailed Analysis",
                                "Blue Sine Wave and Red Cosine Wave",
                                "x-axis: Time (s), y-axis: Amplitude",
                                "Green curve labeled 'Sine - Cosine'",
                                "Upper right",
                                "Dashed lines with lighter transparency",
                                "A multi-line text box starting with 'Key Features:' listing sine and cosine characteristics",
                                "A multi-line text box with 'Analysis Report:' and numbered sub-points describing wave behavior, phase differences, and additional observations",
                                "A side-note listing layout information such as the number of sections, plots, annotations, data points, and title details"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n\"\"\"\nMatplotlib Dashboard Example\n----------------------------\nThis script creates a visual dashboard layout with multiple subplots. Each subplot\nrepresents a different section with headings, lists, and labeled values. The main\ngoal is to demonstrate a structured layout with clear visual hierarchy suitable for\na conversion task.\n\nSections:\n    1. Section 1: Basic Line Plot\n       - Shows a simple line plot with annotations and headings.\n       - Displays labeled values and a title.\n\n    2. Section 2: Detailed Bar Chart\n       - Contains a bar chart with categorized data.\n       - Includes bullet lists and highlighted sections.\n\n    3. Section 3: Scatter Plot with Regression Line\n       - Illustrates scatter data with an overlay of a linear fit.\n       - Features descriptive text and labeled points.\n\nEnsure Matplotlib is installed before running this standalone script.\n\"\"\"\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create the main figure - size set to be large enough to include all sections\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle(\"Dashboard: Data Visualization Overview\", fontsize=18, fontweight='bold')\n\n# ----------------------------------------------\n# Section 1: Basic Line Plot\n# ----------------------------------------------\nax1 = fig.add_subplot(2, 2, 1)  # Top left subplot\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\nax1.plot(x, y, label='y = sin(x)', color='blue', linewidth=2)\nax1.set_title(\"Section 1: Basic Line Plot\", fontsize=14, fontweight='bold')\nax1.set_xlabel(\"Time (s)\")\nax1.set_ylabel(\"Amplitude\")\nax1.grid(True)\nax1.legend(loc='upper right')\n\n# Annotate with bullet list details in the plot area\ntextstr1 = (\"Key Details:\\n\"\n            \"• Data: Sinusoidal function\\n\"\n            \"• x-range: 0 to 10\\n\"\n            \"• Frequency: 1 Hz\")\nprops = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\nax1.text(0.05, 0.95, textstr1, transform=ax1.transAxes, fontsize=10,\n         verticalalignment='top', bbox=props)\n\n# ----------------------------------------------\n# Section 2: Detailed Bar Chart\n# ----------------------------------------------\nax2 = fig.add_subplot(2, 2, 2)  # Top right subplot\ncategories = ['A', 'B', 'C', 'D', 'E']\nvalues = [23, 17, 35, 29, 12]\nbars = ax2.bar(categories, values, color='green', edgecolor='black')\n\nax2.set_title(\"Section 2: Detailed Bar Chart\", fontsize=14, fontweight='bold')\nax2.set_xlabel(\"Category\")\nax2.set_ylabel(\"Value\")\nax2.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Labeling each bar with its value\nfor bar in bars:\n    height = bar.get_height()\n    ax2.text(bar.get_x() + bar.get_width() / 2, height + 1,\n             f'{int(height)}', ha='center', va='bottom', fontsize=9)\n\n# Add a bullet list inside the plot area\ntextstr2 = (\"Highlights:\\n\"\n            \"• Category A: 23\\n\"\n            \"• Category B: 17\\n\"\n            \"• Category C: 35\\n\"\n            \"• Category D: 29\\n\"\n            \"• Category E: 12\")\nax2.text(0.02, 0.05, textstr2, transform=ax2.transAxes, fontsize=9,\n         verticalalignment='bottom', bbox=props)\n\n# ----------------------------------------------\n# Section 3: Scatter Plot with Regression\n# ----------------------------------------------\nax3 = fig.add_subplot(2, 1, 2)  # Bottom subplot spanning full width\n# Generate random scatter data\nnp.random.seed(42)\nx_scatter = np.random.rand(50) * 10  # Range 0 to 10\ny_scatter = 2.5 * x_scatter + np.random.randn(50) * 3\n\nax3.scatter(x_scatter, y_scatter, color='red', alpha=0.7, label='Data Points')\n\n# Calculate linear regression (least squares)\ncoeffs = np.polyfit(x_scatter, y_scatter, 1)\npoly_eqn = np.poly1d(coeffs)\nx_fit = np.linspace(0, 10, 100)\ny_fit = poly_eqn(x_fit)\nax3.plot(x_fit, y_fit, color='black', linestyle='--', linewidth=2, label='Regression Line')\n\nax3.set_title(\"Section 3: Scatter Plot with Regression Line\", fontsize=14, fontweight='bold')\nax3.set_xlabel(\"Independent Variable (x)\")\nax3.set_ylabel(\"Dependent Variable (y)\")\nax3.grid(True)\nax3.legend(loc='upper left')\n\n# Annotate regression details in the plot\nregression_text = f\"Regression Equation:\\ny = {coeffs[0]:.2f}x + {coeffs[1]:.2f}\"\nax3.text(0.65, 0.15, regression_text, transform=ax3.transAxes, fontsize=10,\n         verticalalignment='top', bbox=props)\n\n# ----------------------------------------------\n# Additional Formatting: Footer Text\n# ----------------------------------------------\nplt.figtext(0.5, 0.02, \"Generated by Matplotlib Dashboard Script v1.0\",\n            wrap=True, horizontalalignment='center', fontsize=10, color='gray')\n\n# Adjust layout to ensure no content overlaps\nplt.tight_layout(rect=[0, 0.04, 1, 0.96])\n\n# Display the dashboard plot\nplt.show()\n</code>",
            "feature_requirements": "• The output must display a main dashboard title (\"Dashboard: Data Visualization Overview\") clearly rendered at the top of the figure.\n• There must be three distinct diagram sections: one for a basic line plot, one for a detailed bar chart, and one for a scatter plot with an overlaid regression line.\n• The basic line plot (Section 1) must include a blue sin curve with a labeled line (\"y = sin(x)\"), corresponding x and y axis labels (\"Time (s)\" and \"Amplitude\"), a title (\"Section 1: Basic Line Plot\"), and a grid.\n• Within the line plot, an inset annotation must display a bullet list of key details, including items such as \"Data: Sinusoidal function,\" \"x-range: 0 to 10,\" and \"Frequency: 1 Hz,\" set inside a visually distinct box.\n• The bar chart (Section 2) must render five bars corresponding to categories A, B, C, D, and E with numerical values 23, 17, 35, 29, and 12, each bar labeled with its value above it.\n• Section 2 must also include axis labels (\"Category\" for the x-axis and \"Value\" for the y-axis), a title (\"Section 2: Detailed Bar Chart\"), and a grid on the vertical axis with a dashed style.\n• An inset annotation in the bar chart should present a bullet list labeled \"Highlights:\" listing each category with its respective value.\n• The scatter plot (Section 3) must show red, semi-transparent data points distributed over the plot, along with a black dashed regression line overlaid on the scatter data.\n• The scatter plot must include a title (\"Section 3: Scatter Plot with Regression Line\"), axis labels (\"Independent Variable (x)\" and \"Dependent Variable (y)\"), grid lines, and a legend that distinguishes the data points and regression line.\n• A footer text (\"Generated by Matplotlib Dashboard Script v1.0\") must be visibly centered at the bottom of the overall layout, and the overall design must ensure non-overlapping, well-spaced sections.",
            "task_id": "08XX31",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main dashboard title displayed at the top of the figure?",
                "How many diagram sections are visible in the layout?",
                "What is the title of the basic line plot section?",
                "Which function is plotted in Section 1 and how is it labeled?",
                "What key details are listed in the inset annotation of the line plot?",
                "How many bars are displayed in the detailed bar chart and what are the category labels?",
                "What numerical values are assigned to each bar in the bar chart?",
                "What is the title of the scatter plot section?",
                "What are the visual characteristics of the scatter plot?",
                "What text is shown in the footer at the bottom of the layout?"
            ],
            "VQA_answers": [
                "Dashboard: Data Visualization Overview",
                "Three",
                "Section 1: Basic Line Plot",
                "A blue sin curve labeled 'y = sin(x)'",
                "Data: Sinusoidal function; x-range: 0 to 10; Frequency: 1 Hz",
                "Five bars for categories A, B, C, D, and E",
                "23, 17, 35, 29, and 12 respectively",
                "Section 3: Scatter Plot with Regression Line",
                "Red semi-transparent data points with an overlaid black dashed regression line",
                "Generated by Matplotlib Dashboard Script v1.0"
            ],
            "raw_output_metric": [
                "Dashboard: Data Visualization Overview",
                "Section 1: Basic Line Plot",
                "y = sin(x)",
                "Time (s)",
                "Amplitude",
                "Data: Sinusoidal function",
                "x-range: 0 to 10",
                "Frequency: 1 Hz",
                "Section 2: Detailed Bar Chart",
                "Category",
                "Value",
                "A",
                "B",
                "C",
                "D",
                "E",
                "23",
                "17",
                "35",
                "29",
                "12",
                "Highlights:",
                "Section 3: Scatter Plot with Regression Line",
                "Independent Variable (x)",
                "Dependent Variable (y)",
                "Generated by Matplotlib Dashboard Script v1.0"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX31_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n\"\"\"\nMatplotlib Dashboard Example\n----------------------------\nThis script creates a visual dashboard layout with multiple subplots. Each subplot\nrepresents a different section with headings, lists, and labeled values. The main\ngoal is to demonstrate a structured layout with clear visual hierarchy suitable for\na conversion task.\n\nSections:\n    1. Section 1: Basic Line Plot\n       - Shows a simple line plot with annotations and headings.\n       - Displays labeled values and a title.\n\n    2. Section 2: Detailed Bar Chart\n       - Contains a bar chart with categorized data.\n       - Includes bullet lists and highlighted sections.\n\n    3. Section 3: Scatter Plot with Regression Line\n       - Illustrates scatter data with an overlay of a linear fit.\n       - Features descriptive text and labeled points.\n\nEnsure Matplotlib is installed before running this standalone script.\n\"\"\"\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create the main figure - size set to be large enough to include all sections\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle(\"Dashboard: Data Visualization Overview\", fontsize=18, fontweight='bold')\n\n# ----------------------------------------------\n# Section 1: Basic Line Plot\n# ----------------------------------------------\nax1 = fig.add_subplot(2, 2, 1)  # Top left subplot\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\nax1.plot(x, y, label='y = sin(x)', color='blue', linewidth=2)\nax1.set_title(\"Section 1: Basic Line Plot\", fontsize=14, fontweight='bold')\nax1.set_xlabel(\"Time (s)\")\nax1.set_ylabel(\"Amplitude\")\nax1.grid(True)\nax1.legend(loc='upper right')\n\n# Annotate with bullet list details in the plot area\ntextstr1 = (\"Key Details:\\n\"\n            \"• Data: Sinusoidal function\\n\"\n            \"• x-range: 0 to 10\\n\"\n            \"• Frequency: 1 Hz\")\nprops = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\nax1.text(0.05, 0.95, textstr1, transform=ax1.transAxes, fontsize=10,\n         verticalalignment='top', bbox=props)\n\n# ----------------------------------------------\n# Section 2: Detailed Bar Chart\n# ----------------------------------------------\nax2 = fig.add_subplot(2, 2, 2)  # Top right subplot\ncategories = ['A', 'B', 'C', 'D', 'E']\nvalues = [23, 17, 35, 29, 12]\nbars = ax2.bar(categories, values, color='green', edgecolor='black')\n\nax2.set_title(\"Section 2: Detailed Bar Chart\", fontsize=14, fontweight='bold')\nax2.set_xlabel(\"Category\")\nax2.set_ylabel(\"Value\")\nax2.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Labeling each bar with its value\nfor bar in bars:\n    height = bar.get_height()\n    ax2.text(bar.get_x() + bar.get_width() / 2, height + 1,\n             f'{int(height)}', ha='center', va='bottom', fontsize=9)\n\n# Add a bullet list inside the plot area\ntextstr2 = (\"Highlights:\\n\"\n            \"• Category A: 23\\n\"\n            \"• Category B: 17\\n\"\n            \"• Category C: 35\\n\"\n            \"• Category D: 29\\n\"\n            \"• Category E: 12\")\nax2.text(0.02, 0.05, textstr2, transform=ax2.transAxes, fontsize=9,\n         verticalalignment='bottom', bbox=props)\n\n# ----------------------------------------------\n# Section 3: Scatter Plot with Regression\n# ----------------------------------------------\nax3 = fig.add_subplot(2, 1, 2)  # Bottom subplot spanning full width\n# Generate random scatter data\nnp.random.seed(42)\nx_scatter = np.random.rand(50) * 10  # Range 0 to 10\ny_scatter = 2.5 * x_scatter + np.random.randn(50) * 3\n\nax3.scatter(x_scatter, y_scatter, color='red', alpha=0.7, label='Data Points')\n\n# Calculate linear regression (least squares)\ncoeffs = np.polyfit(x_scatter, y_scatter, 1)\npoly_eqn = np.poly1d(coeffs)\nx_fit = np.linspace(0, 10, 100)\ny_fit = poly_eqn(x_fit)\nax3.plot(x_fit, y_fit, color='black', linestyle='--', linewidth=2, label='Regression Line')\n\nax3.set_title(\"Section 3: Scatter Plot with Regression Line\", fontsize=14, fontweight='bold')\nax3.set_xlabel(\"Independent Variable (x)\")\nax3.set_ylabel(\"Dependent Variable (y)\")\nax3.grid(True)\nax3.legend(loc='upper left')\n\n# Annotate regression details in the plot\nregression_text = f\"Regression Equation:\\ny = {coeffs[0]:.2f}x + {coeffs[1]:.2f}\"\nax3.text(0.65, 0.15, regression_text, transform=ax3.transAxes, fontsize=10,\n         verticalalignment='top', bbox=props)\n\n# ----------------------------------------------\n# Additional Formatting: Footer Text\n# ----------------------------------------------\nplt.figtext(0.5, 0.02, \"Generated by Matplotlib Dashboard Script v1.0\",\n            wrap=True, horizontalalignment='center', fontsize=10, color='gray')\n\n# Adjust layout to ensure no content overlaps\nplt.tight_layout(rect=[0, 0.04, 1, 0.96])\n\n# Display the dashboard plot\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX31_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard: Data Visualization Overview",
                                "Section 1: Basic Line Plot",
                                "y = sin(x)",
                                "Time (s)",
                                "Amplitude",
                                "Data: Sinusoidal function",
                                "x-range: 0 to 10",
                                "Frequency: 1 Hz",
                                "Section 2: Detailed Bar Chart",
                                "Category",
                                "Value",
                                "A",
                                "B",
                                "C",
                                "D",
                                "E",
                                "23",
                                "17",
                                "35",
                                "29",
                                "12",
                                "Highlights:",
                                "Section 3: Scatter Plot with Regression Line",
                                "Independent Variable (x)",
                                "Dependent Variable (y)",
                                "Generated by Matplotlib Dashboard Script v1.0"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX31_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX31_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main dashboard title displayed at the top of the figure?",
                                "How many diagram sections are visible in the layout?",
                                "What is the title of the basic line plot section?",
                                "Which function is plotted in Section 1 and how is it labeled?",
                                "What key details are listed in the inset annotation of the line plot?",
                                "How many bars are displayed in the detailed bar chart and what are the category labels?",
                                "What numerical values are assigned to each bar in the bar chart?",
                                "What is the title of the scatter plot section?",
                                "What are the visual characteristics of the scatter plot?",
                                "What text is shown in the footer at the bottom of the layout?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX31_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard: Data Visualization Overview",
                                "Three",
                                "Section 1: Basic Line Plot",
                                "A blue sin curve labeled 'y = sin(x)'",
                                "Data: Sinusoidal function; x-range: 0 to 10; Frequency: 1 Hz",
                                "Five bars for categories A, B, C, D, and E",
                                "23, 17, 35, 29, and 12 respectively",
                                "Section 3: Scatter Plot with Regression Line",
                                "Red semi-transparent data points with an overlaid black dashed regression line",
                                "Generated by Matplotlib Dashboard Script v1.0"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n#!/usr/bin/env python3\n\"\"\"\nMatplotlib Dashboard Visualization\n------------------------------------\nThis script demonstrates a complex dashboard layout using matplotlib.\nIt includes multiple subplots with titles, headings, sections, labeled values,\nand lists within the plots to simulate a realistic and structured visualization.\n\nSections:\n1. Introduction: Overview and documentation.\n2. Data Generation: Synthetic data for demonstration.\n3. Plotting: Multiple subplots including line plots, bar charts, and text annotations.\n4. Customization: Layout adjustments, titles, and label formatting.\n\nList of Visual Elements:\n- Main Title: \"Dashboard Overview\"\n- Section Titles: \"Section 1: Sales Over Time\", \"Section 2: Market Share\", \"Section 3: Performance Metrics\"\n- Labeled Values: Key metrics displayed directly on plots.\n- Legend and Axis Labels for clarity.\n\nAuthor: OpenAI Assistant\nDate: 2023-10-XX\n\"\"\"\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# 1. Data Generation: Create synthetic datasets\nnp.random.seed(42)\ntime = np.linspace(0, 12, 100)\nsales = 100 + 10 * time + np.random.normal(0, 10, size=time.shape)\nmarket_share = np.array([35, 25, 15, 25]) + np.random.randint(-3, 3, 4)\ncategories = ['Product A', 'Product B', 'Product C', 'Product D']\nperformance = { \"Revenue Growth\": 12.5, \"Cost Reduction\": 8.3, \"Customer Satisfaction\": 95, \"Market Expansion\": 7.1 }\n\n# 2. Create a figure with a grid layout (3 rows x 2 columns)\nfig = plt.figure(constrained_layout=True, figsize=(12, 10))\nfig.suptitle(\"Dashboard Overview\", fontsize=18, fontweight='bold', color='navy')\n\n# Create grid specifications\ngs = fig.add_gridspec(3, 2)\n\n# Subplot 1: Sales Over Time (Line Plot)\nax1 = fig.add_subplot(gs[0, :])\nax1.plot(time, sales, color='teal', lw=2, label='Sales Trend')\nax1.set_title(\"Section 1: Sales Over Time\", fontsize=14, fontweight='bold')\nax1.set_xlabel(\"Time (Months)\")\nax1.set_ylabel(\"Sales ($)\")\nax1.grid(True, linestyle='--', alpha=0.6)\nax1.legend(loc='upper left')\n# Annotate a key sales point\nmax_idx = np.argmax(sales)\nax1.annotate(f\"Max Sales: ${sales[max_idx]:.2f}\", xy=(time[max_idx], sales[max_idx]), \n             xytext=(time[max_idx] - 2, sales[max_idx] + 20), arrowprops=dict(arrowstyle=\"->\", color=\"red\"))\n\n# Subplot 2: Market Share (Bar Chart)\nax2 = fig.add_subplot(gs[1, 0])\nbars = ax2.bar(categories, market_share, color=['skyblue', 'salmon', 'lightgreen', 'gold'])\nax2.set_title(\"Section 2: Market Share\", fontsize=14, fontweight='bold')\nax2.set_xlabel(\"Products\")\nax2.set_ylabel(\"Market Share (%)\")\nax2.grid(axis='y', linestyle=':')\n\n# Adding the value labels on top of each bar\nfor bar in bars:\n    height = bar.get_height()\n    ax2.text(bar.get_x() + bar.get_width()/2., height + 1, f'{height:.1f}%', ha='center', va='bottom', fontsize=10)\n\n# Subplot 3: Performance Metrics (Text Display Panel)\nax3 = fig.add_subplot(gs[1, 1])\n# Hide the axes as this is a text panel\nax3.axis('off')\nax3.set_title(\"Section 3: Performance Metrics\", fontsize=14, fontweight='bold', pad=20)\n\n# Build a formatted text block for key performance metrics\ntext_str = \"Key Metrics:\\n\"\ntext_str += \"---------------------\\n\"\nfor key, value in performance.items():\n    text_str += f\"• {key}: {value}\\n\"\ntext_str += \"---------------------\\n\"\ntext_str += \"Note: Data is synthetic and for demo purposes.\"\n\n# Display the text in the middle of the subplot\nax3.text(0.02, 0.5, text_str, fontsize=12, fontfamily='monospace')\n\n# Subplot 4: Comparative Analysis (Multiple Line Plot)\nax4 = fig.add_subplot(gs[2, :])\n# Generate additional synthetic comparative datasets\ntime_extended = np.linspace(0, 12, 100)\nregion1 = 100 + 12 * time_extended + np.random.normal(0, 8, size=time_extended.shape)\nregion2 = 90 + 14 * time_extended + np.random.normal(0, 12, size=time_extended.shape)\nregion3 = 110 + 11 * time_extended + np.random.normal(0, 9, size=time_extended.shape)\n\nax4.plot(time_extended, region1, 'b-', label='Region 1')\nax4.plot(time_extended, region2, 'r--', label='Region 2')\nax4.plot(time_extended, region3, 'g-.', label='Region 3')\nax4.set_title(\"Section 4: Comparative Analysis Across Regions\", fontsize=14, fontweight='bold')\nax4.set_xlabel(\"Time (Months)\")\nax4.set_ylabel(\"Sales ($)\")\nax4.grid(True, ls='-.', alpha=0.7)\nax4.legend(loc='upper left')\n\n# Additional formatting for better readability\nfor ax in [ax1, ax2, ax4]:\n    ax.tick_params(axis='both', which='major', labelsize=10)\n    \nfig.text(0.5, 0.04, \"End of Dashboard\", ha='center', va='center', fontsize=12, color='gray', style='italic')\n\n# Save the figure to a file for viewing (optional)\n# plt.savefig(\"dashboard_visualization.png\", dpi=300)\n\nplt.show()\n</code>",
            "feature_requirements": "• The output must display a central main title reading \"Dashboard Overview\" in a prominent, bold style at the top of the visualization.  \n• The figure must be divided into four distinct panels corresponding to different sections: Sales Over Time (line plot), Market Share (bar chart), Performance Metrics (text panel), and Comparative Analysis (multiple line plot).  \n• The Sales Over Time panel must include a teal-colored line plot with labeled x-axis (\"Time (Months)\") and y-axis (\"Sales ($)\"), a dashed grid, and an upper-left positioned legend indicating the \"Sales Trend\".  \n• The Sales Over Time panel must feature an annotation at the maximum sales point, with an arrow pointing to the peak and a text label formatted as \"Max Sales: $<value>\" showing the numerical value.  \n• The Market Share panel must render a bar chart with four bars representing products (e.g., Product A, Product B, Product C, Product D) using distinct colors (skyblue, salmon, lightgreen, gold), with the x-axis labeled \"Products\", the y-axis labeled \"Market Share (%)\", a grid on the y-axis, and value labels placed above each bar stating the percentage value.  \n• The Performance Metrics panel must serve as a text display (with axes hidden) and include a title \"Section 3: Performance Metrics\" along with a formatted, multi-line text block listing key metrics such as \"Revenue Growth: 12.5\", \"Cost Reduction: 8.3\", \"Customer Satisfaction: 95\", and \"Market Expansion: 7.1\", followed by a note that indicates demo data.  \n• The Comparative Analysis panel must show three line plots for regions (Region 1, Region 2, Region 3) in distinct styles (solid blue, dashed red, dashdot green) with the x-axis labeled \"Time (Months)\" and the y-axis labeled \"Sales ($)\", a grid rendered with dashes, and a legend placed in the upper-left corner identifying each region’s line.  \n• The overall layout must include a footer text centered at the bottom of the figure reading \"End of Dashboard\" in an italic style.",
            "task_id": "08XX32",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title at the top of the visualization?",
                "Into how many panels is the figure divided?",
                "Which panel contains a teal-colored line plot with labeled axes for Time (Months) and Sales ($)?",
                "What feature is included in the Sales Over Time panel at its maximum sales point?",
                "What type of chart is displayed in the Market Share panel and which products does it represent?",
                "What legend is positioned in the upper-left corner of the Sales Over Time panel?",
                "How are the x-axis and y-axis labeled in the Comparative Analysis panel?",
                "What distinct line styles and colors are used in the Comparative Analysis panel for the three regions?",
                "What content is displayed in the Performance Metrics panel?",
                "What text is centered at the bottom of the figure and how is it styled?"
            ],
            "VQA_answers": [
                "Dashboard Overview (bold)",
                "4",
                "Sales Over Time panel",
                "An annotation labeled 'Max Sales: $<value>' with an arrow pointing to the peak",
                "A bar chart representing Product A, Product B, Product C, and Product D",
                "Sales Trend",
                "x-axis: 'Time (Months)', y-axis: 'Sales ($)'",
                "Solid blue for Region 1, dashed red for Region 2, and dashdot green for Region 3",
                "Title 'Section 3: Performance Metrics' along with multi-line text listing key metrics: 'Revenue Growth: 12.5', 'Cost Reduction: 8.3', 'Customer Satisfaction: 95', 'Market Expansion: 7.1', plus a note indicating demo data",
                "End of Dashboard (italic)"
            ],
            "raw_output_metric": [
                "Dashboard Overview",
                "Sales Over Time",
                "Market Share",
                "Performance Metrics",
                "Comparative Analysis",
                "Time (Months)",
                "Sales ($)",
                "Sales Trend",
                "Max Sales: $",
                "Products",
                "Market Share (%)",
                "Product A",
                "Product B",
                "Product C",
                "Product D",
                "Section 3: Performance Metrics",
                "Revenue Growth: 12.5",
                "Cost Reduction: 8.3",
                "Customer Satisfaction: 95",
                "Market Expansion: 7.1",
                "demo data",
                "Region 1",
                "Region 2",
                "Region 3",
                "End of Dashboard"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX32_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n#!/usr/bin/env python3\n\"\"\"\nMatplotlib Dashboard Visualization\n------------------------------------\nThis script demonstrates a complex dashboard layout using matplotlib.\nIt includes multiple subplots with titles, headings, sections, labeled values,\nand lists within the plots to simulate a realistic and structured visualization.\n\nSections:\n1. Introduction: Overview and documentation.\n2. Data Generation: Synthetic data for demonstration.\n3. Plotting: Multiple subplots including line plots, bar charts, and text annotations.\n4. Customization: Layout adjustments, titles, and label formatting.\n\nList of Visual Elements:\n- Main Title: \"Dashboard Overview\"\n- Section Titles: \"Section 1: Sales Over Time\", \"Section 2: Market Share\", \"Section 3: Performance Metrics\"\n- Labeled Values: Key metrics displayed directly on plots.\n- Legend and Axis Labels for clarity.\n\nAuthor: OpenAI Assistant\nDate: 2023-10-XX\n\"\"\"\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# 1. Data Generation: Create synthetic datasets\nnp.random.seed(42)\ntime = np.linspace(0, 12, 100)\nsales = 100 + 10 * time + np.random.normal(0, 10, size=time.shape)\nmarket_share = np.array([35, 25, 15, 25]) + np.random.randint(-3, 3, 4)\ncategories = ['Product A', 'Product B', 'Product C', 'Product D']\nperformance = { \"Revenue Growth\": 12.5, \"Cost Reduction\": 8.3, \"Customer Satisfaction\": 95, \"Market Expansion\": 7.1 }\n\n# 2. Create a figure with a grid layout (3 rows x 2 columns)\nfig = plt.figure(constrained_layout=True, figsize=(12, 10))\nfig.suptitle(\"Dashboard Overview\", fontsize=18, fontweight='bold', color='navy')\n\n# Create grid specifications\ngs = fig.add_gridspec(3, 2)\n\n# Subplot 1: Sales Over Time (Line Plot)\nax1 = fig.add_subplot(gs[0, :])\nax1.plot(time, sales, color='teal', lw=2, label='Sales Trend')\nax1.set_title(\"Section 1: Sales Over Time\", fontsize=14, fontweight='bold')\nax1.set_xlabel(\"Time (Months)\")\nax1.set_ylabel(\"Sales ($)\")\nax1.grid(True, linestyle='--', alpha=0.6)\nax1.legend(loc='upper left')\n# Annotate a key sales point\nmax_idx = np.argmax(sales)\nax1.annotate(f\"Max Sales: ${sales[max_idx]:.2f}\", xy=(time[max_idx], sales[max_idx]), \n             xytext=(time[max_idx] - 2, sales[max_idx] + 20), arrowprops=dict(arrowstyle=\"->\", color=\"red\"))\n\n# Subplot 2: Market Share (Bar Chart)\nax2 = fig.add_subplot(gs[1, 0])\nbars = ax2.bar(categories, market_share, color=['skyblue', 'salmon', 'lightgreen', 'gold'])\nax2.set_title(\"Section 2: Market Share\", fontsize=14, fontweight='bold')\nax2.set_xlabel(\"Products\")\nax2.set_ylabel(\"Market Share (%)\")\nax2.grid(axis='y', linestyle=':')\n\n# Adding the value labels on top of each bar\nfor bar in bars:\n    height = bar.get_height()\n    ax2.text(bar.get_x() + bar.get_width()/2., height + 1, f'{height:.1f}%', ha='center', va='bottom', fontsize=10)\n\n# Subplot 3: Performance Metrics (Text Display Panel)\nax3 = fig.add_subplot(gs[1, 1])\n# Hide the axes as this is a text panel\nax3.axis('off')\nax3.set_title(\"Section 3: Performance Metrics\", fontsize=14, fontweight='bold', pad=20)\n\n# Build a formatted text block for key performance metrics\ntext_str = \"Key Metrics:\\n\"\ntext_str += \"---------------------\\n\"\nfor key, value in performance.items():\n    text_str += f\"• {key}: {value}\\n\"\ntext_str += \"---------------------\\n\"\ntext_str += \"Note: Data is synthetic and for demo purposes.\"\n\n# Display the text in the middle of the subplot\nax3.text(0.02, 0.5, text_str, fontsize=12, fontfamily='monospace')\n\n# Subplot 4: Comparative Analysis (Multiple Line Plot)\nax4 = fig.add_subplot(gs[2, :])\n# Generate additional synthetic comparative datasets\ntime_extended = np.linspace(0, 12, 100)\nregion1 = 100 + 12 * time_extended + np.random.normal(0, 8, size=time_extended.shape)\nregion2 = 90 + 14 * time_extended + np.random.normal(0, 12, size=time_extended.shape)\nregion3 = 110 + 11 * time_extended + np.random.normal(0, 9, size=time_extended.shape)\n\nax4.plot(time_extended, region1, 'b-', label='Region 1')\nax4.plot(time_extended, region2, 'r--', label='Region 2')\nax4.plot(time_extended, region3, 'g-.', label='Region 3')\nax4.set_title(\"Section 4: Comparative Analysis Across Regions\", fontsize=14, fontweight='bold')\nax4.set_xlabel(\"Time (Months)\")\nax4.set_ylabel(\"Sales ($)\")\nax4.grid(True, ls='-.', alpha=0.7)\nax4.legend(loc='upper left')\n\n# Additional formatting for better readability\nfor ax in [ax1, ax2, ax4]:\n    ax.tick_params(axis='both', which='major', labelsize=10)\n    \nfig.text(0.5, 0.04, \"End of Dashboard\", ha='center', va='center', fontsize=12, color='gray', style='italic')\n\n# Save the figure to a file for viewing (optional)\n# plt.savefig(\"dashboard_visualization.png\", dpi=300)\n\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX32_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard Overview",
                                "Sales Over Time",
                                "Market Share",
                                "Performance Metrics",
                                "Comparative Analysis",
                                "Time (Months)",
                                "Sales ($)",
                                "Sales Trend",
                                "Max Sales: $",
                                "Products",
                                "Market Share (%)",
                                "Product A",
                                "Product B",
                                "Product C",
                                "Product D",
                                "Section 3: Performance Metrics",
                                "Revenue Growth: 12.5",
                                "Cost Reduction: 8.3",
                                "Customer Satisfaction: 95",
                                "Market Expansion: 7.1",
                                "demo data",
                                "Region 1",
                                "Region 2",
                                "Region 3",
                                "End of Dashboard"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX32_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX32_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title at the top of the visualization?",
                                "Into how many panels is the figure divided?",
                                "Which panel contains a teal-colored line plot with labeled axes for Time (Months) and Sales ($)?",
                                "What feature is included in the Sales Over Time panel at its maximum sales point?",
                                "What type of chart is displayed in the Market Share panel and which products does it represent?",
                                "What legend is positioned in the upper-left corner of the Sales Over Time panel?",
                                "How are the x-axis and y-axis labeled in the Comparative Analysis panel?",
                                "What distinct line styles and colors are used in the Comparative Analysis panel for the three regions?",
                                "What content is displayed in the Performance Metrics panel?",
                                "What text is centered at the bottom of the figure and how is it styled?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX32_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard Overview (bold)",
                                "4",
                                "Sales Over Time panel",
                                "An annotation labeled 'Max Sales: $<value>' with an arrow pointing to the peak",
                                "A bar chart representing Product A, Product B, Product C, and Product D",
                                "Sales Trend",
                                "x-axis: 'Time (Months)', y-axis: 'Sales ($)'",
                                "Solid blue for Region 1, dashed red for Region 2, and dashdot green for Region 3",
                                "Title 'Section 3: Performance Metrics' along with multi-line text listing key metrics: 'Revenue Growth: 12.5', 'Cost Reduction: 8.3', 'Customer Satisfaction: 95', 'Market Expansion: 7.1', plus a note indicating demo data",
                                "End of Dashboard (italic)"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate sample data\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x)\ny4 = np.log1p(x)  # log(1+x) for positive x values\n\n# Create subplots layout: 2 rows x 2 columns\nfig, axes = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle('Comprehensive Data Visualization Dashboard', fontsize=16, fontweight='bold')\n\n#-------------------------------------------------------\n# Section 1: Sine Wave Analysis\n#-------------------------------------------------------\nax1 = axes[0, 0]\nax1.plot(x, y1, color='b', linestyle='-', linewidth=2, label='sin(x)')\nax1.set_title('Sine Wave', loc='left', fontsize=12, fontweight='bold')\nax1.set_xlabel('Time')\nax1.set_ylabel('Amplitude')\nax1.grid(True)\n\n# Annotate the maximum point on the sine wave\nmax_idx = np.argmax(y1)\nax1.annotate('Max Point', xy=(x[max_idx], y1[max_idx]), xytext=(x[max_idx] + 1, y1[max_idx] + 0.5),\n             arrowprops=dict(facecolor='black', shrink=0.05))\nax1.legend()\n\n#-------------------------------------------------------\n# Section 2: Cosine Wave Inspection\n#-------------------------------------------------------\nax2 = axes[0, 1]\nax2.plot(x, y2, color='r', linestyle='--', linewidth=2, label='cos(x)')\nax2.set_title('Cosine Wave', loc='left', fontsize=12, fontweight='bold",
            "feature_requirements": "• The output must display one overall title reading \"Comprehensive Data Visualization Dashboard\" in a bold font and a size comparable to 16-point text.  \n• The visualization must be arranged into four distinct subplots in a 2×2 grid, each visibly separated.  \n• In the top‐left subplot (Sine Wave Analysis), a sine curve must be drawn in blue using a solid line with a measured thickness equivalent to a width of 2.  \n• The Sine Wave subplot must include grid lines, an x-axis labeled \"Time\", a y-axis labeled \"Amplitude\", and a legend displaying \"sin(x)\".  \n• An annotation labeled \"Max Point\" must be present in the Sine Wave subplot, with an arrow pointing from the text to the maximum point of the sine curve (positioned using measurable coordinates relative to the plotted data).  \n• In the top‐right subplot (Cosine Wave Inspection), a cosine curve must be drawn in red using a dashed line with a measured line width of 2, accompanied by a corresponding legend displaying \"cos(x)\".  \n• Each subplot must have a title aligned to the left (e.g., \"Sine Wave\", \"Cosine Wave\"), styled in bold and sized comparably to 12-point text.  \n• The TikZ output must use precise, measurable elements for spacing, positioning, and arrow properties (such as arrow shrink factors) to accurately replicate the annotations and layout defined in the Matplotlib code.",
            "task_id": "08XX33",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall title displayed at the top of the dashboard?",
                "How many subplots are arranged in the dashboard layout?",
                "In the Sine Wave Analysis subplot, what color is the sine curve and what is its line width?",
                "What are the labels on the x-axis and y-axis in the Sine Wave subplot?",
                "What legend text is used in the Sine Wave subplot and what annotation is provided?",
                "In the Cosine Wave Inspection subplot, what style and color is the cosine curve?",
                "How are the subplot titles styled and aligned?",
                "What measurable elements are specifically included in the visualization layout?"
            ],
            "VQA_answers": [
                "Comprehensive Data Visualization Dashboard",
                "Four",
                "Blue, line width of 2",
                "x-axis: Time, y-axis: Amplitude",
                "Legend: sin(x), Annotation: Max Point",
                "Red, dashed line with line width of 2",
                "Bold, left aligned with a size comparable to 12-point text",
                "Precise spacing, positioning, and arrow properties for annotations"
            ],
            "raw_output_metric": [
                "Comprehensive Data Visualization Dashboard",
                "Sine Wave",
                "Cosine Wave",
                "Time",
                "Amplitude",
                "sin(x)",
                "cos(x)",
                "Max Point",
                "blue",
                "red",
                "solid",
                "dashed"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX33_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate sample data\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x)\ny4 = np.log1p(x)  # log(1+x) for positive x values\n\n# Create subplots layout: 2 rows x 2 columns\nfig, axes = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle('Comprehensive Data Visualization Dashboard', fontsize=16, fontweight='bold')\n\n#-------------------------------------------------------\n# Section 1: Sine Wave Analysis\n#-------------------------------------------------------\nax1 = axes[0, 0]\nax1.plot(x, y1, color='b', linestyle='-', linewidth=2, label='sin(x)')\nax1.set_title('Sine Wave', loc='left', fontsize=12, fontweight='bold')\nax1.set_xlabel('Time')\nax1.set_ylabel('Amplitude')\nax1.grid(True)\n\n# Annotate the maximum point on the sine wave\nmax_idx = np.argmax(y1)\nax1.annotate('Max Point', xy=(x[max_idx], y1[max_idx]), xytext=(x[max_idx] + 1, y1[max_idx] + 0.5),\n             arrowprops=dict(facecolor='black', shrink=0.05))\nax1.legend()\n\n#-------------------------------------------------------\n# Section 2: Cosine Wave Inspection\n#-------------------------------------------------------\nax2 = axes[0, 1]\nax2.plot(x, y2, color='r', linestyle='--', linewidth=2, label='cos(x)')\nax2.set_title('Cosine Wave', loc='left', fontsize=12, fontweight='bold"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX33_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization Dashboard",
                                "Sine Wave",
                                "Cosine Wave",
                                "Time",
                                "Amplitude",
                                "sin(x)",
                                "cos(x)",
                                "Max Point",
                                "blue",
                                "red",
                                "solid",
                                "dashed"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX33_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX33_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall title displayed at the top of the dashboard?",
                                "How many subplots are arranged in the dashboard layout?",
                                "In the Sine Wave Analysis subplot, what color is the sine curve and what is its line width?",
                                "What are the labels on the x-axis and y-axis in the Sine Wave subplot?",
                                "What legend text is used in the Sine Wave subplot and what annotation is provided?",
                                "In the Cosine Wave Inspection subplot, what style and color is the cosine curve?",
                                "How are the subplot titles styled and aligned?",
                                "What measurable elements are specifically included in the visualization layout?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX33_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization Dashboard",
                                "Four",
                                "Blue, line width of 2",
                                "x-axis: Time, y-axis: Amplitude",
                                "Legend: sin(x), Annotation: Max Point",
                                "Red, dashed line with line width of 2",
                                "Bold, left aligned with a size comparable to 12-point text",
                                "Precise spacing, positioning, and arrow properties for annotations"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# =============================================================================\n# SECTION 1: Data Generation\n# =============================================================================\n# Generate synthetic data\nx = np.linspace(0, 10, 200)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.sin(2*x)\ny4 = np.cos(2*x)\n\n# Data summary list (for visible layout purposes)\ndata_summary = [\n    \"Data Points: 200\",\n    \"x range: 0 to 10\",\n    \"y1 = sin(x)\",\n    \"y2 = cos(x)\",\n    \"y3 = sin(2*x)\",\n    \"y4 = cos(2*x)\"\n]\n\n# =============================================================================\n# SECTION 2: Create Subplots\n# =============================================================================\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nplt.subplots_adjust(hspace=0.4, wspace=0.3)\n\n# -----------------------------------------------------------------------------\n# Subplot 1: Sine Wave\n# -----------------------------------------------------------------------------\nax = axs[0, 0]\nax.plot(x, y1, label=\"sin(x)\", color=\"blue\", linestyle='-', linewidth=2)\nax.set_title(\"Plot 1: Sine Wave\", fontsize=14, fontweight=\"bold\")\nax.set_xlabel(\"X-axis\")\nax.set_ylabel(\"sin(x)\")\nax.legend(loc=\"upper right\")\nax.grid(True)\n\n# Add a text box with summary details in subplot 1\ntextstr = \"Key Points:\\n• sin(x) oscillates between -1 and 1\\n• Period = 2π\"\nprops = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\nax.text(0.05, 0.95, textstr, transform=ax.transAxes, fontsize=10,\n        verticalalignment='top', bbox=props)\n\n# -----------------------------------------------------------------------------\n# Subplot 2: Cosine Wave\n# -----------------------------------------------------------------------------\nax = axs[0, 1]\nax.plot(x, y2, label=\"cos(x)\", color=\"red\", linestyle='--', linewidth=2)\nax.set_title(\"Plot 2: Cosine Wave\", fontsize=14, fontweight=\"bold\")\nax.set_xlabel(\"X-axis\")\nax.set_ylabel(\"cos(x)\")\nax.legend(loc=\"upper right\")\nax.grid(True)\n\n# Add a header text inside subplot 2\nheader_text = \"Important Notes:\\n1. Cosine starts at 1\\n2. Alternates sign every half-cycle\"\nax.text(0.05, 0.85, header_text, transform=ax.transAxes, fontsize=9,\n        verticalalignment='top', bbox=dict(boxstyle=\"round,pad=0.3\", facecolor=\"lavender\", alpha=0.6))\n\n# -----------------------------------------------------------------------------\n# Subplot 3: Double Sine\n# -----------------------------------------------------------------------------\nax = axs[1, 0]\nax.plot(x, y3, label=\"sin(2x)\", color=\"green\", linestyle='-.', linewidth=2)\nax.set_title(\"Plot 3: Double Frequency Sine\", fontsize=14, fontweight=\"bold\")\nax.set_xlabel(\"X-axis\")\nax.set_ylabel(\"sin(2x)\")\nax.legend(loc=\"upper right\")\nax.grid(True)\n\n# Insert a labeled list of observations\nobservations = \"Observations:\\n- Frequency doubled\\n- Zero crossings increased\\n- Amplitude remains same\"\nax.text(0.5, 0.1, observations, transform=ax.transAxes, fontsize=10,\n        verticalalignment='bottom', horizontalalignment='center',\n        bbox=dict(boxstyle=\"round\", facecolor=\"lightblue\", alpha=0.4))\n\n# -----------------------------------------------------------------------------\n# Subplot 4: Double Cosine\n# -----------------------------------------------------------------------------\nax = axs[1, 1]\nax.plot(x, y4, label=\"cos(2x)\", color=\"purple\", linestyle=':', linewidth=2)\nax.set_title(\"Plot 4: Double Frequency Cosine\", fontsize=14, fontweight=\"bold\")\nax.set_xlabel(\"X-axis\")\nax.set_ylabel(\"cos(2x)\")\nax.legend(loc=\"upper right\")\nax.grid(True)\n\n# Add a section with structured bullet points within subplot 4\ninfo_text = (\n    \"Detailed Info:\\n\"\n    \"• Data Generated using numpy\\n\"\n    \"• Plotted with matplotlib\\n\"\n    \"• Double frequency gives:\\n\"\n    \"    - More oscillations\\n\"\n    \"    - Condensed wave pattern\"\n)\nax.text(0.05, 0.95, info_text, transform=ax.transAxes, fontsize=9,\n        verticalalignment='top', bbox=dict(boxstyle='round', facecolor='mistyrose', alpha=0.6))\n\n\n# =============================================================================\n# SECTION 3: Overall Figure Title and Annotations\n# =============================================================================\n# Set the main title for the entire figure\nfig.suptitle(\"Comprehensive Trigonometric Functions Overview\", fontsize=18, fontweight=\"bold\")\n\n# Add a footer annotation with a summary list from data_summary\nfooter_text = \"Data Summary:\\n\" + \"\\n\".join(data_summary)\n# Place the footer at the bottom of the figure\nfig.text(0.5, 0.02, footer_text, ha=\"center\", fontsize=10, bbox=dict(facecolor='lightgray', alpha=0.4))\n\n# =============================================================================\n# Finalizing and Rendering the Plot\n# =============================================================================\n# Save the figure (optional)\n# plt.savefig(\"trigonometric_overview.png\", dpi=300, bbox_inches=\"tight\")\n\n# Display the complete Matplotlib figure\nplt.show()\n</code>",
            "feature_requirements": "• The output must display a figure divided into a 2×2 grid, with each of the four subplots clearly separated and organized in a visually distinct layout.\n\n• Each subplot must include a prominent title at its top (e.g., \"Plot 1: Sine Wave\", \"Plot 2: Cosine Wave\", \"Plot 3: Double Frequency Sine\", and \"Plot 4: Double Frequency Cosine\").\n\n• Every subplot must feature labeled axes, with the horizontal axis labeled as \"X-axis\" and the vertical axis labeled with the respective function (e.g., \"sin(x)\", \"cos(x)\", \"sin(2x)\", \"cos(2x)\").\n\n• In each subplot, a distinct plot is shown with a unique line style and color (blue solid for sin(x), red dashed for cos(x), green dash-dot for sin(2x), and purple dotted for cos(2x)), accompanied by an on-plot legend in the upper right corner indicating the function.\n\n• Each subplot must include grid lines in the background, enhancing the visibility of the plotted functions.\n\n• Specific text boxes must be overlaid within the subplots:  \n  - In the first subplot, a text box with the header \"Key Points:\" followed by bullet points about sin(x) should appear in the upper left area with a colored background (wheat-like).  \n  - In the second subplot, a header text containing \"Important Notes:\" with a list of cosine characteristics should be positioned in the upper portion with a light, lavender-like background.  \n  - In the third subplot, a centrally positioned text containing observations (listed with hyphenated entries) about the double frequency sine should appear near the bottom with a lightblue background.  \n  - In the fourth subplot, an information box listing detailed points (using bullet symbols and nested points) about the cosine function should be placed in the upper left with a mistyrose-like background.\n\n• The overall figure must feature a prominent main title at the top reading \"Comprehensive Trigonometric Functions Overview\" in a bold and sizeable font.\n\n• A footer section must be included at the bottom of the figure displaying a \"Data Summary:\" that lists the number of data points, the x range, and the expressions for y1, y2, y3, and y4. This footer should be centered and set within a background similar to lightgray.\n\nThese features are clearly defined and measurable by verifying the presence, positioning, and content of each text element, plot, and annotation in the rendered TikZ output.",
            "task_id": "08XX34",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall title at the top of the figure?",
                "How many subplots are arranged in a 2×2 grid?",
                "What is the title of the first subplot?",
                "What is the horizontal axis label in every subplot?",
                "What is the vertical axis label of the third subplot?",
                "What line style and color is used for the cosine function in the second subplot?",
                "Where is the legend located within each subplot?",
                "What header and position identify the text box in the first subplot?",
                "What header text and background color are featured in the fourth subplot’s information box?",
                "What does the footer section of the figure display?"
            ],
            "VQA_answers": [
                "Comprehensive Trigonometric Functions Overview",
                "4",
                "Plot 1: Sine Wave",
                "X-axis",
                "sin(2x)",
                "Red dashed",
                "Upper right corner",
                "Key Points: located in the upper left with a wheat-like background",
                "Includes detailed cosine points, on a mistyrose-like background positioned in the upper left",
                "Data Summary: listing the number of data points, the x range, and the expressions for y1, y2, y3, and y4"
            ],
            "raw_output_metric": [
                "Comprehensive Trigonometric Functions Overview",
                "Plot 1: Sine Wave",
                "Plot 2: Cosine Wave",
                "Plot 3: Double Frequency Sine",
                "Plot 4: Double Frequency Cosine",
                "X-axis",
                "sin(x)",
                "cos(x)",
                "sin(2x)",
                "cos(2x)",
                "blue solid",
                "red dashed",
                "green dash-dot",
                "purple dotted",
                "Key Points:",
                "Important Notes:",
                "Data Summary:",
                "wheat",
                "lavender",
                "lightblue",
                "mistyrose",
                "lightgray"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX34_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# =============================================================================\n# SECTION 1: Data Generation\n# =============================================================================\n# Generate synthetic data\nx = np.linspace(0, 10, 200)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.sin(2*x)\ny4 = np.cos(2*x)\n\n# Data summary list (for visible layout purposes)\ndata_summary = [\n    \"Data Points: 200\",\n    \"x range: 0 to 10\",\n    \"y1 = sin(x)\",\n    \"y2 = cos(x)\",\n    \"y3 = sin(2*x)\",\n    \"y4 = cos(2*x)\"\n]\n\n# =============================================================================\n# SECTION 2: Create Subplots\n# =============================================================================\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nplt.subplots_adjust(hspace=0.4, wspace=0.3)\n\n# -----------------------------------------------------------------------------\n# Subplot 1: Sine Wave\n# -----------------------------------------------------------------------------\nax = axs[0, 0]\nax.plot(x, y1, label=\"sin(x)\", color=\"blue\", linestyle='-', linewidth=2)\nax.set_title(\"Plot 1: Sine Wave\", fontsize=14, fontweight=\"bold\")\nax.set_xlabel(\"X-axis\")\nax.set_ylabel(\"sin(x)\")\nax.legend(loc=\"upper right\")\nax.grid(True)\n\n# Add a text box with summary details in subplot 1\ntextstr = \"Key Points:\\n• sin(x) oscillates between -1 and 1\\n• Period = 2π\"\nprops = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\nax.text(0.05, 0.95, textstr, transform=ax.transAxes, fontsize=10,\n        verticalalignment='top', bbox=props)\n\n# -----------------------------------------------------------------------------\n# Subplot 2: Cosine Wave\n# -----------------------------------------------------------------------------\nax = axs[0, 1]\nax.plot(x, y2, label=\"cos(x)\", color=\"red\", linestyle='--', linewidth=2)\nax.set_title(\"Plot 2: Cosine Wave\", fontsize=14, fontweight=\"bold\")\nax.set_xlabel(\"X-axis\")\nax.set_ylabel(\"cos(x)\")\nax.legend(loc=\"upper right\")\nax.grid(True)\n\n# Add a header text inside subplot 2\nheader_text = \"Important Notes:\\n1. Cosine starts at 1\\n2. Alternates sign every half-cycle\"\nax.text(0.05, 0.85, header_text, transform=ax.transAxes, fontsize=9,\n        verticalalignment='top', bbox=dict(boxstyle=\"round,pad=0.3\", facecolor=\"lavender\", alpha=0.6))\n\n# -----------------------------------------------------------------------------\n# Subplot 3: Double Sine\n# -----------------------------------------------------------------------------\nax = axs[1, 0]\nax.plot(x, y3, label=\"sin(2x)\", color=\"green\", linestyle='-.', linewidth=2)\nax.set_title(\"Plot 3: Double Frequency Sine\", fontsize=14, fontweight=\"bold\")\nax.set_xlabel(\"X-axis\")\nax.set_ylabel(\"sin(2x)\")\nax.legend(loc=\"upper right\")\nax.grid(True)\n\n# Insert a labeled list of observations\nobservations = \"Observations:\\n- Frequency doubled\\n- Zero crossings increased\\n- Amplitude remains same\"\nax.text(0.5, 0.1, observations, transform=ax.transAxes, fontsize=10,\n        verticalalignment='bottom', horizontalalignment='center',\n        bbox=dict(boxstyle=\"round\", facecolor=\"lightblue\", alpha=0.4))\n\n# -----------------------------------------------------------------------------\n# Subplot 4: Double Cosine\n# -----------------------------------------------------------------------------\nax = axs[1, 1]\nax.plot(x, y4, label=\"cos(2x)\", color=\"purple\", linestyle=':', linewidth=2)\nax.set_title(\"Plot 4: Double Frequency Cosine\", fontsize=14, fontweight=\"bold\")\nax.set_xlabel(\"X-axis\")\nax.set_ylabel(\"cos(2x)\")\nax.legend(loc=\"upper right\")\nax.grid(True)\n\n# Add a section with structured bullet points within subplot 4\ninfo_text = (\n    \"Detailed Info:\\n\"\n    \"• Data Generated using numpy\\n\"\n    \"• Plotted with matplotlib\\n\"\n    \"• Double frequency gives:\\n\"\n    \"    - More oscillations\\n\"\n    \"    - Condensed wave pattern\"\n)\nax.text(0.05, 0.95, info_text, transform=ax.transAxes, fontsize=9,\n        verticalalignment='top', bbox=dict(boxstyle='round', facecolor='mistyrose', alpha=0.6))\n\n\n# =============================================================================\n# SECTION 3: Overall Figure Title and Annotations\n# =============================================================================\n# Set the main title for the entire figure\nfig.suptitle(\"Comprehensive Trigonometric Functions Overview\", fontsize=18, fontweight=\"bold\")\n\n# Add a footer annotation with a summary list from data_summary\nfooter_text = \"Data Summary:\\n\" + \"\\n\".join(data_summary)\n# Place the footer at the bottom of the figure\nfig.text(0.5, 0.02, footer_text, ha=\"center\", fontsize=10, bbox=dict(facecolor='lightgray', alpha=0.4))\n\n# =============================================================================\n# Finalizing and Rendering the Plot\n# =============================================================================\n# Save the figure (optional)\n# plt.savefig(\"trigonometric_overview.png\", dpi=300, bbox_inches=\"tight\")\n\n# Display the complete Matplotlib figure\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX34_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Trigonometric Functions Overview",
                                "Plot 1: Sine Wave",
                                "Plot 2: Cosine Wave",
                                "Plot 3: Double Frequency Sine",
                                "Plot 4: Double Frequency Cosine",
                                "X-axis",
                                "sin(x)",
                                "cos(x)",
                                "sin(2x)",
                                "cos(2x)",
                                "blue solid",
                                "red dashed",
                                "green dash-dot",
                                "purple dotted",
                                "Key Points:",
                                "Important Notes:",
                                "Data Summary:",
                                "wheat",
                                "lavender",
                                "lightblue",
                                "mistyrose",
                                "lightgray"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX34_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX34_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall title at the top of the figure?",
                                "How many subplots are arranged in a 2×2 grid?",
                                "What is the title of the first subplot?",
                                "What is the horizontal axis label in every subplot?",
                                "What is the vertical axis label of the third subplot?",
                                "What line style and color is used for the cosine function in the second subplot?",
                                "Where is the legend located within each subplot?",
                                "What header and position identify the text box in the first subplot?",
                                "What header text and background color are featured in the fourth subplot’s information box?",
                                "What does the footer section of the figure display?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX34_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Trigonometric Functions Overview",
                                "4",
                                "Plot 1: Sine Wave",
                                "X-axis",
                                "sin(2x)",
                                "Red dashed",
                                "Upper right corner",
                                "Key Points: located in the upper left with a wheat-like background",
                                "Includes detailed cosine points, on a mistyrose-like background positioned in the upper left",
                                "Data Summary: listing the number of data points, the x range, and the expressions for y1, y2, y3, and y4"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n\"\"\"\nMatplotlib Visual Conversion Example\n-------------------------------------\nThis standalone script demonstrates a multi-panel layout with headings, sections,\nlists, and labeled values using Matplotlib.\n\nSections:\n  1. Sine Wave Plot        - A blue line plot of sin(x)\n  2. Cosine Wave Plot      - A red line plot of cos(x)\n  3. Random Scatter Plot   - A scatter plot with random data points & annotations\n  4. Data Summary          - A text-based table showing statistics\n\nEach section is clearly labeled with annotations to establish a visible layout\nand hierarchy.\n\"\"\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# ---------------------------\n# Create the overall figure\n# ---------------------------\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle('Matplotlib Visual Conversion Example', fontsize=18, fontweight='bold')\n\n# ---------------------------------------------------\n# Section 1: Top Left Plot - Sine Wave with Annotations\n# ---------------------------------------------------\nax1 = axs[0, 0]\nx = np.linspace(0, 2 * np.pi, 200)\ny_sin = np.sin(x)\nax1.plot(x, y_sin, color='blue', linewidth=2, label='sin(x)')\nax1.set_title('1. Sine Wave Plot', fontsize=14, fontweight='bold')\nax1.set_xlabel('x (radians)')\nax1.set_ylabel('Amplitude')\nax1.legend(loc='upper right')\n# Text annotation as a subheading\nax1.text(0.05, 0.92, 'A. Sine Function', transform=ax1.transAxes, fontsize=10,\n         verticalalignment='top', bbox=dict(boxstyle='round', facecolor='wheat', alpha=0.5))\n\n# ------------------------------------------------------\n# Section 2: Top Right Plot - Cosine Wave with Detailed Labels\n# ------------------------------------------------------\nax2 = axs[0, 1]\ny_cos = np.cos(x)\nax2.plot(x, y_cos, color='red', linewidth=2, label='cos(x)')\nax2.set_title('2. Cosine Wave Plot', fontsize=14, fontweight='bold')\nax2.set_xlabel('x (radians)')\nax2.set_ylabel('Amplitude')\nax2.legend(loc='upper right')\n# Text annotation as a subheading\nax2.text(0.05,",
            "feature_requirements": "• An overall figure with a bold title \"Matplotlib Visual Conversion Example\" that is clearly displayed at the top of the rendered output.  \n• A layout divided into four panels arranged in a 2×2 grid.  \n• In the top‐left panel:  \n – A blue sine wave line representing sin(x) plotted over the interval from 0 to 2π.  \n – X-axis labeled \"x (radians)\" and y-axis labeled \"Amplitude\".  \n – A panel title \"1. Sine Wave Plot\" in a bold, large font.  \n – A legend showing \"sin(x)\" positioned at the upper right.  \n – A text annotation \"A. Sine Function\" placed near the top of the panel within a rounded box with a wheat-colored background.  \n• In the top‐right panel:  \n – A red cosine wave line representing cos(x) plotted over the same interval as the sine wave.  \n – X-axis labeled \"x (radians)\" and y-axis labeled \"Amplitude\".  \n – A panel title \"2. Cosine Wave Plot\" in a bold, large font.  \n – A legend showing \"cos(x)\" positioned at the upper right.  \n• All labels, annotations, and legends should be clearly rendered as distinct visual elements so that their positions and styles (e.g., fonts, colors, boxed annotations) are verifiable upon rendering.",
            "task_id": "08XX35",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall figure title?",
                "How many panels are displayed in the layout?",
                "How are the panels arranged?",
                "What function is plotted in the top-left panel?",
                "What color is used for the sine wave in the top-left panel?",
                "What are the axis labels in the sine wave plot?",
                "What is the panel title in the top-left panel?",
                "What text annotation appears in the top-left panel and what are its styling details?",
                "What function is plotted in the top-right panel and what is its color?"
            ],
            "VQA_answers": [
                "Matplotlib Visual Conversion Example",
                "4",
                "In a 2×2 grid",
                "sin(x)",
                "blue",
                "x (radians) for x-axis and Amplitude for y-axis",
                "1. Sine Wave Plot",
                "A. Sine Function in a rounded box with a wheat-colored background",
                "cos(x) in red"
            ],
            "raw_output_metric": [
                "Matplotlib Visual Conversion Example",
                "1. Sine Wave Plot",
                "2. Cosine Wave Plot",
                "x (radians)",
                "Amplitude",
                "sin(x)",
                "cos(x)",
                "A. Sine Function"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX35_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n\"\"\"\nMatplotlib Visual Conversion Example\n-------------------------------------\nThis standalone script demonstrates a multi-panel layout with headings, sections,\nlists, and labeled values using Matplotlib.\n\nSections:\n  1. Sine Wave Plot        - A blue line plot of sin(x)\n  2. Cosine Wave Plot      - A red line plot of cos(x)\n  3. Random Scatter Plot   - A scatter plot with random data points & annotations\n  4. Data Summary          - A text-based table showing statistics\n\nEach section is clearly labeled with annotations to establish a visible layout\nand hierarchy.\n\"\"\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# ---------------------------\n# Create the overall figure\n# ---------------------------\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle('Matplotlib Visual Conversion Example', fontsize=18, fontweight='bold')\n\n# ---------------------------------------------------\n# Section 1: Top Left Plot - Sine Wave with Annotations\n# ---------------------------------------------------\nax1 = axs[0, 0]\nx = np.linspace(0, 2 * np.pi, 200)\ny_sin = np.sin(x)\nax1.plot(x, y_sin, color='blue', linewidth=2, label='sin(x)')\nax1.set_title('1. Sine Wave Plot', fontsize=14, fontweight='bold')\nax1.set_xlabel('x (radians)')\nax1.set_ylabel('Amplitude')\nax1.legend(loc='upper right')\n# Text annotation as a subheading\nax1.text(0.05, 0.92, 'A. Sine Function', transform=ax1.transAxes, fontsize=10,\n         verticalalignment='top', bbox=dict(boxstyle='round', facecolor='wheat', alpha=0.5))\n\n# ------------------------------------------------------\n# Section 2: Top Right Plot - Cosine Wave with Detailed Labels\n# ------------------------------------------------------\nax2 = axs[0, 1]\ny_cos = np.cos(x)\nax2.plot(x, y_cos, color='red', linewidth=2, label='cos(x)')\nax2.set_title('2. Cosine Wave Plot', fontsize=14, fontweight='bold')\nax2.set_xlabel('x (radians)')\nax2.set_ylabel('Amplitude')\nax2.legend(loc='upper right')\n# Text annotation as a subheading\nax2.text(0.05,"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX35_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Matplotlib Visual Conversion Example",
                                "1. Sine Wave Plot",
                                "2. Cosine Wave Plot",
                                "x (radians)",
                                "Amplitude",
                                "sin(x)",
                                "cos(x)",
                                "A. Sine Function"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX35_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX35_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall figure title?",
                                "How many panels are displayed in the layout?",
                                "How are the panels arranged?",
                                "What function is plotted in the top-left panel?",
                                "What color is used for the sine wave in the top-left panel?",
                                "What are the axis labels in the sine wave plot?",
                                "What is the panel title in the top-left panel?",
                                "What text annotation appears in the top-left panel and what are its styling details?",
                                "What function is plotted in the top-right panel and what is its color?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX35_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Matplotlib Visual Conversion Example",
                                "4",
                                "In a 2×2 grid",
                                "sin(x)",
                                "blue",
                                "x (radians) for x-axis and Amplitude for y-axis",
                                "1. Sine Wave Plot",
                                "A. Sine Function in a rounded box with a wheat-colored background",
                                "cos(x) in red"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle\n\n# Create figure and axis with a specific size\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Disable default axes for a clean layout\nax.axis('off')\n\n# Set the main title at the top center of the figure\nax.text(0.5, 0.95, \"Dashboard Overview\", ha='center', va='center',\n        fontsize=24, weight='bold', transform=ax.transAxes)\n\n# --- Drawing Main Sections ---\n# Define rectangles to simulate different sections on the plot\nheader_rect   = Rectangle((0.05, 0.8), 0.9, 0.1, edgecolor='black',\n                            facecolor='#d0e1f9', lw=2)\noverview_rect = Rectangle((0.05, 0.6), 0.42, 0.15, edgecolor='black',\n                          facecolor='#fce4d6', lw=2)\ndetail_rect   = Rectangle((0.53, 0.6), 0.42, 0.15, edgecolor='black',\n                          facecolor='#d5e8d4', lw=2)\nanalysis_rect = Rectangle((0.05, 0.35), 0.9, 0.2, edgecolor='black',\n                          facecolor='#e8dae5', lw=2)\nfooter_rect   = Rectangle((0.05, 0.",
            "feature_requirements": "• The TikZ output must display a canvas that simulates an overall figure size equivalent to a 10×8 unit figure, with no visible axes or grid lines.  \n• It must include a centered title \"Dashboard Overview\" positioned at 50% of the width and 95% of the height of the canvas, rendered in bold with a font size of 24.  \n• A header rectangle must be drawn with its lower‐left corner at (0.05, 0.8), a width of 0.9, and a height of 0.1, featuring a black border (line width 2) and a fill color of #d0e1f9.  \n• An overview rectangle must be rendered at position (0.05, 0.6) with a width of 0.42 and a height of 0.15, outlined in black with a line width of 2 and filled with the color #fce4d6.  \n• A detail rectangle must appear at the coordinates (0.53, 0.6) with the same dimensions as the overview rectangle (width 0.42, height 0.15), outlined with a black border (line width 2) and filled with the color #d5e8d4.  \n• An analysis rectangle must be drawn starting at (0.05, 0.35) with a width of 0.9 and a height of 0.2, using a black border (line width 2) and filled with the color #e8dae5.",
            "task_id": "08XX36",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the title displayed at the top of the canvas?",
                "Where is the title positioned on the canvas?",
                "What is the font size and style of the title text?",
                "What are the dimensions and position of the header rectangle?",
                "What fill color does the header rectangle use?",
                "What are the dimensions and location of the overview rectangle?",
                "What fill color is applied to the overview rectangle?",
                "Where is the detail rectangle placed and what are its dimensions?",
                "What is the fill color of the detail rectangle?",
                "How is the analysis rectangle defined in terms of its position and size?"
            ],
            "VQA_answers": [
                "Dashboard Overview",
                "Centered at 50% width and 95% height",
                "24 and bold",
                "Lower-left at (0.05, 0.8), width 0.9, height 0.1",
                "#d0e1f9",
                "At (0.05, 0.6) with width 0.42 and height 0.15",
                "#fce4d6",
                "At (0.53, 0.6) with width 0.42 and height 0.15",
                "#d5e8d4",
                "Starting at (0.05, 0.35) with width 0.9 and height 0.2"
            ],
            "raw_output_metric": [
                "tikzpicture",
                "Dashboard Overview",
                "50%",
                "95%",
                "24",
                "bold",
                "(0.05,0.8)",
                "0.9",
                "0.1",
                "#d0e1f9",
                "line width=2",
                "(0.05,0.6)",
                "0.42",
                "0.15",
                "#fce4d6",
                "(0.53,0.6)",
                "#d5e8d4",
                "(0.05,0.35)",
                "0.2",
                "#e8dae5",
                "10",
                "8"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX36_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle\n\n# Create figure and axis with a specific size\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Disable default axes for a clean layout\nax.axis('off')\n\n# Set the main title at the top center of the figure\nax.text(0.5, 0.95, \"Dashboard Overview\", ha='center', va='center',\n        fontsize=24, weight='bold', transform=ax.transAxes)\n\n# --- Drawing Main Sections ---\n# Define rectangles to simulate different sections on the plot\nheader_rect   = Rectangle((0.05, 0.8), 0.9, 0.1, edgecolor='black',\n                            facecolor='#d0e1f9', lw=2)\noverview_rect = Rectangle((0.05, 0.6), 0.42, 0.15, edgecolor='black',\n                          facecolor='#fce4d6', lw=2)\ndetail_rect   = Rectangle((0.53, 0.6), 0.42, 0.15, edgecolor='black',\n                          facecolor='#d5e8d4', lw=2)\nanalysis_rect = Rectangle((0.05, 0.35), 0.9, 0.2, edgecolor='black',\n                          facecolor='#e8dae5', lw=2)\nfooter_rect   = Rectangle((0.05, 0."
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX36_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "tikzpicture",
                                "Dashboard Overview",
                                "50%",
                                "95%",
                                "24",
                                "bold",
                                "(0.05,0.8)",
                                "0.9",
                                "0.1",
                                "#d0e1f9",
                                "line width=2",
                                "(0.05,0.6)",
                                "0.42",
                                "0.15",
                                "#fce4d6",
                                "(0.53,0.6)",
                                "#d5e8d4",
                                "(0.05,0.35)",
                                "0.2",
                                "#e8dae5",
                                "10",
                                "8"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX36_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX36_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the canvas?",
                                "Where is the title positioned on the canvas?",
                                "What is the font size and style of the title text?",
                                "What are the dimensions and position of the header rectangle?",
                                "What fill color does the header rectangle use?",
                                "What are the dimensions and location of the overview rectangle?",
                                "What fill color is applied to the overview rectangle?",
                                "Where is the detail rectangle placed and what are its dimensions?",
                                "What is the fill color of the detail rectangle?",
                                "How is the analysis rectangle defined in terms of its position and size?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX36_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard Overview",
                                "Centered at 50% width and 95% height",
                                "24 and bold",
                                "Lower-left at (0.05, 0.8), width 0.9, height 0.1",
                                "#d0e1f9",
                                "At (0.05, 0.6) with width 0.42 and height 0.15",
                                "#fce4d6",
                                "At (0.53, 0.6) with width 0.42 and height 0.15",
                                "#d5e8d4",
                                "Starting at (0.05, 0.35) with width 0.9 and height 0.2"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# =============================================================================\n# SECTION 1: Data Initialization and Settings\n# =============================================================================\n# Generate continuous data for mathematical functions\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\n\n# Define categorical data for a bar plot\ncategories = ['Alpha', 'Beta', 'Gamma', 'Delta']\nvalues = [15, 30, 10, 45]\n\n# =============================================================================\n# SECTION 2: Create Matplotlib Figure with Structured Subplots\n# =============================================================================\n# Create a grid of subplots: 2 rows x 2 columns, with a custom figure size\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle(\"Comprehensive Data Visualization\", fontsize=18, fontweight='bold')\n\n# -----------------------------------------------------------------------------\n# SUBPLOT 2.1: Sine Function Plot\n# -----------------------------------------------------------------------------\naxs[0, 0].plot(x, y_sin, color='blue', linewidth=2, label='sin(x)')\naxs[0, 0].set_title(\"Sine Wave\", fontsize=14)\naxs[0, 0].set_xlabel(\"X Value\")\naxs[0, 0].set_ylabel(\"sin(x)\")\naxs[0, 0].grid(True, linestyle='--', alpha=0.6)\naxs[0, 0].legend(loc='upper right')\n\n# -----------------------------------------------------------------------------\n# SUBPLOT 2.2: Cosine Function Plot\n# -----------------------------------------------------------------------------\naxs[0, 1].plot(x, y_cos, color='green', linestyle='--', linewidth=2, label='cos(x)')\naxs[0, 1].set_title(\"Cosine Wave\", fontsize=14)\naxs[0, 1].set_xlabel(\"X Value\")\naxs[0, 1].set_ylabel(\"cos(x)\")\naxs[0, 1].grid(True, linestyle='--', alpha=0.6)\naxs[0, 1].legend(loc='upper right')\n\n# -----------------------------------------------------------------------------\n# SUBPLOT 2.3: Bar Chart for Categorical Data\n# -----------------------------------------------------------------------------\nbars = axs[1, 0].bar(categories, values, color='orange', edgecolor='black')\naxs[1, 0].set_title(\"Category Distribution\", fontsize=14)\naxs[1, 0].set_xlabel(\"Categories\")\naxs[1, 0].set_ylabel(\"Values\")\n\n# Annotate each bar with its numerical value\nfor bar in bars:\n    height = bar.get_height()\n    axs[1, 0].text(\n        bar.get_x() + bar.get_width()/2, \n        height + 1,\n        f'{height}', \n        ha='center',\n        va='bottom',\n        fontsize=10,\n        color='black'\n    )\n\n# -----------------------------------------------------------------------------\n# SUBPLOT 2.4: Informational Text with Headings and Lists\n# -----------------------------------------------------------------------------\n# Turn off the axis since we will display formatted text\naxs[1, 1].axis('off')\n\n# Construct a formatted multiline text containing headings, sections, and lists\ninfo_text = (\n    \"***** Overview Report *****\\n\\n\"\n    \"Section A: Trigonometric Analysis\\n\"\n    \"---------------------------------\\n\"\n    \"• Average sin(x): {:.2f}\\n\"\n    \"• Average cos(x): {:.2f}\\n\\n\"\n    \"Section B: Category Metrics\\n\"\n    \"---------------------------\\n\"\n    \"• Total Categories: {}\\n\"\n    \"• Mean Value: {:.2f}\\n\"\n    \"• Value Distribution: {}\\n\\n\"\n    \"===============================\"\n).format(\n    np.mean(y_sin),\n    np.mean(y_cos),\n    len(categories),\n    np.mean(values),\n    ', '.join(str(v) for v in values)\n)\n\n# Add the text to the subplot with a slight border box for clarity\naxs[1, 1].text(0.05, 0.95, info_text, fontsize=12, \n               verticalalignment='top', family='monospace',\n               bbox=dict(facecolor='whitesmoke', edgecolor='gray', boxstyle='round'))\n\n# =============================================================================\n# SECTION 3: Layout Adjustments and Final Rendering\n# =============================================================================\nplt.tight_layout(rect=[0, 0, 1, 0.96])\nplt.show()\n\n# =============================================================================\n# End of the Matplotlib Visualization Script\n# =============================================================================\nprint(\"Visualization generated successfully!\")\n</code>",
            "feature_requirements": "• A main title \"Comprehensive Data Visualization\" must be clearly displayed above the entire grid of subplots.  \n• The overall diagram must be divided into a 2×2 grid of panels.  \n• The top‐left panel should display a \"Sine Wave\" plot with axes labeled \"X Value\" and \"sin(x)\", showing a blue line representing the sine function, including a legend positioned at the upper right and visible dashed grid lines.  \n• The top‐right panel must present a \"Cosine Wave\" plot with axes labeled \"X Value\" and \"cos(x)\", featuring a green dashed line for the cosine function, a legend at the upper right, and visible dashed grid lines.  \n• The bottom‐left panel is required to contain a bar chart titled \"Category Distribution\" with four bars corresponding to the categories \"Alpha\", \"Beta\", \"Gamma\", and \"Delta\"; the bars must be orange with black borders and each bar must be annotated above with its numerical value (15, 30, 10, and 45, respectively).  \n• The bottom‐right panel should have no axis lines and must display a formatted multiline informational text block that includes:  \n  – A header reading \"***** Overview Report *****\"  \n  – A section \"Section A: Trigonometric Analysis\" listing the average values of sin(x) and cos(x) (formatted to two decimal places)  \n  – A section \"Section B: Category Metrics\" showing the total number of categories, a mean value (formatted to two decimal places), and a list of values in a comma-separated format  \n  – The text must appear in a monospace font within a bordered box.  \n• The layout must ensure that all elements (plots, annotations, and text) are well-spaced and free from overlap, resembling a neatly adjusted final rendering.",
            "task_id": "08XX37",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed above the grid?",
                "How many panels are arranged in the overall diagram?",
                "Which panel shows the Sine Wave plot?",
                "What are the axis labels on the Sine Wave plot?",
                "What color and style is used for the Sine Wave line?",
                "What are the axis labels on the Cosine Wave plot in the top-right panel?",
                "What color and style is used for the Cosine Wave line?",
                "How many bars are displayed in the Category Distribution bar chart and what are their corresponding categories?",
                "What are the annotated numerical values above each bar in the Category Distribution chart?",
                "What is the header text in the bottom-right informational text block?",
                "What font style is applied to the informational text in the bottom-right panel?"
            ],
            "VQA_answers": [
                "Comprehensive Data Visualization",
                "4",
                "Top-left",
                "X Value and sin(x)",
                "Blue solid line",
                "X Value and cos(x)",
                "Green dashed line",
                "4 bars for Alpha, Beta, Gamma, and Delta",
                "15, 30, 10, and 45",
                "***** Overview Report *****",
                "Monospace"
            ],
            "raw_output_metric": [
                "Comprehensive Data Visualization",
                "2×2 grid",
                "Sine Wave",
                "X Value",
                "sin(x)",
                "blue",
                "legend",
                "dashed grid",
                "Cosine Wave",
                "cos(x)",
                "green",
                "bar chart",
                "Category Distribution",
                "Alpha",
                "Beta",
                "Gamma",
                "Delta",
                "15",
                "30",
                "10",
                "45",
                "***** Overview Report *****",
                "Section A: Trigonometric Analysis",
                "Section B: Category Metrics",
                "monospace",
                "bordered box"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX37_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# =============================================================================\n# SECTION 1: Data Initialization and Settings\n# =============================================================================\n# Generate continuous data for mathematical functions\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\n\n# Define categorical data for a bar plot\ncategories = ['Alpha', 'Beta', 'Gamma', 'Delta']\nvalues = [15, 30, 10, 45]\n\n# =============================================================================\n# SECTION 2: Create Matplotlib Figure with Structured Subplots\n# =============================================================================\n# Create a grid of subplots: 2 rows x 2 columns, with a custom figure size\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle(\"Comprehensive Data Visualization\", fontsize=18, fontweight='bold')\n\n# -----------------------------------------------------------------------------\n# SUBPLOT 2.1: Sine Function Plot\n# -----------------------------------------------------------------------------\naxs[0, 0].plot(x, y_sin, color='blue', linewidth=2, label='sin(x)')\naxs[0, 0].set_title(\"Sine Wave\", fontsize=14)\naxs[0, 0].set_xlabel(\"X Value\")\naxs[0, 0].set_ylabel(\"sin(x)\")\naxs[0, 0].grid(True, linestyle='--', alpha=0.6)\naxs[0, 0].legend(loc='upper right')\n\n# -----------------------------------------------------------------------------\n# SUBPLOT 2.2: Cosine Function Plot\n# -----------------------------------------------------------------------------\naxs[0, 1].plot(x, y_cos, color='green', linestyle='--', linewidth=2, label='cos(x)')\naxs[0, 1].set_title(\"Cosine Wave\", fontsize=14)\naxs[0, 1].set_xlabel(\"X Value\")\naxs[0, 1].set_ylabel(\"cos(x)\")\naxs[0, 1].grid(True, linestyle='--', alpha=0.6)\naxs[0, 1].legend(loc='upper right')\n\n# -----------------------------------------------------------------------------\n# SUBPLOT 2.3: Bar Chart for Categorical Data\n# -----------------------------------------------------------------------------\nbars = axs[1, 0].bar(categories, values, color='orange', edgecolor='black')\naxs[1, 0].set_title(\"Category Distribution\", fontsize=14)\naxs[1, 0].set_xlabel(\"Categories\")\naxs[1, 0].set_ylabel(\"Values\")\n\n# Annotate each bar with its numerical value\nfor bar in bars:\n    height = bar.get_height()\n    axs[1, 0].text(\n        bar.get_x() + bar.get_width()/2, \n        height + 1,\n        f'{height}', \n        ha='center',\n        va='bottom',\n        fontsize=10,\n        color='black'\n    )\n\n# -----------------------------------------------------------------------------\n# SUBPLOT 2.4: Informational Text with Headings and Lists\n# -----------------------------------------------------------------------------\n# Turn off the axis since we will display formatted text\naxs[1, 1].axis('off')\n\n# Construct a formatted multiline text containing headings, sections, and lists\ninfo_text = (\n    \"***** Overview Report *****\\n\\n\"\n    \"Section A: Trigonometric Analysis\\n\"\n    \"---------------------------------\\n\"\n    \"• Average sin(x): {:.2f}\\n\"\n    \"• Average cos(x): {:.2f}\\n\\n\"\n    \"Section B: Category Metrics\\n\"\n    \"---------------------------\\n\"\n    \"• Total Categories: {}\\n\"\n    \"• Mean Value: {:.2f}\\n\"\n    \"• Value Distribution: {}\\n\\n\"\n    \"===============================\"\n).format(\n    np.mean(y_sin),\n    np.mean(y_cos),\n    len(categories),\n    np.mean(values),\n    ', '.join(str(v) for v in values)\n)\n\n# Add the text to the subplot with a slight border box for clarity\naxs[1, 1].text(0.05, 0.95, info_text, fontsize=12, \n               verticalalignment='top', family='monospace',\n               bbox=dict(facecolor='whitesmoke', edgecolor='gray', boxstyle='round'))\n\n# =============================================================================\n# SECTION 3: Layout Adjustments and Final Rendering\n# =============================================================================\nplt.tight_layout(rect=[0, 0, 1, 0.96])\nplt.show()\n\n# =============================================================================\n# End of the Matplotlib Visualization Script\n# =============================================================================\nprint(\"Visualization generated successfully!\")\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX37_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization",
                                "2×2 grid",
                                "Sine Wave",
                                "X Value",
                                "sin(x)",
                                "blue",
                                "legend",
                                "dashed grid",
                                "Cosine Wave",
                                "cos(x)",
                                "green",
                                "bar chart",
                                "Category Distribution",
                                "Alpha",
                                "Beta",
                                "Gamma",
                                "Delta",
                                "15",
                                "30",
                                "10",
                                "45",
                                "***** Overview Report *****",
                                "Section A: Trigonometric Analysis",
                                "Section B: Category Metrics",
                                "monospace",
                                "bordered box"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX37_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX37_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed above the grid?",
                                "How many panels are arranged in the overall diagram?",
                                "Which panel shows the Sine Wave plot?",
                                "What are the axis labels on the Sine Wave plot?",
                                "What color and style is used for the Sine Wave line?",
                                "What are the axis labels on the Cosine Wave plot in the top-right panel?",
                                "What color and style is used for the Cosine Wave line?",
                                "How many bars are displayed in the Category Distribution bar chart and what are their corresponding categories?",
                                "What are the annotated numerical values above each bar in the Category Distribution chart?",
                                "What is the header text in the bottom-right informational text block?",
                                "What font style is applied to the informational text in the bottom-right panel?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX37_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization",
                                "4",
                                "Top-left",
                                "X Value and sin(x)",
                                "Blue solid line",
                                "X Value and cos(x)",
                                "Green dashed line",
                                "4 bars for Alpha, Beta, Gamma, and Delta",
                                "15, 30, 10, and 45",
                                "***** Overview Report *****",
                                "Monospace"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ============================================================================\n# Section: Data Preparation\n# ============================================================================\n# Generate some synthetic data\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\ny_exp = np.exp(-x / 3) * np.sin(3 * x)\nnoise = np.random.normal(0, 0.1, len(x))\ny_noisy = y_sin + noise\n\n# ============================================================================\n# Section: Figure Setup\n# ============================================================================\n# Create a figure with multiple subplots arranged in 2 rows x 3 columns:\nfig = plt.figure(constrained_layout=True, figsize=(14, 10))\nsubfigs = fig.subfigures(2, 1, wspace=0.07, hspace=0.07)\n\n# Top subfigure: Overview Plots\ntop_grid = subfigs[0].subplots(1, 3)\nsubfigs[0].suptitle('Overview Plots', fontsize=16, fontweight='bold')\n\n# Bottom subfigure: Detailed Analysis\nbottom_grid = subfigs[1].subplots(1, 3)\nsubfigs[1].suptitle('Detailed Analysis', fontsize=16, fontweight='bold')\n\n# ============================================================================\n# Top Section: Overview Plots\n# ============================================================================\n# Plot 1: Sine Wave with Noisy Data\nax_top1 = top_grid[0]\nax_top1.plot(x, y_sin, 'b-', label='Sine')\nax_top1.plot(x, y_noisy, 'ro', label='Sine + Noise', markersize=3)\nax_top1.set_title('Plot A: Sine vs Noisy Sine', fontsize=12, fontweight='bold')\nax_top1.set_xlabel('x')\nax_top1.set_ylabel('sin(x)')\nax_top1.legend(loc='upper right')\nax_top1.grid(True)\n\n# Plot 2: Cosine Function\nax_top2 = top_grid[1]\nax_top2.plot(x, y_cos, 'g--', linewidth=2, label='Cosine')\nax_top2.set_title('Plot B: Cosine Function', fontsize=12, fontweight='bold')\nax_top2.set_xlabel('x')\nax_top2.set_ylabel('cos(x)')\nax_top2.legend(loc='upper right')\nax_top2.grid(True)\n\n# Plot 3: Exponential Decay Sine\nax_top3 = top_grid[2]\nax_top3.plot(x, y_exp, 'm-.', linewidth=2, label='Exp Sine')\nax_top3.set_title('Plot C: Exp Decay with Sine', fontsize=12, fontweight='bold')\nax_top3.set_xlabel('x')\nax_top3.set_ylabel('Amplitude')\nax_top3.legend(loc='upper right')\nax_top3.grid(True)\n\n# ============================================================================\n# Bottom Section: Detailed Analysis\n# ============================================================================\n# Plot 4: Combined Data with Annotations\nax_bot1 = bottom_grid[0]\nax_bot1.plot(x, y_sin, 'b-', label='Sine')\nax_bot1.plot(x, y_cos, 'g--', label='Cosine')\nax_bot1.set_title('Plot D: Combined Trig Functions', fontsize=12, fontweight='bold')\nax_bot1.set_xlabel('x')\nax_bot1.set_ylabel('Function Value')\nax_bot1.legend(loc='upper right')\nax_bot1.grid(True)\n# Listing key metrics on the plot using text boxes\nmetrics_text = (\n    \"• Peak Sine: {:.2f}\\n\"\n    \"• Trough Sine: {:.2f}\\n\"\n    \"• Peak Cosine: {:.2f}\\n\"\n    \"• Trough Cosine: {:.2f}\"\n).format(np.max(y_sin), np.min(y_sin), np.max(y_cos), np.min(y_cos))\nax_bot1.text(0.05, 0.95, metrics_text, transform=ax_bot1.transAxes,\n             fontsize=9, verticalalignment='top',\n             bbox=dict(boxstyle='round', facecolor='wheat', alpha=0.5))\n\n# Plot 5: Sine Wave with Markers and Detailed Annotations\nax_bot2 = bottom_grid[1]\nax_bot2.plot(x, y_sin, 'b-', linewidth=2, label='Sine Wave')\n# Marking specific points\npt1 = (x[25], y_sin[25])\npt2 = (x[75], y_sin[75])\nax_bot2.plot(pt1[0], pt1[1], 'ro', markersize=8)\nax_bot2.plot(pt2[0], pt2[1], 'ro', markersize=8)\nax_bot2.annotate(f\"Point A\\n({pt1[0]:.2f}, {pt1[1]:.2f})\", xy=pt1, xytext=(pt1[0] + 0.5, pt1[1] + 0.3),\n                 arrowprops=dict(facecolor='black', shrink=0.05))\nax_bot2.annotate(f\"Point B\\n({pt2[0]:.2f}, {pt2[1]:.2f})\", xy=pt2, xytext=(pt2[0] - 2, pt2[1] - 0.3),\n                 arrowprops=dict(facecolor='black', shrink=0.05))\nax_bot2.set_title('Plot E: Sine with Key Points', fontsize=12, fontweight='bold')\nax_bot2.set_xlabel('x')\nax_bot2.set_ylabel('sin(x)')\nax_bot2.legend(loc='upper right')\nax_bot2.grid(True)\n\n# Plot 6: Comparison List Plot\nax_bot3 = bottom_grid[2]\n# Create a bar chart comparing statistics\ncategories = ['Mean', 'Std Dev', 'Max', 'Min']\nsine_stats = [np.mean(y_sin), np.std(y_sin), np.max(y_sin), np.min(y_sin)]\ncosine_stats = [np.mean(y_cos), np.std(y_cos), np.max(y_cos), np.min(y_cos)]\nx_pos = np.arange(len(categories))\nwidth = 0.35\n\nbars1 = ax_bot3.bar(x_pos - width/2, sine_stats, width, label='Sine', color='skyblue')\nbars2 = ax_bot3.bar(x_pos + width/2, cosine_stats, width, label='Cosine', color='lightgreen')\nax_bot3.set_xticks(x_pos)\nax_bot3.set_xticklabels(categories)\nax_bot3.set_title('Plot F: Statistical Comparison', fontsize=12, fontweight='bold')\nax_bot3.set_ylabel('Value')\nax_bot3.legend(loc='upper right')\nax_bot3.grid(True, axis='y', linestyle='--', alpha=0.7)\n\n# Annotate each bar with its value\ndef annotate_bars(bars):\n    for bar in bars:\n        height = bar.get_height()\n        ax_bot3.annotate(f'{height:.2f}', \n                         xy=(bar.get_x() + bar.get_width() / 2, height),\n                         xytext=(0, 3),  # 3 points vertical offset\n                         textcoords=\"offset points\",\n                         ha='center', va='bottom', fontsize=8)\n\nannotate_bars(bars1)\nannotate_bars(bars2)\n\n# ============================================================================\n# Global Figure Annotations and Metadata\n# ============================================================================\n# Adding a common heading and footer note with key details\nfig.suptitle('Comprehensive Data Visualization Dashboard',\n             fontsize=18, fontweight='bold', y=0.98, color='navy')\n\n# Adding a footer text box with a list of configuration parameters\nfooter_text = (\n    \"Configuration Parameters:\\n\"\n    \" - Data Seed: 42\\n\"\n    \" - Number of Data Points: 100\\n\"\n    \" - Plots: Overview (3), Detailed (3)\\n\"\n    \" - Visualization Library: Matplotlib\\n\"\n    \" - Render Mode: Static, One Page\"\n)\nfig.text(0.5",
            "feature_requirements": "• The output must depict a comprehensive figure divided into two main sections: a top section titled “Overview Plots” containing three side‐by‐side subplots and a bottom section titled “Detailed Analysis” containing three side‐by‐side subplots.\n\n• Each subplot must include a title (with a specified font weight, e.g., bold) and clearly labeled x and y axes that correspond to its respective data (e.g., “x”, “sin(x)”, “cos(x)”, “Amplitude”, “Function Value”, “Value”).\n\n• The top section’s first subplot must display a blue continuous “Sine” line along with red circular marker points representing “Sine + Noise”, with a legend indicating each data series and a visible grid.\n\n• The top section’s second subplot must show a green dashed “Cosine” plot, include an appropriate legend at the upper right, and display grid lines.\n\n• The top section’s third subplot must plot a magenta dash-dotted “Exp Sine” curve with proper labeling and legend, as well as grid lines.\n\n• In the bottom section, the first subplot must combine both “Sine” (blue solid line) and “Cosine” (green dashed line) functions and contain an annotation text box (with a rounded border and light background) listing key numerical metrics (peak and trough values for both sine and cosine).\n\n• The second subplot in the bottom section must display a blue sine curve with two emphasized key points marked by red circular markers; each of these marked points must be annotated with an arrow and a text label (e.g., “Point A” and “Point B” with their coordinate values).\n\n• The third subplot in the bottom section must depict a bar chart comparing statistical values (Mean, Std Dev, Max, Min) for sine and cosine data using two distinct colors; the x-axis must show the category labels, the bars must be annotated with their numeric values, and a y-axis grid (with dashed style) must be present.\n\n• The overall figure must include an overarching title “Comprehensive Data Visualization Dashboard” placed near the top of the output, as well as a footer text box that lists configuration parameters (e.g., Data Seed: 42, Number of Data Points: 100, Plots: Overview (3), Detailed (3), Library used, Render Mode).",
            "task_id": "08XX38",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall figure title at the top of the output?",
                "How many main sections are in the figure and what are their titles?",
                "How many subplots are contained in each main section?",
                "In the top section’s first subplot, what two data series are displayed and how are they visually represented?",
                "What line style and color is used for the Cosine plot in the top section’s second subplot?",
                "What does the top section’s third subplot depict and what is its line style and color?",
                "What key elements are included in the bottom section’s first subplot?",
                "What details are provided in the bottom section’s second subplot regarding key points on the sine curve?"
            ],
            "VQA_answers": [
                "Comprehensive Data Visualization Dashboard",
                "Two: 'Overview Plots' and 'Detailed Analysis'",
                "Three subplots each",
                "A blue continuous Sine line and red circular marker points for Sine + Noise, with a legend and grid.",
                "Green dashed line",
                "A magenta dash-dotted Exp Sine curve with proper labeling and legend along with grid lines",
                "Combined Sine (blue solid) and Cosine (green dashed) curves with an annotation text box showing key numerical metrics (peak and trough values)",
                "A blue sine curve with two red circular markers, each annotated with an arrow and label ('Point A' and 'Point B' with their coordinates)"
            ],
            "raw_output_metric": [
                "Comprehensive Data Visualization Dashboard",
                "Overview Plots",
                "Detailed Analysis",
                "Sine",
                "Sine + Noise",
                "Cosine",
                "Exp Sine",
                "blue",
                "red",
                "green",
                "magenta",
                "dashed",
                "dash-dotted",
                "legend",
                "grid",
                "x",
                "sin(x)",
                "cos(x)",
                "Amplitude",
                "Function Value",
                "Value",
                "annotation",
                "rounded border",
                "light background",
                "peak",
                "trough",
                "Point A",
                "Point B",
                "arrow",
                "Mean",
                "Std Dev",
                "Max",
                "Min",
                "Data Seed: 42",
                "Number of Data Points: 100",
                "Plots: Overview (3), Detailed (3)",
                "Library used",
                "Render Mode"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX38_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ============================================================================\n# Section: Data Preparation\n# ============================================================================\n# Generate some synthetic data\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\ny_exp = np.exp(-x / 3) * np.sin(3 * x)\nnoise = np.random.normal(0, 0.1, len(x))\ny_noisy = y_sin + noise\n\n# ============================================================================\n# Section: Figure Setup\n# ============================================================================\n# Create a figure with multiple subplots arranged in 2 rows x 3 columns:\nfig = plt.figure(constrained_layout=True, figsize=(14, 10))\nsubfigs = fig.subfigures(2, 1, wspace=0.07, hspace=0.07)\n\n# Top subfigure: Overview Plots\ntop_grid = subfigs[0].subplots(1, 3)\nsubfigs[0].suptitle('Overview Plots', fontsize=16, fontweight='bold')\n\n# Bottom subfigure: Detailed Analysis\nbottom_grid = subfigs[1].subplots(1, 3)\nsubfigs[1].suptitle('Detailed Analysis', fontsize=16, fontweight='bold')\n\n# ============================================================================\n# Top Section: Overview Plots\n# ============================================================================\n# Plot 1: Sine Wave with Noisy Data\nax_top1 = top_grid[0]\nax_top1.plot(x, y_sin, 'b-', label='Sine')\nax_top1.plot(x, y_noisy, 'ro', label='Sine + Noise', markersize=3)\nax_top1.set_title('Plot A: Sine vs Noisy Sine', fontsize=12, fontweight='bold')\nax_top1.set_xlabel('x')\nax_top1.set_ylabel('sin(x)')\nax_top1.legend(loc='upper right')\nax_top1.grid(True)\n\n# Plot 2: Cosine Function\nax_top2 = top_grid[1]\nax_top2.plot(x, y_cos, 'g--', linewidth=2, label='Cosine')\nax_top2.set_title('Plot B: Cosine Function', fontsize=12, fontweight='bold')\nax_top2.set_xlabel('x')\nax_top2.set_ylabel('cos(x)')\nax_top2.legend(loc='upper right')\nax_top2.grid(True)\n\n# Plot 3: Exponential Decay Sine\nax_top3 = top_grid[2]\nax_top3.plot(x, y_exp, 'm-.', linewidth=2, label='Exp Sine')\nax_top3.set_title('Plot C: Exp Decay with Sine', fontsize=12, fontweight='bold')\nax_top3.set_xlabel('x')\nax_top3.set_ylabel('Amplitude')\nax_top3.legend(loc='upper right')\nax_top3.grid(True)\n\n# ============================================================================\n# Bottom Section: Detailed Analysis\n# ============================================================================\n# Plot 4: Combined Data with Annotations\nax_bot1 = bottom_grid[0]\nax_bot1.plot(x, y_sin, 'b-', label='Sine')\nax_bot1.plot(x, y_cos, 'g--', label='Cosine')\nax_bot1.set_title('Plot D: Combined Trig Functions', fontsize=12, fontweight='bold')\nax_bot1.set_xlabel('x')\nax_bot1.set_ylabel('Function Value')\nax_bot1.legend(loc='upper right')\nax_bot1.grid(True)\n# Listing key metrics on the plot using text boxes\nmetrics_text = (\n    \"• Peak Sine: {:.2f}\\n\"\n    \"• Trough Sine: {:.2f}\\n\"\n    \"• Peak Cosine: {:.2f}\\n\"\n    \"• Trough Cosine: {:.2f}\"\n).format(np.max(y_sin), np.min(y_sin), np.max(y_cos), np.min(y_cos))\nax_bot1.text(0.05, 0.95, metrics_text, transform=ax_bot1.transAxes,\n             fontsize=9, verticalalignment='top',\n             bbox=dict(boxstyle='round', facecolor='wheat', alpha=0.5))\n\n# Plot 5: Sine Wave with Markers and Detailed Annotations\nax_bot2 = bottom_grid[1]\nax_bot2.plot(x, y_sin, 'b-', linewidth=2, label='Sine Wave')\n# Marking specific points\npt1 = (x[25], y_sin[25])\npt2 = (x[75], y_sin[75])\nax_bot2.plot(pt1[0], pt1[1], 'ro', markersize=8)\nax_bot2.plot(pt2[0], pt2[1], 'ro', markersize=8)\nax_bot2.annotate(f\"Point A\\n({pt1[0]:.2f}, {pt1[1]:.2f})\", xy=pt1, xytext=(pt1[0] + 0.5, pt1[1] + 0.3),\n                 arrowprops=dict(facecolor='black', shrink=0.05))\nax_bot2.annotate(f\"Point B\\n({pt2[0]:.2f}, {pt2[1]:.2f})\", xy=pt2, xytext=(pt2[0] - 2, pt2[1] - 0.3),\n                 arrowprops=dict(facecolor='black', shrink=0.05))\nax_bot2.set_title('Plot E: Sine with Key Points', fontsize=12, fontweight='bold')\nax_bot2.set_xlabel('x')\nax_bot2.set_ylabel('sin(x)')\nax_bot2.legend(loc='upper right')\nax_bot2.grid(True)\n\n# Plot 6: Comparison List Plot\nax_bot3 = bottom_grid[2]\n# Create a bar chart comparing statistics\ncategories = ['Mean', 'Std Dev', 'Max', 'Min']\nsine_stats = [np.mean(y_sin), np.std(y_sin), np.max(y_sin), np.min(y_sin)]\ncosine_stats = [np.mean(y_cos), np.std(y_cos), np.max(y_cos), np.min(y_cos)]\nx_pos = np.arange(len(categories))\nwidth = 0.35\n\nbars1 = ax_bot3.bar(x_pos - width/2, sine_stats, width, label='Sine', color='skyblue')\nbars2 = ax_bot3.bar(x_pos + width/2, cosine_stats, width, label='Cosine', color='lightgreen')\nax_bot3.set_xticks(x_pos)\nax_bot3.set_xticklabels(categories)\nax_bot3.set_title('Plot F: Statistical Comparison', fontsize=12, fontweight='bold')\nax_bot3.set_ylabel('Value')\nax_bot3.legend(loc='upper right')\nax_bot3.grid(True, axis='y', linestyle='--', alpha=0.7)\n\n# Annotate each bar with its value\ndef annotate_bars(bars):\n    for bar in bars:\n        height = bar.get_height()\n        ax_bot3.annotate(f'{height:.2f}', \n                         xy=(bar.get_x() + bar.get_width() / 2, height),\n                         xytext=(0, 3),  # 3 points vertical offset\n                         textcoords=\"offset points\",\n                         ha='center', va='bottom', fontsize=8)\n\nannotate_bars(bars1)\nannotate_bars(bars2)\n\n# ============================================================================\n# Global Figure Annotations and Metadata\n# ============================================================================\n# Adding a common heading and footer note with key details\nfig.suptitle('Comprehensive Data Visualization Dashboard',\n             fontsize=18, fontweight='bold', y=0.98, color='navy')\n\n# Adding a footer text box with a list of configuration parameters\nfooter_text = (\n    \"Configuration Parameters:\\n\"\n    \" - Data Seed: 42\\n\"\n    \" - Number of Data Points: 100\\n\"\n    \" - Plots: Overview (3), Detailed (3)\\n\"\n    \" - Visualization Library: Matplotlib\\n\"\n    \" - Render Mode: Static, One Page\"\n)\nfig.text(0.5"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX38_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization Dashboard",
                                "Overview Plots",
                                "Detailed Analysis",
                                "Sine",
                                "Sine + Noise",
                                "Cosine",
                                "Exp Sine",
                                "blue",
                                "red",
                                "green",
                                "magenta",
                                "dashed",
                                "dash-dotted",
                                "legend",
                                "grid",
                                "x",
                                "sin(x)",
                                "cos(x)",
                                "Amplitude",
                                "Function Value",
                                "Value",
                                "annotation",
                                "rounded border",
                                "light background",
                                "peak",
                                "trough",
                                "Point A",
                                "Point B",
                                "arrow",
                                "Mean",
                                "Std Dev",
                                "Max",
                                "Min",
                                "Data Seed: 42",
                                "Number of Data Points: 100",
                                "Plots: Overview (3), Detailed (3)",
                                "Library used",
                                "Render Mode"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX38_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX38_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall figure title at the top of the output?",
                                "How many main sections are in the figure and what are their titles?",
                                "How many subplots are contained in each main section?",
                                "In the top section’s first subplot, what two data series are displayed and how are they visually represented?",
                                "What line style and color is used for the Cosine plot in the top section’s second subplot?",
                                "What does the top section’s third subplot depict and what is its line style and color?",
                                "What key elements are included in the bottom section’s first subplot?",
                                "What details are provided in the bottom section’s second subplot regarding key points on the sine curve?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX38_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization Dashboard",
                                "Two: 'Overview Plots' and 'Detailed Analysis'",
                                "Three subplots each",
                                "A blue continuous Sine line and red circular marker points for Sine + Noise, with a legend and grid.",
                                "Green dashed line",
                                "A magenta dash-dotted Exp Sine curve with proper labeling and legend along with grid lines",
                                "Combined Sine (blue solid) and Cosine (green dashed) curves with an annotation text box showing key numerical metrics (peak and trough values)",
                                "A blue sine curve with two red circular markers, each annotated with an arrow and label ('Point A' and 'Point B' with their coordinates)"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate sample data for various plots\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny_line = np.sin(x)\ny_scatter = np.random.normal(loc=0, scale=1, size=100)\nhist_data = np.random.randn(500)\n\n# Create a figure with 3 subplots arranged in a grid\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle('Data Visualization Report', fontsize=16, fontweight='bold')\n\n# Subplot 1: Line Chart with annotated headings\nax1 = fig.add_subplot(2, 2, 1)\nax1.plot(x, y_line, color='blue', linewidth=2)\nax1.set_title('1. Sine Wave Analysis', fontsize=14, fontweight='medium')\nax1.set_xlabel('Time (s)')\nax1.set_ylabel('Amplitude')\n\n# Add structured text inside the plot\nannotations = (\n    \"Key Observations:\\n\"\n    \"- Periodic behavior observed\\n\"\n    \"- Amplitude oscillates between -1 and 1\\n\"\n    \"- Smooth curve following sin(x)\\n\"\n)\nax1.text(0.05, 0.95, annotations, transform=ax1.transAxes, fontsize=10,\n         verticalalignment='top', bbox=dict(boxstyle=\"round,pad=0.5\", fc=\"w\", ec=\"gray\"))\n\n# Subplot 2: Scatter Plot with highlighted sections and list annotations\nax2 = fig.add_subplot(2, 2, 2)\nscatter = ax2.scatter(x, y_scatter, c='red', alpha=0.6, edgecolors='k')\nax2.set_title('2. Random Noise Scatter Plot', fontsize=14, fontweight='medium')\nax2.set_xlabel('Independent Variable')\nax2.set_ylabel('Random Value')\n\n# Draw a horizontal dashed line at y=0 to indicate baseline\nax2.axhline(0, color='gray', linestyle='--', linewidth=1)\n\n# Add structured annotation with bullet points\nbullet_text = (\n    \"Notable Points:\\n\"\n    \"• Distribution centered near 0\\n\"\n    \"• Variance is significant\\n\"\n    \"• Outliers may be present\"\n)\nax2.text(0.05, 0.95, bullet_text, transform=ax2.transAxes, fontsize=10,\n         verticalalignment='top', bbox=dict(boxstyle=\"round,pad=0.45\", fc=\"w\", ec=\"gray\"))\n\n# Subplot 3: Histogram with detailed layout and labeled values\nax3 = fig.add_subplot(2, 1, 2)\nn, bins, patches = ax3.hist(hist_data, bins=30, color='green', edgecolor='black', alpha=0.7)\nax3.set_title('3. Distribution Histogram', fontsize=14, fontweight='medium')\nax3.set_xlabel('Value Range')\nax3.set_ylabel('Frequency')\n\n# Display key statistics on the histogram\nmean_val = np.mean(hist_data)\nstd_val = np.std(hist_data)\nstats_text = (\n    f\"Statistics:\\n\"\n    f\"- Mean: {mean_val:.2f}\\n\"\n    f\"- Std Dev: {std_val:.2f}\\n\"\n    f\"- Total Count: {len(hist_data)}\"\n)\nax3.text(0.65, 0.95, stats_text, transform=ax3.transAxes, fontsize=10,\n         verticalalignment='top', bbox=dict(boxstyle=\"round,pad=0.5\", fc=\"w\", ec=\"gray\"))\n\n# Add a legend to the histogram for clarity\nax3.legend(['Histogram Data'], loc='upper left')\n\n# Final layout adjustments\nplt.tight_layout(rect=[0, 0, 1, 0.96])\nplt.subplots_adjust(hspace=0.4, wspace=0.3)\n\n# Additional informational text below the plots\nfig.text(0.5, 0.02,\n         \"Report generated using Matplotlib. The plots above summarize the key visual analysis of the datasets.\",\n         ha=\"center\", fontsize=10, color='darkblue')\n\n# Save the figure to a file (optional, can be commented out)\n# plt.savefig(\"visual_report.png\", dpi=300)\n\nplt.show()\n</code>",
            "feature_requirements": "• An overall title \"Data Visualization Report\" displayed prominently at the top in a larger, bold font.  \n• Three distinct subplot sections arranged in a grid: two subplots in an upper row (for the line and scatter plots) and one larger subplot in the lower row (for the histogram).  \n• In the first subplot:  \n – A sine wave line plot rendered as a smooth curve in blue with a noticeable line thickness.  \n – Axis labels reading \"Time (s)\" (x-axis) and \"Amplitude\" (y-axis), plus the subplot title \"1. Sine Wave Analysis\".  \n – An internal text annotation box containing key observations about periodic behavior, amplitude range, and curve smoothness.  \n• In the second subplot:  \n – A scatter plot of points colored in red with distinct black edges and a level of transparency, including the horizontal dashed line at y = 0.  \n – Axis labels \"Independent Variable\" (x-axis) and \"Random Value\" (y-axis) along with the subplot title \"2. Random Noise Scatter Plot\".  \n – A boxed text annotation containing a bullet-point list of notable observations about the data’s distribution and variance.  \n• In the third subplot:  \n – A histogram with 30 bins displaying green bars with black outlines and a semi-transparent fill.  \n – Axis labels \"Value Range\" (x-axis) and \"Frequency\" (y-axis) and the subplot title \"3. Distribution Histogram\".  \n – An annotation box showing statistical details (mean, standard deviation, total count) formatted as multiple labeled lines.  \n – A legend within the subplot that clearly labels the histogram as \"Histogram Data\".  \n• Additional text below the subplots that informs the viewer with the message: \"Report generated using Matplotlib. The plots above summarize the key visual analysis of the datasets.\"  \n• Overall layout spacing and arrangement that reflect careful subplot positioning and spacing analogous to the original Matplotlib output.",
            "task_id": "08XX39",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall title displayed at the top of the report?",
                "How many subplots are arranged in the visual layout?",
                "How are the subplots arranged?",
                "What is the title of the first subplot?",
                "What type of plot is shown in the first subplot and what are its key styling details?",
                "What is the title of the second subplot?",
                "What additional feature is included in the second subplot?",
                "What is the title and plot type of the third subplot?",
                "What statistical details are shown in the annotation of the third subplot?",
                "What message is displayed below the subplots?"
            ],
            "VQA_answers": [
                "Data Visualization Report",
                "Three",
                "Two in the upper row and one larger subplot in the lower row",
                "1. Sine Wave Analysis",
                "A sine wave line plot rendered as a smooth blue curve with noticeable line thickness",
                "2. Random Noise Scatter Plot",
                "A horizontal dashed line at y = 0",
                "3. Distribution Histogram; it displays a histogram",
                "Mean, standard deviation, and total count",
                "Report generated using Matplotlib. The plots above summarize the key visual analysis of the datasets."
            ],
            "raw_output_metric": [
                "Data Visualization Report",
                "1. Sine Wave Analysis",
                "Time (s)",
                "Amplitude",
                "periodic behavior",
                "amplitude range",
                "curve smoothness",
                "2. Random Noise Scatter Plot",
                "Independent Variable",
                "Random Value",
                "y = 0",
                "data’s distribution",
                "variance",
                "3. Distribution Histogram",
                "Value Range",
                "Frequency",
                "mean",
                "standard deviation",
                "total count",
                "Histogram Data",
                "Report generated using Matplotlib. The plots above summarize the key visual analysis of the datasets."
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX39_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate sample data for various plots\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny_line = np.sin(x)\ny_scatter = np.random.normal(loc=0, scale=1, size=100)\nhist_data = np.random.randn(500)\n\n# Create a figure with 3 subplots arranged in a grid\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle('Data Visualization Report', fontsize=16, fontweight='bold')\n\n# Subplot 1: Line Chart with annotated headings\nax1 = fig.add_subplot(2, 2, 1)\nax1.plot(x, y_line, color='blue', linewidth=2)\nax1.set_title('1. Sine Wave Analysis', fontsize=14, fontweight='medium')\nax1.set_xlabel('Time (s)')\nax1.set_ylabel('Amplitude')\n\n# Add structured text inside the plot\nannotations = (\n    \"Key Observations:\\n\"\n    \"- Periodic behavior observed\\n\"\n    \"- Amplitude oscillates between -1 and 1\\n\"\n    \"- Smooth curve following sin(x)\\n\"\n)\nax1.text(0.05, 0.95, annotations, transform=ax1.transAxes, fontsize=10,\n         verticalalignment='top', bbox=dict(boxstyle=\"round,pad=0.5\", fc=\"w\", ec=\"gray\"))\n\n# Subplot 2: Scatter Plot with highlighted sections and list annotations\nax2 = fig.add_subplot(2, 2, 2)\nscatter = ax2.scatter(x, y_scatter, c='red', alpha=0.6, edgecolors='k')\nax2.set_title('2. Random Noise Scatter Plot', fontsize=14, fontweight='medium')\nax2.set_xlabel('Independent Variable')\nax2.set_ylabel('Random Value')\n\n# Draw a horizontal dashed line at y=0 to indicate baseline\nax2.axhline(0, color='gray', linestyle='--', linewidth=1)\n\n# Add structured annotation with bullet points\nbullet_text = (\n    \"Notable Points:\\n\"\n    \"• Distribution centered near 0\\n\"\n    \"• Variance is significant\\n\"\n    \"• Outliers may be present\"\n)\nax2.text(0.05, 0.95, bullet_text, transform=ax2.transAxes, fontsize=10,\n         verticalalignment='top', bbox=dict(boxstyle=\"round,pad=0.45\", fc=\"w\", ec=\"gray\"))\n\n# Subplot 3: Histogram with detailed layout and labeled values\nax3 = fig.add_subplot(2, 1, 2)\nn, bins, patches = ax3.hist(hist_data, bins=30, color='green', edgecolor='black', alpha=0.7)\nax3.set_title('3. Distribution Histogram', fontsize=14, fontweight='medium')\nax3.set_xlabel('Value Range')\nax3.set_ylabel('Frequency')\n\n# Display key statistics on the histogram\nmean_val = np.mean(hist_data)\nstd_val = np.std(hist_data)\nstats_text = (\n    f\"Statistics:\\n\"\n    f\"- Mean: {mean_val:.2f}\\n\"\n    f\"- Std Dev: {std_val:.2f}\\n\"\n    f\"- Total Count: {len(hist_data)}\"\n)\nax3.text(0.65, 0.95, stats_text, transform=ax3.transAxes, fontsize=10,\n         verticalalignment='top', bbox=dict(boxstyle=\"round,pad=0.5\", fc=\"w\", ec=\"gray\"))\n\n# Add a legend to the histogram for clarity\nax3.legend(['Histogram Data'], loc='upper left')\n\n# Final layout adjustments\nplt.tight_layout(rect=[0, 0, 1, 0.96])\nplt.subplots_adjust(hspace=0.4, wspace=0.3)\n\n# Additional informational text below the plots\nfig.text(0.5, 0.02,\n         \"Report generated using Matplotlib. The plots above summarize the key visual analysis of the datasets.\",\n         ha=\"center\", fontsize=10, color='darkblue')\n\n# Save the figure to a file (optional, can be commented out)\n# plt.savefig(\"visual_report.png\", dpi=300)\n\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX39_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data Visualization Report",
                                "1. Sine Wave Analysis",
                                "Time (s)",
                                "Amplitude",
                                "periodic behavior",
                                "amplitude range",
                                "curve smoothness",
                                "2. Random Noise Scatter Plot",
                                "Independent Variable",
                                "Random Value",
                                "y = 0",
                                "data’s distribution",
                                "variance",
                                "3. Distribution Histogram",
                                "Value Range",
                                "Frequency",
                                "mean",
                                "standard deviation",
                                "total count",
                                "Histogram Data",
                                "Report generated using Matplotlib. The plots above summarize the key visual analysis of the datasets."
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX39_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX39_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall title displayed at the top of the report?",
                                "How many subplots are arranged in the visual layout?",
                                "How are the subplots arranged?",
                                "What is the title of the first subplot?",
                                "What type of plot is shown in the first subplot and what are its key styling details?",
                                "What is the title of the second subplot?",
                                "What additional feature is included in the second subplot?",
                                "What is the title and plot type of the third subplot?",
                                "What statistical details are shown in the annotation of the third subplot?",
                                "What message is displayed below the subplots?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX39_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data Visualization Report",
                                "Three",
                                "Two in the upper row and one larger subplot in the lower row",
                                "1. Sine Wave Analysis",
                                "A sine wave line plot rendered as a smooth blue curve with noticeable line thickness",
                                "2. Random Noise Scatter Plot",
                                "A horizontal dashed line at y = 0",
                                "3. Distribution Histogram; it displays a histogram",
                                "Mean, standard deviation, and total count",
                                "Report generated using Matplotlib. The plots above summarize the key visual analysis of the datasets."
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib.gridspec as gridspec\n\n# --------------------------------------------------------------------------------\n# Main Visualization Dashboard\n# --------------------------------------------------------------------------------\ndef create_dashboard():\n    # Create the main figure with a specified size\n    fig = plt.figure(figsize=(12, 10))\n    \n    # Define a grid layout: 3 rows x 2 columns\n    gs = gridspec.GridSpec(3, 2, figure=fig, height_ratios=[1, 2, 2])\n    \n    # ---------------------------------\n    # Title Section (Full Width)\n    # ---------------------------------\n    ax_title = fig.add_subplot(gs[0, :])\n    ax_title.text(0.5, 0.5, \n                  \"Dashboard Overview: Data Visualization Report\", \n                  horizontalalignment='center',\n                  verticalalignment='center',\n                  fontsize=20, fontweight='bold', color='navy')\n    ax_title.axis(\"off\")\n    \n    # ---------------------------------\n    # Section 1: Sine Wave Plot\n    # ---------------------------------\n    ax_sine = fig.add_subplot(gs[1, 0])\n    \n    # Generate data for sine wave\n    x = np.linspace(0, 2 * np.pi, 400)\n    y_sine = np.sin(x)\n    \n    # Plot sine wave\n    ax_sine.plot(x, y_sine, color='blue', linestyle='--', linewidth=2, label=\"sin(x)\")\n    ax_sine.set_title(\"Section 1: Sine Wave Analysis\", fontsize=14)\n    ax_sine.set_xlabel(\"Angle (radians)\")\n    ax_sine.set_ylabel(\"Amplitude\")\n    ax_sine.legend(loc='upper right')\n    ax_sine.grid(True, linestyle=':', color='gray')\n    \n    # Add annotations for key points on sine wave\n    for peak in [np.pi/2, 3*np.pi/2]:\n        ax_sine.axvline(peak, color='red', linestyle=':', linewidth=1)\n        ax_sine.text(peak, 1.05, f\"x = {peak:.2f}\", color='red', fontsize=9, ha='center')\n    \n    # ---------------------------------\n    # Section 2: Cosine Wave Plot\n    # ---------------------------------\n    ax_cosine = fig.add_subplot(gs[1, 1])\n    \n    # Generate data for cosine wave\n    y_cosine = np.cos(x)\n    \n    # Plot cosine wave\n    ax_cosine.plot(x, y_cosine, color='orange', linestyle='-', linewidth=2, label=\"cos(x)\")\n    ax_cosine.set_title(\"Section 2: Cosine Wave Analysis\", fontsize=14)\n    ax_cosine.set_xlabel(\"Angle (radians)\")\n    ax_cosine.set_ylabel(\"Amplitude\")\n    ax_cosine.legend(loc='upper right')\n    ax_cosine.grid(True, linestyle=':', color='gray')\n    \n    # ---------------------------------\n    # Section 3: Statistical Distribution\n    # ---------------------------------\n    ax_hist = fig.add_subplot(gs[2, :])\n    \n    # Generate random data for histogram\n    random_data = np.random.randn(1000)\n    bins = 30\n    \n    # Create histogram\n    n, bins, patches = ax_hist.hist(random_data, bins=bins, color='green', alpha=0.7, edgecolor='black')\n    ax_hist.set_title(\"Section 3: Histogram of Random Data\", fontsize=14)\n    ax_hist.set_xlabel(\"Value Range\")\n    ax_hist.set_ylabel(\"Frequency\")\n    ax_hist.grid(True, linestyle=':', color='gray')\n    \n    # ---------------------------------\n    # Embedded Textbox with Detailed Annotations\n    # ---------------------------------\n    annotation_text = (\n        \"Dashboard Details:\\n\"\n        \"----------------------\\n\"\n        \"1. Sine Wave Analysis:\\n\"\n        \"   - Uses sin(x) over [0, 2π].\\n\"\n        \"   - Key peaks and troughs are marked.\\n\"\n        \"\\n\"\n        \"2. Cosine Wave Analysis:\\n\"\n        \"   - Uses cos(x) over [0, 2π].\\n\"\n        \"   - Provides complementary behavior to sine wave.\\n\"\n        \"\\n\"\n        \"3. Histogram:\\n\"\n        \"   - Depicts a sample from a normal distribution.\\n\"\n        \"   - Observes distribution shape and spread.\\n\"\n        \"\\n\"\n        \"Labeled Values:\\n\"\n        \"   A = 1.0,  B = 0.5,  C = 2.0\\n\"\n    )\n    \n    # Define textbox properties\n    textbox_props = dict(boxstyle=\"round\", facecolor=\"wheat\", alpha=0.5)\n    \n    # Place the textbox inside the histogram area\n    ax_hist.text(0.02, 0.95, annotation_text, transform=ax_hist.transAxes, fontsize=10,\n                 verticalalignment=\"top\", bbox=textbox_props)\n    \n    # ---------------------------------\n    # Final Touches and Overall Figure Settings\n    # ---------------------------------\n    # Add an overall subtitle at the bottom of the figure\n    fig.text(0.5, 0.04, \"Visual Conversion Task: Structured Layout Demonstration\", \n             ha=\"center\", fontsize=12, color=\"darkgreen\", style=\"italic\")\n    \n    # Adjust layout to prevent overlap\n    plt.tight_layout(rect=[0, 0.05, 1, 0.95])\n    \n    # Display the complete dashboard\n    plt.show()\n\n# --------------------------------------------------------------------------------\n# Run the Dashboard Creation Function\n# --------------------------------------------------------------------------------\nif __name__ == \"__main__\":\n    create_dashboard()\n</code>",
            "feature_requirements": "• The output must include a full-width title section at the top displaying \"Dashboard Overview: Data Visualization Report\" in a large, bold, navy-colored font.\n• It must visually divide the layout into a grid-like structure with at least three distinct sections: a title section, two side-by-side plot sections for sine and cosine waves, and a full-width histogram section.\n• The sine wave section must render a smooth sine curve over the interval [0, 2π] using a dashed blue line, and it should include vertical marker lines at x = π/2 and x = 3π/2, each with a corresponding red annotation showing the value formatted to two decimals.\n• The cosine wave section must render a smooth cosine curve over the same interval using a solid orange line, along with a title, labeled axes (\"Angle (radians)\" for x-axis and \"Amplitude\" for y-axis), and a legend positioned at the upper right.\n• The histogram section must display a bar chart representing a distribution of random data (with a defined number of bins) rendered in green with black edges, include grid lines with a dotted gray style, and have appropriate axis labels (\"Value Range\" for x-axis and \"Frequency\" for y-axis).\n• Within the histogram section, there must be an embedded annotation textbox that contains multi-line details about the data visualization, styled with a rounded border, a wheat-colored background with transparency, and positioned at the top left of that section.\n• An overall subtitle must be placed at the bottom center of the overall output stating \"Visual Conversion Task: Structured Layout Demonstration\" in an italicized, dark green font.\n• Each section must display its own title (e.g., \"Section 1: Sine Wave Analysis\", \"Section 2: Cosine Wave Analysis\", \"Section 3: Histogram of Random Data\") in a clearly visible font size that distinguishes them from the axis labels and annotations.",
            "task_id": "08XX40",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed at the top of the dashboard?",
                "How many distinct sections are clearly divided in the layout?",
                "What type and style of line is used to plot the sine wave?",
                "Which specific x-values have vertical marker lines in the sine wave section?",
                "How is the cosine wave rendered and what unique style does it have?",
                "What are the labels for the axes in the cosine wave section?",
                "Where is the legend positioned in the cosine wave section?",
                "What are the bar and edge colors used in the histogram section?",
                "What style are the grid lines in the histogram section?",
                "What is the overall subtitle text and its placement at the bottom?"
            ],
            "VQA_answers": [
                "Dashboard Overview: Data Visualization Report",
                "Three",
                "Dashed blue line",
                "π/2 and 3π/2",
                "Solid orange line",
                "Angle (radians) on the x-axis and Amplitude on the y-axis",
                "Upper right",
                "Green bars with black edges",
                "Dotted gray",
                "Visual Conversion Task: Structured Layout Demonstration"
            ],
            "raw_output_metric": [
                "Dashboard Overview: Data Visualization Report",
                "Section 1: Sine Wave Analysis",
                "Section 2: Cosine Wave Analysis",
                "Section 3: Histogram of Random Data",
                "Angle (radians)",
                "Amplitude",
                "Value Range",
                "Frequency",
                "Visual Conversion Task: Structured Layout Demonstration",
                "π/2",
                "3π/2",
                "dashed blue line",
                "solid orange line",
                "dotted gray",
                "rounded border",
                "wheat-colored background",
                "legend",
                "upper right"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX40_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib.gridspec as gridspec\n\n# --------------------------------------------------------------------------------\n# Main Visualization Dashboard\n# --------------------------------------------------------------------------------\ndef create_dashboard():\n    # Create the main figure with a specified size\n    fig = plt.figure(figsize=(12, 10))\n    \n    # Define a grid layout: 3 rows x 2 columns\n    gs = gridspec.GridSpec(3, 2, figure=fig, height_ratios=[1, 2, 2])\n    \n    # ---------------------------------\n    # Title Section (Full Width)\n    # ---------------------------------\n    ax_title = fig.add_subplot(gs[0, :])\n    ax_title.text(0.5, 0.5, \n                  \"Dashboard Overview: Data Visualization Report\", \n                  horizontalalignment='center',\n                  verticalalignment='center',\n                  fontsize=20, fontweight='bold', color='navy')\n    ax_title.axis(\"off\")\n    \n    # ---------------------------------\n    # Section 1: Sine Wave Plot\n    # ---------------------------------\n    ax_sine = fig.add_subplot(gs[1, 0])\n    \n    # Generate data for sine wave\n    x = np.linspace(0, 2 * np.pi, 400)\n    y_sine = np.sin(x)\n    \n    # Plot sine wave\n    ax_sine.plot(x, y_sine, color='blue', linestyle='--', linewidth=2, label=\"sin(x)\")\n    ax_sine.set_title(\"Section 1: Sine Wave Analysis\", fontsize=14)\n    ax_sine.set_xlabel(\"Angle (radians)\")\n    ax_sine.set_ylabel(\"Amplitude\")\n    ax_sine.legend(loc='upper right')\n    ax_sine.grid(True, linestyle=':', color='gray')\n    \n    # Add annotations for key points on sine wave\n    for peak in [np.pi/2, 3*np.pi/2]:\n        ax_sine.axvline(peak, color='red', linestyle=':', linewidth=1)\n        ax_sine.text(peak, 1.05, f\"x = {peak:.2f}\", color='red', fontsize=9, ha='center')\n    \n    # ---------------------------------\n    # Section 2: Cosine Wave Plot\n    # ---------------------------------\n    ax_cosine = fig.add_subplot(gs[1, 1])\n    \n    # Generate data for cosine wave\n    y_cosine = np.cos(x)\n    \n    # Plot cosine wave\n    ax_cosine.plot(x, y_cosine, color='orange', linestyle='-', linewidth=2, label=\"cos(x)\")\n    ax_cosine.set_title(\"Section 2: Cosine Wave Analysis\", fontsize=14)\n    ax_cosine.set_xlabel(\"Angle (radians)\")\n    ax_cosine.set_ylabel(\"Amplitude\")\n    ax_cosine.legend(loc='upper right')\n    ax_cosine.grid(True, linestyle=':', color='gray')\n    \n    # ---------------------------------\n    # Section 3: Statistical Distribution\n    # ---------------------------------\n    ax_hist = fig.add_subplot(gs[2, :])\n    \n    # Generate random data for histogram\n    random_data = np.random.randn(1000)\n    bins = 30\n    \n    # Create histogram\n    n, bins, patches = ax_hist.hist(random_data, bins=bins, color='green', alpha=0.7, edgecolor='black')\n    ax_hist.set_title(\"Section 3: Histogram of Random Data\", fontsize=14)\n    ax_hist.set_xlabel(\"Value Range\")\n    ax_hist.set_ylabel(\"Frequency\")\n    ax_hist.grid(True, linestyle=':', color='gray')\n    \n    # ---------------------------------\n    # Embedded Textbox with Detailed Annotations\n    # ---------------------------------\n    annotation_text = (\n        \"Dashboard Details:\\n\"\n        \"----------------------\\n\"\n        \"1. Sine Wave Analysis:\\n\"\n        \"   - Uses sin(x) over [0, 2π].\\n\"\n        \"   - Key peaks and troughs are marked.\\n\"\n        \"\\n\"\n        \"2. Cosine Wave Analysis:\\n\"\n        \"   - Uses cos(x) over [0, 2π].\\n\"\n        \"   - Provides complementary behavior to sine wave.\\n\"\n        \"\\n\"\n        \"3. Histogram:\\n\"\n        \"   - Depicts a sample from a normal distribution.\\n\"\n        \"   - Observes distribution shape and spread.\\n\"\n        \"\\n\"\n        \"Labeled Values:\\n\"\n        \"   A = 1.0,  B = 0.5,  C = 2.0\\n\"\n    )\n    \n    # Define textbox properties\n    textbox_props = dict(boxstyle=\"round\", facecolor=\"wheat\", alpha=0.5)\n    \n    # Place the textbox inside the histogram area\n    ax_hist.text(0.02, 0.95, annotation_text, transform=ax_hist.transAxes, fontsize=10,\n                 verticalalignment=\"top\", bbox=textbox_props)\n    \n    # ---------------------------------\n    # Final Touches and Overall Figure Settings\n    # ---------------------------------\n    # Add an overall subtitle at the bottom of the figure\n    fig.text(0.5, 0.04, \"Visual Conversion Task: Structured Layout Demonstration\", \n             ha=\"center\", fontsize=12, color=\"darkgreen\", style=\"italic\")\n    \n    # Adjust layout to prevent overlap\n    plt.tight_layout(rect=[0, 0.05, 1, 0.95])\n    \n    # Display the complete dashboard\n    plt.show()\n\n# --------------------------------------------------------------------------------\n# Run the Dashboard Creation Function\n# --------------------------------------------------------------------------------\nif __name__ == \"__main__\":\n    create_dashboard()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX40_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard Overview: Data Visualization Report",
                                "Section 1: Sine Wave Analysis",
                                "Section 2: Cosine Wave Analysis",
                                "Section 3: Histogram of Random Data",
                                "Angle (radians)",
                                "Amplitude",
                                "Value Range",
                                "Frequency",
                                "Visual Conversion Task: Structured Layout Demonstration",
                                "π/2",
                                "3π/2",
                                "dashed blue line",
                                "solid orange line",
                                "dotted gray",
                                "rounded border",
                                "wheat-colored background",
                                "legend",
                                "upper right"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX40_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX40_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed at the top of the dashboard?",
                                "How many distinct sections are clearly divided in the layout?",
                                "What type and style of line is used to plot the sine wave?",
                                "Which specific x-values have vertical marker lines in the sine wave section?",
                                "How is the cosine wave rendered and what unique style does it have?",
                                "What are the labels for the axes in the cosine wave section?",
                                "Where is the legend positioned in the cosine wave section?",
                                "What are the bar and edge colors used in the histogram section?",
                                "What style are the grid lines in the histogram section?",
                                "What is the overall subtitle text and its placement at the bottom?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX40_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard Overview: Data Visualization Report",
                                "Three",
                                "Dashed blue line",
                                "π/2 and 3π/2",
                                "Solid orange line",
                                "Angle (radians) on the x-axis and Amplitude on the y-axis",
                                "Upper right",
                                "Green bars with black edges",
                                "Dotted gray",
                                "Visual Conversion Task: Structured Layout Demonstration"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create the base figure with a custom size and overall title\nfig = plt.figure(figsize=(10, 12))\nfig.suptitle(\"Matplotlib Structured Layout Example\", fontsize=16, fontweight='bold')\n\n# -------------------------\n# Section 1: Data Overview\n# -------------------------\n# Create first subplot designated for textual overview\nax1 = plt.subplot2grid((3, 1), (0, 0))\nax1.axis('off')  # Hide axes for text-only content\n\noverview_text = (\n    \"Section 1: Data Overview\\n\"\n    \"=================================\\n\"\n    \"This section provides a detailed overview of the dataset used.\\n\\n\"\n    \"Key Data Points:\\n\"\n    \"  - Total Records      : 1,000\\n\"\n    \"  - Total Features     : 12\\n\"\n    \"  - Missing Data Ratio : 5%\\n\\n\"\n    \"Statistical Metrics:\\n\"\n    \"  • Mean      : 35.7\\n\"\n    \"  • Median    : 34.9\\n\"\n    \"  • Std. Dev. : 4.2\\n\"\n)\nax1.text(0.05, 0.6, overview_text, fontsize=10, fontfamily='monospace', verticalalignment='top')\n\n\n# -----------------------------\n# Section 2: Data Visualization\n# -----------------------------\n# Create second subplot for plotting function graphs and additional annotations\nax2 = plt.subplot2grid((3, 1), (1, 0))\n\n# Generate sample data series\nx = np.linspace(0, 10, 200)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\ny_hybrid = np.sin(x) * np.cos(x)\n\n# Plot the functions with distinct styles and labels\nax2.plot(x, y_sin, label='sin(x)', color='blue', linewidth=2)\nax2.plot(x, y_cos, label='cos(x)', color='red', linestyle='--', linewidth=2)\nax2.plot(x, y_hybrid, label='sin(x) * cos(x)', color='green', linestyle='-.', linewidth=2)\n\n# Customize titles, labels, legend, and grid\nax2.set_title(\"Section 2: Function Plots\", fontsize=12, fontweight='bold')\nax2.set_xlabel(\"X-axis (radians)\")\nax2.set_ylabel(\"Function Value\")\nax2.legend(loc='upper right')\nax2.grid(True, linestyle=':', linewidth=0.8, color='gray')\n\n# Insert an inset textbox with detailed plot description\nplot_details = (\n    \"Plot Details:\\n\"\n    \"  - Blue Solid Line  : sin(x)\\n\"\n    \"  - Red Dashed Line  : cos(x)\\n\"\n    \"  - Green Dash-Dot   : sin(x) * cos(x)\\n\"\n    \"\\n\"\n    \"Observation:\\n\"\n    \"The sin and cos functions exhibit periodic behavior with a quarter phase shift.\"\n)\nax2.text(0.02, 0.02, plot_details, transform=ax2.transAxes, fontsize=9,\n         verticalalignment='bottom', bbox=dict(facecolor='white', alpha=0.8, edgecolor='black'))\n\n# Decorate the plot border for clarity\nfor spine in ax2.spines.values():\n    spine.set_edgecolor('gray')\n    spine.set_linewidth(1.2)\n\n\n# ------------------------------\n# Section 3: Analysis Summary\n# ------------------------------\n# Create third subplot to display an analysis summary with bullet points and numbered lists\nax3",
            "feature_requirements": "• The converted TikZ output must include an overall title (displayed prominently at the top) reading “Matplotlib Structured Layout Example” with a large, bold font.  \n• There must be a first section dedicated to a textual overview, which displays multi-line descriptive text (including key data points and statistical metrics) in a fixed-width (monospace) font and without any visible axes or borders.  \n• The second section should comprise a plot area that visually represents three function graphs: one for sin(x) with a solid blue line, one for cos(x) with a dashed red line, and one for sin(x)*cos(x) with a dash-dotted green line, each clearly labeled.  \n• Within the plot area, explicit titles and axis labels must be visible: a title “Section 2: Function Plots” in bold, an x-axis label indicating “X-axis (radians),” and a y-axis label “Function Value.”  \n• A legend must be rendered within the plot area (positioned in the upper right corner) that lists the three functions along with their line styles.  \n• The plot area should include a grid with subtle, gray, dotted lines to enhance readability.  \n• An inset textbox within the plot area should be clearly depicted; it must contain a detailed description of the plot (with bullet-like details of the line styles and a short observation), and this text box should have a light background with a clear border.  \n• The borders (spines) of the plot area must be visibly outlined in gray with a medium line thickness to distinguish the plot from the background.",
            "task_id": "08XX41",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall title displayed prominently at the top?",
                "What font style is used for the textual overview in the first section?",
                "Are there any visible axes or borders in the first section?",
                "How many function graphs are plotted in the second section?",
                "What are the colors and line styles used for the three functions sin(x), cos(x), and sin(x)*cos(x)?",
                "What is the title of the plot area and what are the axis labels?",
                "Where is the legend located within the plot area?",
                "What style is used for the grid in the plot area?",
                "What details are provided in the inset textbox within the plot area?",
                "How are the plot area borders (spines) styled?"
            ],
            "VQA_answers": [
                "Matplotlib Structured Layout Example",
                "Monospace (fixed-width)",
                "No",
                "Three",
                "Solid blue for sin(x), dashed red for cos(x), dash-dotted green for sin(x)*cos(x)",
                "Title: Section 2: Function Plots (bold), X-axis: X-axis (radians), Y-axis: Function Value",
                "Upper right corner",
                "Subtle, gray, dotted lines",
                "It contains a detailed description with bullet-like details of the line styles and a short observation, with a light background and clear border",
                "They are visibly outlined in gray with medium line thickness"
            ],
            "raw_output_metric": [
                "Matplotlib Structured Layout Example",
                "Section 2: Function Plots",
                "X-axis (radians)",
                "Function Value",
                "sin(x)",
                "cos(x)",
                "sin(x)*cos(x)",
                "solid blue",
                "dashed red",
                "dash-dotted green",
                "legend",
                "grid",
                "gray",
                "dotted",
                "monospace"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX41_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create the base figure with a custom size and overall title\nfig = plt.figure(figsize=(10, 12))\nfig.suptitle(\"Matplotlib Structured Layout Example\", fontsize=16, fontweight='bold')\n\n# -------------------------\n# Section 1: Data Overview\n# -------------------------\n# Create first subplot designated for textual overview\nax1 = plt.subplot2grid((3, 1), (0, 0))\nax1.axis('off')  # Hide axes for text-only content\n\noverview_text = (\n    \"Section 1: Data Overview\\n\"\n    \"=================================\\n\"\n    \"This section provides a detailed overview of the dataset used.\\n\\n\"\n    \"Key Data Points:\\n\"\n    \"  - Total Records      : 1,000\\n\"\n    \"  - Total Features     : 12\\n\"\n    \"  - Missing Data Ratio : 5%\\n\\n\"\n    \"Statistical Metrics:\\n\"\n    \"  • Mean      : 35.7\\n\"\n    \"  • Median    : 34.9\\n\"\n    \"  • Std. Dev. : 4.2\\n\"\n)\nax1.text(0.05, 0.6, overview_text, fontsize=10, fontfamily='monospace', verticalalignment='top')\n\n\n# -----------------------------\n# Section 2: Data Visualization\n# -----------------------------\n# Create second subplot for plotting function graphs and additional annotations\nax2 = plt.subplot2grid((3, 1), (1, 0))\n\n# Generate sample data series\nx = np.linspace(0, 10, 200)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\ny_hybrid = np.sin(x) * np.cos(x)\n\n# Plot the functions with distinct styles and labels\nax2.plot(x, y_sin, label='sin(x)', color='blue', linewidth=2)\nax2.plot(x, y_cos, label='cos(x)', color='red', linestyle='--', linewidth=2)\nax2.plot(x, y_hybrid, label='sin(x) * cos(x)', color='green', linestyle='-.', linewidth=2)\n\n# Customize titles, labels, legend, and grid\nax2.set_title(\"Section 2: Function Plots\", fontsize=12, fontweight='bold')\nax2.set_xlabel(\"X-axis (radians)\")\nax2.set_ylabel(\"Function Value\")\nax2.legend(loc='upper right')\nax2.grid(True, linestyle=':', linewidth=0.8, color='gray')\n\n# Insert an inset textbox with detailed plot description\nplot_details = (\n    \"Plot Details:\\n\"\n    \"  - Blue Solid Line  : sin(x)\\n\"\n    \"  - Red Dashed Line  : cos(x)\\n\"\n    \"  - Green Dash-Dot   : sin(x) * cos(x)\\n\"\n    \"\\n\"\n    \"Observation:\\n\"\n    \"The sin and cos functions exhibit periodic behavior with a quarter phase shift.\"\n)\nax2.text(0.02, 0.02, plot_details, transform=ax2.transAxes, fontsize=9,\n         verticalalignment='bottom', bbox=dict(facecolor='white', alpha=0.8, edgecolor='black'))\n\n# Decorate the plot border for clarity\nfor spine in ax2.spines.values():\n    spine.set_edgecolor('gray')\n    spine.set_linewidth(1.2)\n\n\n# ------------------------------\n# Section 3: Analysis Summary\n# ------------------------------\n# Create third subplot to display an analysis summary with bullet points and numbered lists\nax3"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX41_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Matplotlib Structured Layout Example",
                                "Section 2: Function Plots",
                                "X-axis (radians)",
                                "Function Value",
                                "sin(x)",
                                "cos(x)",
                                "sin(x)*cos(x)",
                                "solid blue",
                                "dashed red",
                                "dash-dotted green",
                                "legend",
                                "grid",
                                "gray",
                                "dotted",
                                "monospace"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX41_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX41_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall title displayed prominently at the top?",
                                "What font style is used for the textual overview in the first section?",
                                "Are there any visible axes or borders in the first section?",
                                "How many function graphs are plotted in the second section?",
                                "What are the colors and line styles used for the three functions sin(x), cos(x), and sin(x)*cos(x)?",
                                "What is the title of the plot area and what are the axis labels?",
                                "Where is the legend located within the plot area?",
                                "What style is used for the grid in the plot area?",
                                "What details are provided in the inset textbox within the plot area?",
                                "How are the plot area borders (spines) styled?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX41_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Matplotlib Structured Layout Example",
                                "Monospace (fixed-width)",
                                "No",
                                "Three",
                                "Solid blue for sin(x), dashed red for cos(x), dash-dotted green for sin(x)*cos(x)",
                                "Title: Section 2: Function Plots (bold), X-axis: X-axis (radians), Y-axis: Function Value",
                                "Upper right corner",
                                "Subtle, gray, dotted lines",
                                "It contains a detailed description with bullet-like details of the line styles and a short observation, with a light background and clear border",
                                "They are visibly outlined in gray with medium line thickness"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ========================================================\n# Global Settings and Figure Initialization\n# ========================================================\nplt.style.use('seaborn-whitegrid')\n\n# Create a large figure\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle(\"Data Visualization Report\", fontsize=16, fontweight='bold')\n\n# ========================================================\n# Section 1: Overview of the Report\n# ========================================================\noverview_text = \"\\n\".join([\n    \"Report Overview\",\n    \"---------------\",\n    \"Dataset: Synthetic Samples\",\n    \"Date: 2023-10-01\",\n    \"\",\n    \"Key Metrics:\",\n    \" - Mean Value: 5.23\",\n    \" - Standard Deviation: 1.77\",\n    \" - Total Samples: 1000\",\n])\nfig.text(0.05, 0.92, overview_text, fontsize=10,\n         bbox=dict(facecolor='white', alpha=0.5))\n\n# ========================================================\n# Section 2: Detailed Plots Layout\n# ========================================================\n\n# Subplot 1: Sine Wave Plot\nax1 = fig.add_subplot(2, 2, 1)\nx_vals = np.linspace(0, 4 * np.pi, 100)\ny_sin = np.sin(x_vals)\nax1.plot(x_vals, y_sin, label='sin(x)', color='blue', linewidth=2)\nax1.set_title(\"Sine Wave\")\nax1.set_xlabel(\"X Axis\")\nax1.set_ylabel(\"Amplitude\")\nax1.legend(loc='upper right')\nax1.grid(True)\n# Annotate details\nax1.text(0.05, 0.9, \"Function: sin(x)\\nPeak: 1.0\\nTrough: -1.0\", transform=ax1.transAxes,\n         fontsize=9, bbox=dict(boxstyle=\"round\", facecolor=\"wheat\", alpha=0.5))\n\n# Subplot 2: Cosine Wave Plot\nax2 = fig.add_subplot(2, 2, 2)\ny_cos = np.cos(x_vals)\nax2.plot(x_vals, y_cos, label='cos(x)', color='red', linestyle='--', linewidth=2)\nax2.set_title(\"Cosine Wave\")\nax2.set_xlabel(\"X Axis\")\nax2.set_ylabel(\"Amplitude\")\nax2.legend(loc='upper right')\nax2.grid(True)\nax2.text(0.05, 0.9, \"Function: cos(x)\\nPeak: 1.0\\nTrough: -1.0\", transform=ax2.transAxes,\n         fontsize=9, bbox=dict(boxstyle=\"round\", facecolor=\"lavender\", alpha=0.5))\n\n# Subplot 3: Scatter Plot (Random Data Points)\nax3 = fig.add_subplot(2, 2, 3)\n# Seed for repeatability\nnp.random.seed(42)\nx_scatter = np.random.rand(50)\ny_scatter = np.random.rand(50)\nscatter_plot = ax3.scatter(x_scatter, y_scatter, c='green', marker='^')\nax3.set_title(\"Scatter Plot\")\nax3.set_xlabel(\"Random X\")\nax3.set_ylabel(\"Random Y\")\n# List of scatter plot properties\nscatter_info = \"\\n\".join([\n    \"Data Points: 50\",\n    \"Color: Green\",\n    \"Marker: Triangle\",\n])\nax3.text(0.05, 0.85, scatter_info, transform=ax3.transAxes, fontsize=9,\n         bbox=dict(boxstyle=\"round\", facecolor=\"lightyellow\", alpha=0.5))\n\n# Subplot 4",
            "feature_requirements": "• The output must include a large figure with a global title \"Data Visualization Report\" styled with a prominent (bold) font, positioned at the top of the rendering.  \n• There should be an overview section displaying a multi-line text block (including report overview, dataset name, date, and key metrics with mean, standard deviation, and total samples) placed in the upper left area with a light-colored (semi-transparent white) background.  \n• A subplot representing a sine wave must be rendered with a blue solid line (of moderate thickness) across a plotted range, including axis labels \"X Axis\" and \"Amplitude\", and a title \"Sine Wave\" with a legend indicating \"sin(x)\" positioned at the upper right.  \n• Within the sine wave subplot, an annotation (text box with rounded borders and a wheat-colored background) should display details \"Function: sin(x)\", \"Peak: 1.0\", and \"Trough: -1.0\".  \n• A subplot representing a cosine wave must display a red dashed line with similar axis labels (\"X Axis\" and \"Amplitude\"), a title \"Cosine Wave\", and a legend showing \"cos(x)\" at the upper right.  \n• Within the cosine wave subplot, a similar annotation should appear (with rounded borders and a lavender-colored background) containing details \"Function: cos(x)\", \"Peak: 1.0\", and \"Trough: -1.0\".  \n• A subplot for a scatter plot must render 50 random data points using green triangular markers, include axis labels \"Random X\" and \"Random Y\", a title \"Scatter Plot\", and an annotation (with rounded borders and a light yellow background) listing properties: \"Data Points: 50\", \"Color: Green\", and \"Marker: Triangle\".",
            "task_id": "08XX42",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the global title displayed at the top of the rendering?",
                "How is the global title styled?",
                "What background style is used for the overview section in the upper left area?",
                "What key details are included in the overview section?",
                "What color and line style is used for the sine wave subplot?",
                "What axis labels and title are set for the sine wave subplot?",
                "What information is shown in the sine wave subplot's annotation?",
                "What color and line style is used for the cosine wave subplot?",
                "What axis labels, title, and annotation details are provided for the cosine wave subplot?",
                "How is the scatter plot depicted including markers and annotation?"
            ],
            "VQA_answers": [
                "Data Visualization Report",
                "Bold",
                "Light-colored (semi-transparent white)",
                "Report overview, dataset name, date, and key metrics with mean, standard deviation, and total samples",
                "Blue solid line of moderate thickness",
                "X Axis and Amplitude; Title: Sine Wave",
                "Function: sin(x), Peak: 1.0, Trough: -1.0",
                "Red dashed line",
                "X Axis and Amplitude; Title: Cosine Wave; Annotation: Function: cos(x), Peak: 1.0, Trough: -1.0",
                "50 random data points with green triangular markers; Axes labeled Random X and Random Y; Annotation details: Data Points: 50, Color: Green, Marker: Triangle"
            ],
            "raw_output_metric": [
                "Data Visualization Report",
                "report overview",
                "dataset name",
                "date",
                "mean",
                "standard deviation",
                "total samples",
                "Sine Wave",
                "sin(x)",
                "X Axis",
                "Amplitude",
                "Function: sin(x)",
                "Peak: 1.0",
                "Trough: -1.0",
                "Cosine Wave",
                "cos(x)",
                "Function: cos(x)",
                "Cosine Wave",
                "X Axis",
                "Amplitude",
                "Scatter Plot",
                "Random X",
                "Random Y",
                "Data Points: 50",
                "Color: Green",
                "Marker: Triangle"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX42_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ========================================================\n# Global Settings and Figure Initialization\n# ========================================================\nplt.style.use('seaborn-whitegrid')\n\n# Create a large figure\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle(\"Data Visualization Report\", fontsize=16, fontweight='bold')\n\n# ========================================================\n# Section 1: Overview of the Report\n# ========================================================\noverview_text = \"\\n\".join([\n    \"Report Overview\",\n    \"---------------\",\n    \"Dataset: Synthetic Samples\",\n    \"Date: 2023-10-01\",\n    \"\",\n    \"Key Metrics:\",\n    \" - Mean Value: 5.23\",\n    \" - Standard Deviation: 1.77\",\n    \" - Total Samples: 1000\",\n])\nfig.text(0.05, 0.92, overview_text, fontsize=10,\n         bbox=dict(facecolor='white', alpha=0.5))\n\n# ========================================================\n# Section 2: Detailed Plots Layout\n# ========================================================\n\n# Subplot 1: Sine Wave Plot\nax1 = fig.add_subplot(2, 2, 1)\nx_vals = np.linspace(0, 4 * np.pi, 100)\ny_sin = np.sin(x_vals)\nax1.plot(x_vals, y_sin, label='sin(x)', color='blue', linewidth=2)\nax1.set_title(\"Sine Wave\")\nax1.set_xlabel(\"X Axis\")\nax1.set_ylabel(\"Amplitude\")\nax1.legend(loc='upper right')\nax1.grid(True)\n# Annotate details\nax1.text(0.05, 0.9, \"Function: sin(x)\\nPeak: 1.0\\nTrough: -1.0\", transform=ax1.transAxes,\n         fontsize=9, bbox=dict(boxstyle=\"round\", facecolor=\"wheat\", alpha=0.5))\n\n# Subplot 2: Cosine Wave Plot\nax2 = fig.add_subplot(2, 2, 2)\ny_cos = np.cos(x_vals)\nax2.plot(x_vals, y_cos, label='cos(x)', color='red', linestyle='--', linewidth=2)\nax2.set_title(\"Cosine Wave\")\nax2.set_xlabel(\"X Axis\")\nax2.set_ylabel(\"Amplitude\")\nax2.legend(loc='upper right')\nax2.grid(True)\nax2.text(0.05, 0.9, \"Function: cos(x)\\nPeak: 1.0\\nTrough: -1.0\", transform=ax2.transAxes,\n         fontsize=9, bbox=dict(boxstyle=\"round\", facecolor=\"lavender\", alpha=0.5))\n\n# Subplot 3: Scatter Plot (Random Data Points)\nax3 = fig.add_subplot(2, 2, 3)\n# Seed for repeatability\nnp.random.seed(42)\nx_scatter = np.random.rand(50)\ny_scatter = np.random.rand(50)\nscatter_plot = ax3.scatter(x_scatter, y_scatter, c='green', marker='^')\nax3.set_title(\"Scatter Plot\")\nax3.set_xlabel(\"Random X\")\nax3.set_ylabel(\"Random Y\")\n# List of scatter plot properties\nscatter_info = \"\\n\".join([\n    \"Data Points: 50\",\n    \"Color: Green\",\n    \"Marker: Triangle\",\n])\nax3.text(0.05, 0.85, scatter_info, transform=ax3.transAxes, fontsize=9,\n         bbox=dict(boxstyle=\"round\", facecolor=\"lightyellow\", alpha=0.5))\n\n# Subplot 4"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX42_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data Visualization Report",
                                "report overview",
                                "dataset name",
                                "date",
                                "mean",
                                "standard deviation",
                                "total samples",
                                "Sine Wave",
                                "sin(x)",
                                "X Axis",
                                "Amplitude",
                                "Function: sin(x)",
                                "Peak: 1.0",
                                "Trough: -1.0",
                                "Cosine Wave",
                                "cos(x)",
                                "Function: cos(x)",
                                "Cosine Wave",
                                "X Axis",
                                "Amplitude",
                                "Scatter Plot",
                                "Random X",
                                "Random Y",
                                "Data Points: 50",
                                "Color: Green",
                                "Marker: Triangle"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX42_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX42_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the global title displayed at the top of the rendering?",
                                "How is the global title styled?",
                                "What background style is used for the overview section in the upper left area?",
                                "What key details are included in the overview section?",
                                "What color and line style is used for the sine wave subplot?",
                                "What axis labels and title are set for the sine wave subplot?",
                                "What information is shown in the sine wave subplot's annotation?",
                                "What color and line style is used for the cosine wave subplot?",
                                "What axis labels, title, and annotation details are provided for the cosine wave subplot?",
                                "How is the scatter plot depicted including markers and annotation?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX42_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data Visualization Report",
                                "Bold",
                                "Light-colored (semi-transparent white)",
                                "Report overview, dataset name, date, and key metrics with mean, standard deviation, and total samples",
                                "Blue solid line of moderate thickness",
                                "X Axis and Amplitude; Title: Sine Wave",
                                "Function: sin(x), Peak: 1.0, Trough: -1.0",
                                "Red dashed line",
                                "X Axis and Amplitude; Title: Cosine Wave; Annotation: Function: cos(x), Peak: 1.0, Trough: -1.0",
                                "50 random data points with green triangular markers; Axes labeled Random X and Random Y; Annotation details: Data Points: 50, Color: Green, Marker: Triangle"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib.gridspec as gridspec\n\n# Create a figure with GridSpec layout for complex dashboard\nfig = plt.figure(figsize=(12, 10))\ngs = gridspec.GridSpec(3, 2, height_ratios=[1, 2, 2], width_ratios=[1, 1], hspace=0.5, wspace=0.3)\n\n# Main Title for the dashboard\nfig.suptitle(\"Matplotlib Dashboard Layout: Data Visualization & Analysis\", fontsize=16, fontweight='bold')\n\n# Section 1: Header with basic information\nax_header = fig.add_subplot(gs[0, :])\nax_header.axis('off')\nheader_text = (\"Dashboard Overview:\\n\"\n               \"-------------------\\n\"\n               \"This dashboard provides a visual analysis of recent data metrics.\\n\"\n               \"Key Sections:\\n\"\n               \"   • Sales Analysis\\n\"\n               \"   • Customer Segments\\n\"\n               \"   • Performance Metrics\\n\"\n               \"   • Detailed Table Summary\\n\")\nax_header.text(0.02, 0.5, header_text, fontsize=12, va='center', fontfamily='monospace')\n\n# Section 2: Sales Analysis Bar Chart\nax_bar = fig.add_subplot(gs[1, 0])\nax_bar.set_title(\"Sales Analysis\", fontsize=14, fontweight='bold')\nax_bar.set_xlabel(\"Products\")\nax_bar.set_ylabel(\"Sales (in thousands)\")\nproducts = ['Prod A', 'Prod B', 'Prod C', 'Prod D']\nsales = [25, 40, 30, 20]\nbars = ax_bar.bar(products, sales, color='skyblue', edgecolor='navy', linewidth=1.5)\n\n# Adding annotations on top of the bars\nfor bar in bars:\n    height = bar.get_height()\n    ax_bar.text(bar.get_x() + bar.get_width()/2, height + 0.5, f'{height}', ha='center', va='bottom', fontsize=10)\n\nax_bar.grid(True, linestyle='--', alpha=0.5)\n\n# Section 3: Customer Segments Pie Chart\nax_pie = fig.add_subplot(gs[1, 1])\nax_pie.set_title(\"Customer Segments\", fontsize=14, fontweight='bold')\nsegments = ['Segment A', 'Segment B', 'Segment C', 'Segment D']\nsizes = [30, 25, 25, 20]\ncolors = ['gold', 'lightcoral', 'lightskyblue', 'yellowgreen']\nexplode = (0.1, 0, 0, 0)\npatches, texts, autotexts = ax_pie.pie(sizes, explode=explode, labels=segments, colors=colors,\n                                        autopct='%1.1f%%', startangle=140, textprops=dict(color=\"black\"))\nax_pie.axis('equal')  # Equal aspect ratio ensures the pie is circular.\n\n# Section 4: Detailed Table Summary\nax_table = fig.add_subplot(gs[2, :])\nax_table.axis('off')\ntable_data = [\n    [\"Metric\", \"Value\", \"Notes\"],\n    [\"Total Sales\", \"$120K\", \"Increase by 10%\"],\n    [\"Avg. Order Value\", \"$300\", \"Stable\"],\n    [\"New Customers\", \"150\", \"Up by 5%\"],\n    [\"Returning Customers\", \"85\", \"Steady\"],\n]\n# Create table\ntable = ax_table.table(cellText=table_data, loc='center', cellLoc='center')\ntable.auto_set_font_size(False)\ntable.set_fontsize(11)\n\n# Adjust table style: header formatting\nfor (row, col), cell in table.get_celld().items():\n    if row == 0:\n        cell.set_text_props(fontweight='bold', color='white')\n        cell.set_facecolor('dimgray')\n    else:\n        cell.set_facecolor('whitesmoke')\n\n# Adding detailed text description next to table\ndescription = (\"Detailed Table Summary:\\n\"\n               \"-----------------------\\n\"\n               \"1. Total Sales: Reflects overall revenue performance.\\n\"\n               \"2. Average Order Value: Indicator of purchasing behavior.\\n\"\n               \"3. Customer Breakdown: Differentiates new vs. returning users.\\n\"\n               \"4. Notes: Short annotations for key metrics.\\n\")\nax_table.text(0.02, -0.3, description, fontsize=12, va='center', fontfamily='monospace')\n\n# Additional Section: Performance Trend Line Chart added at bottom left\nax_line = fig.add_axes([0.1, 0.05, 0.35, 0.2])\nax_line.set_title(\"Performance Trend\", fontsize=12, fontweight='bold')\nx = np.arange(1, 13)\ny = np.array([5, 7, 8, 12, 15, 18, 17, 16, 19, 22, 20, 25])\nax_line.plot(x, y, marker='o', color='purple', linestyle='-', linewidth=2)\nax_line.set_xticks(x)\nax_line.set_xlabel(\"Month\")\nax_line.set_ylabel(\"Performance Index\")\nax_line.grid(True, linestyle='--', alpha=0.6)\n\n# Additional Section: List of Improvements in text box (annotated on subplot)\nax_text = fig.add_axes([0.55, 0.05, 0.35, 0.2])\nax_text.axis('off')\nimprovements = (\"Upcoming Improvements:\\n\"\n                \"----------------------\\n\"\n                \"• Enhance Data Granularity\\n\"\n                \"• Integrate Real-Time Analytics\\n\"\n                \"• Expand Metric Coverage\\n\"\n                \"• Streamline User Interface\\n\")\nax_text.text(0.02, 0.6, improvements, fontsize=12, fontfamily='monospace', va='center')\n\n# Render the visualization\nplt.show()\n</code>",
            "feature_requirements": "• A large dashboard title at the top displaying “Matplotlib Dashboard Layout: Data Visualization & Analysis” in bold, larger text.  \n• A header section with a multi-line text block containing an overview and key sections (including “Sales Analysis”, “Customer Segments”, etc.) rendered in a monospaced font, without plot axes.  \n• A bar chart section titled “Sales Analysis” with labeled x-axis (“Products”) and y-axis (“Sales (in thousands)”), displaying four bars for products, each annotated with a numerical value above the bar.  \n• A pie chart section titled “Customer Segments” that displays four labeled segments with corresponding percentages, an exploded effect on the first segment, and the pie rendered as a circle.  \n• A table summary section without axes that includes a header row (“Metric”, “Value”, “Notes”) and four subsequent data rows detailing metrics like “Total Sales” and “Avg. Order Value”, with distinct formatting for header cells.  \n• An adjacent multi-line text description next to the table summarizing detailed table information using monospaced text.  \n• A performance trend line chart placed in the lower left, with a title “Performance Trend”, marked data points connected by a line, labeled x-axis (“Month”) and y-axis (“Performance Index”), and visible grid lines.  \n• A separate text box in the lower right displaying a list titled “Upcoming Improvements:” with bullet-pointed text items in monospaced font.  \n• Each section’s title appears in bold to clearly demarcate the different parts of this dashboard layout.",
            "task_id": "08XX43",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the dashboard title displayed at the top?",
                "What font is used for the header section text?",
                "Which key sections are mentioned in the header overview text?",
                "What are the labels on the x-axis and y-axis of the Sales Analysis bar chart?",
                "How many bars are shown in the Sales Analysis chart?",
                "What is displayed above each bar in the Sales Analysis chart?",
                "Which segment in the Customer Segments pie chart has an exploded effect?",
                "What headers are included in the table summary section?",
                "What is the title of the performance trend line chart and what are its axis labels?",
                "What title and font details are shown in the separate lower right text box?"
            ],
            "VQA_answers": [
                "Matplotlib Dashboard Layout: Data Visualization & Analysis",
                "Monospaced",
                "Sales Analysis, Customer Segments, etc.",
                "x-axis: Products, y-axis: Sales (in thousands)",
                "4",
                "Annotated numerical value",
                "The first segment",
                "Metric, Value, Notes",
                "Title: Performance Trend; x-axis: Month; y-axis: Performance Index",
                "Title: Upcoming Improvements: with bullet-pointed monospaced text"
            ],
            "raw_output_metric": [
                "Matplotlib Dashboard Layout: Data Visualization & Analysis",
                "Sales Analysis",
                "Products",
                "Sales (in thousands)",
                "Customer Segments",
                "Metric",
                "Value",
                "Notes",
                "Total Sales",
                "Avg. Order Value",
                "Performance Trend",
                "Month",
                "Performance Index",
                "Upcoming Improvements:"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX43_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib.gridspec as gridspec\n\n# Create a figure with GridSpec layout for complex dashboard\nfig = plt.figure(figsize=(12, 10))\ngs = gridspec.GridSpec(3, 2, height_ratios=[1, 2, 2], width_ratios=[1, 1], hspace=0.5, wspace=0.3)\n\n# Main Title for the dashboard\nfig.suptitle(\"Matplotlib Dashboard Layout: Data Visualization & Analysis\", fontsize=16, fontweight='bold')\n\n# Section 1: Header with basic information\nax_header = fig.add_subplot(gs[0, :])\nax_header.axis('off')\nheader_text = (\"Dashboard Overview:\\n\"\n               \"-------------------\\n\"\n               \"This dashboard provides a visual analysis of recent data metrics.\\n\"\n               \"Key Sections:\\n\"\n               \"   • Sales Analysis\\n\"\n               \"   • Customer Segments\\n\"\n               \"   • Performance Metrics\\n\"\n               \"   • Detailed Table Summary\\n\")\nax_header.text(0.02, 0.5, header_text, fontsize=12, va='center', fontfamily='monospace')\n\n# Section 2: Sales Analysis Bar Chart\nax_bar = fig.add_subplot(gs[1, 0])\nax_bar.set_title(\"Sales Analysis\", fontsize=14, fontweight='bold')\nax_bar.set_xlabel(\"Products\")\nax_bar.set_ylabel(\"Sales (in thousands)\")\nproducts = ['Prod A', 'Prod B', 'Prod C', 'Prod D']\nsales = [25, 40, 30, 20]\nbars = ax_bar.bar(products, sales, color='skyblue', edgecolor='navy', linewidth=1.5)\n\n# Adding annotations on top of the bars\nfor bar in bars:\n    height = bar.get_height()\n    ax_bar.text(bar.get_x() + bar.get_width()/2, height + 0.5, f'{height}', ha='center', va='bottom', fontsize=10)\n\nax_bar.grid(True, linestyle='--', alpha=0.5)\n\n# Section 3: Customer Segments Pie Chart\nax_pie = fig.add_subplot(gs[1, 1])\nax_pie.set_title(\"Customer Segments\", fontsize=14, fontweight='bold')\nsegments = ['Segment A', 'Segment B', 'Segment C', 'Segment D']\nsizes = [30, 25, 25, 20]\ncolors = ['gold', 'lightcoral', 'lightskyblue', 'yellowgreen']\nexplode = (0.1, 0, 0, 0)\npatches, texts, autotexts = ax_pie.pie(sizes, explode=explode, labels=segments, colors=colors,\n                                        autopct='%1.1f%%', startangle=140, textprops=dict(color=\"black\"))\nax_pie.axis('equal')  # Equal aspect ratio ensures the pie is circular.\n\n# Section 4: Detailed Table Summary\nax_table = fig.add_subplot(gs[2, :])\nax_table.axis('off')\ntable_data = [\n    [\"Metric\", \"Value\", \"Notes\"],\n    [\"Total Sales\", \"$120K\", \"Increase by 10%\"],\n    [\"Avg. Order Value\", \"$300\", \"Stable\"],\n    [\"New Customers\", \"150\", \"Up by 5%\"],\n    [\"Returning Customers\", \"85\", \"Steady\"],\n]\n# Create table\ntable = ax_table.table(cellText=table_data, loc='center', cellLoc='center')\ntable.auto_set_font_size(False)\ntable.set_fontsize(11)\n\n# Adjust table style: header formatting\nfor (row, col), cell in table.get_celld().items():\n    if row == 0:\n        cell.set_text_props(fontweight='bold', color='white')\n        cell.set_facecolor('dimgray')\n    else:\n        cell.set_facecolor('whitesmoke')\n\n# Adding detailed text description next to table\ndescription = (\"Detailed Table Summary:\\n\"\n               \"-----------------------\\n\"\n               \"1. Total Sales: Reflects overall revenue performance.\\n\"\n               \"2. Average Order Value: Indicator of purchasing behavior.\\n\"\n               \"3. Customer Breakdown: Differentiates new vs. returning users.\\n\"\n               \"4. Notes: Short annotations for key metrics.\\n\")\nax_table.text(0.02, -0.3, description, fontsize=12, va='center', fontfamily='monospace')\n\n# Additional Section: Performance Trend Line Chart added at bottom left\nax_line = fig.add_axes([0.1, 0.05, 0.35, 0.2])\nax_line.set_title(\"Performance Trend\", fontsize=12, fontweight='bold')\nx = np.arange(1, 13)\ny = np.array([5, 7, 8, 12, 15, 18, 17, 16, 19, 22, 20, 25])\nax_line.plot(x, y, marker='o', color='purple', linestyle='-', linewidth=2)\nax_line.set_xticks(x)\nax_line.set_xlabel(\"Month\")\nax_line.set_ylabel(\"Performance Index\")\nax_line.grid(True, linestyle='--', alpha=0.6)\n\n# Additional Section: List of Improvements in text box (annotated on subplot)\nax_text = fig.add_axes([0.55, 0.05, 0.35, 0.2])\nax_text.axis('off')\nimprovements = (\"Upcoming Improvements:\\n\"\n                \"----------------------\\n\"\n                \"• Enhance Data Granularity\\n\"\n                \"• Integrate Real-Time Analytics\\n\"\n                \"• Expand Metric Coverage\\n\"\n                \"• Streamline User Interface\\n\")\nax_text.text(0.02, 0.6, improvements, fontsize=12, fontfamily='monospace', va='center')\n\n# Render the visualization\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX43_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Matplotlib Dashboard Layout: Data Visualization & Analysis",
                                "Sales Analysis",
                                "Products",
                                "Sales (in thousands)",
                                "Customer Segments",
                                "Metric",
                                "Value",
                                "Notes",
                                "Total Sales",
                                "Avg. Order Value",
                                "Performance Trend",
                                "Month",
                                "Performance Index",
                                "Upcoming Improvements:"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX43_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX43_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the dashboard title displayed at the top?",
                                "What font is used for the header section text?",
                                "Which key sections are mentioned in the header overview text?",
                                "What are the labels on the x-axis and y-axis of the Sales Analysis bar chart?",
                                "How many bars are shown in the Sales Analysis chart?",
                                "What is displayed above each bar in the Sales Analysis chart?",
                                "Which segment in the Customer Segments pie chart has an exploded effect?",
                                "What headers are included in the table summary section?",
                                "What is the title of the performance trend line chart and what are its axis labels?",
                                "What title and font details are shown in the separate lower right text box?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX43_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Matplotlib Dashboard Layout: Data Visualization & Analysis",
                                "Monospaced",
                                "Sales Analysis, Customer Segments, etc.",
                                "x-axis: Products, y-axis: Sales (in thousands)",
                                "4",
                                "Annotated numerical value",
                                "The first segment",
                                "Metric, Value, Notes",
                                "Title: Performance Trend; x-axis: Month; y-axis: Performance Index",
                                "Title: Upcoming Improvements: with bullet-pointed monospaced text"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate sample data\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x) * 0.1  # Scaled tangent for better visualization\n\n# Create a figure with multiple subplots to represent sections and layout\nfig = plt.figure(figsize=(12, 10))\n\n# Main Title: Report Header\nfig.suptitle(\"Market Analysis Report\", fontsize=20, fontweight='bold', color='navy')\n\n# Section 1: Overview (Top left)\nax1 = fig.add_subplot(2, 2, 1)\nax1.plot(x, y1, label='Sine Wave', color='blue')\nax1.set_title(\"Section 1: Overview\", fontsize=14, fontweight='bold')\nax1.set_xlabel(\"Time (s)\")\nax1.set_ylabel(\"Amplitude\")\nax1.legend(loc='upper right')\nax1.grid(True)\n\n# Adding a list inside ax1 to simulate textual explanation\ntext_lines = [\n    \"Key Points:\",\n    \"  • Sine oscillates smoothly\",\n    \"  • Frequency: 1 Hz\",\n    \"  • Amplitude: 1 unit\"\n]\n# Display the text on the plot using text boxes, positioned inside the plot\nax1.text(0.05, -0.3, \"\\n\".join(text_lines), transform=ax1.transAxes,\n         fontsize=10, bbox=dict(facecolor='white', alpha=0.5), verticalalignment='top')\n\n# Section 2: Detailed Computation (Top right)\nax2 = fig.add_subplot(2, 2, 2)\nax2.plot(x, y2, label='Cosine Wave', color='green', linestyle='--')\nax2.set_title(\"Section 2: Detailed Computation\", fontsize=14, fontweight='bold')\nax2.set_xlabel(\"Time (s)\")\nax2.set_ylabel(\"Amplitude\")\nax2.legend(loc='upper right')\nax2.grid(True)\n\n# Annotate some labeled values for cosine analysis\nx_annotate = 2 * np.pi / 4\ny_annotate = np.cos(x_annotate)\nax2.annotate(f\"({x_annotate:.2f}, {y_annotate:.2f})\", \n             xy=(x_annotate, y_annotate), \n             xytext=(x_annotate+1, y_annotate),\n             arrowprops=dict(facecolor='black', shrink=0.05),\n             fontsize=10, color='brown')\n\n# Section 3: Advanced Metrics (Bottom left)\nax3 = fig.add_subplot(2, 2, 3)\nax3.plot(x, y3, label='Scaled Tangent', color='red', linestyle='-.')\nax3.set_title(\"Section 3: Advanced Metrics\", fontsize=14, fontweight='bold')\nax3.set_xlabel(\"Time (s)\")\nax3.set_ylabel(\"Scaled Amplitude\")\nax3.legend(loc='upper right')\nax3.grid(True)\n\n# Draw a horizontal line as reference\nax3.axhline(0, color='black', linewidth=1, linestyle='--')\nax3.text(0.1, 0.05, \"Reference line: y=0\", transform=ax3.transAxes, fontsize=9, color='black')\n\n# Section 4: Summary Table (Bottom right)\nax4 = fig.add_subplot(2, 2, 4)\nax4.axis('off')  # Hide the standard axes\n\n# Create data for the table in summary\ntable_data = [\n    [\"Metric\", \"Value\"],\n    [\"Max Sine\", f\"{np.max(y1):.2f}\"],\n    [\"Min Sine\", f\"{np.min(y1):.2f}\"],\n    [\"Max Cosine\", f\"{np.max(y2):.2f}\"],\n    [\"Min Cosine\", f\"{np.min(y2):.2f}\"],\n    [\"Max Tangent (scaled)\", f\"{np.max(y3):.2f}\"],\n    [\"Min Tangent (scaled)\", f\"{np.min(y3):.2f}\"]\n]\n\n# Use Matplotlib's table to display structured data\ntable = ax4.table(cellText=table_data, colLabels=None, loc='center')\ntable.auto_set_font_size(False)\ntable.set_fontsize(10)\ntable.scale(1, 2)  # Scale row heights\n\n# Adding a header for the summary table\nax4.text(0.5, 0.95, \"Section 4: Financial Summary\", horizontalalignment='center',\n         fontsize=14, fontweight='bold', transform=ax4.transAxes)\n\n# Adjust the subplot layout to prevent overlapping\nplt.tight_layout(rect=[0, 0, 1, 0.96])\n\n# Add a footer with additional information\nfig.text(0.5, 0.02, \"Report generated using Matplotlib - All data items are simulated\", \n         ha='center', fontsize=10, style='italic')\n\n# Save the figure to a file (optional, can be commented out if not needed)\n# plt.savefig(\"market_analysis_report.png\", dpi=300, bbox_inches='tight')\n\nplt.show()\n</code>",
            "feature_requirements": "• The output must include a main header centered at the top with the text \"Market Analysis Report\" in a large, bold, navy-colored font.\n• There must be four distinct sections arranged in a 2×2 grid layout.\n• The top-left section (\"Section 1: Overview\") must display a sine wave plot with labeled axes (\"Time (s)\" for the x-axis and \"Amplitude\" for the y-axis), a legend indicating \"Sine Wave,\" and a grid; it also contains a text group listing bullet points (\"Key Points:\", \"• Sine oscillates smoothly\", \"• Frequency: 1 Hz\", \"• Amplitude: 1 unit\") positioned inside the plot.\n• The top-right section (\"Section 2: Detailed Computation\") must show a cosine wave plot using a dashed line in green, with labeled axes (\"Time (s)\" and \"Amplitude\"), a legend for \"Cosine Wave\" in the upper right, and an annotation displaying coordinate values (formatted to two decimal places) with an arrow pointing to the corresponding point on the curve.\n• The bottom-left section (\"Section 3: Advanced Metrics\") must present a scaled tangent plot using a dash-dotted line in red, with labeled axes (\"Time (s)\" and \"Scaled Amplitude\"), a legend, a grid, and a horizontal reference line at y=0 accompanied by a small text note \"Reference line: y=0\" within the plot.\n• The bottom-right section (\"Section 4: Financial Summary\") must contain a table with two columns (\"Metric\" and \"Value\") and rows for \"Max Sine\", \"Min Sine\", \"Max Cosine\", \"Min Cosine\", \"Max Tangent (scaled)\", and \"Min Tangent (scaled)\"; this section should have its axes hidden.\n• A footer must be present at the bottom center of the output with the text \"Report generated using Matplotlib - All data items are simulated\" in an italic font style.\n• The overall layout must ensure that the spacing between sections allows no overlapping and that all elements (titles, axes labels, legends, annotations, text, table) are clearly visible and distinct.",
            "task_id": "08XX44",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main header text displayed at the top?",
                "How many sections are arranged in the overall layout?",
                "What are the x-axis and y-axis labels in the sine wave plot (Section 1)?",
                "What legend is shown in Section 1's plot?",
                "Which bullet points are listed inside the sine wave plot of Section 1?",
                "What line style and color is used for the cosine wave in Section 2?",
                "Where is the legend for the cosine wave positioned in Section 2?",
                "What additional annotation is found in the cosine plot of Section 2?",
                "What special feature is included in the tangent plot (Section 3) along with its style?",
                "What table elements are present in Section 4?"
            ],
            "VQA_answers": [
                "Market Analysis Report",
                "4",
                "Time (s) and Amplitude",
                "Sine Wave",
                "Key Points:, • Sine oscillates smoothly, • Frequency: 1 Hz, • Amplitude: 1 unit",
                "Dashed line in green",
                "Upper right",
                "Coordinates formatted to two decimal places with an arrow",
                "A horizontal reference line at y=0 with a dash-dotted red line",
                "Columns 'Metric' and 'Value' with rows for Max Sine, Min Sine, Max Cosine, Min Cosine, Max Tangent (scaled), and Min Tangent (scaled)"
            ],
            "raw_output_metric": [
                "Market Analysis Report",
                "Section 1: Overview",
                "Time (s)",
                "Amplitude",
                "Sine Wave",
                "Key Points:",
                "• Sine oscillates smoothly",
                "• Frequency: 1 Hz",
                "• Amplitude: 1 unit",
                "Section 2: Detailed Computation",
                "Cosine Wave",
                "Section 3: Advanced Metrics",
                "Scaled Amplitude",
                "Reference line: y=0",
                "Section 4: Financial Summary",
                "Metric",
                "Value",
                "Max Sine",
                "Min Sine",
                "Max Cosine",
                "Min Cosine",
                "Max Tangent (scaled)",
                "Min Tangent (scaled)",
                "Report generated using Matplotlib - All data items are simulated"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX44_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate sample data\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x) * 0.1  # Scaled tangent for better visualization\n\n# Create a figure with multiple subplots to represent sections and layout\nfig = plt.figure(figsize=(12, 10))\n\n# Main Title: Report Header\nfig.suptitle(\"Market Analysis Report\", fontsize=20, fontweight='bold', color='navy')\n\n# Section 1: Overview (Top left)\nax1 = fig.add_subplot(2, 2, 1)\nax1.plot(x, y1, label='Sine Wave', color='blue')\nax1.set_title(\"Section 1: Overview\", fontsize=14, fontweight='bold')\nax1.set_xlabel(\"Time (s)\")\nax1.set_ylabel(\"Amplitude\")\nax1.legend(loc='upper right')\nax1.grid(True)\n\n# Adding a list inside ax1 to simulate textual explanation\ntext_lines = [\n    \"Key Points:\",\n    \"  • Sine oscillates smoothly\",\n    \"  • Frequency: 1 Hz\",\n    \"  • Amplitude: 1 unit\"\n]\n# Display the text on the plot using text boxes, positioned inside the plot\nax1.text(0.05, -0.3, \"\\n\".join(text_lines), transform=ax1.transAxes,\n         fontsize=10, bbox=dict(facecolor='white', alpha=0.5), verticalalignment='top')\n\n# Section 2: Detailed Computation (Top right)\nax2 = fig.add_subplot(2, 2, 2)\nax2.plot(x, y2, label='Cosine Wave', color='green', linestyle='--')\nax2.set_title(\"Section 2: Detailed Computation\", fontsize=14, fontweight='bold')\nax2.set_xlabel(\"Time (s)\")\nax2.set_ylabel(\"Amplitude\")\nax2.legend(loc='upper right')\nax2.grid(True)\n\n# Annotate some labeled values for cosine analysis\nx_annotate = 2 * np.pi / 4\ny_annotate = np.cos(x_annotate)\nax2.annotate(f\"({x_annotate:.2f}, {y_annotate:.2f})\", \n             xy=(x_annotate, y_annotate), \n             xytext=(x_annotate+1, y_annotate),\n             arrowprops=dict(facecolor='black', shrink=0.05),\n             fontsize=10, color='brown')\n\n# Section 3: Advanced Metrics (Bottom left)\nax3 = fig.add_subplot(2, 2, 3)\nax3.plot(x, y3, label='Scaled Tangent', color='red', linestyle='-.')\nax3.set_title(\"Section 3: Advanced Metrics\", fontsize=14, fontweight='bold')\nax3.set_xlabel(\"Time (s)\")\nax3.set_ylabel(\"Scaled Amplitude\")\nax3.legend(loc='upper right')\nax3.grid(True)\n\n# Draw a horizontal line as reference\nax3.axhline(0, color='black', linewidth=1, linestyle='--')\nax3.text(0.1, 0.05, \"Reference line: y=0\", transform=ax3.transAxes, fontsize=9, color='black')\n\n# Section 4: Summary Table (Bottom right)\nax4 = fig.add_subplot(2, 2, 4)\nax4.axis('off')  # Hide the standard axes\n\n# Create data for the table in summary\ntable_data = [\n    [\"Metric\", \"Value\"],\n    [\"Max Sine\", f\"{np.max(y1):.2f}\"],\n    [\"Min Sine\", f\"{np.min(y1):.2f}\"],\n    [\"Max Cosine\", f\"{np.max(y2):.2f}\"],\n    [\"Min Cosine\", f\"{np.min(y2):.2f}\"],\n    [\"Max Tangent (scaled)\", f\"{np.max(y3):.2f}\"],\n    [\"Min Tangent (scaled)\", f\"{np.min(y3):.2f}\"]\n]\n\n# Use Matplotlib's table to display structured data\ntable = ax4.table(cellText=table_data, colLabels=None, loc='center')\ntable.auto_set_font_size(False)\ntable.set_fontsize(10)\ntable.scale(1, 2)  # Scale row heights\n\n# Adding a header for the summary table\nax4.text(0.5, 0.95, \"Section 4: Financial Summary\", horizontalalignment='center',\n         fontsize=14, fontweight='bold', transform=ax4.transAxes)\n\n# Adjust the subplot layout to prevent overlapping\nplt.tight_layout(rect=[0, 0, 1, 0.96])\n\n# Add a footer with additional information\nfig.text(0.5, 0.02, \"Report generated using Matplotlib - All data items are simulated\", \n         ha='center', fontsize=10, style='italic')\n\n# Save the figure to a file (optional, can be commented out if not needed)\n# plt.savefig(\"market_analysis_report.png\", dpi=300, bbox_inches='tight')\n\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX44_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Market Analysis Report",
                                "Section 1: Overview",
                                "Time (s)",
                                "Amplitude",
                                "Sine Wave",
                                "Key Points:",
                                "• Sine oscillates smoothly",
                                "• Frequency: 1 Hz",
                                "• Amplitude: 1 unit",
                                "Section 2: Detailed Computation",
                                "Cosine Wave",
                                "Section 3: Advanced Metrics",
                                "Scaled Amplitude",
                                "Reference line: y=0",
                                "Section 4: Financial Summary",
                                "Metric",
                                "Value",
                                "Max Sine",
                                "Min Sine",
                                "Max Cosine",
                                "Min Cosine",
                                "Max Tangent (scaled)",
                                "Min Tangent (scaled)",
                                "Report generated using Matplotlib - All data items are simulated"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX44_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX44_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main header text displayed at the top?",
                                "How many sections are arranged in the overall layout?",
                                "What are the x-axis and y-axis labels in the sine wave plot (Section 1)?",
                                "What legend is shown in Section 1's plot?",
                                "Which bullet points are listed inside the sine wave plot of Section 1?",
                                "What line style and color is used for the cosine wave in Section 2?",
                                "Where is the legend for the cosine wave positioned in Section 2?",
                                "What additional annotation is found in the cosine plot of Section 2?",
                                "What special feature is included in the tangent plot (Section 3) along with its style?",
                                "What table elements are present in Section 4?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX44_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Market Analysis Report",
                                "4",
                                "Time (s) and Amplitude",
                                "Sine Wave",
                                "Key Points:, • Sine oscillates smoothly, • Frequency: 1 Hz, • Amplitude: 1 unit",
                                "Dashed line in green",
                                "Upper right",
                                "Coordinates formatted to two decimal places with an arrow",
                                "A horizontal reference line at y=0 with a dash-dotted red line",
                                "Columns 'Metric' and 'Value' with rows for Max Sine, Min Sine, Max Cosine, Min Cosine, Max Tangent (scaled), and Min Tangent (scaled)"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef plot_analysis_report():\n    # Create a figure with 2 rows and 2 columns of subplots\n    fig, axs = plt.subplots(2, 2, figsize=(14, 10))\n    fig.suptitle(\"Analysis Report\", fontsize=20, fontweight='bold', y=0.98)\n\n    # Section 1: Report Overview (Textual Summary)\n    axs[0, 0].axis('off')  # Hide the axis for clarity in text display\n    overview_text = (\n        \"REPORT SUMMARY:\\n\"\n        \"====================\\n\"\n        \"1. Data Collection:\\n\"\n        \"   - Source: Sensor readings, Database logs\\n\"\n        \"   - Frequency: 1 Hz sample rate\\n\"\n        \"\\n\"\n        \"2. Data Analysis:\\n\"\n        \"   - Techniques: PCA, linear regression, time series analysis\\n\"\n        \"   - Tools: Python, NumPy, SciPy, Matplotlib\\n\"\n        \"\\n\"\n        \"3. Findings:\\n\"\n        \"   - Overall trend: Increasing with periodic fluctuations\\n\"\n        \"   - Detected anomalies around 3 PM daily\\n\"\n        \"\\n\"\n        \"4. Recommendations:\\n\"\n        \"   - Enhance data filtering\\n\"\n        \"   - Investigate periodic anomaly causes\\n\"\n        \"   - Plan further predictive maintenance\\n\"\n    )\n    axs[0, 0].text(0.02, 0.98, overview_text, fontsize=10, verticalalignment='top', family='monospace')\n\n    # Section 2: Trend Analysis (Line Chart)\n    t = np.linspace(0, 10, 200)\n    trend = np.sin(t) + t / 5\n    axs[0, 1].plot(t, trend, color='navy', linewidth=2, label='Trend')\n    axs[0, 1].set_title(\"Trend Analysis\", fontsize=14, fontweight='bold')\n    axs[0, 1].set_xlabel(\"Time (seconds)\", fontsize=12)\n    axs[0, 1].set_ylabel(\"Measurement Value\", fontsize=12)\n    axs[0, 1].legend(loc='upper left', fontsize=10)\n    axs[0, 1].grid(True, linestyle='--', alpha=0.6)\n\n    # Section 3: Random Samples Scatter Plot (with labeled points)\n    np.random.seed(0)\n    x = np.random.rand(50)\n    y = np.random.rand(50)\n    axs[1, 0].scatter(x, y, c='forestgreen', s=50, edgecolors='k', alpha=0.8)\n    axs[1, 0].set_title(\"Scatter Plot: Random Samples\", fontsize=14, fontweight='bold')\n    axs[1, 0].set_xlabel(\"Random X\", fontsize=12)\n    axs[1, 0].set_ylabel(\"Random Y\", fontsize=12)\n    # Label the first five points for emphasis\n    for i in range(5):\n        axs[1, 0].annotate(f\"ID {i+1}\", (x[i], y[i]),\n                           textcoords=\"offset points\", xytext=(5,5),\n                           fontsize=8, color=\"darkred\")\n\n    # Section 4: Section Summary Bar Chart\n    categories = ['Section A', 'Section B', 'Section C', 'Section D']\n    section_values = [23, 45, 56, 78]\n    bar_colors = ['#d62728', '#1f77b4', '#2ca02c', '#9467bd']\n    bars = axs[1, 1].bar(categories, section_values, color=bar_colors, edgecolor='black')\n    axs[1, 1].set_title(\"Section Summary\", fontsize=14, fontweight='bold')\n    axs[1, 1].set_xlabel(\"Sections\", fontsize=12)\n    axs[1, 1].set_ylabel(\"Values\", fontsize=12)\n    axs[1, 1].grid(axis='y', linestyle='--', alpha=0.5)\n\n    # Annotate each bar with its labeled value\n    for bar in bars:\n        yval = bar.get_height()\n        axs[1, 1].text(bar.get_x() + bar.get_width()/2, yval + 2, f'{yval}', \n                       ha='center', va='bottom', fontsize=10, fontweight='bold')\n\n    # Footer: Additional information using figtext\n    footer_text = (\n        \"NOTE: This analysis report is proprietary.\\n\"\n        \"For further inquiries, contact the internal data analytics team.\\n\"\n        \"Version: 1.0.0\"\n    )\n    plt.figtext(0.5, 0.01, footer_text, wrap=True, horizontalalignment='center', fontsize=9, family='monospace')\n\n    # Adjust layout\n    plt.tight_layout(rect=[0, 0.04, 1, 0.95])\n    plt.show()\n\nif __name__ == '__main__':\n    plot_analysis_report()\n</code>",
            "feature_requirements": "• A centered main title \"Analysis Report\" in a large, bold font displayed at the top of the output.  \n• A top‐left section containing a multi-line textual report summary with clearly delineated subsections (Data Collection, Data Analysis, Findings, and Recommendations), styled in a monospaced font and rendered without axes.  \n• A top‐right section showing a line chart labeled \"Trend Analysis\" that plots a continuous curve with a sinusoidal plus linear trend, including clearly labeled x-axis (\"Time (seconds)\"), y-axis (\"Measurement Value\"), a legend displaying \"Trend\", and a dashed grid.  \n• A bottom‐left section displaying a scatter plot titled \"Scatter Plot: Random Samples\" with 50 data points, where the first five points are annotated with labels \"ID 1\" through \"ID 5\", and the plot has labeled x-axis (\"Random X\") and y-axis (\"Random Y\").  \n• A bottom‐right section featuring a bar chart titled \"Section Summary\" with four bars corresponding to \"Section A\", \"Section B\", \"Section C\", and \"Section D\", each bar having a numerical value (23, 45, 56, and 78 respectively) displayed above the bar, and including y-axis gridlines styled with dashed lines.  \n• A footer area centered at the bottom of the output showing additional information in a monospaced font, including a note on report propriety, contact information, and version, formatted as multi-line text.",
            "task_id": "08XX45",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the centered main title displayed at the top of the output?",
                "Which subsections are included in the top‐left multi-line report summary?",
                "What is the title of the top‐right line chart?",
                "What are the labels of the x-axis and y-axis in the top‐right line chart?",
                "How many data points are plotted in the bottom‐left scatter plot, and how many of them are annotated?",
                "What is the title of the bottom‐right bar chart and what numerical values are displayed above its bars?",
                "What type of font and information are displayed in the footer area at the bottom?"
            ],
            "VQA_answers": [
                "Analysis Report",
                "Data Collection, Data Analysis, Findings, and Recommendations",
                "Trend Analysis",
                "Time (seconds) and Measurement Value",
                "50 data points with the first 5 annotated",
                "Section Summary; 23, 45, 56, and 78",
                "Monospaced font; includes a note on report propriety, contact information, and version"
            ],
            "raw_output_metric": [
                "Analysis Report",
                "Data Collection",
                "Data Analysis",
                "Findings",
                "Recommendations",
                "Trend Analysis",
                "Time (seconds)",
                "Measurement Value",
                "Trend",
                "Scatter Plot: Random Samples",
                "ID 1",
                "ID 2",
                "ID 3",
                "ID 4",
                "ID 5",
                "Random X",
                "Random Y",
                "Section Summary",
                "Section A",
                "Section B",
                "Section C",
                "Section D",
                "23",
                "45",
                "56",
                "78",
                "report propriety",
                "contact information",
                "version"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX45_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef plot_analysis_report():\n    # Create a figure with 2 rows and 2 columns of subplots\n    fig, axs = plt.subplots(2, 2, figsize=(14, 10))\n    fig.suptitle(\"Analysis Report\", fontsize=20, fontweight='bold', y=0.98)\n\n    # Section 1: Report Overview (Textual Summary)\n    axs[0, 0].axis('off')  # Hide the axis for clarity in text display\n    overview_text = (\n        \"REPORT SUMMARY:\\n\"\n        \"====================\\n\"\n        \"1. Data Collection:\\n\"\n        \"   - Source: Sensor readings, Database logs\\n\"\n        \"   - Frequency: 1 Hz sample rate\\n\"\n        \"\\n\"\n        \"2. Data Analysis:\\n\"\n        \"   - Techniques: PCA, linear regression, time series analysis\\n\"\n        \"   - Tools: Python, NumPy, SciPy, Matplotlib\\n\"\n        \"\\n\"\n        \"3. Findings:\\n\"\n        \"   - Overall trend: Increasing with periodic fluctuations\\n\"\n        \"   - Detected anomalies around 3 PM daily\\n\"\n        \"\\n\"\n        \"4. Recommendations:\\n\"\n        \"   - Enhance data filtering\\n\"\n        \"   - Investigate periodic anomaly causes\\n\"\n        \"   - Plan further predictive maintenance\\n\"\n    )\n    axs[0, 0].text(0.02, 0.98, overview_text, fontsize=10, verticalalignment='top', family='monospace')\n\n    # Section 2: Trend Analysis (Line Chart)\n    t = np.linspace(0, 10, 200)\n    trend = np.sin(t) + t / 5\n    axs[0, 1].plot(t, trend, color='navy', linewidth=2, label='Trend')\n    axs[0, 1].set_title(\"Trend Analysis\", fontsize=14, fontweight='bold')\n    axs[0, 1].set_xlabel(\"Time (seconds)\", fontsize=12)\n    axs[0, 1].set_ylabel(\"Measurement Value\", fontsize=12)\n    axs[0, 1].legend(loc='upper left', fontsize=10)\n    axs[0, 1].grid(True, linestyle='--', alpha=0.6)\n\n    # Section 3: Random Samples Scatter Plot (with labeled points)\n    np.random.seed(0)\n    x = np.random.rand(50)\n    y = np.random.rand(50)\n    axs[1, 0].scatter(x, y, c='forestgreen', s=50, edgecolors='k', alpha=0.8)\n    axs[1, 0].set_title(\"Scatter Plot: Random Samples\", fontsize=14, fontweight='bold')\n    axs[1, 0].set_xlabel(\"Random X\", fontsize=12)\n    axs[1, 0].set_ylabel(\"Random Y\", fontsize=12)\n    # Label the first five points for emphasis\n    for i in range(5):\n        axs[1, 0].annotate(f\"ID {i+1}\", (x[i], y[i]),\n                           textcoords=\"offset points\", xytext=(5,5),\n                           fontsize=8, color=\"darkred\")\n\n    # Section 4: Section Summary Bar Chart\n    categories = ['Section A', 'Section B', 'Section C', 'Section D']\n    section_values = [23, 45, 56, 78]\n    bar_colors = ['#d62728', '#1f77b4', '#2ca02c', '#9467bd']\n    bars = axs[1, 1].bar(categories, section_values, color=bar_colors, edgecolor='black')\n    axs[1, 1].set_title(\"Section Summary\", fontsize=14, fontweight='bold')\n    axs[1, 1].set_xlabel(\"Sections\", fontsize=12)\n    axs[1, 1].set_ylabel(\"Values\", fontsize=12)\n    axs[1, 1].grid(axis='y', linestyle='--', alpha=0.5)\n\n    # Annotate each bar with its labeled value\n    for bar in bars:\n        yval = bar.get_height()\n        axs[1, 1].text(bar.get_x() + bar.get_width()/2, yval + 2, f'{yval}', \n                       ha='center', va='bottom', fontsize=10, fontweight='bold')\n\n    # Footer: Additional information using figtext\n    footer_text = (\n        \"NOTE: This analysis report is proprietary.\\n\"\n        \"For further inquiries, contact the internal data analytics team.\\n\"\n        \"Version: 1.0.0\"\n    )\n    plt.figtext(0.5, 0.01, footer_text, wrap=True, horizontalalignment='center', fontsize=9, family='monospace')\n\n    # Adjust layout\n    plt.tight_layout(rect=[0, 0.04, 1, 0.95])\n    plt.show()\n\nif __name__ == '__main__':\n    plot_analysis_report()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX45_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Analysis Report",
                                "Data Collection",
                                "Data Analysis",
                                "Findings",
                                "Recommendations",
                                "Trend Analysis",
                                "Time (seconds)",
                                "Measurement Value",
                                "Trend",
                                "Scatter Plot: Random Samples",
                                "ID 1",
                                "ID 2",
                                "ID 3",
                                "ID 4",
                                "ID 5",
                                "Random X",
                                "Random Y",
                                "Section Summary",
                                "Section A",
                                "Section B",
                                "Section C",
                                "Section D",
                                "23",
                                "45",
                                "56",
                                "78",
                                "report propriety",
                                "contact information",
                                "version"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX45_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX45_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the centered main title displayed at the top of the output?",
                                "Which subsections are included in the top‐left multi-line report summary?",
                                "What is the title of the top‐right line chart?",
                                "What are the labels of the x-axis and y-axis in the top‐right line chart?",
                                "How many data points are plotted in the bottom‐left scatter plot, and how many of them are annotated?",
                                "What is the title of the bottom‐right bar chart and what numerical values are displayed above its bars?",
                                "What type of font and information are displayed in the footer area at the bottom?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX45_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Analysis Report",
                                "Data Collection, Data Analysis, Findings, and Recommendations",
                                "Trend Analysis",
                                "Time (seconds) and Measurement Value",
                                "50 data points with the first 5 annotated",
                                "Section Summary; 23, 45, 56, and 78",
                                "Monospaced font; includes a note on report propriety, contact information, and version"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ------------------------------------------------------------------------------\n# Data Preparation\n# ------------------------------------------------------------------------------\n# Create sample data for line plot\nx = np.linspace(0, 10, 150)\ny_line = np.sin(x)\n\n# Create sample data for bar chart\ny_bar = np.abs(np.random.randn(10)) * 3\n\n# Create sample data for scatter plot\nx_scatter = np.random.rand(50)\ny_scatter = np.random.rand(50)\n\n# ------------------------------------------------------------------------------\n# Figure and Global Title\n# ------------------------------------------------------------------------------\nplt.figure(figsize=(12, 8))\nplt.suptitle(\"Data Visualization: Structural Layout and Visual Hierarchy\", \n             fontsize=18, fontweight='bold')\n\n# ------------------------------------------------------------------------------\n# Section A: Line Plot with Headings and Annotations\n# ------------------------------------------------------------------------------\nax1 = plt.subplot2grid((2, 2), (0, 0))\nax1.plot(x, y_line, color='teal', linewidth=2, label='Sin(x) Function')\nax1.set_title(\"Section A: Line Plot\", fontsize=14, fontweight='bold')\nax1.set_xlabel(\"X Axis\")\nax1.set_ylabel(\"",
            "feature_requirements": "• A global figure element that displays an overall title reading “Data Visualization: Structural Layout and Visual Hierarchy” in a large (approximately 18pt) bold font.  \n• A layout structured as a grid (such as a two‐by‐two arrangement) to separate different visual sections, with at least one subplot in the top‐left section for the line plot.  \n• A line plot in one axis that graphs the sine function (sin(x)) using a smooth curve rendered in a teal color with a noticeable line width, and a corresponding legend entry labeled “Sin(x) Function.”  \n• Clearly labeled x-axis (as “X Axis”) and y-axis within the line plot subplot to indicate the data dimensions.  \n• A subplot that includes a bar chart comprising 10 discrete bars representing the absolute values of random data multiplied by a scaling factor, making the differences in height visually discernible.  \n• A subplot depicting a scatter plot with 50 points, where each point is positioned based on random x and y coordinates.  \n• Distinct section headings for each subplot (for example, a title “Section A: Line Plot” above the corresponding axis) that emphasize the visual hierarchy of the presentation.",
            "task_id": "08XX46",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall title displayed in the global figure element?",
                "What is the approximate font size and style of the main title?",
                "How is the layout structured to separate different visual sections?",
                "Which subplot is placed in the top-left section of the grid?",
                "What color and style is used for the sine curve in the line plot?",
                "What legend entry is associated with the sine curve?",
                "What are the labels on the axes in the line plot subplot?",
                "How many bars are displayed in the bar chart subplot?",
                "How many points appear in the scatter plot subplot?",
                "Are there distinct section headings for each subplot and can you name one?"
            ],
            "VQA_answers": [
                "Data Visualization: Structural Layout and Visual Hierarchy",
                "18pt bold",
                "Grid (two-by-two arrangement)",
                "Line plot of sin(x)",
                "Teal with a noticeable line width",
                "Sin(x) Function",
                "X Axis (x-axis) and Y Axis (y-axis)",
                "10",
                "50",
                "Yes, for example 'Section A: Line Plot'"
            ],
            "raw_output_metric": [
                "Data Visualization: Structural Layout and Visual Hierarchy",
                "18pt",
                "grid",
                "two-by-two",
                "line plot",
                "sin(x)",
                "teal",
                "Sin(x) Function",
                "X Axis",
                "y-axis",
                "bar chart",
                "10",
                "absolute values",
                "scatter plot",
                "50",
                "Section A: Line Plot"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX46_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ------------------------------------------------------------------------------\n# Data Preparation\n# ------------------------------------------------------------------------------\n# Create sample data for line plot\nx = np.linspace(0, 10, 150)\ny_line = np.sin(x)\n\n# Create sample data for bar chart\ny_bar = np.abs(np.random.randn(10)) * 3\n\n# Create sample data for scatter plot\nx_scatter = np.random.rand(50)\ny_scatter = np.random.rand(50)\n\n# ------------------------------------------------------------------------------\n# Figure and Global Title\n# ------------------------------------------------------------------------------\nplt.figure(figsize=(12, 8))\nplt.suptitle(\"Data Visualization: Structural Layout and Visual Hierarchy\", \n             fontsize=18, fontweight='bold')\n\n# ------------------------------------------------------------------------------\n# Section A: Line Plot with Headings and Annotations\n# ------------------------------------------------------------------------------\nax1 = plt.subplot2grid((2, 2), (0, 0))\nax1.plot(x, y_line, color='teal', linewidth=2, label='Sin(x) Function')\nax1.set_title(\"Section A: Line Plot\", fontsize=14, fontweight='bold')\nax1.set_xlabel(\"X Axis\")\nax1.set_ylabel(\""
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX46_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data Visualization: Structural Layout and Visual Hierarchy",
                                "18pt",
                                "grid",
                                "two-by-two",
                                "line plot",
                                "sin(x)",
                                "teal",
                                "Sin(x) Function",
                                "X Axis",
                                "y-axis",
                                "bar chart",
                                "10",
                                "absolute values",
                                "scatter plot",
                                "50",
                                "Section A: Line Plot"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX46_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX46_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall title displayed in the global figure element?",
                                "What is the approximate font size and style of the main title?",
                                "How is the layout structured to separate different visual sections?",
                                "Which subplot is placed in the top-left section of the grid?",
                                "What color and style is used for the sine curve in the line plot?",
                                "What legend entry is associated with the sine curve?",
                                "What are the labels on the axes in the line plot subplot?",
                                "How many bars are displayed in the bar chart subplot?",
                                "How many points appear in the scatter plot subplot?",
                                "Are there distinct section headings for each subplot and can you name one?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX46_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data Visualization: Structural Layout and Visual Hierarchy",
                                "18pt bold",
                                "Grid (two-by-two arrangement)",
                                "Line plot of sin(x)",
                                "Teal with a noticeable line width",
                                "Sin(x) Function",
                                "X Axis (x-axis) and Y Axis (y-axis)",
                                "10",
                                "50",
                                "Yes, for example 'Section A: Line Plot'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n#!/usr/bin/env python3\n\"\"\"\n---------------------------------------------------------\nTitle: Matplotlib Visual Layout & Structure Example\nDescription: This script demonstrates a complex, structured plot using Matplotlib.\nPurpose: To illustrate a long, realistic code snippet with headings, sections,\n         and detailed labels, ideal for a visual conversion task.\n---------------------------------------------------------\n\"\"\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# =========================================================\n# SECTION 1: Data Generation and Preprocessing\n# =========================================================\ndef generate_data():\n    \"\"\"\n    Generates datasets for plotting:\n      - sin_wave: A sine wave with noise.\n      - cos_wave: A cosine wave across a 2π interval.\n      - random_data: Random normal data for histogram.\n    Returns:\n      x_vals, sin_wave, cos_wave, random_data : tuple of numpy arrays.\n    \"\"\"\n    x_vals = np.linspace(0, 2 * np.pi, 400)\n    sin_wave = np.sin(x_vals) + 0.1 * np.random.randn(len(x_vals))\n    cos_wave = np.cos(x_vals) + 0.1 * np.random.randn(len(x_vals))\n    random_data = np.random.randn(1000)\n    return x_vals, sin_wave, cos_wave, random_data\n\n# Get the data\nx_vals, sin_wave, cos_wave, random_data = generate_data()\n\n# =========================================================\n# SECTION 2: Setting Up the Figure and Layout\n# =========================================================\nplt.figure(figsize=(12, 10))\nplt.suptitle(\"Comprehensive Matplotlib Plot Layout\", fontsize=18, fontweight='bold', y=0.98)\n\n# ---------------------------------------------------------\n# Subplot 1: Sine and Cosine Waves Visualization\n# ---------------------------------------------------------\nax1 = plt.subplot(2, 2, 1)\nax1.plot(x_vals, sin_wave, label=\"Sine Wave\", color=\"blue\", linestyle=\"--\")\nax1.plot(x_vals, cos_wave, label=\"Cosine Wave\", color=\"red\")\nax1.set_title(\"Trigonometric Functions\", fontsize=14)\nax1.set_xlabel(\"X-axis (radians)\")\nax1.set_ylabel(\"Y-axis (value)\")\nax1.legend(loc=\"upper right\")\nax1.grid(True)\n\n# Add extra annotation: mark the peak of sine wave\nmax_index = np.argmax(sin_wave)\nax1.annotate(\"Peak\", xy=(x_vals[max_index], sin_wave[max_index]),\n             xytext=(x_vals[max_index] + 0.5, sin_wave[max_index] + 0.3),\n             arrowprops=dict(facecolor='black', shrink=0.05),\n             fontsize=10, color=\"purple\")\n\n# ---------------------------------------------------------\n# Subplot 2: Histogram of Random Data\n# ---------------------------------------------------------\nax2 = plt.subplot(2, 2, 2)\nn, bins, patches = ax2.hist(random_data, bins=30, color=\"green\", alpha=0.7, edgecolor=\"black\")\nax2.set_title(\"Histogram: Random Data Distribution\", fontsize=14)\nax2.set_xlabel(\"Value\")\nax2.set_ylabel(\"Frequency\")\nax2.grid(axis=\"y\", linestyle=\"dotted\")\n\n# Adding labeled values for bins (just as an annotation list)\nmedian_val = np.median(random_data)\nax2.axvline(median_val, color='red', linestyle='dashed', linewidth=1, label=f\"Median = {median_val:.2f}\")\nax2.legend()\n\n# ---------------------------------------------------------\n# Subplot 3: Scatter Plot with Labeled Sections\n# ---------------------------------------------------------\nax3 = plt.subplot(2, 2, 3)\n# Create a structured grid of data\nnp.random.seed(42)\ndata_x = np.random.uniform(0, 100, 50)\ndata_y = np.random.uniform(0, 100, 50)\n# Each point gets a size that depends on its x-value\nsizes = data_x\nscatter = ax3.scatter(data_x, data_y, s=sizes, c=data_x, cmap='viridis', alpha=0.8, edgecolor='white')\nax3.set_title(\"Scatter Plot: Data Points\", fontsize=14)\nax3.set_xlabel(\"X Values\")\nax3.set_ylabel(\"Y Values\")\nax3.grid(True)\n\n# Annotate a few data points with labels (simulate list formatting)\nfor i in range(0, 50, 10):\n    ax3.annotate(f\"({data_x[i]:.1f}, {data_y[i]:.1f})\",\n                 (data_x[i], data_y[i]),\n                 textcoords=\"offset points\",\n                 xytext=(5,5),\n                 fontsize=9,\n                 color=\"black\")\n\n# Add colorbar reflecting the colormap for scatter plot\ncbar = plt.colorbar(scatter, ax=ax3)\ncbar.set_label(\"Intensity of X\")\n\n# ---------------------------------------------------------\n# Subplot 4: Bar Chart with Section Headers and Labeled Values\n# ---------------------------------------------------------\nax4 = plt.subplot(2, 2, 4)\n# Example data for bar chart\ncategories = ['Category A', 'Category B', 'Category C', 'Category D', 'Category E']\nvalues = [23, 45, 56, 78, 12]\nbars = ax4.bar(categories, values, color='orange', edgecolor='black')\nax4.set_title(\"Bar Chart: Category Summaries\", fontsize=14)\nax4.set_xlabel(\"Categories\")\nax4.set_ylabel(\"Values\")\nax4.grid(axis=\"y\", linestyle=\"dashed\", alpha=0.6)\n\n# Add labeled values on top of bars\nfor bar in bars:\n    height = bar.get_height()\n    ax4.text(bar.get_x() + bar.get_width()/2.0, height + 1, f'{height}', ha='center', va='bottom', fontsize=10)\n\n# =========================================================\n# SECTION 3: Adding Global Text and Annotations\n# =========================================================\n# Adding a side legend as a formatted list in plain text\ntextstr = (\n    \"Key Highlights:\\n\"\n    \" - Sine Wave: Blue Dashed Line\\n\"\n    \" - Cosine Wave: Red Solid Line\\n\"\n    \" - Histogram: Green Bars\\n\"\n    \" - Scatter Plot: Size = x-value, Color = x-value via Viridis\\n\"\n    \" - Bar Chart: Category Totals\"\n)\nplt.figtext(0.1, 0.02, textstr, fontsize=10, ha=\"left\", bbox=dict(boxstyle=\"round\", facecolor=\"wheat\", edgecolor=\"gray\"))\n\n# =========================================================\n# SECTION 4: Final Adjustments and Rendering\n# =========================================================\nplt.tight_layout(rect=[0, 0.05, 1, 0.95])\nplt.subplots_adjust(hspace=0.35, wspace=0.30)\n\n# Save the figure to a file (optional)\n#plt.savefig(\"complex_matplotlib_layout.png\", dpi=300, bbox_inches='tight')\n\n# Show the plot\nif __name__ == '__main__':\n    plt.show()\n</code>",
            "feature_requirements": "- The output must display a 2×2 grid of separate panels corresponding to the four subplots from the original code.\n- The first panel must include two line graphs for sine and cosine functions, with distinct colors and line styles, a title \"Trigonometric Functions,\" labeled X and Y axes, a legend, and an annotation indicating the peak of the sine wave with an arrow.\n- The second panel must present a histogram with 30 bins, green-colored bars with black edges and dotted grid lines along the Y-axis, a title \"Histogram: Random Data Distribution,\" labeled axes, and a dashed vertical line marking the drawn median value along with a corresponding legend.\n- The third panel must feature a scatter plot of 50 data points with point sizes proportional to the X-values and colored according to a Viridis-like colormap, a title \"Scatter Plot: Data Points,\" labeled axes, a grid, in-panel annotations for selected data point coordinates, and an adjacent colorbar labeled \"Intensity of X.\"\n- The fourth panel must show a bar chart with five categories, orange-colored bars with black edges, corresponding category names on the X-axis, a title \"Bar Chart: Category Summaries,\" a labeled Y-axis, and text labels atop each bar displaying its numerical value.\n- The overall figure must include a prominent global title \"Comprehensive Matplotlib Plot Layout\" at the top of the layout.\n- The conversion must incorporate a caption-like text element outside the subplots that lists key highlights (including descriptions of the sine wave, cosine wave, histogram, scatter plot, and bar chart) enclosed in a bordered text box.",
            "task_id": "08XX47",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "How many panels are displayed in the grid layout?",
                "What is the title of the first panel featuring the line graphs?",
                "Which function's peak is indicated with an arrow in the first panel?",
                "How many bins are used in the histogram of the second panel?",
                "What color are the bars in the histogram of the second panel?",
                "How many data points are plotted in the scatter plot of the third panel?",
                "What is the label of the colorbar in the scatter plot panel?",
                "How many categories are represented in the bar chart of the fourth panel?",
                "What is the overall global title at the top of the figure?",
                "What content is listed in the caption-like text element outside the subplots?"
            ],
            "VQA_answers": [
                "4",
                "Trigonometric Functions",
                "sine",
                "30",
                "Green",
                "50",
                "Intensity of X",
                "5",
                "Comprehensive Matplotlib Plot Layout",
                "Descriptions of the sine wave, cosine wave, histogram, scatter plot, and bar chart"
            ],
            "raw_output_metric": [
                "Comprehensive Matplotlib Plot Layout",
                "Trigonometric Functions",
                "Histogram: Random Data Distribution",
                "Scatter Plot: Data Points",
                "Bar Chart: Category Summaries",
                "Intensity of X",
                "X-axis",
                "Y-axis",
                "legend",
                "arrow",
                "sine",
                "cosine",
                "30 bins",
                "green-colored bars",
                "black edges",
                "dotted grid lines",
                "dashed vertical line",
                "median",
                "50 data points",
                "Viridis-like colormap",
                "orange-colored bars",
                "five categories",
                "caption",
                "key highlights"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX47_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n#!/usr/bin/env python3\n\"\"\"\n---------------------------------------------------------\nTitle: Matplotlib Visual Layout & Structure Example\nDescription: This script demonstrates a complex, structured plot using Matplotlib.\nPurpose: To illustrate a long, realistic code snippet with headings, sections,\n         and detailed labels, ideal for a visual conversion task.\n---------------------------------------------------------\n\"\"\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# =========================================================\n# SECTION 1: Data Generation and Preprocessing\n# =========================================================\ndef generate_data():\n    \"\"\"\n    Generates datasets for plotting:\n      - sin_wave: A sine wave with noise.\n      - cos_wave: A cosine wave across a 2π interval.\n      - random_data: Random normal data for histogram.\n    Returns:\n      x_vals, sin_wave, cos_wave, random_data : tuple of numpy arrays.\n    \"\"\"\n    x_vals = np.linspace(0, 2 * np.pi, 400)\n    sin_wave = np.sin(x_vals) + 0.1 * np.random.randn(len(x_vals))\n    cos_wave = np.cos(x_vals) + 0.1 * np.random.randn(len(x_vals))\n    random_data = np.random.randn(1000)\n    return x_vals, sin_wave, cos_wave, random_data\n\n# Get the data\nx_vals, sin_wave, cos_wave, random_data = generate_data()\n\n# =========================================================\n# SECTION 2: Setting Up the Figure and Layout\n# =========================================================\nplt.figure(figsize=(12, 10))\nplt.suptitle(\"Comprehensive Matplotlib Plot Layout\", fontsize=18, fontweight='bold', y=0.98)\n\n# ---------------------------------------------------------\n# Subplot 1: Sine and Cosine Waves Visualization\n# ---------------------------------------------------------\nax1 = plt.subplot(2, 2, 1)\nax1.plot(x_vals, sin_wave, label=\"Sine Wave\", color=\"blue\", linestyle=\"--\")\nax1.plot(x_vals, cos_wave, label=\"Cosine Wave\", color=\"red\")\nax1.set_title(\"Trigonometric Functions\", fontsize=14)\nax1.set_xlabel(\"X-axis (radians)\")\nax1.set_ylabel(\"Y-axis (value)\")\nax1.legend(loc=\"upper right\")\nax1.grid(True)\n\n# Add extra annotation: mark the peak of sine wave\nmax_index = np.argmax(sin_wave)\nax1.annotate(\"Peak\", xy=(x_vals[max_index], sin_wave[max_index]),\n             xytext=(x_vals[max_index] + 0.5, sin_wave[max_index] + 0.3),\n             arrowprops=dict(facecolor='black', shrink=0.05),\n             fontsize=10, color=\"purple\")\n\n# ---------------------------------------------------------\n# Subplot 2: Histogram of Random Data\n# ---------------------------------------------------------\nax2 = plt.subplot(2, 2, 2)\nn, bins, patches = ax2.hist(random_data, bins=30, color=\"green\", alpha=0.7, edgecolor=\"black\")\nax2.set_title(\"Histogram: Random Data Distribution\", fontsize=14)\nax2.set_xlabel(\"Value\")\nax2.set_ylabel(\"Frequency\")\nax2.grid(axis=\"y\", linestyle=\"dotted\")\n\n# Adding labeled values for bins (just as an annotation list)\nmedian_val = np.median(random_data)\nax2.axvline(median_val, color='red', linestyle='dashed', linewidth=1, label=f\"Median = {median_val:.2f}\")\nax2.legend()\n\n# ---------------------------------------------------------\n# Subplot 3: Scatter Plot with Labeled Sections\n# ---------------------------------------------------------\nax3 = plt.subplot(2, 2, 3)\n# Create a structured grid of data\nnp.random.seed(42)\ndata_x = np.random.uniform(0, 100, 50)\ndata_y = np.random.uniform(0, 100, 50)\n# Each point gets a size that depends on its x-value\nsizes = data_x\nscatter = ax3.scatter(data_x, data_y, s=sizes, c=data_x, cmap='viridis', alpha=0.8, edgecolor='white')\nax3.set_title(\"Scatter Plot: Data Points\", fontsize=14)\nax3.set_xlabel(\"X Values\")\nax3.set_ylabel(\"Y Values\")\nax3.grid(True)\n\n# Annotate a few data points with labels (simulate list formatting)\nfor i in range(0, 50, 10):\n    ax3.annotate(f\"({data_x[i]:.1f}, {data_y[i]:.1f})\",\n                 (data_x[i], data_y[i]),\n                 textcoords=\"offset points\",\n                 xytext=(5,5),\n                 fontsize=9,\n                 color=\"black\")\n\n# Add colorbar reflecting the colormap for scatter plot\ncbar = plt.colorbar(scatter, ax=ax3)\ncbar.set_label(\"Intensity of X\")\n\n# ---------------------------------------------------------\n# Subplot 4: Bar Chart with Section Headers and Labeled Values\n# ---------------------------------------------------------\nax4 = plt.subplot(2, 2, 4)\n# Example data for bar chart\ncategories = ['Category A', 'Category B', 'Category C', 'Category D', 'Category E']\nvalues = [23, 45, 56, 78, 12]\nbars = ax4.bar(categories, values, color='orange', edgecolor='black')\nax4.set_title(\"Bar Chart: Category Summaries\", fontsize=14)\nax4.set_xlabel(\"Categories\")\nax4.set_ylabel(\"Values\")\nax4.grid(axis=\"y\", linestyle=\"dashed\", alpha=0.6)\n\n# Add labeled values on top of bars\nfor bar in bars:\n    height = bar.get_height()\n    ax4.text(bar.get_x() + bar.get_width()/2.0, height + 1, f'{height}', ha='center', va='bottom', fontsize=10)\n\n# =========================================================\n# SECTION 3: Adding Global Text and Annotations\n# =========================================================\n# Adding a side legend as a formatted list in plain text\ntextstr = (\n    \"Key Highlights:\\n\"\n    \" - Sine Wave: Blue Dashed Line\\n\"\n    \" - Cosine Wave: Red Solid Line\\n\"\n    \" - Histogram: Green Bars\\n\"\n    \" - Scatter Plot: Size = x-value, Color = x-value via Viridis\\n\"\n    \" - Bar Chart: Category Totals\"\n)\nplt.figtext(0.1, 0.02, textstr, fontsize=10, ha=\"left\", bbox=dict(boxstyle=\"round\", facecolor=\"wheat\", edgecolor=\"gray\"))\n\n# =========================================================\n# SECTION 4: Final Adjustments and Rendering\n# =========================================================\nplt.tight_layout(rect=[0, 0.05, 1, 0.95])\nplt.subplots_adjust(hspace=0.35, wspace=0.30)\n\n# Save the figure to a file (optional)\n#plt.savefig(\"complex_matplotlib_layout.png\", dpi=300, bbox_inches='tight')\n\n# Show the plot\nif __name__ == '__main__':\n    plt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX47_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Matplotlib Plot Layout",
                                "Trigonometric Functions",
                                "Histogram: Random Data Distribution",
                                "Scatter Plot: Data Points",
                                "Bar Chart: Category Summaries",
                                "Intensity of X",
                                "X-axis",
                                "Y-axis",
                                "legend",
                                "arrow",
                                "sine",
                                "cosine",
                                "30 bins",
                                "green-colored bars",
                                "black edges",
                                "dotted grid lines",
                                "dashed vertical line",
                                "median",
                                "50 data points",
                                "Viridis-like colormap",
                                "orange-colored bars",
                                "five categories",
                                "caption",
                                "key highlights"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX47_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX47_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many panels are displayed in the grid layout?",
                                "What is the title of the first panel featuring the line graphs?",
                                "Which function's peak is indicated with an arrow in the first panel?",
                                "How many bins are used in the histogram of the second panel?",
                                "What color are the bars in the histogram of the second panel?",
                                "How many data points are plotted in the scatter plot of the third panel?",
                                "What is the label of the colorbar in the scatter plot panel?",
                                "How many categories are represented in the bar chart of the fourth panel?",
                                "What is the overall global title at the top of the figure?",
                                "What content is listed in the caption-like text element outside the subplots?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX47_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "4",
                                "Trigonometric Functions",
                                "sine",
                                "30",
                                "Green",
                                "50",
                                "Intensity of X",
                                "5",
                                "Comprehensive Matplotlib Plot Layout",
                                "Descriptions of the sine wave, cosine wave, histogram, scatter plot, and bar chart"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Set up the figure with a custom grid layout (3 rows x 2 columns)\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle('Dashboard: Analytical Results & Overview', fontsize=20, fontweight='bold', y=0.98)\n\n# Create grid axes for different sections\nax_header = plt.subplot2grid((3, 2), (0, 0), colspan=2)\nax_section1 = plt.subplot2grid((3, 2), (1, 0))\nax_section2 = plt.subplot2grid((3, 2), (1, 1))\nax_section3 = plt.subplot2grid((3, 2), (2, 0))\nax_table = plt.subplot2grid((3, 2), (2, 1))\n\n# ---------------------------\n# Header Section with Title and Subsections\n# ---------------------------\nax_header.axis('off')  # Hide the axis for the header\nheader_text = (\n    \"DATA VISUALIZATION DASHBOARD\\n\"\n    \"-----------------------------------------\\n\"\n    \"Sections:\\n\"\n    \"1. Trend Analysis\\n\"\n    \"2. Category Distribution\\n\"\n    \"3. Statistical Summary\\n\"\n    \"4. Detailed Metrics\\n\"\n)\nax_header.text(0.5, 0.5, header_text, ha='center', va='center', fontsize=14, fontfamily='monospace')\n\n# ---------------------------\n# Section 1: Trend Analysis (Line Chart)\n# ---------------------------\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\nax_section1.plot(x, y1, label='Sine Wave', color='blue', linestyle='-')\nax_section1.plot(x, y2, label='Cosine Wave', color='red', linestyle='--')\nax_section1.set_title(\"Trend Analysis\", fontsize=16, fontweight='bold')\nax_section1.set_xlabel(\"Time (s)\")\nax_section1.set_ylabel(\"Amplitude\")\nax_section1.legend(loc='upper right')\nax_section1.grid(True)\n\n# ---------------------------\n# Section 2: Category Distribution (Bar Chart)\n# ---------------------------\ncategories = ['Category A', 'Category B', 'Category C', 'Category D']\nvalues = [23, 45, 56, 12]\nbars = ax_section2.bar(categories, values, color=['green', 'purple', 'orange', 'cyan'])\nax_section2.set_title(\"Category Distribution\", fontsize=16, fontweight='bold')\nax_section2.set_xlabel(\"Categories\")\nax_section2.set_ylabel(\"Values\")\nfor bar in bars:\n    height = bar.get_height()\n    ax_section2.text(bar.get_x() + bar.get_width()/2., height + 1, f'{int(height)}', ha='center', va='bottom', fontsize=10)\n\n# ---------------------------\n# Section 3: Statistical Summary (Pie Chart + Labeled List)\n# ---------------------------\nlabels = ['Segment 1', 'Segment 2', 'Segment 3', 'Segment 4']\nsizes = [15, 30, 45, 10]\ncolors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue']\nexplode = (0, 0.1, 0, 0)  # only \"explode\" the 2nd slice\nax_section3.pie(sizes, explode=explode, labels=labels, colors=colors,\n                autopct='%1.1f%%', shadow=True, startangle=140)\nax_section3.set_title(\"Statistical Summary\", fontsize=16, fontweight='bold')\n\n# Adding a bullet point list of key metrics next to the pie chart (illustrative purpose)\nmetrics_text = (\n    \"Key Metrics:\\n\"\n    \" - Mean: 28.6\\n\"\n    \" - Median: 26.4\\n\"\n    \" - Std Dev: 5.2\\n\"\n    \" - Variance: 27.0\\n\"\n)\n# Place text in the subplot using inset text area\nax_section3.text(1.2, 0, metrics_text, fontsize=12, family='monospace', transform=ax_section3.transAxes)\n\n# ---------------------------\n# Table Section: Detailed Metrics Table\n# ---------------------------\n# Hide the default axis frame for a table-like appearance\nax_table.axis('off')\nax_table.set_title(\"Detailed Metrics\", fontsize=16, fontweight='bold', pad=20)\n\n# Prepare data for the table as a list of rows\ntable_data = [\n    [\"Parameter\", \"Value\", \"Description\"],\n    [\"Alpha\", \"0.05\", \"Significance Level\"],\n    [\"Beta\", \"0.2\", \"Type II Error\"],\n    [\"Gamma\", \"1.5\", \"Shape Parameter\"],\n    [\"Delta\", \"0.8\", \"Scale Factor\"],\n    [\"Epsilon\", \"23\", \"Sample Size\"],\n]\n\n# Calculate positions to simulate a table layout using text objects\nstart_x = 0.05\nstart_y = 0.85\nrow_height = 0.12\ncol_width = [0.3, 0.2, 0.4]\n\n# Draw table header and rows\nfor i, row in enumerate(table_data):\n    y_pos = start_y - i * row_height\n    for j, cell in enumerate(row):\n        x_pos = start_x + sum(col_width[:j])\n        # Use a box for header emphasis\n        if i == 0:\n            weight = 'bold'\n            bbox_props = dict(boxstyle='round', facecolor='#d3d3d3', edgecolor='black')\n        else:\n            weight = 'normal'\n            bbox_props = dict(boxstyle='round', facecolor='white', edgecolor='black')\n        ax_table.text(x_pos, y_pos, str(cell), transform=ax_table.transAxes,\n                      fontsize=12, weight=weight, bbox=bbox_props, va='center', ha='center')\n\n# ---------------------------\n# Final touches and layout adjustments\n# ---------------------------\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\n</code>",
            "feature_requirements": "• A TikZ output that reproduces a dashboard-style layout organized into a 3×2 grid with distinct sections.\n\n• A header section without visible axes that centrally displays a multi-line text block including the title \"DATA VISUALIZATION DASHBOARD,\" a divider line, and a list of section names (\"1. Trend Analysis,\" \"2. Category Distribution,\" \"3. Statistical Summary,\" \"4. Detailed Metrics\") using a monospaced font.\n\n• A section labeled \"Trend Analysis\" displaying a line chart with two curves: one representing a sine wave in blue with a solid line and another representing a cosine wave in red with a dashed line, complete with axis labels (\"Time (s)\" for x-axis and \"Amplitude\" for y-axis) and an upper-right positioned legend.\n\n• A section labeled \"Category Distribution\" showing a bar chart with four bars corresponding to \"Category A\" through \"Category D,\" each filled with a distinct color and annotated at the top with its numerical value.\n\n• A section labeled \"Statistical Summary\" featuring a pie chart with four segments corresponding to given percentages; one segment (the second) is slightly exploded, and the chart includes labels for each segment along with an autopct percentage display, plus a nearby text block listing key metrics (\"Mean: 28.6,\" \"Median: 26.4,\" \"Std Dev: 5.2,\" \"Variance: 27.0\") in a monospaced font.\n\n• A table section titled \"Detailed Metrics\" displayed without axes and arranged to simulate a table layout; it contains a header row (\"Parameter,\" \"Value,\" \"Description\") with emphasized styling (bold text and a distinct background) and several subsequent rows detailing parameters such as \"Alpha,\" \"Beta,\" \"Gamma,\" \"Delta,\" and \"Epsilon\" with corresponding values and descriptions, each cell enclosed in a rounded-box style.\n\n• Overall, each section should include its own title with bold formatting and be arranged to mimic the spacing and layout adjustments seen in the original Matplotlib dashboard design.",
            "task_id": "08XX48",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed in the header section?",
                "How many section names are listed below the divider in the header?",
                "What grid layout is used for organizing the dashboard sections?",
                "What color and line style is used for the sine wave in the Trend Analysis section?",
                "What color and line style is used for the cosine wave in the Trend Analysis section?",
                "How many bars are displayed in the Category Distribution section?",
                "Which segment in the Statistical Summary pie chart is slightly exploded?",
                "What column headers are shown in the Detailed Metrics table?"
            ],
            "VQA_answers": [
                "DATA VISUALIZATION DASHBOARD",
                "4",
                "3×2 grid",
                "Blue and solid",
                "Red and dashed",
                "4",
                "The second segment",
                "Parameter, Value, Description"
            ],
            "raw_output_metric": [
                "DATA VISUALIZATION DASHBOARD",
                "1. Trend Analysis",
                "2. Category Distribution",
                "3. Statistical Summary",
                "4. Detailed Metrics",
                "Trend Analysis",
                "sine wave",
                "blue",
                "solid",
                "cosine wave",
                "red",
                "dashed",
                "Time (s)",
                "Amplitude",
                "Category Distribution",
                "Category A",
                "Category B",
                "Category C",
                "Category D",
                "Statistical Summary",
                "pie chart",
                "autopct",
                "Mean: 28.6",
                "Median: 26.4",
                "Std Dev: 5.2",
                "Variance: 27.0",
                "Detailed Metrics",
                "Parameter",
                "Value",
                "Description",
                "Alpha",
                "Beta",
                "Gamma",
                "Delta",
                "Epsilon"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX48_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Set up the figure with a custom grid layout (3 rows x 2 columns)\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle('Dashboard: Analytical Results & Overview', fontsize=20, fontweight='bold', y=0.98)\n\n# Create grid axes for different sections\nax_header = plt.subplot2grid((3, 2), (0, 0), colspan=2)\nax_section1 = plt.subplot2grid((3, 2), (1, 0))\nax_section2 = plt.subplot2grid((3, 2), (1, 1))\nax_section3 = plt.subplot2grid((3, 2), (2, 0))\nax_table = plt.subplot2grid((3, 2), (2, 1))\n\n# ---------------------------\n# Header Section with Title and Subsections\n# ---------------------------\nax_header.axis('off')  # Hide the axis for the header\nheader_text = (\n    \"DATA VISUALIZATION DASHBOARD\\n\"\n    \"-----------------------------------------\\n\"\n    \"Sections:\\n\"\n    \"1. Trend Analysis\\n\"\n    \"2. Category Distribution\\n\"\n    \"3. Statistical Summary\\n\"\n    \"4. Detailed Metrics\\n\"\n)\nax_header.text(0.5, 0.5, header_text, ha='center', va='center', fontsize=14, fontfamily='monospace')\n\n# ---------------------------\n# Section 1: Trend Analysis (Line Chart)\n# ---------------------------\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\nax_section1.plot(x, y1, label='Sine Wave', color='blue', linestyle='-')\nax_section1.plot(x, y2, label='Cosine Wave', color='red', linestyle='--')\nax_section1.set_title(\"Trend Analysis\", fontsize=16, fontweight='bold')\nax_section1.set_xlabel(\"Time (s)\")\nax_section1.set_ylabel(\"Amplitude\")\nax_section1.legend(loc='upper right')\nax_section1.grid(True)\n\n# ---------------------------\n# Section 2: Category Distribution (Bar Chart)\n# ---------------------------\ncategories = ['Category A', 'Category B', 'Category C', 'Category D']\nvalues = [23, 45, 56, 12]\nbars = ax_section2.bar(categories, values, color=['green', 'purple', 'orange', 'cyan'])\nax_section2.set_title(\"Category Distribution\", fontsize=16, fontweight='bold')\nax_section2.set_xlabel(\"Categories\")\nax_section2.set_ylabel(\"Values\")\nfor bar in bars:\n    height = bar.get_height()\n    ax_section2.text(bar.get_x() + bar.get_width()/2., height + 1, f'{int(height)}', ha='center', va='bottom', fontsize=10)\n\n# ---------------------------\n# Section 3: Statistical Summary (Pie Chart + Labeled List)\n# ---------------------------\nlabels = ['Segment 1', 'Segment 2', 'Segment 3', 'Segment 4']\nsizes = [15, 30, 45, 10]\ncolors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue']\nexplode = (0, 0.1, 0, 0)  # only \"explode\" the 2nd slice\nax_section3.pie(sizes, explode=explode, labels=labels, colors=colors,\n                autopct='%1.1f%%', shadow=True, startangle=140)\nax_section3.set_title(\"Statistical Summary\", fontsize=16, fontweight='bold')\n\n# Adding a bullet point list of key metrics next to the pie chart (illustrative purpose)\nmetrics_text = (\n    \"Key Metrics:\\n\"\n    \" - Mean: 28.6\\n\"\n    \" - Median: 26.4\\n\"\n    \" - Std Dev: 5.2\\n\"\n    \" - Variance: 27.0\\n\"\n)\n# Place text in the subplot using inset text area\nax_section3.text(1.2, 0, metrics_text, fontsize=12, family='monospace', transform=ax_section3.transAxes)\n\n# ---------------------------\n# Table Section: Detailed Metrics Table\n# ---------------------------\n# Hide the default axis frame for a table-like appearance\nax_table.axis('off')\nax_table.set_title(\"Detailed Metrics\", fontsize=16, fontweight='bold', pad=20)\n\n# Prepare data for the table as a list of rows\ntable_data = [\n    [\"Parameter\", \"Value\", \"Description\"],\n    [\"Alpha\", \"0.05\", \"Significance Level\"],\n    [\"Beta\", \"0.2\", \"Type II Error\"],\n    [\"Gamma\", \"1.5\", \"Shape Parameter\"],\n    [\"Delta\", \"0.8\", \"Scale Factor\"],\n    [\"Epsilon\", \"23\", \"Sample Size\"],\n]\n\n# Calculate positions to simulate a table layout using text objects\nstart_x = 0.05\nstart_y = 0.85\nrow_height = 0.12\ncol_width = [0.3, 0.2, 0.4]\n\n# Draw table header and rows\nfor i, row in enumerate(table_data):\n    y_pos = start_y - i * row_height\n    for j, cell in enumerate(row):\n        x_pos = start_x + sum(col_width[:j])\n        # Use a box for header emphasis\n        if i == 0:\n            weight = 'bold'\n            bbox_props = dict(boxstyle='round', facecolor='#d3d3d3', edgecolor='black')\n        else:\n            weight = 'normal'\n            bbox_props = dict(boxstyle='round', facecolor='white', edgecolor='black')\n        ax_table.text(x_pos, y_pos, str(cell), transform=ax_table.transAxes,\n                      fontsize=12, weight=weight, bbox=bbox_props, va='center', ha='center')\n\n# ---------------------------\n# Final touches and layout adjustments\n# ---------------------------\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX48_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "DATA VISUALIZATION DASHBOARD",
                                "1. Trend Analysis",
                                "2. Category Distribution",
                                "3. Statistical Summary",
                                "4. Detailed Metrics",
                                "Trend Analysis",
                                "sine wave",
                                "blue",
                                "solid",
                                "cosine wave",
                                "red",
                                "dashed",
                                "Time (s)",
                                "Amplitude",
                                "Category Distribution",
                                "Category A",
                                "Category B",
                                "Category C",
                                "Category D",
                                "Statistical Summary",
                                "pie chart",
                                "autopct",
                                "Mean: 28.6",
                                "Median: 26.4",
                                "Std Dev: 5.2",
                                "Variance: 27.0",
                                "Detailed Metrics",
                                "Parameter",
                                "Value",
                                "Description",
                                "Alpha",
                                "Beta",
                                "Gamma",
                                "Delta",
                                "Epsilon"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX48_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX48_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed in the header section?",
                                "How many section names are listed below the divider in the header?",
                                "What grid layout is used for organizing the dashboard sections?",
                                "What color and line style is used for the sine wave in the Trend Analysis section?",
                                "What color and line style is used for the cosine wave in the Trend Analysis section?",
                                "How many bars are displayed in the Category Distribution section?",
                                "Which segment in the Statistical Summary pie chart is slightly exploded?",
                                "What column headers are shown in the Detailed Metrics table?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX48_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "DATA VISUALIZATION DASHBOARD",
                                "4",
                                "3×2 grid",
                                "Blue and solid",
                                "Red and dashed",
                                "4",
                                "The second segment",
                                "Parameter, Value, Description"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ---------------------- Data Preparation ----------------------\n# Generate X values and corresponding Y values for our functions.\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\ny_tan = np.tan(x)\n# Clip tangent values to avoid extreme numbers\ny_tan = np.clip(y_tan, -10, 10)\n\n# ---------------------- Figure Setup ----------------------\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle(\"Comprehensive Matplotlib Layout Showcase\", fontsize=18, fontweight='bold')\n\n# ---------------------- Header Section ----------------------\n# Create a header section using an axes for title and description\nax_header = fig.add_axes([0.1, 0.9, 0.8, 0.07], frameon=False)\nax_header.text(0.5, 0.5, \"Matplotlib Visual Hierarchy & Structured Layout\",\n               fontsize=16, fontweight='bold', ha='center', va='center')\nax_header.axis('off')\n\n# ---------------------- Section 1: Sine Function ----------------------\nax1 = fig.add_axes([0.1, 0.6, 0.35, 0.25])\nax1.plot(x, y_sin, color='red', linewidth=2, label=\"sin(x)\")\nax1.set_title(\"Section 1: Sine Function\", fontsize=12, pad=10)\nax1.set_xlabel(\"X Axis\")\nax1.set_ylabel(\"sin(x)\")\nax1.grid(True)\nax1.legend(loc='upper right')\n\n# Insert bullet list annotations regarding sine function properties\nsine_details = \"\\n\".join([\n    \"• Frequency: 1 Hz\",\n    \"• Amplitude: 1 Unit\",\n    \"• Period: 2π\",\n    \"• Phase: 0\"\n])\nax1.text(0.05, 0.5, sine_details, transform=ax1.transAxes, fontsize=10,\n         bbox=dict(boxstyle=\"round\", facecolor=\"wheat\", alpha=0.5),\n         verticalalignment='center')\n\n# ---------------------- Section 2: Cosine Function ----------------------\nax2 = fig.add_axes([0.55, 0.6, 0.35, 0.25])\nax2.plot(x, y_cos, color='blue', linewidth=2, label=\"cos(x)\")\nax2.set_title(\"Section 2: Cosine Function\", fontsize=12, pad=10)\nax2.set_xlabel(\"X Axis\")\nax2.set_ylabel(\"cos(x)\")\nax2.grid(True)\nax2.legend(loc='upper right')\n\n# Annotate with a numbered list of steps used, mimicking a checklist\ncosine_details = \"\\n\".join([\n    \"1. Generate X values\",\n    \"2. Compute cos(X)\",\n    \"3. Plot with blue line\"\n])\nax2.text(0.05, 0.55, cosine_details, transform=ax2.transAxes, fontsize=9,\n         bbox=dict(boxstyle=\"square\", facecolor=\"lavender\", alpha=0.5),\n         verticalalignment='center')\n\n# ---------------------- Section 3: Tangent Function ----------------------\nax3 = fig.add_axes([0.1, 0.1, 0.8, 0.35])\nax3.plot(x, y_tan, color='green', linewidth=2, label=\"tan(x) (clipped)\")\nax3.set_title(\"Section 3: Tangent Function (Clipped)\", fontsize=12, pad=10)\nax3.set_xlabel",
            "feature_requirements": "• The output must include an overall figure title \"Comprehensive Matplotlib Layout Showcase\" visibly displayed at the top of the figure.  \n• There must be a header section containing centered text \"Matplotlib Visual Hierarchy & Structured Layout\" presented prominently near the figure’s top.  \n• The converted output must be segmented into three distinct plot regions corresponding to the sine, cosine, and tangent functions, arranged similarly to a header on top, two plots in the middle (sine and cosine), and one wider plot at the bottom for the tangent.  \n• The sine function section must display a red curve for sin(x) with visible gridlines, labeled axes (\"X Axis\" for the horizontal and \"sin(x)\" for the vertical), a legend stating \"sin(x)\" placed in the upper right, and a text box showing a bullet list with the items: \"• Frequency: 1 Hz\", \"• Amplitude: 1 Unit\", \"• Period: 2π\", \"• Phase: 0\".  \n• The cosine function section must display a blue curve for cos(x) with visible gridlines, labeled axes (\"X Axis\" and \"cos(x)\"), a legend stating \"cos(x)\" in the upper right, and a text box showing a numbered list with the entries: \"1. Generate X values\", \"2. Compute cos(X)\", and \"3. Plot with blue line\".  \n• The tangent function section must display a green curve for tan(x) that has been clipped between -10 and 10, include a title \"Section 3: Tangent Function (Clipped)\", label the horizontal axis as \"X Axis\", and include a legend stating \"tan(x) (clipped)\".  \n• Each plot section must visibly distinguish the function curves by their respective colors (red for sine, blue for cosine, green for tangent) so that the differences are immediately identifiable in a rendered output.",
            "task_id": "08XX49",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall figure title displayed at the top?",
                "What header text is centered near the figure's top?",
                "How many distinct plot regions are arranged in the layout?",
                "What color is the sine function curve?",
                "How many bullet points are shown in the sine function text box?",
                "What color is the cosine function curve?",
                "How many steps are listed in the cosine function text box?",
                "What is the title of the tangent function section?"
            ],
            "VQA_answers": [
                "Comprehensive Matplotlib Layout Showcase",
                "Matplotlib Visual Hierarchy & Structured Layout",
                "3",
                "Red",
                "4",
                "Blue",
                "3",
                "Section 3: Tangent Function (Clipped)"
            ],
            "raw_output_metric": [
                "Comprehensive Matplotlib Layout Showcase",
                "Matplotlib Visual Hierarchy & Structured Layout",
                "X Axis",
                "sin(x)",
                "• Frequency: 1 Hz",
                "• Amplitude: 1 Unit",
                "• Period: 2π",
                "• Phase: 0",
                "cos(x)",
                "1. Generate X values",
                "2. Compute cos(X)",
                "3. Plot with blue line",
                "Section 3: Tangent Function (Clipped)",
                "tan(x) (clipped)",
                "red",
                "blue",
                "green"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX49_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ---------------------- Data Preparation ----------------------\n# Generate X values and corresponding Y values for our functions.\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\ny_tan = np.tan(x)\n# Clip tangent values to avoid extreme numbers\ny_tan = np.clip(y_tan, -10, 10)\n\n# ---------------------- Figure Setup ----------------------\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle(\"Comprehensive Matplotlib Layout Showcase\", fontsize=18, fontweight='bold')\n\n# ---------------------- Header Section ----------------------\n# Create a header section using an axes for title and description\nax_header = fig.add_axes([0.1, 0.9, 0.8, 0.07], frameon=False)\nax_header.text(0.5, 0.5, \"Matplotlib Visual Hierarchy & Structured Layout\",\n               fontsize=16, fontweight='bold', ha='center', va='center')\nax_header.axis('off')\n\n# ---------------------- Section 1: Sine Function ----------------------\nax1 = fig.add_axes([0.1, 0.6, 0.35, 0.25])\nax1.plot(x, y_sin, color='red', linewidth=2, label=\"sin(x)\")\nax1.set_title(\"Section 1: Sine Function\", fontsize=12, pad=10)\nax1.set_xlabel(\"X Axis\")\nax1.set_ylabel(\"sin(x)\")\nax1.grid(True)\nax1.legend(loc='upper right')\n\n# Insert bullet list annotations regarding sine function properties\nsine_details = \"\\n\".join([\n    \"• Frequency: 1 Hz\",\n    \"• Amplitude: 1 Unit\",\n    \"• Period: 2π\",\n    \"• Phase: 0\"\n])\nax1.text(0.05, 0.5, sine_details, transform=ax1.transAxes, fontsize=10,\n         bbox=dict(boxstyle=\"round\", facecolor=\"wheat\", alpha=0.5),\n         verticalalignment='center')\n\n# ---------------------- Section 2: Cosine Function ----------------------\nax2 = fig.add_axes([0.55, 0.6, 0.35, 0.25])\nax2.plot(x, y_cos, color='blue', linewidth=2, label=\"cos(x)\")\nax2.set_title(\"Section 2: Cosine Function\", fontsize=12, pad=10)\nax2.set_xlabel(\"X Axis\")\nax2.set_ylabel(\"cos(x)\")\nax2.grid(True)\nax2.legend(loc='upper right')\n\n# Annotate with a numbered list of steps used, mimicking a checklist\ncosine_details = \"\\n\".join([\n    \"1. Generate X values\",\n    \"2. Compute cos(X)\",\n    \"3. Plot with blue line\"\n])\nax2.text(0.05, 0.55, cosine_details, transform=ax2.transAxes, fontsize=9,\n         bbox=dict(boxstyle=\"square\", facecolor=\"lavender\", alpha=0.5),\n         verticalalignment='center')\n\n# ---------------------- Section 3: Tangent Function ----------------------\nax3 = fig.add_axes([0.1, 0.1, 0.8, 0.35])\nax3.plot(x, y_tan, color='green', linewidth=2, label=\"tan(x) (clipped)\")\nax3.set_title(\"Section 3: Tangent Function (Clipped)\", fontsize=12, pad=10)\nax3.set_xlabel"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX49_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Matplotlib Layout Showcase",
                                "Matplotlib Visual Hierarchy & Structured Layout",
                                "X Axis",
                                "sin(x)",
                                "• Frequency: 1 Hz",
                                "• Amplitude: 1 Unit",
                                "• Period: 2π",
                                "• Phase: 0",
                                "cos(x)",
                                "1. Generate X values",
                                "2. Compute cos(X)",
                                "3. Plot with blue line",
                                "Section 3: Tangent Function (Clipped)",
                                "tan(x) (clipped)",
                                "red",
                                "blue",
                                "green"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX49_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX49_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall figure title displayed at the top?",
                                "What header text is centered near the figure's top?",
                                "How many distinct plot regions are arranged in the layout?",
                                "What color is the sine function curve?",
                                "How many bullet points are shown in the sine function text box?",
                                "What color is the cosine function curve?",
                                "How many steps are listed in the cosine function text box?",
                                "What is the title of the tangent function section?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX49_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Matplotlib Layout Showcase",
                                "Matplotlib Visual Hierarchy & Structured Layout",
                                "3",
                                "Red",
                                "4",
                                "Blue",
                                "3",
                                "Section 3: Tangent Function (Clipped)"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef main():\n    # Create a figure with 2x2 subplots, each containing different sections of the report.\n    fig, axs = plt.subplots(2, 2, figsize=(12, 10))\n    fig.suptitle('Visual Conversion Task Report', fontsize=16, fontweight='bold')\n\n    # -------------------------------------------------------\n    # Section 1: Overview and Report Structure\n    # -------------------------------------------------------\n    ax = axs[0, 0]\n    ax.axis('off')\n    overview_text = (\n        \"Section 1: OVERVIEW\\n\\n\"\n        \"This report is structured into the following sections:\\n\"\n        \"  1. Data Summary\\n\"\n        \"  2. Scatter Plot Analysis\\n\"\n        \"  3. Line Chart Trends\\n\"\n        \"  4. Annotated Data Table\\n\\n\"\n        \"Key Constants and Labeled Values:\\n\"\n        \"  - Threshold Value: 50\\n\"\n        \"  - Maximum Recorded: 100\\n\"\n        \"  - Data Points Count: 50\\n\\n\"\n        \"Notes:\\n\"\n        \"  * All data are synthetically generated.\\n\"\n        \"  * Formatting follows a clear visual hierarchy.\\n\"\n    )\n    ax.text(0.05, 0.95, overview_text, transform=ax.transAxes,\n            fontsize=10, va='top', family='monospace')\n\n    # -------------------------------------------------------\n    # Section 2: Scatter Plot Analysis\n    # -------------------------------------------------------\n    ax = axs[0, 1]\n    np.random.seed(42)\n    x_scatter = np.random.rand(50) * 100\n    y_scatter = np.random.rand(50) * 100\n    scatter = ax.scatter(x_scatter, y_scatter, color='skyblue', \n                         edgecolors='k', alpha=0.8)\n    ax.set_title('Section 2: Scatter Plot Analysis', fontsize=12, fontweight='bold')\n    ax.set_xlabel('X Axis (units)')\n    ax.set_ylabel('Y Axis (units)')\n    ax.grid(True, linestyle='--', alpha=0.5)\n\n    # Annotate an interesting point on the scatter plot\n    point_index = 10\n    x_pt = x_scatter[point_index]\n    y_pt = y_scatter[point_index]\n    ax.annotate(\"Reference Point\", xy=(x_pt, y_pt), xytext=(x_pt+10, y_pt-10),\n                arrowprops=dict(facecolor='black', arrowstyle='->'),\n                fontsize=9)\n\n    # -------------------------------------------------------\n    # Section 3: Line Chart Trends\n    # -------------------------------------------------------\n    ax = axs[1, 0]\n    x_line = np.linspace(0, 100, 200)\n    y_line = 0.5 * x_line + 10 * np.sin(x_line * 0.1)\n    ax.plot(x_line, y_line, color='olive', linewidth=2)\n    ax.set_title('Section 3: Line Chart Trends', fontsize=12, fontweight='bold')\n    ax.set_xlabel('Time (s)')\n    ax.set",
            "feature_requirements": "• The output must include an overall title reading \"Visual Conversion Task Report\" that is prominently displayed, using a noticeably larger and bold font style.\n\n• The TikZ code must replicate a 2x2 grid of subplots with clearly defined areas corresponding to each section, ensuring that positions and separations are visually distinct.\n\n• The top‐left subplot must present the \"Section 1: OVERVIEW\" area, displaying a block of monospaced text with a detailed outline of the report sections, key constants (e.g., \"Threshold Value: 50\", \"Maximum Recorded: 100\", \"Data Points Count: 50\"), and additional notes.\n\n• The top‐right subplot must depict the \"Section 2: Scatter Plot Analysis\" featuring a scatter plot with data points indicated in a skyblue hue (with dark edges), including x- and y-axes labels (\"X Axis (units)\" and \"Y Axis (units)\"), grid lines drawn with a dashed style, and an annotation labeled \"Reference Point\" with an arrow pointing to a designated data point.\n\n• The bottom‐left subplot must contain the \"Section 3: Line Chart Trends\" area, displaying a smooth line chart generated by a combination of a linear trend and a sinusoidal variation, along with a title, an x-axis label (\"Time (s)\"), and a line styled with an olive color and a thicker stroke.\n\n• Each section must be clearly labeled with its respective header text and visual elements (like fonts, line styles, and annotations) that unambiguously represent the content shown in the original Matplotlib code.",
            "task_id": "08XX50",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall title displayed at the top?",
                "How many subplots are arranged in the grid?",
                "What header text is shown in the top‐left subplot?",
                "What details are included in the top‐left subplot's monospaced text?",
                "What type of analysis is depicted in the top-right subplot?",
                "What are the characteristics of the scatter plot in the top-right subplot?",
                "What content is shown in the bottom‐left subplot?",
                "How are visual elements like fonts and line styles used across the sections?"
            ],
            "VQA_answers": [
                "Visual Conversion Task Report",
                "A 2x2 grid (4 subplots)",
                "Section 1: OVERVIEW",
                "A detailed outline of report sections, key constants ('Threshold Value: 50', 'Maximum Recorded: 100', 'Data Points Count: 50'), and additional notes",
                "Scatter Plot Analysis",
                "Data points in skyblue with dark edges, x- and y-axes labels ('X Axis (units)' and 'Y Axis (units)'), dashed grid lines, and an annotation labeled 'Reference Point' with an arrow",
                "A smooth line chart combining a linear trend and sinusoidal variation, with a title, x-axis label 'Time (s)', and a line styled in olive color with a thicker stroke",
                "Each section clearly uses distinct header text with defined fonts and line styles, such as bold for the overall title and specific colors and styles for plots"
            ],
            "raw_output_metric": [
                "Visual Conversion Task Report",
                "Section 1: OVERVIEW",
                "Threshold Value: 50",
                "Maximum Recorded: 100",
                "Data Points Count: 50",
                "Section 2: Scatter Plot Analysis",
                "X Axis (units)",
                "Y Axis (units)",
                "Reference Point",
                "Section 3: Line Chart Trends",
                "Time (s)",
                "skyblue",
                "olive",
                "dashed"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX50_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef main():\n    # Create a figure with 2x2 subplots, each containing different sections of the report.\n    fig, axs = plt.subplots(2, 2, figsize=(12, 10))\n    fig.suptitle('Visual Conversion Task Report', fontsize=16, fontweight='bold')\n\n    # -------------------------------------------------------\n    # Section 1: Overview and Report Structure\n    # -------------------------------------------------------\n    ax = axs[0, 0]\n    ax.axis('off')\n    overview_text = (\n        \"Section 1: OVERVIEW\\n\\n\"\n        \"This report is structured into the following sections:\\n\"\n        \"  1. Data Summary\\n\"\n        \"  2. Scatter Plot Analysis\\n\"\n        \"  3. Line Chart Trends\\n\"\n        \"  4. Annotated Data Table\\n\\n\"\n        \"Key Constants and Labeled Values:\\n\"\n        \"  - Threshold Value: 50\\n\"\n        \"  - Maximum Recorded: 100\\n\"\n        \"  - Data Points Count: 50\\n\\n\"\n        \"Notes:\\n\"\n        \"  * All data are synthetically generated.\\n\"\n        \"  * Formatting follows a clear visual hierarchy.\\n\"\n    )\n    ax.text(0.05, 0.95, overview_text, transform=ax.transAxes,\n            fontsize=10, va='top', family='monospace')\n\n    # -------------------------------------------------------\n    # Section 2: Scatter Plot Analysis\n    # -------------------------------------------------------\n    ax = axs[0, 1]\n    np.random.seed(42)\n    x_scatter = np.random.rand(50) * 100\n    y_scatter = np.random.rand(50) * 100\n    scatter = ax.scatter(x_scatter, y_scatter, color='skyblue', \n                         edgecolors='k', alpha=0.8)\n    ax.set_title('Section 2: Scatter Plot Analysis', fontsize=12, fontweight='bold')\n    ax.set_xlabel('X Axis (units)')\n    ax.set_ylabel('Y Axis (units)')\n    ax.grid(True, linestyle='--', alpha=0.5)\n\n    # Annotate an interesting point on the scatter plot\n    point_index = 10\n    x_pt = x_scatter[point_index]\n    y_pt = y_scatter[point_index]\n    ax.annotate(\"Reference Point\", xy=(x_pt, y_pt), xytext=(x_pt+10, y_pt-10),\n                arrowprops=dict(facecolor='black', arrowstyle='->'),\n                fontsize=9)\n\n    # -------------------------------------------------------\n    # Section 3: Line Chart Trends\n    # -------------------------------------------------------\n    ax = axs[1, 0]\n    x_line = np.linspace(0, 100, 200)\n    y_line = 0.5 * x_line + 10 * np.sin(x_line * 0.1)\n    ax.plot(x_line, y_line, color='olive', linewidth=2)\n    ax.set_title('Section 3: Line Chart Trends', fontsize=12, fontweight='bold')\n    ax.set_xlabel('Time (s)')\n    ax.set"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX50_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Visual Conversion Task Report",
                                "Section 1: OVERVIEW",
                                "Threshold Value: 50",
                                "Maximum Recorded: 100",
                                "Data Points Count: 50",
                                "Section 2: Scatter Plot Analysis",
                                "X Axis (units)",
                                "Y Axis (units)",
                                "Reference Point",
                                "Section 3: Line Chart Trends",
                                "Time (s)",
                                "skyblue",
                                "olive",
                                "dashed"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX50_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX50_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall title displayed at the top?",
                                "How many subplots are arranged in the grid?",
                                "What header text is shown in the top‐left subplot?",
                                "What details are included in the top‐left subplot's monospaced text?",
                                "What type of analysis is depicted in the top-right subplot?",
                                "What are the characteristics of the scatter plot in the top-right subplot?",
                                "What content is shown in the bottom‐left subplot?",
                                "How are visual elements like fonts and line styles used across the sections?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX50_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Visual Conversion Task Report",
                                "A 2x2 grid (4 subplots)",
                                "Section 1: OVERVIEW",
                                "A detailed outline of report sections, key constants ('Threshold Value: 50', 'Maximum Recorded: 100', 'Data Points Count: 50'), and additional notes",
                                "Scatter Plot Analysis",
                                "Data points in skyblue with dark edges, x- and y-axes labels ('X Axis (units)' and 'Y Axis (units)'), dashed grid lines, and an annotation labeled 'Reference Point' with an arrow",
                                "A smooth line chart combining a linear trend and sinusoidal variation, with a title, x-axis label 'Time (s)', and a line styled in olive color with a thicker stroke",
                                "Each section clearly uses distinct header text with defined fonts and line styles, such as bold for the overall title and specific colors and styles for plots"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# -------------------------------\n# Data Generation and Setup\n# -------------------------------\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\ny_tan = np.tan(x)\nerrors = np.random.rand(100) * 0.2\n\n# Create a figure with multiple subplots arranged using subplot2grid for a deeply structured layout.\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle(\"DETAILED VISUAL REPORT\", fontsize=24, fontweight=\"bold\", color='navy')\n\n# -------------------------------\n# Section 1: Sine Wave with Error Bars\n# -------------------------------\nax1 = plt.subplot2grid((3, 2), (0, 0))\nax1.errorbar(x, y_sin, yerr=errors, fmt='-o', color='dodgerblue', ecolor='gray', capsize=3, label='sin(x)')\nax1.set_title(\"Section 1: Sine Wave\", fontsize=16)\nax1.set_xlabel(\"X-Axis (Time)\", fontsize=12)\nax1.set_ylabel(\"Y-Axis (sin(x))\", fontsize=12)\nax1.legend(loc=\"upper right\")\nax1.grid(True)\n\n# Add an internal annotated text box with a list of key points.\nprops = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\ntextstr = \"\\n\".join([\n    \"Highlights:\",\n    \"- Oscillatory behavior\",\n    \"- Random noise added\",\n    f\"Data Points: {len(x)}\"\n])\nax1.text(0.05, 0.95, textstr, transform=ax1.transAxes, fontsize=10,\n         verticalalignment='top', bbox=props)\n\n# -------------------------------\n# Section 2: Cosine Wave with Markers\n# -------------------------------\nax2 = plt.subplot2grid((3, 2), (0, 1))\nax2.plot(x, y_cos, color='crimson', marker='x', linestyle='--', label='cos(x)')\nax2.set_title(\"Section 2: Cosine Wave\", fontsize=16)\nax2.set_xlabel(\"X-Axis\", fontsize=12)\nax2.set_ylabel(\"Y-Axis (cos(x))\", fontsize=12)\nax2.legend(loc=\"upper left\")\nax2.grid(linestyle='--', linewidth=0.5)\n\n# -------------------------------\n# Section 3: Tangent Plot with Controlled Range\n# -------------------------------\nax3 = plt.subplot2grid((3, 2), (1, 0), colspan=2)\n# Filter tangent values to avoid extreme ranges for clarity.\nmask = np.abs(y_tan) < 10\nax3.plot(x[mask], y_tan[mask], color='purple', linewidth=1.5, label='tan(x) (|y|<10)')\nax3.set_title(\"Section 3: Tangent Function (Limited Range)\", fontsize=16)\nax3.set_xlabel(\"X-Axis\", fontsize=12)\nax3.set_ylabel(\"Y-Axis (tan(x))\", fontsize=12)\nax3.legend(loc=\"upper right\")\nax3.grid(True)\n\n# -------------------------------\n# Section 4: Bar Chart",
            "feature_requirements": "• The output must display a main title \"DETAILED VISUAL REPORT\" at the top with a prominent font size (approx. 24) and a bold, navy-colored appearance.  \n• It should be organized into a structured grid layout representing a 3×2 subplot arrangement, with subplots positioned similarly to matplotlib’s subplot2grid.  \n• One subplot must depict a sine wave with error bars: the sine curve in a line+marker style (using circles), error bars with gray color and cap indicators, X-axis labeled \"X-Axis (Time)\", and Y-axis labeled \"Y-Axis (sin(x))\".  \n• The sine wave subplot should include an internal annotation box featuring a list with the items \"Highlights:\", \"- Oscillatory behavior\", \"- Random noise added\", and \"Data Points: 100\", with a rounded box background (wheat color and semi-transparent).  \n• A second subplot should illustrate a cosine wave using a dashed line style with 'x' markers, colored crimson, with X-axis labeled \"X-Axis\" and Y-axis labeled \"Y-Axis (cos(x))\", and a legend positioned at the upper left.  \n• A third subplot must show a tangent function plotted only for the range where |tan(x)| < 10, drawn in purple with a thicker line width, and include X-axis labeled \"X-Axis\" and Y-axis labeled \"Y-Axis (tan(x))\" with a legend placed in the upper right.  \n• Each subplot must include grid lines: the sine and tangent subplots with standard grid lines, and the cosine subplot with dashed grid lines featuring a thinner line width.",
            "task_id": "08XX51",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed at the top of the report?",
                "What is the approximate font size and style of the main title?",
                "How is the report layout structured in terms of subplots?",
                "Which subplot shows a sine wave and what special annotation does it include?",
                "What are the axis labels for the sine wave subplot?",
                "How is the cosine wave subplot styled and where is its legend placed?",
                "What are the characteristics of the tangent subplot?",
                "How do the grid lines differ among the subplots?"
            ],
            "VQA_answers": [
                "DETAILED VISUAL REPORT",
                "Approximately 24 and Bold",
                "A 3×2 grid layout (6 subplots arranged like matplotlib’s subplot2grid)",
                "The sine wave subplot; it includes an internal annotation box listing: 'Highlights:', '- Oscillatory behavior', '- Random noise added', and 'Data Points: 100'",
                "X-Axis (Time) for the X-axis and Y-Axis (sin(x)) for the Y-axis",
                "It uses a dashed line with 'x' markers in crimson color, has axes labeled 'X-Axis' and 'Y-Axis (cos(x))', and the legend is placed in the upper left",
                "It plots the tangent function only where |tan(x)| < 10, is drawn in purple with a thicker line width, and has axes labeled 'X-Axis' and 'Y-Axis (tan(x))' with the legend in the upper right",
                "The sine and tangent subplots have standard grid lines, while the cosine subplot features dashed grid lines with a thinner line width"
            ],
            "raw_output_metric": [
                "DETAILED VISUAL REPORT",
                "sine wave",
                "error bars",
                "line+marker",
                "circle",
                "X-Axis (Time)",
                "Y-Axis (sin(x))",
                "Highlights:",
                "- Oscillatory behavior",
                "- Random noise added",
                "Data Points: 100",
                "wheat",
                "semi-transparent",
                "cosine wave",
                "dashed line",
                "x markers",
                "crimson",
                "X-Axis",
                "Y-Axis (cos(x))",
                "upper left",
                "tangent",
                "purple",
                "thicker",
                "Y-Axis (tan(x))",
                "upper right",
                "grid lines",
                "dashed grid lines"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX51_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# -------------------------------\n# Data Generation and Setup\n# -------------------------------\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\ny_tan = np.tan(x)\nerrors = np.random.rand(100) * 0.2\n\n# Create a figure with multiple subplots arranged using subplot2grid for a deeply structured layout.\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle(\"DETAILED VISUAL REPORT\", fontsize=24, fontweight=\"bold\", color='navy')\n\n# -------------------------------\n# Section 1: Sine Wave with Error Bars\n# -------------------------------\nax1 = plt.subplot2grid((3, 2), (0, 0))\nax1.errorbar(x, y_sin, yerr=errors, fmt='-o', color='dodgerblue', ecolor='gray', capsize=3, label='sin(x)')\nax1.set_title(\"Section 1: Sine Wave\", fontsize=16)\nax1.set_xlabel(\"X-Axis (Time)\", fontsize=12)\nax1.set_ylabel(\"Y-Axis (sin(x))\", fontsize=12)\nax1.legend(loc=\"upper right\")\nax1.grid(True)\n\n# Add an internal annotated text box with a list of key points.\nprops = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\ntextstr = \"\\n\".join([\n    \"Highlights:\",\n    \"- Oscillatory behavior\",\n    \"- Random noise added\",\n    f\"Data Points: {len(x)}\"\n])\nax1.text(0.05, 0.95, textstr, transform=ax1.transAxes, fontsize=10,\n         verticalalignment='top', bbox=props)\n\n# -------------------------------\n# Section 2: Cosine Wave with Markers\n# -------------------------------\nax2 = plt.subplot2grid((3, 2), (0, 1))\nax2.plot(x, y_cos, color='crimson', marker='x', linestyle='--', label='cos(x)')\nax2.set_title(\"Section 2: Cosine Wave\", fontsize=16)\nax2.set_xlabel(\"X-Axis\", fontsize=12)\nax2.set_ylabel(\"Y-Axis (cos(x))\", fontsize=12)\nax2.legend(loc=\"upper left\")\nax2.grid(linestyle='--', linewidth=0.5)\n\n# -------------------------------\n# Section 3: Tangent Plot with Controlled Range\n# -------------------------------\nax3 = plt.subplot2grid((3, 2), (1, 0), colspan=2)\n# Filter tangent values to avoid extreme ranges for clarity.\nmask = np.abs(y_tan) < 10\nax3.plot(x[mask], y_tan[mask], color='purple', linewidth=1.5, label='tan(x) (|y|<10)')\nax3.set_title(\"Section 3: Tangent Function (Limited Range)\", fontsize=16)\nax3.set_xlabel(\"X-Axis\", fontsize=12)\nax3.set_ylabel(\"Y-Axis (tan(x))\", fontsize=12)\nax3.legend(loc=\"upper right\")\nax3.grid(True)\n\n# -------------------------------\n# Section 4: Bar Chart"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX51_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "DETAILED VISUAL REPORT",
                                "sine wave",
                                "error bars",
                                "line+marker",
                                "circle",
                                "X-Axis (Time)",
                                "Y-Axis (sin(x))",
                                "Highlights:",
                                "- Oscillatory behavior",
                                "- Random noise added",
                                "Data Points: 100",
                                "wheat",
                                "semi-transparent",
                                "cosine wave",
                                "dashed line",
                                "x markers",
                                "crimson",
                                "X-Axis",
                                "Y-Axis (cos(x))",
                                "upper left",
                                "tangent",
                                "purple",
                                "thicker",
                                "Y-Axis (tan(x))",
                                "upper right",
                                "grid lines",
                                "dashed grid lines"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX51_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX51_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed at the top of the report?",
                                "What is the approximate font size and style of the main title?",
                                "How is the report layout structured in terms of subplots?",
                                "Which subplot shows a sine wave and what special annotation does it include?",
                                "What are the axis labels for the sine wave subplot?",
                                "How is the cosine wave subplot styled and where is its legend placed?",
                                "What are the characteristics of the tangent subplot?",
                                "How do the grid lines differ among the subplots?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX51_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "DETAILED VISUAL REPORT",
                                "Approximately 24 and Bold",
                                "A 3×2 grid layout (6 subplots arranged like matplotlib’s subplot2grid)",
                                "The sine wave subplot; it includes an internal annotation box listing: 'Highlights:', '- Oscillatory behavior', '- Random noise added', and 'Data Points: 100'",
                                "X-Axis (Time) for the X-axis and Y-Axis (sin(x)) for the Y-axis",
                                "It uses a dashed line with 'x' markers in crimson color, has axes labeled 'X-Axis' and 'Y-Axis (cos(x))', and the legend is placed in the upper left",
                                "It plots the tangent function only where |tan(x)| < 10, is drawn in purple with a thicker line width, and has axes labeled 'X-Axis' and 'Y-Axis (tan(x))' with the legend in the upper right",
                                "The sine and tangent subplots have standard grid lines, while the cosine subplot features dashed grid lines with a thinner line width"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Set random seed for reproducibility\nnp.random.seed(42)\n\n# =============================================================================\n# SECTION 1: Figure Setup and Global Title\n# =============================================================================\n# Create a figure with a custom grid layout\nfig = plt.figure(figsize=(12, 18))\n# Define grid: 3 rows x 2 columns with specified height ratios\ngs = fig.add_gridspec(nrows=3, ncols=2, height_ratios=[1, 2, 2], hspace=0.4, wspace=0.3)\n\n# Global Title\nfig.suptitle(\"Data Visualization Report\", fontsize=26, fontweight='bold', y=0.98)\n\n# =============================================================================\n# SECTION 2: Header Section with Title and Subtitle\n# =============================================================================\nax_header = fig.add_subplot(gs[0, :])\nax_header.axis('off')  # Hide axes for text-only header\nax_header.text(0.5, 0.7, \"Comprehensive Data Report\", \n               fontsize=24, fontweight='bold', ha='center', va='center')\nax_header.text(0.5, 0.3, \"Generated using Matplotlib\", fontsize=16, ha='center', va='center')\nax_header.text(0.5, 0.1, \"Date: 2023-10-XX\", fontsize=12, ha='center', va='center', style='italic')\n\n# =============================================================================\n# SECTION 3: Overview and Bulleted Summary\n# =============================================================================\nax_overview = fig.add_subplot(gs[1, 0])\nax_overview.axis('off')\noverview_text = (\n    \"Overview:\\n\\n\"\n    \"This report provides an in-depth analysis drawn from reliable sensor data. \\n\"\n    \"The following sections illustrate various aspects of the measurement:\\n\\n\"\n    \"  • Temperature & Humidity Trends\\n\"\n    \"  • Pressure Measurements\\n\"\n    \"  • Vibration and Frequency Analysis\\n\\n\"\n    \"Each section is crafted to convey clear insights and actionable information.\"\n)\nax_overview.text(0.02, 0.5, overview_text, fontsize=12, va='center', fontfamily='monospace')\n\n# =============================================================================\n# SECTION 4: Bar Chart Displaying Categorical Sensor Data\n# =============================================================================\nax_bar = fig.add_subplot(gs[1, 1])\ncategories = ['Sensor A', 'Sensor B', 'Sensor C', 'Sensor D']\nvalues = np.random.randint(50, 100, size=4)\nbars = ax_bar.bar(categories, values, color='skyblue', edgecolor='black')\nax_bar.set_title(\"Sensor Readings\", fontsize=14, fontweight='bold')\nax_bar.set_ylabel(\"Reading Value\", fontsize=12)\nax_bar.set_ylim(0, 120)\n# Annotate each bar with its value\nfor bar, value in zip(bars, values):\n    ax_bar.text(bar.get_x() + bar.get_width() / 2, bar.get_height() + 3, f'{value}', \n                ha='center', va='bottom', fontsize=10)\nax_bar.grid(axis='y',",
            "feature_requirements": "• The output must include a global title reading “Data Visualization Report” presented in a prominent, bold font near the top of the diagram.  \n• There must be a header section (with no axes) that displays three centered text lines: “Comprehensive Data Report” in a large bold font, “Generated using Matplotlib” in a smaller font, and “Date: 2023-10-XX” in an italic style.  \n• A dedicated overview section should contain a multi-line block of text starting with “Overview:” and listing bullet points for “Temperature & Humidity Trends”, “Pressure Measurements”, and “Vibration and Frequency Analysis”, rendered in a monospaced font.  \n• The diagram must include a bar chart section that displays four bars corresponding to the categories “Sensor A”, “Sensor B”, “Sensor C”, and “Sensor D”, with each bar showing a numerical value annotation above it.  \n• The bar chart must include a title “Sensor Readings” in a bold font and a y-axis label “Reading Value”, and the y-axis should be scaled to display values up to at least 120.  \n• The layout should visually mimic a grid with multiple sections (header, overview, bar chart) arranged with clear spatial separation similar to a three-row by two-column grid layout.",
            "task_id": "08XX52",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the global title text displayed at the top of the diagram?",
                "How is the global title styled?",
                "What are the three text lines shown in the header section?",
                "In the overview section, what font is used for the multi-line text?",
                "Which bullet points are listed under the 'Overview:' text?",
                "How many bars are present in the bar chart section and what are their labels?",
                "Are numerical value annotations visible above each bar in the bar chart?",
                "What is the title of the bar chart and how is it styled?",
                "What label is applied to the y-axis of the bar chart?",
                "What is the minimum y-axis value displayed in the bar chart?",
                "How is the overall layout structured?"
            ],
            "VQA_answers": [
                "Data Visualization Report",
                "Prominent and bold",
                "Comprehensive Data Report (large bold), Generated using Matplotlib (smaller), Date: 2023-10-XX (italic)",
                "Monospaced",
                "Temperature & Humidity Trends, Pressure Measurements, Vibration and Frequency Analysis",
                "Four bars labeled Sensor A, Sensor B, Sensor C, and Sensor D",
                "Yes",
                "Sensor Readings in bold",
                "Reading Value",
                "At least 120",
                "It mimics a grid layout with separate sections for header, overview, and bar chart arranged in a three-row by two-column grid"
            ],
            "raw_output_metric": [
                "Data Visualization Report",
                "Comprehensive Data Report",
                "Generated using Matplotlib",
                "Date: 2023-10-XX",
                "Overview:",
                "Temperature & Humidity Trends",
                "Pressure Measurements",
                "Vibration and Frequency Analysis",
                "Sensor A",
                "Sensor B",
                "Sensor C",
                "Sensor D",
                "Sensor Readings",
                "Reading Value",
                "120"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX52_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Set random seed for reproducibility\nnp.random.seed(42)\n\n# =============================================================================\n# SECTION 1: Figure Setup and Global Title\n# =============================================================================\n# Create a figure with a custom grid layout\nfig = plt.figure(figsize=(12, 18))\n# Define grid: 3 rows x 2 columns with specified height ratios\ngs = fig.add_gridspec(nrows=3, ncols=2, height_ratios=[1, 2, 2], hspace=0.4, wspace=0.3)\n\n# Global Title\nfig.suptitle(\"Data Visualization Report\", fontsize=26, fontweight='bold', y=0.98)\n\n# =============================================================================\n# SECTION 2: Header Section with Title and Subtitle\n# =============================================================================\nax_header = fig.add_subplot(gs[0, :])\nax_header.axis('off')  # Hide axes for text-only header\nax_header.text(0.5, 0.7, \"Comprehensive Data Report\", \n               fontsize=24, fontweight='bold', ha='center', va='center')\nax_header.text(0.5, 0.3, \"Generated using Matplotlib\", fontsize=16, ha='center', va='center')\nax_header.text(0.5, 0.1, \"Date: 2023-10-XX\", fontsize=12, ha='center', va='center', style='italic')\n\n# =============================================================================\n# SECTION 3: Overview and Bulleted Summary\n# =============================================================================\nax_overview = fig.add_subplot(gs[1, 0])\nax_overview.axis('off')\noverview_text = (\n    \"Overview:\\n\\n\"\n    \"This report provides an in-depth analysis drawn from reliable sensor data. \\n\"\n    \"The following sections illustrate various aspects of the measurement:\\n\\n\"\n    \"  • Temperature & Humidity Trends\\n\"\n    \"  • Pressure Measurements\\n\"\n    \"  • Vibration and Frequency Analysis\\n\\n\"\n    \"Each section is crafted to convey clear insights and actionable information.\"\n)\nax_overview.text(0.02, 0.5, overview_text, fontsize=12, va='center', fontfamily='monospace')\n\n# =============================================================================\n# SECTION 4: Bar Chart Displaying Categorical Sensor Data\n# =============================================================================\nax_bar = fig.add_subplot(gs[1, 1])\ncategories = ['Sensor A', 'Sensor B', 'Sensor C', 'Sensor D']\nvalues = np.random.randint(50, 100, size=4)\nbars = ax_bar.bar(categories, values, color='skyblue', edgecolor='black')\nax_bar.set_title(\"Sensor Readings\", fontsize=14, fontweight='bold')\nax_bar.set_ylabel(\"Reading Value\", fontsize=12)\nax_bar.set_ylim(0, 120)\n# Annotate each bar with its value\nfor bar, value in zip(bars, values):\n    ax_bar.text(bar.get_x() + bar.get_width() / 2, bar.get_height() + 3, f'{value}', \n                ha='center', va='bottom', fontsize=10)\nax_bar.grid(axis='y',"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX52_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data Visualization Report",
                                "Comprehensive Data Report",
                                "Generated using Matplotlib",
                                "Date: 2023-10-XX",
                                "Overview:",
                                "Temperature & Humidity Trends",
                                "Pressure Measurements",
                                "Vibration and Frequency Analysis",
                                "Sensor A",
                                "Sensor B",
                                "Sensor C",
                                "Sensor D",
                                "Sensor Readings",
                                "Reading Value",
                                "120"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX52_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX52_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the global title text displayed at the top of the diagram?",
                                "How is the global title styled?",
                                "What are the three text lines shown in the header section?",
                                "In the overview section, what font is used for the multi-line text?",
                                "Which bullet points are listed under the 'Overview:' text?",
                                "How many bars are present in the bar chart section and what are their labels?",
                                "Are numerical value annotations visible above each bar in the bar chart?",
                                "What is the title of the bar chart and how is it styled?",
                                "What label is applied to the y-axis of the bar chart?",
                                "What is the minimum y-axis value displayed in the bar chart?",
                                "How is the overall layout structured?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX52_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data Visualization Report",
                                "Prominent and bold",
                                "Comprehensive Data Report (large bold), Generated using Matplotlib (smaller), Date: 2023-10-XX (italic)",
                                "Monospaced",
                                "Temperature & Humidity Trends, Pressure Measurements, Vibration and Frequency Analysis",
                                "Four bars labeled Sensor A, Sensor B, Sensor C, and Sensor D",
                                "Yes",
                                "Sensor Readings in bold",
                                "Reading Value",
                                "At least 120",
                                "It mimics a grid layout with separate sections for header, overview, and bar chart arranged in a three-row by two-column grid"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport numpy as np\n\n# =============================================================================\n# DATA GENERATION FUNCTIONS\n# =============================================================================\ndef generate_data(n=50):\n    \"\"\"\n    Generates sample data with a sinusoidal trend plus noise.\n    \n    Parameters:\n        n (int): Number of data points.\n        \n    Returns:\n        tuple: Arrays of x and y data.\n    \"\"\"\n    np.random.seed(42)\n    x = np.linspace(0, 10, n)\n    y = np.sin(x) + np.random.normal(scale=0.5, size=n)\n    return x, y\n\ndef generate_statistics():\n    \"\"\"\n    Returns a dictionary of key statistical metrics.\n    \n    Returns:\n        dict: Containing max, min, mean and standard deviation.\n    \"\"\"\n    stats = {\n        \"Max\": 1.0,\n        \"Min\": -1.0,\n        \"Mean\": 0.0,\n        \"Std Dev\": 0.5\n    }\n    return stats\n\n# -----------------------------------------------------------------------------\n# GENERATE MAIN DATA\n# -----------------------------------------------------------------------------\nx, y = generate_data()\n\n# =============================================================================\n# CREATE FIGURE AND GRID LAYOUT\n# =============================================================================\nfig = plt.figure(figsize=(12, 10))\ngs = gridspec.GridSpec(3, 2, figure=fig, height_ratios=[1, 2, 1], width_ratios=[2, 1], wspace=0.3, hspace=0.4)\n\n# =============================================================================\n# SECTION 1: HEADER/TITLE PANEL\n# =============================================================================\nax_title = fig.add_subplot(gs[0, :])\nax_title.axis('off')  # Remove axis visuals\nax_title.text(0.5, 0.6, \"Data Analysis Report\", ha='center', va='center', fontsize=24, fontweight='bold')\nax_title.text(0.5, 0.4, \"Matplotlib Visualization and Structural Layout\", ha='center', va='center', fontsize=14)\nax_title.text(0.5, 0.2, \"Generated by Python Matplotlib\\nDate: 2023-10-01\", ha='center', va='center', fontsize=10)\n\n# =============================================================================\n# SECTION 2: PRIMARY DATA PLOT\n# =============================================================================\nax_main = fig.add_subplot(gs[1, 0])\nax_main.plot(x, y, marker='o', color='blue', linestyle='-', label=\"Sample Data\")\nax_main.set_title(\"Primary Data Plot\", fontsize=16)\nax_main.set_xlabel(\"X Axis Value\")\nax_main.set_ylabel(\"Y Axis Value\")\nax_main.grid(True)\nax_main.legend(loc=\"upper right\")\n\n# Inline annotation within the main plot - Heading\nax_main.text(0.05, 0.95, \"Key Analysis\", transform=ax_main.transAxes, fontsize=12, fontweight='bold', color='red', verticalalignment='top')\n\n# Annotate the maximum point in the data\nmax_index = np.argmax(y)\nax_main.annotate(\"Max Value\", xy=(x[max_index], y[max_index]),\n                 xytext=(x[max_index] + 0.5, y[max_index] + 0.5),\n                 arrowprops=dict(facecolor",
            "feature_requirements": "• A header section that spans the full width containing three lines of text: a main title (\"Data Analysis Report\") displayed in a large, bold font, a subtitle (\"Matplotlib Visualization and Structural Layout\") in a medium-sized font, and a footer line (\"Generated by Python Matplotlib Date: 2023-10-01\") in a smaller font.  \n• A two‐panel layout reflecting a grid structure where the header occupies one full row and the primary data plot appears in a distinct panel below.  \n• A primary data plot that visually represents a blue line graph with circular markers connecting sample data points generated from a sinusoidal trend with noise.  \n• Clearly labeled axes on the primary plot, with the x-axis labeled \"X Axis Value\" and the y-axis labeled \"Y Axis Value\".  \n• Grid lines drawn in the primary plot area to mimic the appearance of a typical Cartesian grid.  \n• A plot title (\"Primary Data Plot\") displayed within the primary data panel using a noticeable font size.  \n• An inline text annotation (\"Key Analysis\") positioned near the top-left of the primary plot area (using relative coordinates such as 0.05, 0.95) and styled in bold red text.  \n• An annotation marking the maximum data point on the primary plot with the label \"Max Value\", including an arrow pointing from an offset text label to the corresponding data point.",
            "task_id": "08XX53",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed in the header?",
                "What is the subtitle visible in the header?",
                "What text appears as the footer in the header section?",
                "How many distinct layout rows are present?",
                "What is the label on the x-axis of the primary plot?",
                "What is the label on the y-axis of the primary plot?",
                "How is the primary data plot line styled?",
                "What is the title shown within the primary data panel?",
                "What is the content of the inline annotation in the primary plot area?",
                "What label is used to mark the maximum data point in the primary plot?"
            ],
            "VQA_answers": [
                "Data Analysis Report",
                "Matplotlib Visualization and Structural Layout",
                "Generated by Python Matplotlib Date: 2023-10-01",
                "2",
                "X Axis Value",
                "Y Axis Value",
                "Blue line graph with circular markers",
                "Primary Data Plot",
                "Key Analysis",
                "Max Value"
            ],
            "raw_output_metric": [
                "Data Analysis Report",
                "Matplotlib Visualization and Structural Layout",
                "Generated by Python Matplotlib Date: 2023-10-01",
                "Primary Data Plot",
                "blue",
                "circular markers",
                "sinusoidal",
                "noise",
                "X Axis Value",
                "Y Axis Value",
                "Key Analysis",
                "0.05, 0.95",
                "Max Value"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX53_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport numpy as np\n\n# =============================================================================\n# DATA GENERATION FUNCTIONS\n# =============================================================================\ndef generate_data(n=50):\n    \"\"\"\n    Generates sample data with a sinusoidal trend plus noise.\n    \n    Parameters:\n        n (int): Number of data points.\n        \n    Returns:\n        tuple: Arrays of x and y data.\n    \"\"\"\n    np.random.seed(42)\n    x = np.linspace(0, 10, n)\n    y = np.sin(x) + np.random.normal(scale=0.5, size=n)\n    return x, y\n\ndef generate_statistics():\n    \"\"\"\n    Returns a dictionary of key statistical metrics.\n    \n    Returns:\n        dict: Containing max, min, mean and standard deviation.\n    \"\"\"\n    stats = {\n        \"Max\": 1.0,\n        \"Min\": -1.0,\n        \"Mean\": 0.0,\n        \"Std Dev\": 0.5\n    }\n    return stats\n\n# -----------------------------------------------------------------------------\n# GENERATE MAIN DATA\n# -----------------------------------------------------------------------------\nx, y = generate_data()\n\n# =============================================================================\n# CREATE FIGURE AND GRID LAYOUT\n# =============================================================================\nfig = plt.figure(figsize=(12, 10))\ngs = gridspec.GridSpec(3, 2, figure=fig, height_ratios=[1, 2, 1], width_ratios=[2, 1], wspace=0.3, hspace=0.4)\n\n# =============================================================================\n# SECTION 1: HEADER/TITLE PANEL\n# =============================================================================\nax_title = fig.add_subplot(gs[0, :])\nax_title.axis('off')  # Remove axis visuals\nax_title.text(0.5, 0.6, \"Data Analysis Report\", ha='center', va='center', fontsize=24, fontweight='bold')\nax_title.text(0.5, 0.4, \"Matplotlib Visualization and Structural Layout\", ha='center', va='center', fontsize=14)\nax_title.text(0.5, 0.2, \"Generated by Python Matplotlib\\nDate: 2023-10-01\", ha='center', va='center', fontsize=10)\n\n# =============================================================================\n# SECTION 2: PRIMARY DATA PLOT\n# =============================================================================\nax_main = fig.add_subplot(gs[1, 0])\nax_main.plot(x, y, marker='o', color='blue', linestyle='-', label=\"Sample Data\")\nax_main.set_title(\"Primary Data Plot\", fontsize=16)\nax_main.set_xlabel(\"X Axis Value\")\nax_main.set_ylabel(\"Y Axis Value\")\nax_main.grid(True)\nax_main.legend(loc=\"upper right\")\n\n# Inline annotation within the main plot - Heading\nax_main.text(0.05, 0.95, \"Key Analysis\", transform=ax_main.transAxes, fontsize=12, fontweight='bold', color='red', verticalalignment='top')\n\n# Annotate the maximum point in the data\nmax_index = np.argmax(y)\nax_main.annotate(\"Max Value\", xy=(x[max_index], y[max_index]),\n                 xytext=(x[max_index] + 0.5, y[max_index] + 0.5),\n                 arrowprops=dict(facecolor"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX53_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data Analysis Report",
                                "Matplotlib Visualization and Structural Layout",
                                "Generated by Python Matplotlib Date: 2023-10-01",
                                "Primary Data Plot",
                                "blue",
                                "circular markers",
                                "sinusoidal",
                                "noise",
                                "X Axis Value",
                                "Y Axis Value",
                                "Key Analysis",
                                "0.05, 0.95",
                                "Max Value"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX53_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX53_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed in the header?",
                                "What is the subtitle visible in the header?",
                                "What text appears as the footer in the header section?",
                                "How many distinct layout rows are present?",
                                "What is the label on the x-axis of the primary plot?",
                                "What is the label on the y-axis of the primary plot?",
                                "How is the primary data plot line styled?",
                                "What is the title shown within the primary data panel?",
                                "What is the content of the inline annotation in the primary plot area?",
                                "What label is used to mark the maximum data point in the primary plot?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX53_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data Analysis Report",
                                "Matplotlib Visualization and Structural Layout",
                                "Generated by Python Matplotlib Date: 2023-10-01",
                                "2",
                                "X Axis Value",
                                "Y Axis Value",
                                "Blue line graph with circular markers",
                                "Primary Data Plot",
                                "Key Analysis",
                                "Max Value"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef main():\n    # Generate sample data\n    x = np.linspace(0, 10, 150)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n    y_tan = np.tan(x)\n    y_damped = np.exp(-x/4) * np.sin(3*x)\n\n    # Create a figure with a customized layout\n    fig = plt.figure(figsize=(12, 10))\n    fig.suptitle(\"Demonstration of Visualization Layout\", fontsize=18, fontweight='bold', color='navy')\n\n    # --------------------------\n    # Subplot 1: Trigonometric Functions\n    # --------------------------\n    ax1 = fig.add_subplot(2, 2, 1)\n    ax1.plot(x, y_sin, label='sin(x)', color='blue', linewidth=2)\n    ax1.plot(x, y_cos, label='cos(x)', color='red', linestyle='--')\n    ax1.set_title(\"Section 1: Sine & Cosine\", fontsize=14, fontweight='bold')\n    ax1.set_xlabel(\"X Axis\")\n    ax1.set_ylabel(\"Function Value\")\n    ax1.legend(loc='upper right')\n    ax1.grid(True)\n\n    # Details box for Subplot 1\n    details_1 = \"\\n\".join([\n        \"Properties:\",\n        \" • sin(x) in blue, cos(x) in red\",\n        \" • Grid enabled\",\n        \" • Legend in upper right\"\n    ])\n    ax1.text(0.05, 0.95, details_1, transform=ax1.transAxes, fontsize=9,\n             verticalalignment='top', bbox=dict(boxstyle=\"round\", facecolor=\"wheat\", alpha=0.5))\n\n    # --------------------------\n    # Subplot 2: Tangent Function\n    # --------------------------\n    ax2 = fig.add_subplot(2, 2, 2)\n    ax2.plot(x, y_tan, label='tan(x)', color='green')\n    ax2.set_title(\"Section 2: Tangent Function\", fontsize=14, fontweight='bold')\n    ax2.set_xlabel(\"X Axis\")\n    ax2.set_ylabel(\"tan(x)\")\n    ax2.legend(loc='upper left')\n    ax2.grid(True)\n    ax2.set_ylim(-10, 10)  # Limit y-axis for tangent to avoid extreme values\n\n    # Annotation for Subplot 2\n    ax2.annotate(\"Approaching Inflection\", xy=(2, np.tan(2)),\n                 xytext=(3, 5), arrowprops=dict(facecolor='black', shrink=0.05),\n                 fontsize=9, color='purple')\n\n    # --------------------------\n    # Subplot 3: Damped Oscillations\n    # --------------------------\n    ax3 = fig.add_subplot(2, 2, 3)\n    ax3.plot(x, y_damped, label='Damped Oscillation', color='magenta', linewidth=",
            "feature_requirements": "• A main, overall title “Demonstration of Visualization Layout” rendered prominently with a large bold font in navy.  \n• A 2×2 grid layout of subplots shown on the page, with each subplot clearly separated.  \n• In the first subplot, a title “Section 1: Sine & Cosine” is displayed along with X-axis labeled “X Axis” and Y-axis labeled “Function Value”; within this subplot, two curves are drawn: one for sin(x) in blue with a thicker line, and one for cos(x) in red with a dashed style, accompanied by a legend placed in the upper right.  \n• A details text box in the first subplot, positioned near the top left inside the axes, containing a bullet list of properties (sin(x) in blue, cos(x) in red, grid enabled, legend in upper right), with a rounded rectangle background colored in a wheat-like shade with slight transparency.  \n• In the second subplot, a title “Section 2: Tangent Function” appears along with X-axis labeled “X Axis” and Y-axis labeled “tan(x)”; a green curve of tan(x) is drawn with a corresponding legend situated in the upper left, and the visible y-range is limited from –10 to 10 with a grid enabled.  \n• An annotation in the second subplot is added in the form of text “Approaching Inflection” that is connected by an arrow (with a black arrowhead and a slight shrink factor) from a data point (e.g., near x=2, tan(2)) to an offset text position (e.g., around x=3, y=5), with the annotation text colored in purple.  \n• In the third subplot, denoted as “Subplot 3: Damped Oscillations”, a curve representing a damped oscillation is drawn in magenta with a specified line width, showcasing the exponential decay modulated by a sine function.  \n• All axes include grid lines, and appropriate legends are rendered for each plotted function so that each graphical element (lines, annotations, text) can be individually verified by its label, color, and style.",
            "task_id": "08XX54",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main, overall title displayed on the page?",
                "How many subplots are arranged in the grid layout?",
                "What is the title of the first subplot?",
                "Which two functions are plotted in the first subplot?",
                "How is the sin(x) curve styled in the first subplot?",
                "How is the cos(x) curve styled in the first subplot?",
                "What information does the details text box in the first subplot contain?",
                "How is the details text box in the first subplot styled?",
                "What is the visible y-range set to in the second subplot?",
                "What annotation is added in the second subplot and how is it styled?"
            ],
            "VQA_answers": [
                "Demonstration of Visualization Layout",
                "4",
                "Section 1: Sine & Cosine",
                "sin(x) and cos(x)",
                "Blue with a thicker line",
                "Red with a dashed style",
                "Bullet list: sin(x) in blue, cos(x) in red, grid enabled, legend in upper right",
                "Rounded rectangle with a wheat-like shade and slight transparency",
                "From –10 to 10",
                "Text 'Approaching Inflection' in purple with an arrow having a black arrowhead and slight shrink factor"
            ],
            "raw_output_metric": [
                "Demonstration of Visualization Layout",
                "Section 1: Sine & Cosine",
                "X Axis",
                "Function Value",
                "sin(x)",
                "cos(x)",
                "legend",
                "sin(x) in blue",
                "cos(x) in red",
                "grid enabled",
                "legend in upper right",
                "Section 2: Tangent Function",
                "tan(x)",
                "legend in upper left",
                "Approaching Inflection",
                "black arrowhead",
                "purple",
                "Subplot 3: Damped Oscillations",
                "magenta",
                "damped oscillation",
                "exponential decay"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX54_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef main():\n    # Generate sample data\n    x = np.linspace(0, 10, 150)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n    y_tan = np.tan(x)\n    y_damped = np.exp(-x/4) * np.sin(3*x)\n\n    # Create a figure with a customized layout\n    fig = plt.figure(figsize=(12, 10))\n    fig.suptitle(\"Demonstration of Visualization Layout\", fontsize=18, fontweight='bold', color='navy')\n\n    # --------------------------\n    # Subplot 1: Trigonometric Functions\n    # --------------------------\n    ax1 = fig.add_subplot(2, 2, 1)\n    ax1.plot(x, y_sin, label='sin(x)', color='blue', linewidth=2)\n    ax1.plot(x, y_cos, label='cos(x)', color='red', linestyle='--')\n    ax1.set_title(\"Section 1: Sine & Cosine\", fontsize=14, fontweight='bold')\n    ax1.set_xlabel(\"X Axis\")\n    ax1.set_ylabel(\"Function Value\")\n    ax1.legend(loc='upper right')\n    ax1.grid(True)\n\n    # Details box for Subplot 1\n    details_1 = \"\\n\".join([\n        \"Properties:\",\n        \" • sin(x) in blue, cos(x) in red\",\n        \" • Grid enabled\",\n        \" • Legend in upper right\"\n    ])\n    ax1.text(0.05, 0.95, details_1, transform=ax1.transAxes, fontsize=9,\n             verticalalignment='top', bbox=dict(boxstyle=\"round\", facecolor=\"wheat\", alpha=0.5))\n\n    # --------------------------\n    # Subplot 2: Tangent Function\n    # --------------------------\n    ax2 = fig.add_subplot(2, 2, 2)\n    ax2.plot(x, y_tan, label='tan(x)', color='green')\n    ax2.set_title(\"Section 2: Tangent Function\", fontsize=14, fontweight='bold')\n    ax2.set_xlabel(\"X Axis\")\n    ax2.set_ylabel(\"tan(x)\")\n    ax2.legend(loc='upper left')\n    ax2.grid(True)\n    ax2.set_ylim(-10, 10)  # Limit y-axis for tangent to avoid extreme values\n\n    # Annotation for Subplot 2\n    ax2.annotate(\"Approaching Inflection\", xy=(2, np.tan(2)),\n                 xytext=(3, 5), arrowprops=dict(facecolor='black', shrink=0.05),\n                 fontsize=9, color='purple')\n\n    # --------------------------\n    # Subplot 3: Damped Oscillations\n    # --------------------------\n    ax3 = fig.add_subplot(2, 2, 3)\n    ax3.plot(x, y_damped, label='Damped Oscillation', color='magenta', linewidth="
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX54_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Demonstration of Visualization Layout",
                                "Section 1: Sine & Cosine",
                                "X Axis",
                                "Function Value",
                                "sin(x)",
                                "cos(x)",
                                "legend",
                                "sin(x) in blue",
                                "cos(x) in red",
                                "grid enabled",
                                "legend in upper right",
                                "Section 2: Tangent Function",
                                "tan(x)",
                                "legend in upper left",
                                "Approaching Inflection",
                                "black arrowhead",
                                "purple",
                                "Subplot 3: Damped Oscillations",
                                "magenta",
                                "damped oscillation",
                                "exponential decay"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX54_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX54_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main, overall title displayed on the page?",
                                "How many subplots are arranged in the grid layout?",
                                "What is the title of the first subplot?",
                                "Which two functions are plotted in the first subplot?",
                                "How is the sin(x) curve styled in the first subplot?",
                                "How is the cos(x) curve styled in the first subplot?",
                                "What information does the details text box in the first subplot contain?",
                                "How is the details text box in the first subplot styled?",
                                "What is the visible y-range set to in the second subplot?",
                                "What annotation is added in the second subplot and how is it styled?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX54_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Demonstration of Visualization Layout",
                                "4",
                                "Section 1: Sine & Cosine",
                                "sin(x) and cos(x)",
                                "Blue with a thicker line",
                                "Red with a dashed style",
                                "Bullet list: sin(x) in blue, cos(x) in red, grid enabled, legend in upper right",
                                "Rounded rectangle with a wheat-like shade and slight transparency",
                                "From –10 to 10",
                                "Text 'Approaching Inflection' in purple with an arrow having a black arrowhead and slight shrink factor"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef create_line_plot(ax):\n    # Section: Trigonometric Functions\n    x = np.linspace(0, 10, 200)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n    \n    ax.plot(x, y_sin, label=\"sin(x)\", color=\"blue\", linestyle=\"-\")\n    ax.plot(x, y_cos, label=\"cos(x)\", color=\"red\", linestyle=\"--\")\n    \n    # Adding titles and labels for heading and sections\n    ax.set_title(\"Section 1: Trigonometric Functions\", fontsize=12, fontweight='bold')\n    ax.set_xlabel(\"X-axis\", fontsize=10)\n    ax.set_ylabel(\"Function Value\", fontsize=10)\n    ax.legend(loc=\"upper right\")\n    ax.grid(True)\n    \n    # Annotating key information with labeled values\n    ax.text(1, 0.5, \"Note:\\n- sin(x) computed\\n- cos(x) computed\", fontsize=8,\n            bbox=dict(facecolor=\"yellow\", alpha=0.3))\n\ndef create_bar_chart(ax):\n    # Section: Categorical Data Distribution\n    categories = [\"Category A\", \"Category B\", \"Category C\", \"Category D\", \"Category E\"]\n    values = [15, 9, 12, 7, 11]\n    \n    bars = ax.bar(categories, values, color=\"teal\")\n    ax.set_title(\"Section 2: Categorical Distribution\", fontsize=12, fontweight='bold')\n    ax.set_xlabel(\"Categories\", fontsize=10)\n    ax.set_ylabel(\"Values\", fontsize=10)\n    \n    # Annotating each bar with its value\n    for bar in bars:\n        height = bar.get_height()\n        ax.text(bar.get_x() + bar.get_width()/2, height + 0.5, f'{height}', \n                ha='center', va='bottom', fontsize=8)\n    \ndef create_pie_chart(ax):\n    # Section: Proportional Segment Analysis\n    labels = [\"Alpha\", \"Beta\", \"Gamma\", \"Delta\", \"Epsilon\"]\n    sizes = [20, 35, 10, 25, 10]\n    explode = (0, 0.1, 0, 0.1, 0)\n    \n    ax.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%', startangle=140)\n    ax.set_title(\"Section 3: Pie Chart Overview\", fontsize=12, fontweight='bold')\n    ax.axis(\"equal\")  # Equal aspect ratio ensures that pie is drawn as a circle.\n\ndef create_scatter_plot(ax):\n    # Section: Random Data Distribution & Annotations\n    np.random.seed(42)\n    x_data = np.random.rand(50)\n    y_data = np.random.rand(50)\n    \n    ax.scatter(x_data, y_data, color=\"purple\", marker=\"o\")\n    ax.set_title(\"Section 4: Scatter Plot & Annotations\", fontsize=12, fontweight='bold')\n    ax.set_xlabel(\"Random X\", fontsize=10)\n    ax.set_ylabel(\"Random Y\", fontsize=10)\n    \n    # Adding a bullet list styled text block\n    bullet_text = (\n        \"Key Observations:\\n\"\n        \"\\u2022 Distribution covers full range\\n\"\n        \"\\u2022 No significant outliers\\n\"\n        \"\\u2022 Data appears moderately scattered\"\n    )\n    ax.text(0.05, 0.75, bullet_text, transform=ax.transAxes, fontsize=8,\n            bbox=dict(facecolor=\"white\", alpha=0.5))\n\ndef main():\n    # Create figure with multiple subplots to simulate structure and layout.\n    fig = plt.figure(figsize=(12, 10))\n    \n    # Title for the overall report with subheadings\n    fig.suptitle(\"Comprehensive Analysis Report\", fontsize=16, fontweight=\"bold\")\n    plt.figtext(0.5, 0.01, \"Generated using Matplotlib (Structural Layout & Visual Hierarchy Test)\", \n                wrap=True, horizontalalignment='center', fontsize=9)\n    \n    # Subplot layout: 2 rows x 2 columns\n    ax1 = plt.subplot(2, 2, 1)\n    create_line_plot(ax1)\n    \n    ax2 = plt.subplot(2, 2, 2)\n    create_bar_chart(ax2)\n    \n    ax3 = plt.subplot(2, 2, 3)\n    create_pie_chart(ax3)\n    \n    ax4 = plt.subplot(2, 2,",
            "feature_requirements": "• The TikZ output must include an overall title “Comprehensive Analysis Report” and a caption at the bottom stating “Generated using Matplotlib (Structural Layout & Visual Hierarchy Test)” to mirror the figure-wide annotations.  \n• The layout must be divided into a 2×2 grid representing four subplots, each with its own title and axis labels.  \n• The first subplot (line plot) must display two curves: a blue, solid line for sin(x) and a red, dashed line for cos(x), along with the title “Section 1: Trigonometric Functions”, X-axis label “X-axis”, Y-axis label “Function Value”, a legend in the upper right, grid lines, and an annotation box containing the note about the computation of sin(x) and cos(x).  \n• The second subplot (bar chart) must include five bars representing “Category A” through “Category E” with specified numerical values, a title “Section 2: Categorical Distribution”, axis labels “Categories” for X-axis and “Values” for Y-axis, and text annotations placed at the top center of each bar to indicate its value.  \n• The third subplot (pie chart) must depict five segments labeled “Alpha”, “Beta”, “Gamma”, “Delta”, and “Epsilon”, display the corresponding percentage values on each segment, include an explosion effect on segments “Beta” and “Delta”, have a title “Section 3: Pie Chart Overview”, and maintain an equal aspect ratio for a circular rendition.  \n• The fourth subplot (scatter plot) must feature a scatter plot of randomly distributed points in purple with circular markers, include a title “Section 4: Scatter Plot & Annotations”, axis labels “Random X” and “Random Y”, and display a text box containing a bullet list of key observations regarding the data distribution.  \n• All labels, titles, legends, and annotations must be visibly rendered with appropriate font sizes and bold styling for headings, reflecting the emphasis indicated in the original Matplotlib code.  \n• The layout must preserve clear separations between each subplot while maintaining an overall coherent and structured visual hierarchy.",
            "task_id": "08XX55",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall title of the rendered TikZ output?",
                "What caption is displayed at the bottom of the output?",
                "How many subplots are arranged in the layout?",
                "Which types of plots are used across the 2×2 grid?",
                "Which subplot displays the sin(x) and cos(x) curves with a blue solid line and a red dashed line?",
                "What titles and axis labels are visible in the first subplot?",
                "Which subplot includes an explosion effect on segments and what are the affected segments?",
                "What categories are shown in the bar chart of the second subplot?",
                "Which subplot features a text box with a bullet list of key observations?",
                "What styling is applied to labels, titles, legends, and annotations?"
            ],
            "VQA_answers": [
                "Comprehensive Analysis Report",
                "Generated using Matplotlib (Structural Layout & Visual Hierarchy Test)",
                "4",
                "Line plot, bar chart, pie chart, scatter plot",
                "The first subplot (line plot)",
                "Title: Section 1: Trigonometric Functions, X-axis: X-axis, Y-axis: Function Value",
                "The third subplot (pie chart); segments 'Beta' and 'Delta'",
                "Category A, Category B, Category C, Category D, Category E",
                "The fourth subplot (scatter plot)",
                "They are rendered with appropriate font sizes and bold styling for headings"
            ],
            "raw_output_metric": [
                "Comprehensive Analysis Report",
                "Generated using Matplotlib (Structural Layout & Visual Hierarchy Test)",
                "Section 1: Trigonometric Functions",
                "X-axis",
                "Function Value",
                "sin(x)",
                "cos(x)",
                "blue",
                "solid",
                "red",
                "dashed",
                "legend",
                "grid lines",
                "computation of sin(x) and cos(x)",
                "Section 2: Categorical Distribution",
                "Categories",
                "Values",
                "Category A",
                "Category B",
                "Category C",
                "Category D",
                "Category E",
                "Section 3: Pie Chart Overview",
                "Alpha",
                "Beta",
                "Gamma",
                "Delta",
                "Epsilon",
                "explosion",
                "Section 4: Scatter Plot & Annotations",
                "Random X",
                "Random Y",
                "purple",
                "circular markers",
                "bullet list",
                "key observations"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX55_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef create_line_plot(ax):\n    # Section: Trigonometric Functions\n    x = np.linspace(0, 10, 200)\n    y_sin = np.sin(x)\n    y_cos = np.cos(x)\n    \n    ax.plot(x, y_sin, label=\"sin(x)\", color=\"blue\", linestyle=\"-\")\n    ax.plot(x, y_cos, label=\"cos(x)\", color=\"red\", linestyle=\"--\")\n    \n    # Adding titles and labels for heading and sections\n    ax.set_title(\"Section 1: Trigonometric Functions\", fontsize=12, fontweight='bold')\n    ax.set_xlabel(\"X-axis\", fontsize=10)\n    ax.set_ylabel(\"Function Value\", fontsize=10)\n    ax.legend(loc=\"upper right\")\n    ax.grid(True)\n    \n    # Annotating key information with labeled values\n    ax.text(1, 0.5, \"Note:\\n- sin(x) computed\\n- cos(x) computed\", fontsize=8,\n            bbox=dict(facecolor=\"yellow\", alpha=0.3))\n\ndef create_bar_chart(ax):\n    # Section: Categorical Data Distribution\n    categories = [\"Category A\", \"Category B\", \"Category C\", \"Category D\", \"Category E\"]\n    values = [15, 9, 12, 7, 11]\n    \n    bars = ax.bar(categories, values, color=\"teal\")\n    ax.set_title(\"Section 2: Categorical Distribution\", fontsize=12, fontweight='bold')\n    ax.set_xlabel(\"Categories\", fontsize=10)\n    ax.set_ylabel(\"Values\", fontsize=10)\n    \n    # Annotating each bar with its value\n    for bar in bars:\n        height = bar.get_height()\n        ax.text(bar.get_x() + bar.get_width()/2, height + 0.5, f'{height}', \n                ha='center', va='bottom', fontsize=8)\n    \ndef create_pie_chart(ax):\n    # Section: Proportional Segment Analysis\n    labels = [\"Alpha\", \"Beta\", \"Gamma\", \"Delta\", \"Epsilon\"]\n    sizes = [20, 35, 10, 25, 10]\n    explode = (0, 0.1, 0, 0.1, 0)\n    \n    ax.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%', startangle=140)\n    ax.set_title(\"Section 3: Pie Chart Overview\", fontsize=12, fontweight='bold')\n    ax.axis(\"equal\")  # Equal aspect ratio ensures that pie is drawn as a circle.\n\ndef create_scatter_plot(ax):\n    # Section: Random Data Distribution & Annotations\n    np.random.seed(42)\n    x_data = np.random.rand(50)\n    y_data = np.random.rand(50)\n    \n    ax.scatter(x_data, y_data, color=\"purple\", marker=\"o\")\n    ax.set_title(\"Section 4: Scatter Plot & Annotations\", fontsize=12, fontweight='bold')\n    ax.set_xlabel(\"Random X\", fontsize=10)\n    ax.set_ylabel(\"Random Y\", fontsize=10)\n    \n    # Adding a bullet list styled text block\n    bullet_text = (\n        \"Key Observations:\\n\"\n        \"\\u2022 Distribution covers full range\\n\"\n        \"\\u2022 No significant outliers\\n\"\n        \"\\u2022 Data appears moderately scattered\"\n    )\n    ax.text(0.05, 0.75, bullet_text, transform=ax.transAxes, fontsize=8,\n            bbox=dict(facecolor=\"white\", alpha=0.5))\n\ndef main():\n    # Create figure with multiple subplots to simulate structure and layout.\n    fig = plt.figure(figsize=(12, 10))\n    \n    # Title for the overall report with subheadings\n    fig.suptitle(\"Comprehensive Analysis Report\", fontsize=16, fontweight=\"bold\")\n    plt.figtext(0.5, 0.01, \"Generated using Matplotlib (Structural Layout & Visual Hierarchy Test)\", \n                wrap=True, horizontalalignment='center', fontsize=9)\n    \n    # Subplot layout: 2 rows x 2 columns\n    ax1 = plt.subplot(2, 2, 1)\n    create_line_plot(ax1)\n    \n    ax2 = plt.subplot(2, 2, 2)\n    create_bar_chart(ax2)\n    \n    ax3 = plt.subplot(2, 2, 3)\n    create_pie_chart(ax3)\n    \n    ax4 = plt.subplot(2, 2,"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX55_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Analysis Report",
                                "Generated using Matplotlib (Structural Layout & Visual Hierarchy Test)",
                                "Section 1: Trigonometric Functions",
                                "X-axis",
                                "Function Value",
                                "sin(x)",
                                "cos(x)",
                                "blue",
                                "solid",
                                "red",
                                "dashed",
                                "legend",
                                "grid lines",
                                "computation of sin(x) and cos(x)",
                                "Section 2: Categorical Distribution",
                                "Categories",
                                "Values",
                                "Category A",
                                "Category B",
                                "Category C",
                                "Category D",
                                "Category E",
                                "Section 3: Pie Chart Overview",
                                "Alpha",
                                "Beta",
                                "Gamma",
                                "Delta",
                                "Epsilon",
                                "explosion",
                                "Section 4: Scatter Plot & Annotations",
                                "Random X",
                                "Random Y",
                                "purple",
                                "circular markers",
                                "bullet list",
                                "key observations"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX55_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX55_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall title of the rendered TikZ output?",
                                "What caption is displayed at the bottom of the output?",
                                "How many subplots are arranged in the layout?",
                                "Which types of plots are used across the 2×2 grid?",
                                "Which subplot displays the sin(x) and cos(x) curves with a blue solid line and a red dashed line?",
                                "What titles and axis labels are visible in the first subplot?",
                                "Which subplot includes an explosion effect on segments and what are the affected segments?",
                                "What categories are shown in the bar chart of the second subplot?",
                                "Which subplot features a text box with a bullet list of key observations?",
                                "What styling is applied to labels, titles, legends, and annotations?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX55_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Analysis Report",
                                "Generated using Matplotlib (Structural Layout & Visual Hierarchy Test)",
                                "4",
                                "Line plot, bar chart, pie chart, scatter plot",
                                "The first subplot (line plot)",
                                "Title: Section 1: Trigonometric Functions, X-axis: X-axis, Y-axis: Function Value",
                                "The third subplot (pie chart); segments 'Beta' and 'Delta'",
                                "Category A, Category B, Category C, Category D, Category E",
                                "The fourth subplot (scatter plot)",
                                "They are rendered with appropriate font sizes and bold styling for headings"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a grid of 2x2 subplots\nfig, axs = plt.subplots(2, 2, figsize=(14, 10))\nfig.suptitle(\"Main Title: Comprehensive Data Analysis Report\", fontsize=16, fontweight='bold')\n\n# --------------------------------------------------------------------\n# Subplot 1: Textual Overview with Headings, Sections, and Lists\n# --------------------------------------------------------------------\nax1 = axs[0, 0]\nax1.set_axis_off()  # Hide the axes to focus on text content\n\noverview_text = (\n    \"REPORT OVERVIEW\\n\"\n    \"\\n\"\n    \"Section 1: Data Summary\\n\"\n    \"-------------------------\\n\"\n    \"  - Total Entries   : 500\\n\"\n    \"  - Valid Entries   : 480\\n\"\n    \"  - Missing Data    : 20\\n\"\n    \"\\n\"\n    \"Section 2: Statistical Overview\\n\"\n    \"-------------------------------\\n\"\n    \"  * Mean Value      : 12.34\\n\"\n    \"  * Median Value    : 11.00\\n\"\n    \"  * Std. Deviation  : 3.21\\n\"\n    \"\\n\"\n    \"Notes:\\n\"\n    \"  - All numerical values are approximated to two decimal places.\\n\"\n    \"  - Data quality has been cross-verified with multiple sources.\\n\"\n)\n\nax1.text(0.05, 0.95, overview_text, transform=ax1.transAxes,\n         fontsize=12, va='top', family='monospace', color='black')\n\n# --------------------------------------------------------------------\n# Subplot 2: Bar Chart Displaying Categorized Data\n# --------------------------------------------------------------------\nax2 = axs[0, 1]\ncategories = ['Category A', 'Category B', 'Category C', 'Category D']\nvalues = [120, 90, 150, 60]\n\nbars = ax2.bar(categories, values, color='skyblue', edgecolor='grey', linewidth=1)\nax2.set_title(\"Bar Chart: Category-wise Counts\", fontsize=14, pad=10)\nax2.set_ylabel(\"Count\", fontsize=12)\nax2.set_xlabel(\"Categories\", fontsize=12)\n\n# Add value labels above each bar\nfor bar in bars:\n    height = bar.get_height()\n    ax2.annotate(f'{height}',\n                 xy=(bar.get_x() + bar.get_width() / 2, height),\n                 xytext=(0, 3),  # offset above the bar\n                 textcoords=\"offset points\",\n                 ha='center', va='bottom', fontsize=10)\n\nax2.grid(axis='y', linestyle='--', alpha=0.7)\n\n# --------------------------------------------------------------------\n# Subplot 3: Line Plot Comparing Sine and Cosine Trends\n# --------------------------------------------------------------------\nax3 = axs[1, 0]\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\n\nax3.plot(x, y_sin, label='Sine Wave', color='red', linewidth=2)\nax3.plot(x, y_cos, label='Cosine Wave', color='blue', linestyle='--', linewidth=2)\nax3.set_title(\"Line Plot: Sine vs Cosine\", fontsize=14, pad=10)\nax3.set_xlabel(\"X Axis (radians)\", fontsize=12)\nax3.set_ylabel(\"Amplitude\", fontsize=12)\nax3.legend(loc='upper right', fontsize=10)\nax3.grid(True, linestyle='-', alpha=0.6)\n\n# --------------------------------------------------------------------\n# Subplot 4: Scatter Plot with Detailed Annotations\n# --------------------------------------------------------------------\nax4 = axs[1, 1]\nnp.random.seed(0)\nx_scatter = np.random.rand(50)\ny_scatter = np.random.rand(50)\ncolors = np.random.rand(50)\nsizes = 100 * np.random.rand(50)\n\nscatter = ax4.scatter(x_scatter, y_scatter, c=colors, s=sizes,\n                      cmap='viridis', alpha=0.7, edgecolors='w', linewidth=0.5)\nax4.set_title(\"Scatter Plot: Random Sample Distribution\", fontsize=14, pad=10)\nax4.set_xlabel(\"Random X\", fontsize=12)\nax4.set_ylabel(\"Random Y\", fontsize=12)\n\n# Add color bar for scatter intensity\ncbar = plt.colorbar(scatter, ax=ax4)\ncbar.set_label(\"Intensity\", fontsize=12)\n\n# --------------------------------------------------------------------\n# Adjust",
            "feature_requirements": "• The converted output must display a 2×2 grid layout with four distinct subplots, each clearly separated and identifiable.  \n• A main title “Main Title: Comprehensive Data Analysis Report” should appear at the top of the overall figure in a prominent, bold style.  \n• The top-left subplot must present a text-based report overview with clear sections and lists, including headings like “REPORT OVERVIEW,” “Section 1: Data Summary,” “Section 2: Statistical Overview,” and accompanying bullet or dash lists with numerical data.  \n• The top-right subplot must feature a bar chart with four bars labeled “Category A,” “Category B,” “Category C,” and “Category D,” include value labels positioned just above each bar, and display axis labels “Categories” (x-axis) and “Count” (y-axis) along with a title “Bar Chart: Category-wise Counts” and horizontal grid lines.  \n• The bottom-left subplot must include a line plot showing two curves labeled “Sine Wave” (red, solid line) and “Cosine Wave” (blue, dashed line) over a range of x values; both curves should be accompanied by a legend, axis labels “X Axis (radians)” and “Amplitude,” and a title “Line Plot: Sine vs Cosine” with visible grid lines.  \n• The bottom-right subplot must render a scatter plot with 50 randomly distributed points, where point colors vary according to a colormap (emulating ‘viridis’), point sizes differ, and points have white edges; it should also display axis labels “Random X” and “Random Y,” a title “Scatter Plot: Random Sample Distribution,” and include a color bar labeled “Intensity.”  \n• Each subplot must preserve its individual titles, labels, and other explanatory text so that all elements (headings, annotations, value labels, list markers, and legends) are visually identifiable and can be verified in the rendered image.",
            "task_id": "08XX56",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed at the top of the figure?",
                "How is the overall figure layout structured?",
                "What headings and sections are visible in the top-left text-based report?",
                "What labels are used for the bars in the top-right bar chart?",
                "What axis labels and title are shown in the top-right subplot?",
                "How are the curves styled in the bottom-left line plot?",
                "What are the axis labels and title in the bottom-left subplot?",
                "How many points are plotted in the bottom-right scatter plot, and which colormap is emulated?",
                "What axis labels and title appear in the bottom-right subplot?",
                "Is there a color bar in the bottom-right subplot and what is its label?"
            ],
            "VQA_answers": [
                "Main Title: Comprehensive Data Analysis Report",
                "2×2 grid layout",
                "REPORT OVERVIEW, Section 1: Data Summary, Section 2: Statistical Overview",
                "Category A, Category B, Category C, Category D",
                "x-axis: Categories, y-axis: Count, title: Bar Chart: Category-wise Counts",
                "Sine Wave: red solid line, Cosine Wave: blue dashed line",
                "x-axis: X Axis (radians), y-axis: Amplitude, title: Line Plot: Sine vs Cosine",
                "50 points and a 'viridis' colormap",
                "x-axis: Random X, y-axis: Random Y, title: Scatter Plot: Random Sample Distribution",
                "Yes, labeled Intensity"
            ],
            "raw_output_metric": [
                "Main Title: Comprehensive Data Analysis Report",
                "REPORT OVERVIEW",
                "Section 1: Data Summary",
                "Section 2: Statistical Overview",
                "Category A",
                "Category B",
                "Category C",
                "Category D",
                "Categories",
                "Count",
                "Bar Chart: Category-wise Counts",
                "Sine Wave",
                "Cosine Wave",
                "X Axis (radians)",
                "Amplitude",
                "Line Plot: Sine vs Cosine",
                "Random X",
                "Random Y",
                "Scatter Plot: Random Sample Distribution",
                "Intensity",
                "viridis"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX56_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a grid of 2x2 subplots\nfig, axs = plt.subplots(2, 2, figsize=(14, 10))\nfig.suptitle(\"Main Title: Comprehensive Data Analysis Report\", fontsize=16, fontweight='bold')\n\n# --------------------------------------------------------------------\n# Subplot 1: Textual Overview with Headings, Sections, and Lists\n# --------------------------------------------------------------------\nax1 = axs[0, 0]\nax1.set_axis_off()  # Hide the axes to focus on text content\n\noverview_text = (\n    \"REPORT OVERVIEW\\n\"\n    \"\\n\"\n    \"Section 1: Data Summary\\n\"\n    \"-------------------------\\n\"\n    \"  - Total Entries   : 500\\n\"\n    \"  - Valid Entries   : 480\\n\"\n    \"  - Missing Data    : 20\\n\"\n    \"\\n\"\n    \"Section 2: Statistical Overview\\n\"\n    \"-------------------------------\\n\"\n    \"  * Mean Value      : 12.34\\n\"\n    \"  * Median Value    : 11.00\\n\"\n    \"  * Std. Deviation  : 3.21\\n\"\n    \"\\n\"\n    \"Notes:\\n\"\n    \"  - All numerical values are approximated to two decimal places.\\n\"\n    \"  - Data quality has been cross-verified with multiple sources.\\n\"\n)\n\nax1.text(0.05, 0.95, overview_text, transform=ax1.transAxes,\n         fontsize=12, va='top', family='monospace', color='black')\n\n# --------------------------------------------------------------------\n# Subplot 2: Bar Chart Displaying Categorized Data\n# --------------------------------------------------------------------\nax2 = axs[0, 1]\ncategories = ['Category A', 'Category B', 'Category C', 'Category D']\nvalues = [120, 90, 150, 60]\n\nbars = ax2.bar(categories, values, color='skyblue', edgecolor='grey', linewidth=1)\nax2.set_title(\"Bar Chart: Category-wise Counts\", fontsize=14, pad=10)\nax2.set_ylabel(\"Count\", fontsize=12)\nax2.set_xlabel(\"Categories\", fontsize=12)\n\n# Add value labels above each bar\nfor bar in bars:\n    height = bar.get_height()\n    ax2.annotate(f'{height}',\n                 xy=(bar.get_x() + bar.get_width() / 2, height),\n                 xytext=(0, 3),  # offset above the bar\n                 textcoords=\"offset points\",\n                 ha='center', va='bottom', fontsize=10)\n\nax2.grid(axis='y', linestyle='--', alpha=0.7)\n\n# --------------------------------------------------------------------\n# Subplot 3: Line Plot Comparing Sine and Cosine Trends\n# --------------------------------------------------------------------\nax3 = axs[1, 0]\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\n\nax3.plot(x, y_sin, label='Sine Wave', color='red', linewidth=2)\nax3.plot(x, y_cos, label='Cosine Wave', color='blue', linestyle='--', linewidth=2)\nax3.set_title(\"Line Plot: Sine vs Cosine\", fontsize=14, pad=10)\nax3.set_xlabel(\"X Axis (radians)\", fontsize=12)\nax3.set_ylabel(\"Amplitude\", fontsize=12)\nax3.legend(loc='upper right', fontsize=10)\nax3.grid(True, linestyle='-', alpha=0.6)\n\n# --------------------------------------------------------------------\n# Subplot 4: Scatter Plot with Detailed Annotations\n# --------------------------------------------------------------------\nax4 = axs[1, 1]\nnp.random.seed(0)\nx_scatter = np.random.rand(50)\ny_scatter = np.random.rand(50)\ncolors = np.random.rand(50)\nsizes = 100 * np.random.rand(50)\n\nscatter = ax4.scatter(x_scatter, y_scatter, c=colors, s=sizes,\n                      cmap='viridis', alpha=0.7, edgecolors='w', linewidth=0.5)\nax4.set_title(\"Scatter Plot: Random Sample Distribution\", fontsize=14, pad=10)\nax4.set_xlabel(\"Random X\", fontsize=12)\nax4.set_ylabel(\"Random Y\", fontsize=12)\n\n# Add color bar for scatter intensity\ncbar = plt.colorbar(scatter, ax=ax4)\ncbar.set_label(\"Intensity\", fontsize=12)\n\n# --------------------------------------------------------------------\n# Adjust"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX56_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Main Title: Comprehensive Data Analysis Report",
                                "REPORT OVERVIEW",
                                "Section 1: Data Summary",
                                "Section 2: Statistical Overview",
                                "Category A",
                                "Category B",
                                "Category C",
                                "Category D",
                                "Categories",
                                "Count",
                                "Bar Chart: Category-wise Counts",
                                "Sine Wave",
                                "Cosine Wave",
                                "X Axis (radians)",
                                "Amplitude",
                                "Line Plot: Sine vs Cosine",
                                "Random X",
                                "Random Y",
                                "Scatter Plot: Random Sample Distribution",
                                "Intensity",
                                "viridis"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX56_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX56_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed at the top of the figure?",
                                "How is the overall figure layout structured?",
                                "What headings and sections are visible in the top-left text-based report?",
                                "What labels are used for the bars in the top-right bar chart?",
                                "What axis labels and title are shown in the top-right subplot?",
                                "How are the curves styled in the bottom-left line plot?",
                                "What are the axis labels and title in the bottom-left subplot?",
                                "How many points are plotted in the bottom-right scatter plot, and which colormap is emulated?",
                                "What axis labels and title appear in the bottom-right subplot?",
                                "Is there a color bar in the bottom-right subplot and what is its label?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX56_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Main Title: Comprehensive Data Analysis Report",
                                "2×2 grid layout",
                                "REPORT OVERVIEW, Section 1: Data Summary, Section 2: Statistical Overview",
                                "Category A, Category B, Category C, Category D",
                                "x-axis: Categories, y-axis: Count, title: Bar Chart: Category-wise Counts",
                                "Sine Wave: red solid line, Cosine Wave: blue dashed line",
                                "x-axis: X Axis (radians), y-axis: Amplitude, title: Line Plot: Sine vs Cosine",
                                "50 points and a 'viridis' colormap",
                                "x-axis: Random X, y-axis: Random Y, title: Scatter Plot: Random Sample Distribution",
                                "Yes, labeled Intensity"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# =====================================================================\n#           Comprehensive Data Visualization with Matplotlib\n# =====================================================================\n\n# Setting a global style for improved aesthetics\nplt.style.use('seaborn-whitegrid')\n\n# -------------------------------\n# Step 1: Data Generation\n# -------------------------------\nnp.random.seed(42)  # Ensure reproducibility\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\ny_random = np.random.normal(0, 1, 100)\n\n# -------------------------------\n# Step 2: Figure & Layout Configuration\n# -------------------------------\n# Create a figure with multiple subplots to showcase data\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle(\"Comprehensive Data Visualization\", fontsize=16, fontweight='bold')\n\n# -------------------------------\n# Subplot 1: Sine Wave Visualization\n# -------------------------------\nax1 = fig.add_subplot(2, 2, 1)\nax1.plot(x, y_sin, label='Sine Wave', color='blue', linewidth=2)\nax1.set_title(\"Section 1: Sine Function\", fontsize=12, fontweight='bold')\nax1.set_xlabel(\"X-axis\")\nax1.set_ylabel(\"sin(x)\")\nax1.grid(True)\nax1.legend(loc='upper right')\nax1.annotate(\"Peak\", xy=(np.pi/2, 1), xytext=(np.pi/2 + 1, 1.1),\n             arrowprops=dict(facecolor='black', arrowstyle='->'),\n             fontsize=10, color='darkblue')\n\n# -------------------------------\n# Subplot 2: Cosine Wave Visualization\n# -------------------------------\nax2 = fig.add_subplot(2, 2, 2)\nax2.plot(x, y_cos, label='Cosine Wave', color='orange', linewidth=2, linestyle='--')\nax2.set_title(\"Section 2: Cosine Function\", fontsize=12, fontweight='bold')\nax2.set_xlabel(\"X-axis\")\nax2.set_ylabel(\"cos(x)\")\nax2.grid(True)\nax2.legend(loc='lower left')\nax2.annotate(\"Minimum\", xy=(np.pi, -1), xytext=(np.pi + 1, -1.2),\n             arrowprops=dict(facecolor='red', arrowstyle='->'),\n             fontsize=10)\n\n# -------------------------------\n# Subplot 3: Random Data Scatter\n# -------------------------------\nax3 = fig.add_subplot(2, 1, 2)\nscatter = ax3.scatter(x, y_random, c=y_random, cmap='viridis', marker='o')\nax3.set_title(\"Section 3: Random Data Distribution\", fontsize=12, fontweight='bold')\nax3.set_xlabel(\"X Values\")\nax3.set_ylabel(\"Random Values\")\n# Add a color bar to indicate intensity\ncbar = fig.colorbar(scatter, ax=ax3)\ncbar.set_label(\"Value Intensity\", fontsize=10)\n\n# -------------------------------\n# Step 3: Annotations & Text Boxes\n# -------------------------------\n# Define observations in a text box\ntextbox_str = (\n    \"Observations:\\n\"\n    \" - Sine wave peaks at x = π/2\\n\"\n    \" - Cosine wave troughs at x = π\\n\"\n    \" - Random data exhibits variability\\n\\n\"\n    \"Key Metrics:\\n\"\n    \" • Max sin(x): 1\\n\"\n    \" • Min cos(x): -1\"\n)\nprops = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\nax3.text(0.05, 0.95, textbox_str, transform=ax3.transAxes, fontsize=10,\n         verticalalignment='top', bbox=props)\n\n# -------------------------------\n# Step 4: Enhance Layout with Minor Ticks and Panel Labels\n# -------------------------------\nfor ax in fig.get_axes():\n    ax.minorticks_on()\n    ax.grid(which='minor', linestyle=':', linewidth=0.5, color='gray')\n    # Add panel labels to each subplot for clarity\n    panel_number = f\"Panel {fig.get_axes().index(ax)+1}\"\n    ax.text(-0.15, 1.1, panel_number, transform=ax.transAxes, fontsize=12, \n            fontweight='bold', bbox=dict(facecolor='none', edgecolor='black', pad=3))\n\n# -------------------------------\n# Step 5: Final Layout Adjustments and Output\n# -------------------------------\nfig.tight_layout(rect=[0, 0, 1, 0.96])  # Adjust layout, reserve space for title\n\n# Uncomment the line below to save the visualization if needed\n# plt.savefig(\"comprehensive_visualization.png\", dpi=300)\n\n# Display the final composite plot\nplt.show()\n\n# =====================================================================\n# End of Visualization Code\n# =====================================================================\n</code>",
            "feature_requirements": "• The output must include an overall figure title reading “Comprehensive Data Visualization” centered at the top, rendered in a bold, larger font.  \n• The visualization must be divided into three separate panels corresponding to three subplots: one displaying a sine wave, one displaying a cosine wave, and one displaying a scatter plot of random data with a color scale.  \n• The sine wave panel must feature a blue line labeled “Sine Wave” with clearly marked axes (“X-axis” and “sin(x)”), a grid (including minor grid lines), and an annotation labeled “Peak” with an arrow pointing from the text to the sine wave’s maximum.  \n• The cosine wave panel must depict a dashed orange line labeled “Cosine Wave” with axes (“X-axis” and “cos(x)”), a grid (including minor grid lines), and an annotation labeled “Minimum” with a red arrow pointing to the cosine wave’s minimum.  \n• The scatter plot panel must display a series of colored markers representing random data, include axes labeled “X Values” and “Random Values,” and feature an adjacent color bar labeled “Value Intensity.”  \n• The scatter plot panel must also include a text box containing multiline observations and key metrics (with items such as “Sine wave peaks at x = π/2”, “Cosine wave troughs at x = π”, “Max sin(x): 1”, and “Min cos(x): -1”), enclosed in a rounded rectangle with a wheat-colored background and partial transparency.  \n• Each panel must include a panel label (e.g., “Panel 1”, “Panel 2”, “Panel 3”) rendered in a bold font within or near the respective subplot, bordered by a rectangular frame.  \n• All axes in every panel are required to display minor tick marks along with secondary grid lines (using a dotted or dashed style) to enhance detail.",
            "task_id": "08XX57",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall figure title at the top of the visualization?",
                "How many panels (subplots) are displayed?",
                "Which panel contains the sine wave?",
                "What is the color and label of the sine wave line?",
                "What annotation is used on the sine wave panel to indicate its maximum?",
                "How is the cosine wave depicted in its panel?",
                "What is the text of the annotation for the cosine wave’s minimum?",
                "What key element is present in the scatter plot panel for representing data intensity?"
            ],
            "VQA_answers": [
                "Comprehensive Data Visualization",
                "Three",
                "Panel 1",
                "Blue line labeled 'Sine Wave'",
                "Labeled 'Peak' with an arrow pointing to the maximum",
                "Dashed orange line labeled 'Cosine Wave'",
                "Labeled 'Minimum' with a red arrow",
                "An adjacent color bar labeled 'Value Intensity'"
            ],
            "raw_output_metric": [
                "Comprehensive Data Visualization",
                "Sine Wave",
                "X-axis",
                "sin(x)",
                "Peak",
                "Cosine Wave",
                "cos(x)",
                "Minimum",
                "X Values",
                "Random Values",
                "Value Intensity",
                "Sine wave peaks at x = π/2",
                "Cosine wave troughs at x = π",
                "Max sin(x): 1",
                "Min cos(x): -1",
                "Panel 1",
                "Panel 2",
                "Panel 3",
                "wheat-colored",
                "rounded rectangle"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX57_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# =====================================================================\n#           Comprehensive Data Visualization with Matplotlib\n# =====================================================================\n\n# Setting a global style for improved aesthetics\nplt.style.use('seaborn-whitegrid')\n\n# -------------------------------\n# Step 1: Data Generation\n# -------------------------------\nnp.random.seed(42)  # Ensure reproducibility\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\ny_random = np.random.normal(0, 1, 100)\n\n# -------------------------------\n# Step 2: Figure & Layout Configuration\n# -------------------------------\n# Create a figure with multiple subplots to showcase data\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle(\"Comprehensive Data Visualization\", fontsize=16, fontweight='bold')\n\n# -------------------------------\n# Subplot 1: Sine Wave Visualization\n# -------------------------------\nax1 = fig.add_subplot(2, 2, 1)\nax1.plot(x, y_sin, label='Sine Wave', color='blue', linewidth=2)\nax1.set_title(\"Section 1: Sine Function\", fontsize=12, fontweight='bold')\nax1.set_xlabel(\"X-axis\")\nax1.set_ylabel(\"sin(x)\")\nax1.grid(True)\nax1.legend(loc='upper right')\nax1.annotate(\"Peak\", xy=(np.pi/2, 1), xytext=(np.pi/2 + 1, 1.1),\n             arrowprops=dict(facecolor='black', arrowstyle='->'),\n             fontsize=10, color='darkblue')\n\n# -------------------------------\n# Subplot 2: Cosine Wave Visualization\n# -------------------------------\nax2 = fig.add_subplot(2, 2, 2)\nax2.plot(x, y_cos, label='Cosine Wave', color='orange', linewidth=2, linestyle='--')\nax2.set_title(\"Section 2: Cosine Function\", fontsize=12, fontweight='bold')\nax2.set_xlabel(\"X-axis\")\nax2.set_ylabel(\"cos(x)\")\nax2.grid(True)\nax2.legend(loc='lower left')\nax2.annotate(\"Minimum\", xy=(np.pi, -1), xytext=(np.pi + 1, -1.2),\n             arrowprops=dict(facecolor='red', arrowstyle='->'),\n             fontsize=10)\n\n# -------------------------------\n# Subplot 3: Random Data Scatter\n# -------------------------------\nax3 = fig.add_subplot(2, 1, 2)\nscatter = ax3.scatter(x, y_random, c=y_random, cmap='viridis', marker='o')\nax3.set_title(\"Section 3: Random Data Distribution\", fontsize=12, fontweight='bold')\nax3.set_xlabel(\"X Values\")\nax3.set_ylabel(\"Random Values\")\n# Add a color bar to indicate intensity\ncbar = fig.colorbar(scatter, ax=ax3)\ncbar.set_label(\"Value Intensity\", fontsize=10)\n\n# -------------------------------\n# Step 3: Annotations & Text Boxes\n# -------------------------------\n# Define observations in a text box\ntextbox_str = (\n    \"Observations:\\n\"\n    \" - Sine wave peaks at x = π/2\\n\"\n    \" - Cosine wave troughs at x = π\\n\"\n    \" - Random data exhibits variability\\n\\n\"\n    \"Key Metrics:\\n\"\n    \" • Max sin(x): 1\\n\"\n    \" • Min cos(x): -1\"\n)\nprops = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\nax3.text(0.05, 0.95, textbox_str, transform=ax3.transAxes, fontsize=10,\n         verticalalignment='top', bbox=props)\n\n# -------------------------------\n# Step 4: Enhance Layout with Minor Ticks and Panel Labels\n# -------------------------------\nfor ax in fig.get_axes():\n    ax.minorticks_on()\n    ax.grid(which='minor', linestyle=':', linewidth=0.5, color='gray')\n    # Add panel labels to each subplot for clarity\n    panel_number = f\"Panel {fig.get_axes().index(ax)+1}\"\n    ax.text(-0.15, 1.1, panel_number, transform=ax.transAxes, fontsize=12, \n            fontweight='bold', bbox=dict(facecolor='none', edgecolor='black', pad=3))\n\n# -------------------------------\n# Step 5: Final Layout Adjustments and Output\n# -------------------------------\nfig.tight_layout(rect=[0, 0, 1, 0.96])  # Adjust layout, reserve space for title\n\n# Uncomment the line below to save the visualization if needed\n# plt.savefig(\"comprehensive_visualization.png\", dpi=300)\n\n# Display the final composite plot\nplt.show()\n\n# =====================================================================\n# End of Visualization Code\n# =====================================================================\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX57_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization",
                                "Sine Wave",
                                "X-axis",
                                "sin(x)",
                                "Peak",
                                "Cosine Wave",
                                "cos(x)",
                                "Minimum",
                                "X Values",
                                "Random Values",
                                "Value Intensity",
                                "Sine wave peaks at x = π/2",
                                "Cosine wave troughs at x = π",
                                "Max sin(x): 1",
                                "Min cos(x): -1",
                                "Panel 1",
                                "Panel 2",
                                "Panel 3",
                                "wheat-colored",
                                "rounded rectangle"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX57_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX57_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall figure title at the top of the visualization?",
                                "How many panels (subplots) are displayed?",
                                "Which panel contains the sine wave?",
                                "What is the color and label of the sine wave line?",
                                "What annotation is used on the sine wave panel to indicate its maximum?",
                                "How is the cosine wave depicted in its panel?",
                                "What is the text of the annotation for the cosine wave’s minimum?",
                                "What key element is present in the scatter plot panel for representing data intensity?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX57_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization",
                                "Three",
                                "Panel 1",
                                "Blue line labeled 'Sine Wave'",
                                "Labeled 'Peak' with an arrow pointing to the maximum",
                                "Dashed orange line labeled 'Cosine Wave'",
                                "Labeled 'Minimum' with a red arrow",
                                "An adjacent color bar labeled 'Value Intensity'"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n\"\"\"\nMatplotlib Visualization Demo\n--------------------------------\nThis script demonstrates a multi-panel Matplotlib figure with various sections, headings,\nlists of labeled values, and structured layout.\n\nSections:\n1. Data Generation\n2. Plot Layout and Titles\n3. Subplot Customization\n4. Final Rendering\n\nAuthor: Your Name\nDate: 2023-10-07\n\"\"\"\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# --------------------------------------\n# Section 1: Data Generation\n# --------------------------------------\n# Create sample data arrays for demonstration\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ndata_noise = np.random.normal(scale=0.3, size=100)\ny3 = y1 + data_noise\ny4 = np.sqrt(np.abs(x))\n\n# List of labeled values for reference:\n#   - amplitude_sin: Strength of the sine curve (1.0)\n#   - amplitude_cos: Strength of the cosine curve (1.0)\n#   - noise_std: Standard deviation of noise (0.3)\namplitude_sin = 1.0\namplitude_cos = 1.0\nnoise_std = 0.3\n\n# --------------------------------------\n# Section 2: Plot Layout and Titles\n# --------------------------------------\n# Create a figure with a 2x2 grid of subplots\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle(\"Matplotlib Visualization Demo\", fontsize=18, fontweight='bold', y=0.95)\n\n# Define common layout parameters\ncommon_params = {\n    'color': 'blue',\n    'linewidth': 2,\n    'marker': 'o',\n    'markersize': 4,\n}\n\n# --------------------------------------\n# Section 3: Subplot Customization\n# --------------------------------------\n\n# Subplot (0,0): Sine Wave Plot\naxs[0, 0].plot(x, y1, **common_params)\naxs[0, 0].set_title(\"Sine Wave\")\naxs[0, 0].set_xlabel(\"X Axis\")\naxs[0, 0].set_ylabel(\"sin(x)\")\naxs[0, 0].grid(True)\naxs[0, 0].text(0.5, 0.9, \"Section: Data Overview\", transform=axs[0, 0].transAxes,\n               fontsize=10, color='green', alpha=0.7)\n\n# Subplot (0,1): Cosine Wave Plot\naxs[0, 1].plot(x, y2, color='red', linewidth=2, marker='s', markersize=4)\naxs[0, 1].set_title(\"Cosine Wave\")\naxs[0, 1].set_xlabel(\"X Axis\")\naxs[0, 1].set_ylabel(\"cos(x)\")\naxs[0, 1].grid(True)\n# Adding a list-like annotation\nannotation_text = \"Key Points:\\n- Starts at 1\\n- Zero Crossing at π/2\"\naxs[0, 1].annotate(annotation_text, xy=(0.05, 0.75), xycoords='axes fraction',\n                   fontsize=9, bbox=dict(boxstyle=\"round\", fc=\"w\"))\n\n# Subplot (1,0): Sine with Noise\naxs[1, 0].scatter(x, y3, color='purple', s=30, alpha=0.7)\naxs[1, 0].set_title(\"Sine Wave with Noise\")\naxs[1, 0].set_xlabel(\"X Axis\")\naxs[1, 0].set_ylabel(\"sin(x) + noise\")\naxs[1, 0].grid(True)\n# Labeled value annotations\naxs[1, 0].text(0.02, 0.95, f\"Noise Std: {noise_std}\", transform=axs[1, 0].transAxes,\n               fontsize=9, verticalalignment='top', bbox=dict(facecolor='yellow', alpha=0.3))\n\n# Subplot (1,1): Square Root Curve\naxs[1, 1].plot(x, y4, color='darkorange', linewidth=2.5, linestyle='--')\naxs[1, 1].set_title(\"Square Root Curve\")\naxs[1, 1].set_xlabel(\"X Axis\")\naxs[1, 1].set_ylabel(\"sqrt(x)\")\naxs[1, 1].grid(True)\n# Add a header annotation within the subplot\naxs[1, 1].text(0.5, 0.9, \"Mathematical Function\", transform=axs[1, 1].transAxes,\n               fontsize=10, horizontalalignment='center', bbox=dict(facecolor='white', edgecolor='black'))\n\n# --------------------------------------\n# Section 4: Final Rendering\n# --------------------------------------\n# Adjust layout for a clean, non-overlapping display\nplt.tight_layout(rect=[0, 0, 1, 0.93])\nplt.figtext(0.5, 0.01, \"Generated by Matplotlib Visualization Demo Script\", wrap=True,\n            horizontalalignment='center', fontsize=9, style='italic')\n\n# Save the figure as a PDF (optional)\n# fig.savefig(\"visualization_demo.pdf\")\n\n# Display the figure\nplt.show()\n</code>",
            "feature_requirements": "• A large overall title (“Matplotlib Visualization Demo”) displayed at the top center of the illustration.  \n• A 2×2 grid layout containing four distinct panels arranged in two rows and two columns.  \n• The top‐left panel depicting a sine wave, with “Sine Wave” as its title, labeled “X Axis” and “sin(x)” for the horizontal and vertical axes respectively, along with a visible grid and an additional overlaid text “Section: Data Overview” in a contrasting color.  \n• The top‐right panel illustrating a cosine wave, titled “Cosine Wave”, with “X Axis” and “cos(x)” as axis labels, including a grid and a multi-line text annotation (list-like) displaying “Key Points:” followed by “- Starts at 1” and “- Zero Crossing at π/2”.  \n• The bottom‐left panel showing a scatter plot for a sine curve with added noise, titled “Sine Wave with Noise”, with axes labeled “X Axis” and “sin(x) + noise”, a grid, and a visible annotation that displays the value “Noise Std: 0.3” against a highlighted background.  \n• The bottom‐right panel featuring a dashed line plot of a square root curve, titled “Square Root Curve”, with “X Axis” and “sqrt(x)” as the axis labels, including a grid and an annotation near the top center that reads “Mathematical Function” framed with a border.  \n• An overall adjustment of layout ensuring proper spacing between panels, with a footer-style centered text at the bottom stating “Generated by Matplotlib Visualization Demo Script”.",
            "task_id": "08XX58",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the overall title displayed at the top center?",
                "How many panels are arranged in the grid layout?",
                "What is the title of the top‐left panel?",
                "What additional overlaid text appears in the top‐left panel?",
                "What are the axis labels for the sine wave panel?",
                "What is the title of the top‐right panel?",
                "What multi-line annotation is visible in the cosine panel?",
                "What type of plot is shown in the bottom‐left panel?",
                "What annotation text is visible in the bottom‐left panel?",
                "What is the footer text displayed at the bottom of the illustration?"
            ],
            "VQA_answers": [
                "Matplotlib Visualization Demo",
                "4",
                "Sine Wave",
                "Section: Data Overview",
                "X Axis and sin(x)",
                "Cosine Wave",
                "Key Points: - Starts at 1 - Zero Crossing at π/2",
                "Scatter plot",
                "Noise Std: 0.3",
                "Generated by Matplotlib Visualization Demo Script"
            ],
            "raw_output_metric": [
                "Matplotlib Visualization Demo",
                "Sine Wave",
                "X Axis",
                "sin(x)",
                "Section: Data Overview",
                "Cosine Wave",
                "cos(x)",
                "Key Points:",
                "- Starts at 1",
                "- Zero Crossing at π/2",
                "Sine Wave with Noise",
                "sin(x) + noise",
                "Noise Std: 0.3",
                "Square Root Curve",
                "sqrt(x)",
                "Mathematical Function",
                "Generated by Matplotlib Visualization Demo Script"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX58_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n\"\"\"\nMatplotlib Visualization Demo\n--------------------------------\nThis script demonstrates a multi-panel Matplotlib figure with various sections, headings,\nlists of labeled values, and structured layout.\n\nSections:\n1. Data Generation\n2. Plot Layout and Titles\n3. Subplot Customization\n4. Final Rendering\n\nAuthor: Your Name\nDate: 2023-10-07\n\"\"\"\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# --------------------------------------\n# Section 1: Data Generation\n# --------------------------------------\n# Create sample data arrays for demonstration\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ndata_noise = np.random.normal(scale=0.3, size=100)\ny3 = y1 + data_noise\ny4 = np.sqrt(np.abs(x))\n\n# List of labeled values for reference:\n#   - amplitude_sin: Strength of the sine curve (1.0)\n#   - amplitude_cos: Strength of the cosine curve (1.0)\n#   - noise_std: Standard deviation of noise (0.3)\namplitude_sin = 1.0\namplitude_cos = 1.0\nnoise_std = 0.3\n\n# --------------------------------------\n# Section 2: Plot Layout and Titles\n# --------------------------------------\n# Create a figure with a 2x2 grid of subplots\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle(\"Matplotlib Visualization Demo\", fontsize=18, fontweight='bold', y=0.95)\n\n# Define common layout parameters\ncommon_params = {\n    'color': 'blue',\n    'linewidth': 2,\n    'marker': 'o',\n    'markersize': 4,\n}\n\n# --------------------------------------\n# Section 3: Subplot Customization\n# --------------------------------------\n\n# Subplot (0,0): Sine Wave Plot\naxs[0, 0].plot(x, y1, **common_params)\naxs[0, 0].set_title(\"Sine Wave\")\naxs[0, 0].set_xlabel(\"X Axis\")\naxs[0, 0].set_ylabel(\"sin(x)\")\naxs[0, 0].grid(True)\naxs[0, 0].text(0.5, 0.9, \"Section: Data Overview\", transform=axs[0, 0].transAxes,\n               fontsize=10, color='green', alpha=0.7)\n\n# Subplot (0,1): Cosine Wave Plot\naxs[0, 1].plot(x, y2, color='red', linewidth=2, marker='s', markersize=4)\naxs[0, 1].set_title(\"Cosine Wave\")\naxs[0, 1].set_xlabel(\"X Axis\")\naxs[0, 1].set_ylabel(\"cos(x)\")\naxs[0, 1].grid(True)\n# Adding a list-like annotation\nannotation_text = \"Key Points:\\n- Starts at 1\\n- Zero Crossing at π/2\"\naxs[0, 1].annotate(annotation_text, xy=(0.05, 0.75), xycoords='axes fraction',\n                   fontsize=9, bbox=dict(boxstyle=\"round\", fc=\"w\"))\n\n# Subplot (1,0): Sine with Noise\naxs[1, 0].scatter(x, y3, color='purple', s=30, alpha=0.7)\naxs[1, 0].set_title(\"Sine Wave with Noise\")\naxs[1, 0].set_xlabel(\"X Axis\")\naxs[1, 0].set_ylabel(\"sin(x) + noise\")\naxs[1, 0].grid(True)\n# Labeled value annotations\naxs[1, 0].text(0.02, 0.95, f\"Noise Std: {noise_std}\", transform=axs[1, 0].transAxes,\n               fontsize=9, verticalalignment='top', bbox=dict(facecolor='yellow', alpha=0.3))\n\n# Subplot (1,1): Square Root Curve\naxs[1, 1].plot(x, y4, color='darkorange', linewidth=2.5, linestyle='--')\naxs[1, 1].set_title(\"Square Root Curve\")\naxs[1, 1].set_xlabel(\"X Axis\")\naxs[1, 1].set_ylabel(\"sqrt(x)\")\naxs[1, 1].grid(True)\n# Add a header annotation within the subplot\naxs[1, 1].text(0.5, 0.9, \"Mathematical Function\", transform=axs[1, 1].transAxes,\n               fontsize=10, horizontalalignment='center', bbox=dict(facecolor='white', edgecolor='black'))\n\n# --------------------------------------\n# Section 4: Final Rendering\n# --------------------------------------\n# Adjust layout for a clean, non-overlapping display\nplt.tight_layout(rect=[0, 0, 1, 0.93])\nplt.figtext(0.5, 0.01, \"Generated by Matplotlib Visualization Demo Script\", wrap=True,\n            horizontalalignment='center', fontsize=9, style='italic')\n\n# Save the figure as a PDF (optional)\n# fig.savefig(\"visualization_demo.pdf\")\n\n# Display the figure\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX58_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Matplotlib Visualization Demo",
                                "Sine Wave",
                                "X Axis",
                                "sin(x)",
                                "Section: Data Overview",
                                "Cosine Wave",
                                "cos(x)",
                                "Key Points:",
                                "- Starts at 1",
                                "- Zero Crossing at π/2",
                                "Sine Wave with Noise",
                                "sin(x) + noise",
                                "Noise Std: 0.3",
                                "Square Root Curve",
                                "sqrt(x)",
                                "Mathematical Function",
                                "Generated by Matplotlib Visualization Demo Script"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX58_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX58_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the overall title displayed at the top center?",
                                "How many panels are arranged in the grid layout?",
                                "What is the title of the top‐left panel?",
                                "What additional overlaid text appears in the top‐left panel?",
                                "What are the axis labels for the sine wave panel?",
                                "What is the title of the top‐right panel?",
                                "What multi-line annotation is visible in the cosine panel?",
                                "What type of plot is shown in the bottom‐left panel?",
                                "What annotation text is visible in the bottom‐left panel?",
                                "What is the footer text displayed at the bottom of the illustration?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX58_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Matplotlib Visualization Demo",
                                "4",
                                "Sine Wave",
                                "Section: Data Overview",
                                "X Axis and sin(x)",
                                "Cosine Wave",
                                "Key Points: - Starts at 1 - Zero Crossing at π/2",
                                "Scatter plot",
                                "Noise Std: 0.3",
                                "Generated by Matplotlib Visualization Demo Script"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport numpy as np\n\n# Set seed for reproducibility\nnp.random.seed(42)\n\n# Create a figure with a grid layout\nfig = plt.figure(constrained_layout=True, figsize=(12, 10))\ngs = gridspec.GridSpec(ncols=2, nrows=3, figure=fig)\n\n##########################################################\n# Section 1: Title & Header Information\n##########################################################\n\n# Create the main title at the top of the figure\nfig.suptitle(\"Comprehensive Data Visualization Report\", fontsize=18, fontweight='bold')\n\n# Add a header text in the first grid (Overview text)\nax0 = fig.add_subplot(gs[0, :])\nax0.axis('off')  # disable axis\nheader_text = (\n    \"Report Overview\\n\"\n    \"-------------------------\\n\"\n    \"This report contains several sections focusing on various data representations.\\n\"\n    \"Each section is labeled and includes values, lists, and annotations to guide analysis.\\n\\n\"\n    \"Sections:\\n\"\n    \"1. Line Plot Analysis\\n\"\n    \"2. Bar Chart Summary\\n\"\n    \"3. Scatter Plot Distribution\\n\"\n    \"4. Pie Chart Composition\\n\"\n    \"5. Annotated Text Summary\\n\"\n)\nax0.text(0.05, 0.5, header_text, fontsize=12, verticalalignment='center', fontfamily='monospace')\n\n##########################################################\n# Section 2: Line Plot Analysis\n##########################################################\n\nax1 = fig.add_subplot(gs[1, 0])\n# Generate sample data for line plot\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# Plot both lines with labels\nax1.plot(x, y1, label=\"Sine Wave\", color=\"blue\", linewidth=2)\nax1.plot(x, y2, label=\"Cosine Wave\", color=\"red\", linestyle=\"--\", linewidth=2)\nax1.set_title(\"Line Plot Analysis\", fontsize=14, fontweight='bold')\nax1.set_xlabel(\"X-axis\")\nax1.set_ylabel(\"Y-axis\")\nax1.grid(True, linestyle=\"--\", alpha=0.6)\nax1.legend(loc=\"upper right\")\n\n# Annotate a list of key observations inside the axis\nobservations = (\n    \"Key Observations:\\n\"\n    \"• Sine and Cosine show periodic behavior.\\n\"\n    \"• They intersect at several points.\\n\"\n    \"• Maximum and minimum values are observed periodically.\"\n)\nax1.text(0.05, -0.3, observations, transform=ax1.transAxes, fontsize=10,\n         bbox=dict(facecolor='lightgray', edgecolor='black', boxstyle='round'))\n\n##########################################################\n# Section 3: Bar Chart Summary\n##########################################################\n\nax2 = fig.add_subplot(gs[1, 1])\n# Sample data for bar chart\ncategories = ['A', 'B', 'C', 'D', 'E']\nvalues = [np.random.randint(5, 20) for _ in categories]\n\nbars = ax2.bar(categories, values, color=['#5DA5DA','#FAA43A','#60BD68','#F17CB0','#B2912F'])\nax2.set_title(\"Bar Chart Summary\", fontsize=14, fontweight='bold')\nax2.set_xlabel(\"Categories\")\nax2.set_ylabel(\"Values\")\nax2.grid(axis='y', linestyle=\"--\", alpha=0.6)\n\n# Attach value labels on each bar\nfor bar in bars:\n    height = bar.get_height()\n    ax2.annotate(f'{height}',\n                 xy=(bar.get_x() + bar.get_width() / 2, height),\n                 xytext=(0, 3), \n                 textcoords=\"offset points\",\n                 ha='center', va='bottom', fontsize=10)\n\n##########################################################\n# Section 4: Scatter Plot Distribution\n##########################################################\n\nax3 = fig.add_subplot(gs[2, 0])\n# Generate random data for scatter plot\nx_scatter = np.random.normal(5, 1.5, 100)\ny_scatter = np.random.normal(5, 1.5, 100)\ncolors = np.random.rand(100)\nsizes = 50 * np.random.rand(100)\n\nscatter = ax3.scatter(x_scatter, y_scatter, c=colors, s=sizes, cmap='viridis', alpha=0.7, edgecolors='w')\nax3.set_title(\"Scatter Plot Distribution\", fontsize=14, fontweight='bold')\nax3.set_xlabel(\"X Value\")\nax3.set_ylabel(\"Y Value\")\nax3.grid(True, linestyle=\"--\", alpha=0.5)\n\n# Add colorbar for scatter plot\ncbar = plt.colorbar(scatter, ax=ax3)\ncbar.set_label(\"Color Scale\")\n\n##########################################################\n# Section 5: Pie Chart Composition with Detailed Breakdown\n##########################################################\n\nax4 = fig.add_subplot(gs[2, 1])\n# Data for pie chart\nlabels = ['Segment 1', 'Segment 2', 'Segment 3', 'Segment 4']\nsizes = [25, 35, 20, 20]\nexplode = (0.1, 0, 0, 0)  # only \"explode\" the first slice for emphasis\n\n# Plot pie chart\nwedges, texts, autotexts = ax4.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n                                   shadow=True, startangle=140, textprops={'fontsize': 10})\nax4.set_title(\"Pie Chart Composition\", fontsize=14, fontweight='bold')\n\n# Add annotations with labeled values below the chart\nlegend_text = (\n    \"Label Details:\\n\"\n    \"Segment 1: 25% - Primary Focus\\n\"\n    \"Segment 2: 35% - Secondary\\n\"\n    \"Segment 3: 20% - Tertiary\\n\"\n    \"Segment 4: 20% - Supporting\"\n)\nax4.text(-1.1, -1.2, legend_text, fontsize=10, bbox=dict(facecolor='whitesmoke', edgecolor='black', boxstyle='round'))\n\n##########################################################\n# Final Layout Adjustments and Save/Display\n##########################################################\n\n# Display a final note at the bottom of the figure\nfig.text(0.5, 0.01,\n         \"Note: The data presented above is simulated for demonstration purposes. \"\n         \"Each visualization component has been carefully annotated to explain the key insights.\",\n         ha='center', fontsize=10, fontstyle='italic')\n\n# Adjust spacing if necessary\nplt.tight_layout()\nplt.subplots_adjust(top=0.92, bottom=0.08)\n\n# Show the final composite figure\nplt.show()\n</code>",
            "feature_requirements": "• A centered main title at the top reading \"Comprehensive Data Visualization Report\" in bold and larger font.  \n• An introductory header section displaying multiline text with an overview of the report and a numbered list of the five sections.  \n• A section for \"Line Plot Analysis\" containing a plot with two curves (a blue sine wave and a red dashed cosine wave), including labeled x- and y-axes, a grid with dashed lines, a legend in the upper right, and an inset annotation listing key observations.  \n• A section for \"Bar Chart Summary\" showing a bar chart with five distinct colored bars corresponding to categories A–E, each bar annotated with its numeric value, along with gridlines on the y-axis and labeled axes.  \n• A section for \"Scatter Plot Distribution\" featuring a scatter plot of 100 points with varying sizes and colors (using a color scale), gridlines, axis labels, a title, and an adjacent colorbar labeled \"Color Scale.\"  \n• A section for \"Pie Chart Composition\" displaying a pie chart divided into four segments (with one segment exploded for emphasis), each slice showing percentage labels, and an annotation below the chart providing detailed breakdown text for each segment.  \n• A final note centered at the bottom of the overall layout in italic text indicating that the data is simulated for demonstration purposes.  \n• An overall grid layout with 2 columns and 3 rows ensuring that each section is positioned as described.",
            "task_id": "08XX59",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed at the top of the page?",
                "Is the main title centered and styled in bold with a larger font?",
                "How many sections are listed in the introductory header's numbered list?",
                "Which two curves are shown in the Line Plot Analysis section?",
                "How many distinct colored bars are in the Bar Chart Summary section?",
                "Does the Scatter Plot Distribution include a colorbar labeled 'Color Scale'?",
                "How many segments does the Pie Chart Composition have?",
                "Is there an exploded segment in the Pie Chart Composition, and are percentage labels shown on the slices?",
                "What is the overall grid layout configuration of the report?"
            ],
            "VQA_answers": [
                "Comprehensive Data Visualization Report",
                "Yes",
                "5",
                "Blue sine wave and Red dashed cosine wave",
                "5",
                "Yes",
                "4",
                "Yes",
                "2 columns and 3 rows"
            ],
            "raw_output_metric": [
                "Comprehensive Data Visualization Report",
                "1.",
                "2.",
                "3.",
                "4.",
                "5.",
                "Line Plot Analysis",
                "blue sine wave",
                "red dashed cosine wave",
                "x-axis",
                "y-axis",
                "legend",
                "Key Observations",
                "Bar Chart Summary",
                "categories A–E",
                "numeric value",
                "gridlines",
                "Scatter Plot Distribution",
                "100 points",
                "Color Scale",
                "Pie Chart Composition",
                "exploded",
                "percentage labels",
                "data is simulated for demonstration purposes",
                "2 columns",
                "3 rows"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX59_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport numpy as np\n\n# Set seed for reproducibility\nnp.random.seed(42)\n\n# Create a figure with a grid layout\nfig = plt.figure(constrained_layout=True, figsize=(12, 10))\ngs = gridspec.GridSpec(ncols=2, nrows=3, figure=fig)\n\n##########################################################\n# Section 1: Title & Header Information\n##########################################################\n\n# Create the main title at the top of the figure\nfig.suptitle(\"Comprehensive Data Visualization Report\", fontsize=18, fontweight='bold')\n\n# Add a header text in the first grid (Overview text)\nax0 = fig.add_subplot(gs[0, :])\nax0.axis('off')  # disable axis\nheader_text = (\n    \"Report Overview\\n\"\n    \"-------------------------\\n\"\n    \"This report contains several sections focusing on various data representations.\\n\"\n    \"Each section is labeled and includes values, lists, and annotations to guide analysis.\\n\\n\"\n    \"Sections:\\n\"\n    \"1. Line Plot Analysis\\n\"\n    \"2. Bar Chart Summary\\n\"\n    \"3. Scatter Plot Distribution\\n\"\n    \"4. Pie Chart Composition\\n\"\n    \"5. Annotated Text Summary\\n\"\n)\nax0.text(0.05, 0.5, header_text, fontsize=12, verticalalignment='center', fontfamily='monospace')\n\n##########################################################\n# Section 2: Line Plot Analysis\n##########################################################\n\nax1 = fig.add_subplot(gs[1, 0])\n# Generate sample data for line plot\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# Plot both lines with labels\nax1.plot(x, y1, label=\"Sine Wave\", color=\"blue\", linewidth=2)\nax1.plot(x, y2, label=\"Cosine Wave\", color=\"red\", linestyle=\"--\", linewidth=2)\nax1.set_title(\"Line Plot Analysis\", fontsize=14, fontweight='bold')\nax1.set_xlabel(\"X-axis\")\nax1.set_ylabel(\"Y-axis\")\nax1.grid(True, linestyle=\"--\", alpha=0.6)\nax1.legend(loc=\"upper right\")\n\n# Annotate a list of key observations inside the axis\nobservations = (\n    \"Key Observations:\\n\"\n    \"• Sine and Cosine show periodic behavior.\\n\"\n    \"• They intersect at several points.\\n\"\n    \"• Maximum and minimum values are observed periodically.\"\n)\nax1.text(0.05, -0.3, observations, transform=ax1.transAxes, fontsize=10,\n         bbox=dict(facecolor='lightgray', edgecolor='black', boxstyle='round'))\n\n##########################################################\n# Section 3: Bar Chart Summary\n##########################################################\n\nax2 = fig.add_subplot(gs[1, 1])\n# Sample data for bar chart\ncategories = ['A', 'B', 'C', 'D', 'E']\nvalues = [np.random.randint(5, 20) for _ in categories]\n\nbars = ax2.bar(categories, values, color=['#5DA5DA','#FAA43A','#60BD68','#F17CB0','#B2912F'])\nax2.set_title(\"Bar Chart Summary\", fontsize=14, fontweight='bold')\nax2.set_xlabel(\"Categories\")\nax2.set_ylabel(\"Values\")\nax2.grid(axis='y', linestyle=\"--\", alpha=0.6)\n\n# Attach value labels on each bar\nfor bar in bars:\n    height = bar.get_height()\n    ax2.annotate(f'{height}',\n                 xy=(bar.get_x() + bar.get_width() / 2, height),\n                 xytext=(0, 3), \n                 textcoords=\"offset points\",\n                 ha='center', va='bottom', fontsize=10)\n\n##########################################################\n# Section 4: Scatter Plot Distribution\n##########################################################\n\nax3 = fig.add_subplot(gs[2, 0])\n# Generate random data for scatter plot\nx_scatter = np.random.normal(5, 1.5, 100)\ny_scatter = np.random.normal(5, 1.5, 100)\ncolors = np.random.rand(100)\nsizes = 50 * np.random.rand(100)\n\nscatter = ax3.scatter(x_scatter, y_scatter, c=colors, s=sizes, cmap='viridis', alpha=0.7, edgecolors='w')\nax3.set_title(\"Scatter Plot Distribution\", fontsize=14, fontweight='bold')\nax3.set_xlabel(\"X Value\")\nax3.set_ylabel(\"Y Value\")\nax3.grid(True, linestyle=\"--\", alpha=0.5)\n\n# Add colorbar for scatter plot\ncbar = plt.colorbar(scatter, ax=ax3)\ncbar.set_label(\"Color Scale\")\n\n##########################################################\n# Section 5: Pie Chart Composition with Detailed Breakdown\n##########################################################\n\nax4 = fig.add_subplot(gs[2, 1])\n# Data for pie chart\nlabels = ['Segment 1', 'Segment 2', 'Segment 3', 'Segment 4']\nsizes = [25, 35, 20, 20]\nexplode = (0.1, 0, 0, 0)  # only \"explode\" the first slice for emphasis\n\n# Plot pie chart\nwedges, texts, autotexts = ax4.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',\n                                   shadow=True, startangle=140, textprops={'fontsize': 10})\nax4.set_title(\"Pie Chart Composition\", fontsize=14, fontweight='bold')\n\n# Add annotations with labeled values below the chart\nlegend_text = (\n    \"Label Details:\\n\"\n    \"Segment 1: 25% - Primary Focus\\n\"\n    \"Segment 2: 35% - Secondary\\n\"\n    \"Segment 3: 20% - Tertiary\\n\"\n    \"Segment 4: 20% - Supporting\"\n)\nax4.text(-1.1, -1.2, legend_text, fontsize=10, bbox=dict(facecolor='whitesmoke', edgecolor='black', boxstyle='round'))\n\n##########################################################\n# Final Layout Adjustments and Save/Display\n##########################################################\n\n# Display a final note at the bottom of the figure\nfig.text(0.5, 0.01,\n         \"Note: The data presented above is simulated for demonstration purposes. \"\n         \"Each visualization component has been carefully annotated to explain the key insights.\",\n         ha='center', fontsize=10, fontstyle='italic')\n\n# Adjust spacing if necessary\nplt.tight_layout()\nplt.subplots_adjust(top=0.92, bottom=0.08)\n\n# Show the final composite figure\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX59_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization Report",
                                "1.",
                                "2.",
                                "3.",
                                "4.",
                                "5.",
                                "Line Plot Analysis",
                                "blue sine wave",
                                "red dashed cosine wave",
                                "x-axis",
                                "y-axis",
                                "legend",
                                "Key Observations",
                                "Bar Chart Summary",
                                "categories A–E",
                                "numeric value",
                                "gridlines",
                                "Scatter Plot Distribution",
                                "100 points",
                                "Color Scale",
                                "Pie Chart Composition",
                                "exploded",
                                "percentage labels",
                                "data is simulated for demonstration purposes",
                                "2 columns",
                                "3 rows"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX59_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX59_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed at the top of the page?",
                                "Is the main title centered and styled in bold with a larger font?",
                                "How many sections are listed in the introductory header's numbered list?",
                                "Which two curves are shown in the Line Plot Analysis section?",
                                "How many distinct colored bars are in the Bar Chart Summary section?",
                                "Does the Scatter Plot Distribution include a colorbar labeled 'Color Scale'?",
                                "How many segments does the Pie Chart Composition have?",
                                "Is there an exploded segment in the Pie Chart Composition, and are percentage labels shown on the slices?",
                                "What is the overall grid layout configuration of the report?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX59_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization Report",
                                "Yes",
                                "5",
                                "Blue sine wave and Red dashed cosine wave",
                                "5",
                                "Yes",
                                "4",
                                "Yes",
                                "2 columns and 3 rows"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n#!/usr/bin/env python3\n\"\"\"\nComprehensive Visualization with Matplotlib\n\nThis script creates a multi-panel figure showcasing various plots:\n  - Section 1: Sine Wave Analysis (Line Plot)\n  - Section 2: Cosine Wave Analysis with key point annotations\n  - Section 3: Exponential Decay Trend with textual observations (bullet list)\n  - Section 4: Combination of a Bar Plot and a Pie Chart to compare categorical data\n\nThe code is structured into sections with clear headings, comments, and labeled values.\n\"\"\"\n\n# -------------------------------\n# Import necessary libraries\n# -------------------------------\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# -------------------------------\n# Data Preparation Section\n# -------------------------------\n# Generate time data and corresponding functions for line plots\nt = np.linspace(0, 2 * np.pi, 100)\nsine_wave = np.sin(t)\ncosine_wave = np.cos(t)\nexponential_decay = np.exp(-t)\n\n# Data for Bar and Pie Charts\ncategories = ['Category A', 'Category B', 'Category C', 'Category D']\nvalues = [23, 45, 56, 78]\n\n# -------------------------------\n# Figure and Subplots Setup\n# -------------------------------\n# Create a figure with a 2x2 grid of subplots\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle('Comprehensive Data Visualization', fontsize=16, fontweight='bold')\n\n# -------------------------------\n# Section 1: Sine Wave Analysis\n# -------------------------------\naxs[0, 0].plot(t, sine_wave, label='Sine Wave', color='blue')\naxs[0, 0].set_title('Section 1: Sine Wave Analysis', fontsize=14)\naxs[0, 0].set_xlabel('Time (radians)')\naxs[0, 0].set_ylabel('Amplitude')\naxs[0, 0].grid(True)\naxs[0, 0].legend()\n\n# -------------------------------\n# Section 2: Cosine Wave Analysis with Annotations\n# -------------------------------\naxs[0, 1].plot(t, cosine_wave, label='Cosine Wave', color='red', linestyle='--')\naxs[0, 1].set_title('Section 2: Cosine Wave",
            "feature_requirements": "• The output must display a 2×2 grid of panels arranged as individual subplots that visually mimic the layout of a Matplotlib figure.  \n• A main overall title \"Comprehensive Data Visualization\" should appear prominently above all panels with bold styling.  \n• In the top-left panel, a line plot of a sine wave must be present featuring a blue line, grid lines, x-axis labeled \"Time (radians)\", y-axis labeled \"Amplitude\", a title \"Section 1: Sine Wave Analysis\", and a legend entry \"Sine Wave\".  \n• In the top-right panel, a line plot of a cosine wave must be displayed using a red dashed line, complete with a title \"Section 2: Cosine Wave Analysis with Annotations\", and include key point annotations or markers where relevant, along with a legend entry \"Cosine Wave\".  \n• A section representing the exponential decay trend must be included, showing a line plot for the exponential decay function, and complementing it with a textual block that contains bullet list observations summarizing the trend.  \n• The bottom panel(s) must combine a bar plot and a pie chart that visually compare categorical data for four categories (\"Category A\", \"Category B\", \"Category C\", \"Category D\") with corresponding values [23, 45, 56, 78], each clearly labeled to identify the category and its value.  \n• Each individual axis within the panels should include appropriate titles, axis labels, and legends as specified to ensure the plots are self-explanatory and measurable by rendered text and graphics.",
            "task_id": "08XX60",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main overall title displayed above all panels?",
                "How many panels are arranged in the grid?",
                "What is the title of the top-left panel?",
                "What color is used for the sine wave in the top-left panel?",
                "What is the x-axis label in the top-left panel?",
                "What is the title of the top-right panel?",
                "What line style characterizes the cosine wave in the top-right panel?",
                "Are key point annotations or markers included in the cosine wave plot?",
                "Is there a textual block with bullet list observations for the exponential decay trend?",
                "What categorical data comparison is shown in the bottom panel(s)?"
            ],
            "VQA_answers": [
                "Comprehensive Data Visualization",
                "Four",
                "Section 1: Sine Wave Analysis",
                "Blue",
                "Time (radians)",
                "Section 2: Cosine Wave Analysis with Annotations",
                "Red dashed line",
                "Yes",
                "Yes",
                "A bar plot and a pie chart comparing 'Category A', 'Category B', 'Category C', and 'Category D' with values 23, 45, 56, 78 respectively"
            ],
            "raw_output_metric": [
                "2×2 grid",
                "Comprehensive Data Visualization",
                "Section 1: Sine Wave Analysis",
                "Sine Wave",
                "Time (radians)",
                "Amplitude",
                "Section 2: Cosine Wave Analysis with Annotations",
                "Cosine Wave",
                "exponential decay",
                "bullet",
                "Category A",
                "Category B",
                "Category C",
                "Category D",
                "23",
                "45",
                "56",
                "78",
                "blue",
                "red dashed"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX60_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\n#!/usr/bin/env python3\n\"\"\"\nComprehensive Visualization with Matplotlib\n\nThis script creates a multi-panel figure showcasing various plots:\n  - Section 1: Sine Wave Analysis (Line Plot)\n  - Section 2: Cosine Wave Analysis with key point annotations\n  - Section 3: Exponential Decay Trend with textual observations (bullet list)\n  - Section 4: Combination of a Bar Plot and a Pie Chart to compare categorical data\n\nThe code is structured into sections with clear headings, comments, and labeled values.\n\"\"\"\n\n# -------------------------------\n# Import necessary libraries\n# -------------------------------\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# -------------------------------\n# Data Preparation Section\n# -------------------------------\n# Generate time data and corresponding functions for line plots\nt = np.linspace(0, 2 * np.pi, 100)\nsine_wave = np.sin(t)\ncosine_wave = np.cos(t)\nexponential_decay = np.exp(-t)\n\n# Data for Bar and Pie Charts\ncategories = ['Category A', 'Category B', 'Category C', 'Category D']\nvalues = [23, 45, 56, 78]\n\n# -------------------------------\n# Figure and Subplots Setup\n# -------------------------------\n# Create a figure with a 2x2 grid of subplots\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle('Comprehensive Data Visualization', fontsize=16, fontweight='bold')\n\n# -------------------------------\n# Section 1: Sine Wave Analysis\n# -------------------------------\naxs[0, 0].plot(t, sine_wave, label='Sine Wave', color='blue')\naxs[0, 0].set_title('Section 1: Sine Wave Analysis', fontsize=14)\naxs[0, 0].set_xlabel('Time (radians)')\naxs[0, 0].set_ylabel('Amplitude')\naxs[0, 0].grid(True)\naxs[0, 0].legend()\n\n# -------------------------------\n# Section 2: Cosine Wave Analysis with Annotations\n# -------------------------------\naxs[0, 1].plot(t, cosine_wave, label='Cosine Wave', color='red', linestyle='--')\naxs[0, 1].set_title('Section 2: Cosine Wave"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX60_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "2×2 grid",
                                "Comprehensive Data Visualization",
                                "Section 1: Sine Wave Analysis",
                                "Sine Wave",
                                "Time (radians)",
                                "Amplitude",
                                "Section 2: Cosine Wave Analysis with Annotations",
                                "Cosine Wave",
                                "exponential decay",
                                "bullet",
                                "Category A",
                                "Category B",
                                "Category C",
                                "Category D",
                                "23",
                                "45",
                                "56",
                                "78",
                                "blue",
                                "red dashed"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX60_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX60_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main overall title displayed above all panels?",
                                "How many panels are arranged in the grid?",
                                "What is the title of the top-left panel?",
                                "What color is used for the sine wave in the top-left panel?",
                                "What is the x-axis label in the top-left panel?",
                                "What is the title of the top-right panel?",
                                "What line style characterizes the cosine wave in the top-right panel?",
                                "Are key point annotations or markers included in the cosine wave plot?",
                                "Is there a textual block with bullet list observations for the exponential decay trend?",
                                "What categorical data comparison is shown in the bottom panel(s)?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX60_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Visualization",
                                "Four",
                                "Section 1: Sine Wave Analysis",
                                "Blue",
                                "Time (radians)",
                                "Section 2: Cosine Wave Analysis with Annotations",
                                "Red dashed line",
                                "Yes",
                                "Yes",
                                "A bar plot and a pie chart comparing 'Category A', 'Category B', 'Category C', and 'Category D' with values 23, 45, 56, 78 respectively"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef main():\n    # Set up the overall figure with a clear layout\n    fig = plt.figure(figsize=(12, 10))\n    fig.suptitle(\"Visual Conversion Layout: Structural Hierarchy and Content\", fontsize=16, fontweight=\"bold\", y=0.98)\n    \n    # Create a gridspec layout: 3 rows x 2 columns\n    gs = fig.add_gridspec(3, 2, hspace=0.5, wspace=0.4)\n    \n    # ============ Section 1: Introduction Heading ================\n    ax_intro = fig.add_subplot(gs[0, :])\n    ax_intro.axis(\"off\")\n    ax_intro.text(0.5, 0.75, \"Section 1: Overview\", fontsize=18, fontweight=\"bold\", ha=\"center\")\n    intro_text = (\n        \"This visual layout demonstrates the structure and visual hierarchy of content.\\n\"\n        \"Each panel represents a different mathematical function or section with clearly\\n\"\n        \"labeled headings, subheadings, bullet lists, and descriptive text.\\n\\n\"\n        \"Use this as a reference for rendering complex multi-section visual documents.\"\n    )\n    ax_intro.text(0.5, 0.45, intro_text, fontsize=10, ha=\"center\", va=\"center\", wrap=True)\n    \n    # ============ Section 2: Trigonometric Functions ================\n    # Subsection 2.1: Sine Wave\n    ax_sine = fig.add_subplot(gs[1, 0])\n    x = np.linspace(0, 2 * np.pi, 250)\n    ax_sine.plot(x, np.sin(x), label=\"sin(x)\", color=\"blue\", linewidth=2)\n    ax_sine.set_title(\"Section 2.1: Sine Wave\", loc=\"center\", fontsize=12, fontweight=\"bold\")\n    ax_sine.set_xlabel(\"x (radians)\")\n    ax_sine.set_ylabel(\"Amplitude\")\n    ax_sine.grid(True, linestyle=\"--\", alpha=0.6)\n    ax_sine.legend(loc=\"upper right\")\n    # Annotate with key points using bullet list style\n    ax_sine.text(0.05, 0.9, \"Key Features:\\n• Period: 2π\\n• Amplitude: 1\", transform=ax_sine.transAxes, \n                 fontsize=9, verticalalignment=\"top\")\n    \n    # Subsection 2.2: Cosine Wave\n    ax_cosine = fig",
            "feature_requirements": "• A main title at the top of the layout, displaying “Visual Conversion Layout: Structural Hierarchy and Content” in a prominent, bold style with a larger font size.  \n• A grid layout divided into three rows and two columns, with panels arranged according to the specified spatial arrangement.  \n• A full-width introductory panel (spanning the top row) that contains a centered heading “Section 1: Overview” in bold, large font, accompanied by a block of descriptive, multi-line text centered below it.  \n• A panel for the sine wave (labeled “Section 2.1: Sine Wave”) that includes a plotted sine curve defined over the range 0 to 2π, drawn in blue with a visible line width.  \n• The sine wave panel must display x-axis and y-axis labels (“x (radians)” and “Amplitude”), include a grid with a dashed style, and show a legend in the upper right that identifies the plotted curve as “sin(x)”.  \n• Within the sine wave panel, an annotation area should show a bullet list under “Key Features:” listing “Period: 2π” and “Amplitude: 1”, positioned in the upper left region of the panel.  \n• A separate panel for the cosine wave (intended as “Section 2.2: Cosine Wave”) should be included, following a similar structural and visual style as the sine wave panel.",
            "task_id": "08XX61",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed at the top of the layout?",
                "How many rows and columns are in the grid layout?",
                "What is the heading text in the full-width introductory panel?",
                "Which axis labels are shown in the sine wave panel?",
                "What text appears in the legend of the sine wave panel?",
                "What key features are listed in the sine wave panel's annotation area?",
                "Does the cosine wave panel follow the same structural and visual style as the sine wave panel?"
            ],
            "VQA_answers": [
                "Visual Conversion Layout: Structural Hierarchy and Content",
                "Three rows and two columns",
                "Section 1: Overview",
                "x (radians) and Amplitude",
                "sin(x)",
                "Period: 2π and Amplitude: 1",
                "Yes"
            ],
            "raw_output_metric": [
                "Visual Conversion Layout: Structural Hierarchy and Content",
                "Section 1: Overview",
                "Section 2.1: Sine Wave",
                "Section 2.2: Cosine Wave",
                "x (radians)",
                "Amplitude",
                "sin(x)",
                "Key Features:",
                "Period: 2π",
                "Amplitude: 1",
                "blue",
                "dashed"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX61_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef main():\n    # Set up the overall figure with a clear layout\n    fig = plt.figure(figsize=(12, 10))\n    fig.suptitle(\"Visual Conversion Layout: Structural Hierarchy and Content\", fontsize=16, fontweight=\"bold\", y=0.98)\n    \n    # Create a gridspec layout: 3 rows x 2 columns\n    gs = fig.add_gridspec(3, 2, hspace=0.5, wspace=0.4)\n    \n    # ============ Section 1: Introduction Heading ================\n    ax_intro = fig.add_subplot(gs[0, :])\n    ax_intro.axis(\"off\")\n    ax_intro.text(0.5, 0.75, \"Section 1: Overview\", fontsize=18, fontweight=\"bold\", ha=\"center\")\n    intro_text = (\n        \"This visual layout demonstrates the structure and visual hierarchy of content.\\n\"\n        \"Each panel represents a different mathematical function or section with clearly\\n\"\n        \"labeled headings, subheadings, bullet lists, and descriptive text.\\n\\n\"\n        \"Use this as a reference for rendering complex multi-section visual documents.\"\n    )\n    ax_intro.text(0.5, 0.45, intro_text, fontsize=10, ha=\"center\", va=\"center\", wrap=True)\n    \n    # ============ Section 2: Trigonometric Functions ================\n    # Subsection 2.1: Sine Wave\n    ax_sine = fig.add_subplot(gs[1, 0])\n    x = np.linspace(0, 2 * np.pi, 250)\n    ax_sine.plot(x, np.sin(x), label=\"sin(x)\", color=\"blue\", linewidth=2)\n    ax_sine.set_title(\"Section 2.1: Sine Wave\", loc=\"center\", fontsize=12, fontweight=\"bold\")\n    ax_sine.set_xlabel(\"x (radians)\")\n    ax_sine.set_ylabel(\"Amplitude\")\n    ax_sine.grid(True, linestyle=\"--\", alpha=0.6)\n    ax_sine.legend(loc=\"upper right\")\n    # Annotate with key points using bullet list style\n    ax_sine.text(0.05, 0.9, \"Key Features:\\n• Period: 2π\\n• Amplitude: 1\", transform=ax_sine.transAxes, \n                 fontsize=9, verticalalignment=\"top\")\n    \n    # Subsection 2.2: Cosine Wave\n    ax_cosine = fig"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX61_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Visual Conversion Layout: Structural Hierarchy and Content",
                                "Section 1: Overview",
                                "Section 2.1: Sine Wave",
                                "Section 2.2: Cosine Wave",
                                "x (radians)",
                                "Amplitude",
                                "sin(x)",
                                "Key Features:",
                                "Period: 2π",
                                "Amplitude: 1",
                                "blue",
                                "dashed"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX61_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX61_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed at the top of the layout?",
                                "How many rows and columns are in the grid layout?",
                                "What is the heading text in the full-width introductory panel?",
                                "Which axis labels are shown in the sine wave panel?",
                                "What text appears in the legend of the sine wave panel?",
                                "What key features are listed in the sine wave panel's annotation area?",
                                "Does the cosine wave panel follow the same structural and visual style as the sine wave panel?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX61_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Visual Conversion Layout: Structural Hierarchy and Content",
                                "Three rows and two columns",
                                "Section 1: Overview",
                                "x (radians) and Amplitude",
                                "sin(x)",
                                "Period: 2π and Amplitude: 1",
                                "Yes"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for sample plots\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x)\ny4 = np.exp(-x / 3)\n\n# Create a figure with a grid of subplots\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle('Dashboard Overview', fontsize=18, fontweight='bold', y=0.98)\n\n# Section 1: Line Charts\nax1 = plt.subplot2grid((3, 2), (0, 0), colspan=2)\nax1.plot(x, y1, label='Sine Wave', color='blue', linestyle='-')\nax1.plot(x, y2, label='Cosine Wave', color='red', linestyle='--')\nax1.set_title('Section A: Trigonometric Functions', fontsize=14, fontweight='bold')\nax1.set_xlabel('X Value')\nax1.set_ylabel('Function Output')\nax1.legend(loc='upper right')\nax1.grid(True)\n\n# Section 2: Exponential Decay\nax2 = plt.subplot2grid((3, 2), (1, 0))\nax2.plot(x, y4, color='green', marker='o', markersize=4, label='Exp Decay')\nax2.set_title('Section B: Exponential Decay', fontsize=12)\nax2.set_xlabel('Time')\nax2.set_ylabel('Magnitude')\nax2.legend()\nax2.grid(True)\n\n# Section 3: Tangent Function with Caution\nax3 = plt.subplot2grid((3, 2), (1, 1))\n# Clip tangent values to avoid extreme values for visualization\ny3_clipped = np.clip(y3, -10, 10)\nax3.plot(x, y3_clipped, color='purple', linestyle='-.', label='Tangent (clipped)')\nax3.set_title('Section C: Tangent Function (Clipped)', fontsize=12)\nax3.set_xlabel('Angle (radians)')\nax3.set_ylabel('Tangent Value')\nax3.legend(loc='lower right')\nax3.grid(True)\n\n# Section 4: Statistical Info Panel (using text annotations)\nax4 = plt.subplot2grid((3, 2), (2, 0), colspan=2)\nax4.axis('off')  # We do not need axes for the text panel\n\n# Heading for statistics\nax4.text(0.05, 0.85, 'Section D: Statistical Overview', fontsize=14, fontweight='bold')\n\n# List of labeled values (simulate bullet list)\nstats = {\n    \"Mean Sine Value\": np.mean(y1),\n    \"Std Cosine Value\": np.std(y2),\n    \"Max Exponential Decay\": np.max(y4),\n    \"Clipped Tangent Range\": f\"{np.min(y3_clipped):.2f} to {np.max(y3_clipped):.2f}\"\n}\n\ny_text = 0.75  # Starting vertical position for text\nline_gap = 0.1\nfor label, value in stats.items():\n    ax4.text(0.1, y_text, f\"• {label}: {value:.3f}\" if isinstance(value, float) else f\"• {label}: {value}\",\n             fontsize=12)\n    y_text -= line_gap\n\n# Additional detailed information: Multi-line description\ndescription = (\n    \"Detailed Notes:\\n\"\n    \"1. The sine and cosine functions are smooth periodic curves. \\n\"\n    \"2. Exponential decay illustrates a dampening effect over time.\\n\"\n    \"3. The tangent function is sensitive near its asymptotes; hence, values are clipped\\n\"\n    \"   for a better overview. \\n\"\n    \"4. All values computed are based on fixed sampling over the interval [0, 10].\"\n)\n\nax4.text(0.05, y_text - 0.05, description, fontsize=10, bbox=dict(facecolor='lightgrey', edgecolor='black', boxstyle='round,pad=0.5'))\n\n# Add a footer annotation for the entire dashboard\nfig.text(0.5, 0.02, 'Generated using Matplotlib | Layout: Headings, Sections, Lists, and Labeled Values', \n         ha='center', fontsize=10, style='italic')\n\n# Adjust spacing between subplots for improved visual hierarchy\nplt.subplots_adjust(hspace=0.5, wspace=0.3)\n\n# Display the final structured dashboard\nplt.show()\n</code>",
            "feature_requirements": "• The generated TikZ output must display a main title “Dashboard Overview” near the top of the overall figure with emphasis in a larger, bold font.  \n• The layout should be divided into four distinguishable sections arranged in a grid resembling a 3-row by 2-column structure; two sections span across both columns as specified.  \n• One section must include two overlaid line charts: a blue, solid sine wave and a red, dashed cosine wave, each having appropriate axis labels (\"X Value\" and \"Function Output\"), a legend (with “Sine Wave” and “Cosine Wave”), and a grid background.  \n• A separate subplot must plot an exponential decay curve in green with circular markers; this subplot should include labeled axes (“Time” and “Magnitude”), a legend (“Exp Decay”), and displayed grid lines.  \n• Another subplot must graph a clipped tangent function in purple with a dash-dotted line style, including axis labels (“Angle (radians)” and “Tangent Value”), a legend indicating “Tangent (clipped)” positioned appropriately, and visible grid lines.  \n• A text-only panel (a subplot with its axes turned off) must feature a prominent heading “Section D: Statistical Overview” and a vertically organized bullet list of statistical values; each bullet point should display the statistic label and its numeric value formatted to three decimals, except for one entry showing a value range in text.  \n• In the text panel, there must also be a multi-line descriptive note detailing points about the sine/cosine curves, exponential decay, tangent clipping, and sampling intervals; this text should appear within a light-grey background box with a rounded border.  \n• The overall figure should include a footer annotation across the bottom center with italicized text describing the source (“Generated using Matplotlib | Layout: Headings, Sections, Lists, and Labeled Values”).  \n• All individual charts and text elements must have clearly labeled legends, axis labels, and titles using appropriately scaled fonts to reflect the hierarchy and readability seen in the input Matplotlib code.",
            "task_id": "08XX62",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed near the top of the figure?",
                "How is the main title styled?",
                "How many distinct sections are arranged in the overall layout?",
                "Which section includes two overlaid line charts?",
                "What colors and line styles are used for the sine and cosine wave charts?",
                "Which subplot graphs an exponential decay curve and how is it styled?",
                "Which subplot shows the tangent function and what are its stylistic details?",
                "What heading and additional details are presented in the text-only panel?",
                "What footer annotation is displayed across the bottom center?"
            ],
            "VQA_answers": [
                "Dashboard Overview",
                "Large, bold",
                "Four",
                "The section with sine and cosine waves",
                "Blue solid for sine and red dashed for cosine",
                "The subplot with an exponential decay in green with circular markers",
                "The subplot with a clipped tangent function in purple with a dash-dotted line style",
                "A heading 'Section D: Statistical Overview', a vertical bullet list with statistics formatted to three decimals (one as a range), plus a multi-line note in a light-grey background box with a rounded border",
                "Generated using Matplotlib | Layout: Headings, Sections, Lists, and Labeled Values"
            ],
            "raw_output_metric": [
                "Dashboard Overview",
                "X Value",
                "Function Output",
                "Sine Wave",
                "Cosine Wave",
                "Time",
                "Magnitude",
                "Exp Decay",
                "Angle (radians)",
                "Tangent Value",
                "Tangent (clipped)",
                "Section D: Statistical Overview",
                "Generated using Matplotlib | Layout: Headings, Sections, Lists, and Labeled Values"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX62_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for sample plots\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x)\ny4 = np.exp(-x / 3)\n\n# Create a figure with a grid of subplots\nfig = plt.figure(figsize=(12, 10))\nfig.suptitle('Dashboard Overview', fontsize=18, fontweight='bold', y=0.98)\n\n# Section 1: Line Charts\nax1 = plt.subplot2grid((3, 2), (0, 0), colspan=2)\nax1.plot(x, y1, label='Sine Wave', color='blue', linestyle='-')\nax1.plot(x, y2, label='Cosine Wave', color='red', linestyle='--')\nax1.set_title('Section A: Trigonometric Functions', fontsize=14, fontweight='bold')\nax1.set_xlabel('X Value')\nax1.set_ylabel('Function Output')\nax1.legend(loc='upper right')\nax1.grid(True)\n\n# Section 2: Exponential Decay\nax2 = plt.subplot2grid((3, 2), (1, 0))\nax2.plot(x, y4, color='green', marker='o', markersize=4, label='Exp Decay')\nax2.set_title('Section B: Exponential Decay', fontsize=12)\nax2.set_xlabel('Time')\nax2.set_ylabel('Magnitude')\nax2.legend()\nax2.grid(True)\n\n# Section 3: Tangent Function with Caution\nax3 = plt.subplot2grid((3, 2), (1, 1))\n# Clip tangent values to avoid extreme values for visualization\ny3_clipped = np.clip(y3, -10, 10)\nax3.plot(x, y3_clipped, color='purple', linestyle='-.', label='Tangent (clipped)')\nax3.set_title('Section C: Tangent Function (Clipped)', fontsize=12)\nax3.set_xlabel('Angle (radians)')\nax3.set_ylabel('Tangent Value')\nax3.legend(loc='lower right')\nax3.grid(True)\n\n# Section 4: Statistical Info Panel (using text annotations)\nax4 = plt.subplot2grid((3, 2), (2, 0), colspan=2)\nax4.axis('off')  # We do not need axes for the text panel\n\n# Heading for statistics\nax4.text(0.05, 0.85, 'Section D: Statistical Overview', fontsize=14, fontweight='bold')\n\n# List of labeled values (simulate bullet list)\nstats = {\n    \"Mean Sine Value\": np.mean(y1),\n    \"Std Cosine Value\": np.std(y2),\n    \"Max Exponential Decay\": np.max(y4),\n    \"Clipped Tangent Range\": f\"{np.min(y3_clipped):.2f} to {np.max(y3_clipped):.2f}\"\n}\n\ny_text = 0.75  # Starting vertical position for text\nline_gap = 0.1\nfor label, value in stats.items():\n    ax4.text(0.1, y_text, f\"• {label}: {value:.3f}\" if isinstance(value, float) else f\"• {label}: {value}\",\n             fontsize=12)\n    y_text -= line_gap\n\n# Additional detailed information: Multi-line description\ndescription = (\n    \"Detailed Notes:\\n\"\n    \"1. The sine and cosine functions are smooth periodic curves. \\n\"\n    \"2. Exponential decay illustrates a dampening effect over time.\\n\"\n    \"3. The tangent function is sensitive near its asymptotes; hence, values are clipped\\n\"\n    \"   for a better overview. \\n\"\n    \"4. All values computed are based on fixed sampling over the interval [0, 10].\"\n)\n\nax4.text(0.05, y_text - 0.05, description, fontsize=10, bbox=dict(facecolor='lightgrey', edgecolor='black', boxstyle='round,pad=0.5'))\n\n# Add a footer annotation for the entire dashboard\nfig.text(0.5, 0.02, 'Generated using Matplotlib | Layout: Headings, Sections, Lists, and Labeled Values', \n         ha='center', fontsize=10, style='italic')\n\n# Adjust spacing between subplots for improved visual hierarchy\nplt.subplots_adjust(hspace=0.5, wspace=0.3)\n\n# Display the final structured dashboard\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX62_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard Overview",
                                "X Value",
                                "Function Output",
                                "Sine Wave",
                                "Cosine Wave",
                                "Time",
                                "Magnitude",
                                "Exp Decay",
                                "Angle (radians)",
                                "Tangent Value",
                                "Tangent (clipped)",
                                "Section D: Statistical Overview",
                                "Generated using Matplotlib | Layout: Headings, Sections, Lists, and Labeled Values"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX62_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX62_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed near the top of the figure?",
                                "How is the main title styled?",
                                "How many distinct sections are arranged in the overall layout?",
                                "Which section includes two overlaid line charts?",
                                "What colors and line styles are used for the sine and cosine wave charts?",
                                "Which subplot graphs an exponential decay curve and how is it styled?",
                                "Which subplot shows the tangent function and what are its stylistic details?",
                                "What heading and additional details are presented in the text-only panel?",
                                "What footer annotation is displayed across the bottom center?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX62_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Dashboard Overview",
                                "Large, bold",
                                "Four",
                                "The section with sine and cosine waves",
                                "Blue solid for sine and red dashed for cosine",
                                "The subplot with an exponential decay in green with circular markers",
                                "The subplot with a clipped tangent function in purple with a dash-dotted line style",
                                "A heading 'Section D: Statistical Overview', a vertical bullet list with statistics formatted to three decimals (one as a range), plus a multi-line note in a light-grey background box with a rounded border",
                                "Generated using Matplotlib | Layout: Headings, Sections, Lists, and Labeled Values"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef main():\n    # Set up the overall figure with sufficient size for detailed content\n    fig = plt.figure(figsize=(12, 8))\n    fig.suptitle('Matplotlib Visual Layout: Sectioned Report', fontsize=16, fontweight='bold', color='navy')\n\n    # =============================================================================\n    # HEADER SECTION\n    # =============================================================================\n    # Add header text at the top of the figure\n    fig.text(0.5, 0.95, 'Data Analysis Report', ha='center', va='center',\n             fontsize=18, fontweight='bold', color='darkblue')\n    fig.text(0.5, 0.92, 'Comprehensive Overview of Trends and Metrics', ha='center', va='center',\n             fontsize=12, color='gray')\n\n    # =============================================================================\n    # LEFT SECTION: Summary and Detailed Information\n    # =============================================================================\n    # Create an axis for textual summary (no plot elements, just text)\n    ax_summary = fig.add_axes([0.05, 0.1, 0.4, 0.8])\n    ax_summary.axis('off')  # Hide axes\n\n    summary_text = (\n        \"SUMMARY:\\n\"\n        \"---------------------------\\n\"\n        \"1. Introduction\\n\"\n        \"   - Purpose: Analyze sample data\\n\"\n        \"   - Scope: Statistical trends, anomaly detection\\n\"\n        \"\\n\"\n        \"2. Data Overview\\n\"\n        \"   - Total Samples: 1500\\n\"\n        \"   - Missing Values: 45\\n\"\n        \"   - Features: 12\\n\"\n        \"\\n\"\n        \"3. Analysis\\n\"\n        \"   - Trend Detection: Evaluated using smoothing techniques\\n\"\n        \"   - Outlier Identification: IQR and Z-score analysis\\n\"\n        \"\\n\"\n        \"4. Conclusion\\n\"\n        \"   - Insights: Data is consistent with expected behavior\\n\"\n        \"   - Next Steps: Further modeling and predictive analytics\\n\"\n    )\n\n    ax_summary.text(0.0, 1.0, summary_text, ha='left', va='top',\n                    fontsize=10, family='monospace', color='black')\n\n    # =============================================================================\n    # RIGHT SECTION: Data Visualization Subplots\n    # =============================================================================\n    # Create a subplot for a trend line (upper right)\n    ax_trend = fig.add_axes([0.5, 0.55, 0.45, 0.35])\n    # Generate synthetic data for the trend line\n    x = np.linspace(0, 10, 200)\n    y = np.sin(x) * np.exp(-0.1 * x)\n    ax_trend.plot(x, y, label='",
            "feature_requirements": "• The output must display an overall figure with a clearly visible main title reading “Matplotlib Visual Layout: Sectioned Report” using a bold, large font style.  \n• A header section at the top of the figure must include two centered text items: a primary header “Data Analysis Report” (prominent, bold, dark blue) and a subtitle “Comprehensive Overview of Trends and Metrics” in a lighter, smaller gray font.  \n• There must be a left section designated for textual content that presents a summary block of text. This block should include labeled sections such as “SUMMARY:”, “1. Introduction”, “2. Data Overview”, “3. Analysis”, and “4. Conclusion” with corresponding details.  \n• The summary text must be rendered distinctly in a monospace font style and arranged as a multi-line block clearly separated from other sections.  \n• A right section must contain a subplot area for a trend line visualization.  \n• The trend line plot must be based on a set of x-values ranging from 0 to 10 and y-values calculated using a sine function modulated by an exponential decay factor (sin(x) * exp(-0.1 * x)); the plot must appear as a continuous line in this subplot.  \n• The overall layout should reflect distinct, sectioned areas (header at the top, summary on the left, and visualization on the right) with relative positioning analogous to the original Matplotlib layout.",
            "task_id": "08XX63",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed on the overall figure?",
                "Which two centered headers appear in the header section?",
                "How is the 'Data Analysis Report' header styled?",
                "How is the subtitle styled in the header section?",
                "What labeled sections are included in the left textual summary block?",
                "In what font style is the summary text rendered?",
                "What type of visualization is present in the right section?",
                "What formula is used to compute the y-values in the trend line plot?",
                "What is the range of x-values used in the trend line plot?"
            ],
            "VQA_answers": [
                "Matplotlib Visual Layout: Sectioned Report",
                "Data Analysis Report and Comprehensive Overview of Trends and Metrics",
                "Prominent, bold, dark blue",
                "Lighter, smaller gray font",
                "SUMMARY:, 1. Introduction, 2. Data Overview, 3. Analysis, 4. Conclusion",
                "Monospace",
                "Trend line plot",
                "sin(x) * exp(-0.1 * x)",
                "0 to 10"
            ],
            "raw_output_metric": [
                "Matplotlib Visual Layout: Sectioned Report",
                "Data Analysis Report",
                "Comprehensive Overview of Trends and Metrics",
                "SUMMARY:",
                "1. Introduction",
                "2. Data Overview",
                "3. Analysis",
                "4. Conclusion",
                "sin(x) * exp(-0.1 * x)"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX63_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef main():\n    # Set up the overall figure with sufficient size for detailed content\n    fig = plt.figure(figsize=(12, 8))\n    fig.suptitle('Matplotlib Visual Layout: Sectioned Report', fontsize=16, fontweight='bold', color='navy')\n\n    # =============================================================================\n    # HEADER SECTION\n    # =============================================================================\n    # Add header text at the top of the figure\n    fig.text(0.5, 0.95, 'Data Analysis Report', ha='center', va='center',\n             fontsize=18, fontweight='bold', color='darkblue')\n    fig.text(0.5, 0.92, 'Comprehensive Overview of Trends and Metrics', ha='center', va='center',\n             fontsize=12, color='gray')\n\n    # =============================================================================\n    # LEFT SECTION: Summary and Detailed Information\n    # =============================================================================\n    # Create an axis for textual summary (no plot elements, just text)\n    ax_summary = fig.add_axes([0.05, 0.1, 0.4, 0.8])\n    ax_summary.axis('off')  # Hide axes\n\n    summary_text = (\n        \"SUMMARY:\\n\"\n        \"---------------------------\\n\"\n        \"1. Introduction\\n\"\n        \"   - Purpose: Analyze sample data\\n\"\n        \"   - Scope: Statistical trends, anomaly detection\\n\"\n        \"\\n\"\n        \"2. Data Overview\\n\"\n        \"   - Total Samples: 1500\\n\"\n        \"   - Missing Values: 45\\n\"\n        \"   - Features: 12\\n\"\n        \"\\n\"\n        \"3. Analysis\\n\"\n        \"   - Trend Detection: Evaluated using smoothing techniques\\n\"\n        \"   - Outlier Identification: IQR and Z-score analysis\\n\"\n        \"\\n\"\n        \"4. Conclusion\\n\"\n        \"   - Insights: Data is consistent with expected behavior\\n\"\n        \"   - Next Steps: Further modeling and predictive analytics\\n\"\n    )\n\n    ax_summary.text(0.0, 1.0, summary_text, ha='left', va='top',\n                    fontsize=10, family='monospace', color='black')\n\n    # =============================================================================\n    # RIGHT SECTION: Data Visualization Subplots\n    # =============================================================================\n    # Create a subplot for a trend line (upper right)\n    ax_trend = fig.add_axes([0.5, 0.55, 0.45, 0.35])\n    # Generate synthetic data for the trend line\n    x = np.linspace(0, 10, 200)\n    y = np.sin(x) * np.exp(-0.1 * x)\n    ax_trend.plot(x, y, label='"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX63_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Matplotlib Visual Layout: Sectioned Report",
                                "Data Analysis Report",
                                "Comprehensive Overview of Trends and Metrics",
                                "SUMMARY:",
                                "1. Introduction",
                                "2. Data Overview",
                                "3. Analysis",
                                "4. Conclusion",
                                "sin(x) * exp(-0.1 * x)"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX63_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX63_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed on the overall figure?",
                                "Which two centered headers appear in the header section?",
                                "How is the 'Data Analysis Report' header styled?",
                                "How is the subtitle styled in the header section?",
                                "What labeled sections are included in the left textual summary block?",
                                "In what font style is the summary text rendered?",
                                "What type of visualization is present in the right section?",
                                "What formula is used to compute the y-values in the trend line plot?",
                                "What is the range of x-values used in the trend line plot?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX63_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Matplotlib Visual Layout: Sectioned Report",
                                "Data Analysis Report and Comprehensive Overview of Trends and Metrics",
                                "Prominent, bold, dark blue",
                                "Lighter, smaller gray font",
                                "SUMMARY:, 1. Introduction, 2. Data Overview, 3. Analysis, 4. Conclusion",
                                "Monospace",
                                "Trend line plot",
                                "sin(x) * exp(-0.1 * x)",
                                "0 to 10"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef create_sine_data():\n    x = np.linspace(0, 10, 200)\n    y = np.sin(x)\n    return x, y\n\ndef create_cosine_data():\n    x = np.linspace(0, 10, 200)\n    y = np.cos(x)\n    return x, y\n\ndef create_event_data():\n    # Data for a bar chart: Event frequencies\n    events = ['Event A', 'Event B', 'Event C', 'Event D', 'Event E']\n    frequencies = [23, 35, 12, 29, 41]\n    return events, frequencies\n\ndef plot_sine(ax, x, y):\n    # Section 1: Sine Wave Visualization\n    ax.plot(x, y, label=\"sin(x)\", color='blue', linewidth=2)\n    ax.set_title(\"Section 1: Sine Function\", fontsize=12, fontweight=\"bold\")\n    ax.set_xlabel(\"X-axis (radians)\", fontsize=10)\n    ax.set_ylabel(\"Amplitude\", fontsize=10)\n    ax.legend(loc=\"upper right\")\n    ax.grid(True)\n\ndef plot_cosine(ax, x, y):\n    # Section 2: Cosine Wave Visualization\n    ax.plot(x, y, label=\"cos(x)\", color='red', linestyle='--', linewidth=2)\n    ax.set_title(\"Section 2: Cosine Function\", fontsize=12, fontweight=\"bold\")\n    ax.set_xlabel(\"X-axis (radians)\", fontsize=10)\n    ax.set_ylabel(\"Amplitude\", fontsize=10)\n    ax.legend(loc=\"upper right\")\n    ax.grid(True)\n\ndef plot_combined(ax, x, sine, cosine):\n    # Section 3: Combined Sine and Cosine Functions\n    ax.plot(x, sine, label=\"sin(x)\", color='blue', linewidth=2)\n    ax.plot(x, cosine, label=\"cos(x)\", color='red', linestyle='--', linewidth=2)\n    ax.set_title(\"Section 3: Combined Sine & Cosine\", fontsize=12, fontweight=\"bold\")\n    ax.set_xlabel(\"X-axis (radians)\", fontsize=10)\n    ax.set_ylabel(\"Amplitude\", fontsize=10)\n    ax.legend(loc=\"upper right\")\n    ax.grid(True)\n\ndef plot_event_bar(ax, events, frequencies):\n    # Section 4: Event Frequency Bar Chart\n    bars = ax.bar(events, frequencies, color=['cyan', 'magenta', 'yellow', 'grey', 'lime'])\n    ax.set_title(\"Section 4: Event Frequency Analysis\", fontsize=12, fontweight=\"bold\")\n    ax.set_xlabel(\"Events\", fontsize=10)\n    ax.set_ylabel(\"Frequency\", fontsize=10)\n    ax.grid(axis='y', linestyle='--', alpha=0.7)\n    \n    # Annotate each bar with its value\n    for bar in bars:\n        height = bar.get_height()\n        ax.annotate(f'{height}',\n                    xy=(bar.get_x() + bar.get_width() / 2, height),\n                    xytext=(0, 3),\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom', fontsize=9)\n\ndef print_report_structure():\n    # Print the detailed report structure in the console log\n    structure = \"\"\"\n    ================================\n    Report Structure Overview:\n    -------------------------------\n    1. Main Title: \"Comprehensive Function and Data Analysis Report\"\n    \n    2. Section 1: Sine Function\n       - Graph: Sine wave (sin(x)) measurement\n       - Details: X-axis in radians and amplitude scaling\n    \n    3. Section 2: Cosine Function\n       - Graph: Cosine wave (cos(x)) with a dashed line style\n       - Details: X-axis in radians and amplitude scaling\n    \n    4. Section 3: Combined Analysis\n       - Graph: Both sine and cosine functions in one view for comparison\n       - Overlay with grid lines, legends, and axis labels\n    \n    5. Section 4: Event Frequency Bar Chart\n       - Graph: Bar chart showing frequencies of various events\n       - Details: Includes annotations and grid for Y-axis\n    \n    ================================\n    \"\"\"\n    print(structure)\n\ndef main():\n    # Initialize data for different plots\n    x_sine, sine_values = create_s",
            "feature_requirements": "• The output must include four distinct graphical sections corresponding to each plot: Sine Wave Visualization, Cosine Wave Visualization, Combined Sine & Cosine Functions, and Event Frequency Bar Chart.  \n• Each graph must have an appropriate title displayed (e.g., \"Section 1: Sine Function\", \"Section 2: Cosine Function\", \"Section 3: Combined Sine & Cosine\", \"Section 4: Event Frequency Analysis\") and must visually represent these titles in the output.  \n• The Sine Wave plot must depict a blue curve representing sin(x) with clearly labeled axes (\"X-axis (radians)\" and \"Amplitude\") and must include a legend placed in the upper right corner and grid lines over the plot area.  \n• The Cosine Wave plot must depict a red dashed curve representing cos(x) and include similarly labeled axes, a legend in the upper right, and grid lines over its display.  \n• The Combined plot must overlay both the sine (blue solid line) and cosine (red dashed line) curves on the same axes, include a unified legend indicating both functions, and retain the axis labels and grid lines.  \n• The Bar Chart section must display exactly five bars with the following colors: cyan, magenta, yellow, grey, and lime, each corresponding to an event (\"Event A\" through \"Event E\"), with x-axis labeled as \"Events\" and y-axis labeled as \"Frequency\".  \n• Each bar in the Bar Chart must be annotated with its corresponding numerical value (e.g., 23, 35, 12, 29, 41) visibly placed above the bar.  \n• Grid lines must be included in the Bar Chart, particularly configured for the y-axis (e.g., dashed lines, with visual details such as opacity indicated if applicable).  \n• The overall TikZ output must be organized such that each section’s graphical content is clearly demarcated and resembles the layout described in the input code's report structure overview.",
            "task_id": "08XX64",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "How many distinct graphical sections are included in the output?",
                "What is the title displayed for the sine wave plot?",
                "What are the axis labels for the sine wave plot?",
                "Which color and line style represent the sine wave curve?",
                "How is the cosine wave plot depicted?",
                "What is the title for the cosine wave plot?",
                "How are the sine and cosine functions combined in one plot?",
                "How many bars are shown in the Event Frequency Bar Chart and what colors are used?",
                "What numerical values are annotated above each bar in the bar chart?",
                "What axis labels are displayed in the bar chart?"
            ],
            "VQA_answers": [
                "Four",
                "Section 1: Sine Function",
                "X-axis (radians) and Amplitude",
                "Blue solid line",
                "Red dashed curve with labeled axes and legend",
                "Section 2: Cosine Function",
                "They are overlaid on the same axes with a unified legend, including grid lines and axis labels",
                "Five bars in cyan, magenta, yellow, grey, and lime",
                "23, 35, 12, 29, and 41",
                "Events on the x-axis and Frequency on the y-axis"
            ],
            "raw_output_metric": [
                "Section 1: Sine Function",
                "Section 2: Cosine Function",
                "Section 3: Combined Sine & Cosine",
                "Section 4: Event Frequency Analysis",
                "X-axis (radians)",
                "Amplitude",
                "sin(x)",
                "cos(x)",
                "legend",
                "upper right",
                "blue",
                "red dashed",
                "cyan",
                "magenta",
                "yellow",
                "grey",
                "lime",
                "Event A",
                "Event B",
                "Event C",
                "Event D",
                "Event E",
                "Events",
                "Frequency",
                "23",
                "35",
                "12",
                "29",
                "41",
                "grid"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX64_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef create_sine_data():\n    x = np.linspace(0, 10, 200)\n    y = np.sin(x)\n    return x, y\n\ndef create_cosine_data():\n    x = np.linspace(0, 10, 200)\n    y = np.cos(x)\n    return x, y\n\ndef create_event_data():\n    # Data for a bar chart: Event frequencies\n    events = ['Event A', 'Event B', 'Event C', 'Event D', 'Event E']\n    frequencies = [23, 35, 12, 29, 41]\n    return events, frequencies\n\ndef plot_sine(ax, x, y):\n    # Section 1: Sine Wave Visualization\n    ax.plot(x, y, label=\"sin(x)\", color='blue', linewidth=2)\n    ax.set_title(\"Section 1: Sine Function\", fontsize=12, fontweight=\"bold\")\n    ax.set_xlabel(\"X-axis (radians)\", fontsize=10)\n    ax.set_ylabel(\"Amplitude\", fontsize=10)\n    ax.legend(loc=\"upper right\")\n    ax.grid(True)\n\ndef plot_cosine(ax, x, y):\n    # Section 2: Cosine Wave Visualization\n    ax.plot(x, y, label=\"cos(x)\", color='red', linestyle='--', linewidth=2)\n    ax.set_title(\"Section 2: Cosine Function\", fontsize=12, fontweight=\"bold\")\n    ax.set_xlabel(\"X-axis (radians)\", fontsize=10)\n    ax.set_ylabel(\"Amplitude\", fontsize=10)\n    ax.legend(loc=\"upper right\")\n    ax.grid(True)\n\ndef plot_combined(ax, x, sine, cosine):\n    # Section 3: Combined Sine and Cosine Functions\n    ax.plot(x, sine, label=\"sin(x)\", color='blue', linewidth=2)\n    ax.plot(x, cosine, label=\"cos(x)\", color='red', linestyle='--', linewidth=2)\n    ax.set_title(\"Section 3: Combined Sine & Cosine\", fontsize=12, fontweight=\"bold\")\n    ax.set_xlabel(\"X-axis (radians)\", fontsize=10)\n    ax.set_ylabel(\"Amplitude\", fontsize=10)\n    ax.legend(loc=\"upper right\")\n    ax.grid(True)\n\ndef plot_event_bar(ax, events, frequencies):\n    # Section 4: Event Frequency Bar Chart\n    bars = ax.bar(events, frequencies, color=['cyan', 'magenta', 'yellow', 'grey', 'lime'])\n    ax.set_title(\"Section 4: Event Frequency Analysis\", fontsize=12, fontweight=\"bold\")\n    ax.set_xlabel(\"Events\", fontsize=10)\n    ax.set_ylabel(\"Frequency\", fontsize=10)\n    ax.grid(axis='y', linestyle='--', alpha=0.7)\n    \n    # Annotate each bar with its value\n    for bar in bars:\n        height = bar.get_height()\n        ax.annotate(f'{height}',\n                    xy=(bar.get_x() + bar.get_width() / 2, height),\n                    xytext=(0, 3),\n                    textcoords=\"offset points\",\n                    ha='center', va='bottom', fontsize=9)\n\ndef print_report_structure():\n    # Print the detailed report structure in the console log\n    structure = \"\"\"\n    ================================\n    Report Structure Overview:\n    -------------------------------\n    1. Main Title: \"Comprehensive Function and Data Analysis Report\"\n    \n    2. Section 1: Sine Function\n       - Graph: Sine wave (sin(x)) measurement\n       - Details: X-axis in radians and amplitude scaling\n    \n    3. Section 2: Cosine Function\n       - Graph: Cosine wave (cos(x)) with a dashed line style\n       - Details: X-axis in radians and amplitude scaling\n    \n    4. Section 3: Combined Analysis\n       - Graph: Both sine and cosine functions in one view for comparison\n       - Overlay with grid lines, legends, and axis labels\n    \n    5. Section 4: Event Frequency Bar Chart\n       - Graph: Bar chart showing frequencies of various events\n       - Details: Includes annotations and grid for Y-axis\n    \n    ================================\n    \"\"\"\n    print(structure)\n\ndef main():\n    # Initialize data for different plots\n    x_sine, sine_values = create_s"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX64_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Section 1: Sine Function",
                                "Section 2: Cosine Function",
                                "Section 3: Combined Sine & Cosine",
                                "Section 4: Event Frequency Analysis",
                                "X-axis (radians)",
                                "Amplitude",
                                "sin(x)",
                                "cos(x)",
                                "legend",
                                "upper right",
                                "blue",
                                "red dashed",
                                "cyan",
                                "magenta",
                                "yellow",
                                "grey",
                                "lime",
                                "Event A",
                                "Event B",
                                "Event C",
                                "Event D",
                                "Event E",
                                "Events",
                                "Frequency",
                                "23",
                                "35",
                                "12",
                                "29",
                                "41",
                                "grid"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX64_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX64_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "How many distinct graphical sections are included in the output?",
                                "What is the title displayed for the sine wave plot?",
                                "What are the axis labels for the sine wave plot?",
                                "Which color and line style represent the sine wave curve?",
                                "How is the cosine wave plot depicted?",
                                "What is the title for the cosine wave plot?",
                                "How are the sine and cosine functions combined in one plot?",
                                "How many bars are shown in the Event Frequency Bar Chart and what colors are used?",
                                "What numerical values are annotated above each bar in the bar chart?",
                                "What axis labels are displayed in the bar chart?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX64_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Four",
                                "Section 1: Sine Function",
                                "X-axis (radians) and Amplitude",
                                "Blue solid line",
                                "Red dashed curve with labeled axes and legend",
                                "Section 2: Cosine Function",
                                "They are overlaid on the same axes with a unified legend, including grid lines and axis labels",
                                "Five bars in cyan, magenta, yellow, grey, and lime",
                                "23, 35, 12, 29, and 41",
                                "Events on the x-axis and Frequency on the y-axis"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport numpy as np\n\n#----------------------------\n# Data and Configuration Setup\n#----------------------------\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny_line = np.sin(x)\ny_scatter = np.random.normal(0, 0.8, size=x.size)\nbar_values = np.random.randint(5, 20, size=5)\ncategories = ['A', 'B', 'C', 'D', 'E']\n\n# Create a figure with a GridSpec layout (3 rows, 2 columns)\nfig = plt.figure(figsize=(14, 10))\ngs = gridspec.GridSpec(3, 2, figure=fig, height_ratios=[1, 2, 2], width_ratios=[1, 1])\nfig.suptitle(\"Data Analysis Overview\", fontsize=18, fontweight='bold', color='navy')\n\n#----------------------------\n# Section 1: Summary and Info Panel\n#----------------------------\nax_info = fig.add_subplot(gs[0, :])\nax_info.axis('off')  # No axis needed for information panel\n\n# Display \"Heading\" with details and list items\ninfo_text = (\n    \"SECTION 1: DATA SUMMARY\\n\"\n    \"----------------------------\\n\"\n    \"Key Metrics:\\n\"\n    \"  • Total Observations: {obs}\\n\"\n    \"  • Mean Value (Sine Data): {mean:.2f}\\n\"\n    \"  • Standard Deviation (Scatter Data): {std:.2f}\\n\"\n    \"\\n\"\n    \"Highlights:\\n\"\n    \"  1. Clear sinusoidal trend observed in line data.\\n\"\n    \"  2. Random fluctuations in scatter data indicate noise levels.\\n\"\n    \"  3. Categorical distribution shows variability across groups.\"\n).format(obs=len(x), mean=np.mean(y_line), std=np.std(y_scatter))\nax_info.text(0.02, 0.5, info_text, fontsize=12, fontfamily='monospace', va='center', transform=ax_info.transAxes)\n\n#----------------------------\n# Section 2: Detailed Plots & Table\n#----------------------------\n# Left Panel: Combined Line and Scatter Plot\nax_plot = fig.add_subplot(gs[1, 0])\nax_plot.plot(x, y_line, label='Sinusoidal Signal', color='blue', linewidth=2)\nax_plot.scatter(x, y_scatter, label='Random Noise', color='red', s=15, alpha=0.7)\nax_plot.set_title(\"SECTION 2A: Combined Plot\", fontsize=14, fontweight='bold')\nax_plot.set_xlabel(\"Time\")\nax_plot.set_ylabel(\"Value\")\nax_plot.legend(loc='upper right')\nax_plot.grid(True)\n\n# Right Panel: Bar Chart with Category Data\nax_bar = fig.add_subplot(gs[1, 1])\nbars = ax_bar.bar(categories, bar_values, color='teal', edgecolor='black')\nax_bar.set_title(\"SECTION 2B: Categorical Distribution\", fontsize=14, fontweight='bold')\nax_bar.set_xlabel(\"Category\")\nax_bar.set_ylabel(\"Count\")\nfor bar in bars:\n    height = bar.get_height()\n    ax_bar.annotate(f'{height}', \n                    xy=(bar.get_x() + bar.get_width() / 2, height), \n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\", \n                    ha='center', va='bottom')\n\n#----------------------------\n# Section 3: Metrics and Forecasting\n#----------------------------\n# Left Panel: Metrics Table displayed as Text\nax_table = fig.add_subplot(gs[2, 0])\nax_table.axis('off')  # Hide axis for table display\n\n# Define table content with headers and values\ntable_data = [\n    [\"Metric\", \"Value\"],\n    [\"Max Sine Value\", f\"{np.max(y_line):.2f}\"],\n    [\"Min Sine Value\", f\"{np.min(y_line):.2f}\"],\n    [\"Mean Noise\", f\"{np.mean(y_scatter):.2f}\"],\n    [\"Noise Variance\", f\"{np.var(y_scatter):.2f}\"],\n    [\"Total Categories\", f\"{len(categories)}\"]\n]\n# Create a table-like display using text annotations\ntable_text = \"SECTION 3A: Metrics Overview\\n\" + \"-\"*35 + \"\\n\"\nfor row in table_data:\n    table_text += \"{:<20} :  {}\\n\".format(row[0], row[1])\nax_table.text(0.05, 0.5, table_text, fontsize=12, fontfamily='monospace', va='center')\n\n# Right Panel: Forecasting Plot using Linear Trend Fitting\nax_forecast = fig.add_subplot(gs[2, 1])\n# Simulate forecast data: linear trend with noise\nx_forecast = np.linspace(0, 10, 100)\ntrend = 0.5 * x_forecast + 1\nforecast_noise = np.random.normal(0, 0.5, size=x_forecast.size)\ny_forecast = trend + forecast_noise\n\n# Fit linear model (for demonstration, fit using numpy polyfit)\ncoeffs = np.polyfit(x_forecast, y_forecast, 1)\nfit_line = np.polyval(coeffs, x_forecast)\nax_forecast.plot(x_forecast, y_forecast, 'o', label='Forecast Data', markersize=4, color='darkgreen')\nax_forecast.plot(x_forecast, fit_line, '-', label=f'Linear Fit: y={coeffs[0]:.2f}x+{coeffs[1]:.2f}', color='orange', linewidth=2)\nax_forecast.set_title(\"SECTION 3B: Forecasting Analysis\", fontsize=14, fontweight='bold')\nax_forecast.set_xlabel(\"Time\")\nax_forecast.set_ylabel(\"Forecast Value\")\nax_forecast.legend(loc='upper left')\nax_forecast.grid(alpha=0.5)\n\n#----------------------------\n# Final Layout Adjustments\n#----------------------------\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code>",
            "feature_requirements": "• The output must display a main title \"Data Analysis Overview\" in a prominent header area with a navy color, bold style, and font size approximately 18.  \n• There must be an information panel containing a header \"SECTION 1: DATA SUMMARY\" followed by key metrics (including total observations, mean value, and standard deviation) and a list of highlights, all rendered in a monospaced font and clearly separated from other sections.  \n• A combined plot section (\"SECTION 2A: Combined Plot\") must include a blue sinusoidal line plot labeled \"Sinusoidal Signal\" and a red scatter plot labeled \"Random Noise\" with appropriate axes labels (\"Time\" and \"Value\"), a legend positioned in the upper right, and gridlines.  \n• A bar chart section (\"SECTION 2B: Categorical Distribution\") must display vertical bars for categories labeled A through E, with each bar annotated with its corresponding numerical value, and include axis labels (\"Category\" and \"Count\") and a title with bold styling.  \n• A metrics table section (\"SECTION 3A: Metrics Overview\") must be rendered as text in a monospaced font in a panel without axes, displaying two columns (\"Metric\" and \"Value\") along with rows for various statistics (e.g., max sine value, min sine value, mean noise, noise variance, and total categories) in a table-like format.  \n• A forecasting panel (\"SECTION 3B: Forecasting Analysis\") must include a scatter plot of forecast data points in dark green, a linear fit line in orange with a label that includes the fitted slope and intercept (formatted as y = mx + b), axes labels (\"Time\" and \"Forecast Value\"), a legend positioned in the upper left, and gridlines with reduced opacity.",
            "task_id": "08XX65",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed at the top of the page?",
                "What font styling and color is used for the main title?",
                "Which section contains key metrics including total observations, mean value, and standard deviation?",
                "What plots are featured in the combined plot section (SECTION 2A)?",
                "What are the axes labels for the combined plot section?",
                "Where is the legend positioned in the combined plot section?",
                "How are the bars in the categorical distribution (SECTION 2B) annotated?",
                "Which section displays a table with two columns 'Metric' and 'Value' in a monospaced font without axes?",
                "What elements are included in the forecasting panel (SECTION 3B)?",
                "How are the gridlines styled in the forecasting panel?"
            ],
            "VQA_answers": [
                "Data Analysis Overview",
                "Bold style in navy color with a font size of approximately 18",
                "SECTION 1: DATA SUMMARY",
                "A blue sinusoidal line plot labeled 'Sinusoidal Signal' and a red scatter plot labeled 'Random Noise'",
                "Time and Value",
                "Upper right",
                "Each vertical bar for categories A through E is annotated with its corresponding numerical value",
                "SECTION 3A: Metrics Overview",
                "A scatter plot of forecast data points in dark green and a linear fit line in orange labeled with y = mx + b, with axes labels 'Time' and 'Forecast Value', and a legend positioned in the upper left",
                "They are displayed with reduced opacity"
            ],
            "raw_output_metric": [
                "Data Analysis Overview",
                "SECTION 1: DATA SUMMARY",
                "total observations",
                "mean value",
                "standard deviation",
                "SECTION 2A: Combined Plot",
                "Sinusoidal Signal",
                "Random Noise",
                "Time",
                "Value",
                "SECTION 2B: Categorical Distribution",
                "Category",
                "Count",
                "A",
                "B",
                "C",
                "D",
                "E",
                "SECTION 3A: Metrics Overview",
                "Metric",
                "max sine value",
                "min sine value",
                "mean noise",
                "noise variance",
                "total categories",
                "SECTION 3B: Forecasting Analysis",
                "y = mx + b",
                "Forecast Value",
                "upper right",
                "upper left",
                "gridlines",
                "navy",
                "monospaced",
                "blue",
                "red",
                "dark green",
                "orange"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX65_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nimport numpy as np\n\n#----------------------------\n# Data and Configuration Setup\n#----------------------------\nnp.random.seed(42)\nx = np.linspace(0, 10, 100)\ny_line = np.sin(x)\ny_scatter = np.random.normal(0, 0.8, size=x.size)\nbar_values = np.random.randint(5, 20, size=5)\ncategories = ['A', 'B', 'C', 'D', 'E']\n\n# Create a figure with a GridSpec layout (3 rows, 2 columns)\nfig = plt.figure(figsize=(14, 10))\ngs = gridspec.GridSpec(3, 2, figure=fig, height_ratios=[1, 2, 2], width_ratios=[1, 1])\nfig.suptitle(\"Data Analysis Overview\", fontsize=18, fontweight='bold', color='navy')\n\n#----------------------------\n# Section 1: Summary and Info Panel\n#----------------------------\nax_info = fig.add_subplot(gs[0, :])\nax_info.axis('off')  # No axis needed for information panel\n\n# Display \"Heading\" with details and list items\ninfo_text = (\n    \"SECTION 1: DATA SUMMARY\\n\"\n    \"----------------------------\\n\"\n    \"Key Metrics:\\n\"\n    \"  • Total Observations: {obs}\\n\"\n    \"  • Mean Value (Sine Data): {mean:.2f}\\n\"\n    \"  • Standard Deviation (Scatter Data): {std:.2f}\\n\"\n    \"\\n\"\n    \"Highlights:\\n\"\n    \"  1. Clear sinusoidal trend observed in line data.\\n\"\n    \"  2. Random fluctuations in scatter data indicate noise levels.\\n\"\n    \"  3. Categorical distribution shows variability across groups.\"\n).format(obs=len(x), mean=np.mean(y_line), std=np.std(y_scatter))\nax_info.text(0.02, 0.5, info_text, fontsize=12, fontfamily='monospace', va='center', transform=ax_info.transAxes)\n\n#----------------------------\n# Section 2: Detailed Plots & Table\n#----------------------------\n# Left Panel: Combined Line and Scatter Plot\nax_plot = fig.add_subplot(gs[1, 0])\nax_plot.plot(x, y_line, label='Sinusoidal Signal', color='blue', linewidth=2)\nax_plot.scatter(x, y_scatter, label='Random Noise', color='red', s=15, alpha=0.7)\nax_plot.set_title(\"SECTION 2A: Combined Plot\", fontsize=14, fontweight='bold')\nax_plot.set_xlabel(\"Time\")\nax_plot.set_ylabel(\"Value\")\nax_plot.legend(loc='upper right')\nax_plot.grid(True)\n\n# Right Panel: Bar Chart with Category Data\nax_bar = fig.add_subplot(gs[1, 1])\nbars = ax_bar.bar(categories, bar_values, color='teal', edgecolor='black')\nax_bar.set_title(\"SECTION 2B: Categorical Distribution\", fontsize=14, fontweight='bold')\nax_bar.set_xlabel(\"Category\")\nax_bar.set_ylabel(\"Count\")\nfor bar in bars:\n    height = bar.get_height()\n    ax_bar.annotate(f'{height}', \n                    xy=(bar.get_x() + bar.get_width() / 2, height), \n                    xytext=(0, 3),  # 3 points vertical offset\n                    textcoords=\"offset points\", \n                    ha='center', va='bottom')\n\n#----------------------------\n# Section 3: Metrics and Forecasting\n#----------------------------\n# Left Panel: Metrics Table displayed as Text\nax_table = fig.add_subplot(gs[2, 0])\nax_table.axis('off')  # Hide axis for table display\n\n# Define table content with headers and values\ntable_data = [\n    [\"Metric\", \"Value\"],\n    [\"Max Sine Value\", f\"{np.max(y_line):.2f}\"],\n    [\"Min Sine Value\", f\"{np.min(y_line):.2f}\"],\n    [\"Mean Noise\", f\"{np.mean(y_scatter):.2f}\"],\n    [\"Noise Variance\", f\"{np.var(y_scatter):.2f}\"],\n    [\"Total Categories\", f\"{len(categories)}\"]\n]\n# Create a table-like display using text annotations\ntable_text = \"SECTION 3A: Metrics Overview\\n\" + \"-\"*35 + \"\\n\"\nfor row in table_data:\n    table_text += \"{:<20} :  {}\\n\".format(row[0], row[1])\nax_table.text(0.05, 0.5, table_text, fontsize=12, fontfamily='monospace', va='center')\n\n# Right Panel: Forecasting Plot using Linear Trend Fitting\nax_forecast = fig.add_subplot(gs[2, 1])\n# Simulate forecast data: linear trend with noise\nx_forecast = np.linspace(0, 10, 100)\ntrend = 0.5 * x_forecast + 1\nforecast_noise = np.random.normal(0, 0.5, size=x_forecast.size)\ny_forecast = trend + forecast_noise\n\n# Fit linear model (for demonstration, fit using numpy polyfit)\ncoeffs = np.polyfit(x_forecast, y_forecast, 1)\nfit_line = np.polyval(coeffs, x_forecast)\nax_forecast.plot(x_forecast, y_forecast, 'o', label='Forecast Data', markersize=4, color='darkgreen')\nax_forecast.plot(x_forecast, fit_line, '-', label=f'Linear Fit: y={coeffs[0]:.2f}x+{coeffs[1]:.2f}', color='orange', linewidth=2)\nax_forecast.set_title(\"SECTION 3B: Forecasting Analysis\", fontsize=14, fontweight='bold')\nax_forecast.set_xlabel(\"Time\")\nax_forecast.set_ylabel(\"Forecast Value\")\nax_forecast.legend(loc='upper left')\nax_forecast.grid(alpha=0.5)\n\n#----------------------------\n# Final Layout Adjustments\n#----------------------------\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX65_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data Analysis Overview",
                                "SECTION 1: DATA SUMMARY",
                                "total observations",
                                "mean value",
                                "standard deviation",
                                "SECTION 2A: Combined Plot",
                                "Sinusoidal Signal",
                                "Random Noise",
                                "Time",
                                "Value",
                                "SECTION 2B: Categorical Distribution",
                                "Category",
                                "Count",
                                "A",
                                "B",
                                "C",
                                "D",
                                "E",
                                "SECTION 3A: Metrics Overview",
                                "Metric",
                                "max sine value",
                                "min sine value",
                                "mean noise",
                                "noise variance",
                                "total categories",
                                "SECTION 3B: Forecasting Analysis",
                                "y = mx + b",
                                "Forecast Value",
                                "upper right",
                                "upper left",
                                "gridlines",
                                "navy",
                                "monospaced",
                                "blue",
                                "red",
                                "dark green",
                                "orange"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX65_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX65_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed at the top of the page?",
                                "What font styling and color is used for the main title?",
                                "Which section contains key metrics including total observations, mean value, and standard deviation?",
                                "What plots are featured in the combined plot section (SECTION 2A)?",
                                "What are the axes labels for the combined plot section?",
                                "Where is the legend positioned in the combined plot section?",
                                "How are the bars in the categorical distribution (SECTION 2B) annotated?",
                                "Which section displays a table with two columns 'Metric' and 'Value' in a monospaced font without axes?",
                                "What elements are included in the forecasting panel (SECTION 3B)?",
                                "How are the gridlines styled in the forecasting panel?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX65_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data Analysis Overview",
                                "Bold style in navy color with a font size of approximately 18",
                                "SECTION 1: DATA SUMMARY",
                                "A blue sinusoidal line plot labeled 'Sinusoidal Signal' and a red scatter plot labeled 'Random Noise'",
                                "Time and Value",
                                "Upper right",
                                "Each vertical bar for categories A through E is annotated with its corresponding numerical value",
                                "SECTION 3A: Metrics Overview",
                                "A scatter plot of forecast data points in dark green and a linear fit line in orange labeled with y = mx + b, with axes labels 'Time' and 'Forecast Value', and a legend positioned in the upper left",
                                "They are displayed with reduced opacity"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef main():\n    # Create the main figure with a constrained layout\n    fig = plt.figure(constrained_layout=True, figsize=(12, 10))\n    \n    # Define a grid specification for structured layout (3 rows x 2 columns)\n    gs = fig.add_gridspec(3, 2)\n    \n    # Create subplots according to our grid:\n    # - ax_title: for the report's title and description (spanning both columns)\n    # - ax_plot: for a line chart analysis (first column of row 2)\n    # - ax_scatter: for a scatter plot (second column of row 2)\n    # - ax_bar: for a bar chart summary (spanning row 3)\n    ax_title = fig.add_subplot(gs[0, :])\n    ax_plot = fig.add_subplot(gs[1, 0])\n    ax_scatter = fig.add_subplot(gs[1, 1])\n    ax_bar = fig.add_subplot(gs[2, :])\n    \n    # Hide the axis for the title section since it's just text\n    ax_title.axis('off')\n    \n    # Section 1: Title and Overview\n    title_text = \"Report: Analysis of Synthetic Data Visualization\\n\"\n    subtitle_text = \"Section I: Data Overview and Visualization\\n\"\n    description = (\n       \"This report demonstrates the use of Matplotlib for creating structured visualizations.\\n\"\n       \"It includes the following sections:\\n\"\n       \"  • Line Chart Analysis\\n\"\n       \"  • Scatter Plot Relationship\\n\"\n       \"  • Bar Chart Summary\\n\"\n       \"\\nKey Highlights:\\n\"\n       \"    - Structured layout with multiple subplots\\n\"\n       \"    - Annotations and labeled values\\n\"\n       \"    - Custom styling for clarity\\n\"\n    )\n    \n    # Add text with different formatting to simulate headings, subheadings, and body content\n    ax_title.text(0.5, 0.8, title_text, ha='center', va='center',\n                  fontsize=20, fontweight='bold')\n    ax_title.text(0.5, 0.6, subtitle_text, ha='center', va='center',\n                  fontsize=14, style='italic')\n    ax_title.text(0.5, 0.3, description, ha='center', va='center',\n                  fontsize=10, linespacing=1.5)\n    \n    # Section 2: Line Chart Analysis\n    # Generate x values and compute a sine function\n    x = np.linspace(0, 10, 100)\n    y = np.sin(x)\n    ax_plot.plot(x, y, color='blue', linewidth=2, label",
            "feature_requirements": "• The output must visually organize the content into a grid-like layout with three rows: a top row spanning both columns for the title, a middle row split into a left section for the line chart and a right section for a scatter plot, and a bottom row spanning both columns for a bar chart.  \n• The title section must include a centered, bold heading reading “Report: Analysis of Synthetic Data Visualization” in a larger font size, accompanied by a centered, italic subheading “Section I: Data Overview and Visualization,” followed by a block of descriptive text.  \n• The descriptive text in the title section must list key features (such as “Line Chart Analysis”, “Scatter Plot Relationship”, and “Bar Chart Summary”) and include a note on structured layout, annotations, and custom styling.  \n• The line chart section must display a plotted sine curve generated from x values in the range 0 to 10 (sampled at 100 points) and rendered as a blue line with a visibly thicker stroke.  \n• There must be clearly defined placeholders or regions for the scatter plot and bar chart sections, ensuring that the overall multi-panel layout is evident and each section is distinct.  \n• The TikZ code must place text nodes and drawing elements appropriately to mimic the spatial arrangement and style of the original Matplotlib figure, ensuring that the relative sizes and positions of the title, plot, and placeholder regions are verifiable visually.",
            "task_id": "08XX66",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title text displayed at the top of the layout?",
                "What is the subheading text displayed below the main title?",
                "How many rows are in the overall grid layout?",
                "What is the layout of the middle row?",
                "What is plotted in the left section of the middle row?",
                "What type of plot is indicated in the bottom row of the layout?",
                "Which key features are listed in the descriptive text of the title section?",
                "What note is included in the descriptive text regarding the overall design?"
            ],
            "VQA_answers": [
                "Report: Analysis of Synthetic Data Visualization",
                "Section I: Data Overview and Visualization",
                "Three",
                "Left section for the line chart and right section for the scatter plot",
                "A sine curve generated from x values between 0 and 10 using 100 sample points, rendered in blue with a thicker stroke",
                "A bar chart",
                "Line Chart Analysis, Scatter Plot Relationship, Bar Chart Summary",
                "A note on structured layout, annotations, and custom styling"
            ],
            "raw_output_metric": [
                "Report: Analysis of Synthetic Data Visualization",
                "Section I: Data Overview and Visualization",
                "Line Chart Analysis",
                "Scatter Plot Relationship",
                "Bar Chart Summary",
                "sine curve",
                "0 to 10",
                "100 points",
                "blue line",
                "thicker stroke",
                "structured layout",
                "annotations",
                "custom styling"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX66_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef main():\n    # Create the main figure with a constrained layout\n    fig = plt.figure(constrained_layout=True, figsize=(12, 10))\n    \n    # Define a grid specification for structured layout (3 rows x 2 columns)\n    gs = fig.add_gridspec(3, 2)\n    \n    # Create subplots according to our grid:\n    # - ax_title: for the report's title and description (spanning both columns)\n    # - ax_plot: for a line chart analysis (first column of row 2)\n    # - ax_scatter: for a scatter plot (second column of row 2)\n    # - ax_bar: for a bar chart summary (spanning row 3)\n    ax_title = fig.add_subplot(gs[0, :])\n    ax_plot = fig.add_subplot(gs[1, 0])\n    ax_scatter = fig.add_subplot(gs[1, 1])\n    ax_bar = fig.add_subplot(gs[2, :])\n    \n    # Hide the axis for the title section since it's just text\n    ax_title.axis('off')\n    \n    # Section 1: Title and Overview\n    title_text = \"Report: Analysis of Synthetic Data Visualization\\n\"\n    subtitle_text = \"Section I: Data Overview and Visualization\\n\"\n    description = (\n       \"This report demonstrates the use of Matplotlib for creating structured visualizations.\\n\"\n       \"It includes the following sections:\\n\"\n       \"  • Line Chart Analysis\\n\"\n       \"  • Scatter Plot Relationship\\n\"\n       \"  • Bar Chart Summary\\n\"\n       \"\\nKey Highlights:\\n\"\n       \"    - Structured layout with multiple subplots\\n\"\n       \"    - Annotations and labeled values\\n\"\n       \"    - Custom styling for clarity\\n\"\n    )\n    \n    # Add text with different formatting to simulate headings, subheadings, and body content\n    ax_title.text(0.5, 0.8, title_text, ha='center', va='center',\n                  fontsize=20, fontweight='bold')\n    ax_title.text(0.5, 0.6, subtitle_text, ha='center', va='center',\n                  fontsize=14, style='italic')\n    ax_title.text(0.5, 0.3, description, ha='center', va='center',\n                  fontsize=10, linespacing=1.5)\n    \n    # Section 2: Line Chart Analysis\n    # Generate x values and compute a sine function\n    x = np.linspace(0, 10, 100)\n    y = np.sin(x)\n    ax_plot.plot(x, y, color='blue', linewidth=2, label"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX66_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Report: Analysis of Synthetic Data Visualization",
                                "Section I: Data Overview and Visualization",
                                "Line Chart Analysis",
                                "Scatter Plot Relationship",
                                "Bar Chart Summary",
                                "sine curve",
                                "0 to 10",
                                "100 points",
                                "blue line",
                                "thicker stroke",
                                "structured layout",
                                "annotations",
                                "custom styling"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX66_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX66_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title text displayed at the top of the layout?",
                                "What is the subheading text displayed below the main title?",
                                "How many rows are in the overall grid layout?",
                                "What is the layout of the middle row?",
                                "What is plotted in the left section of the middle row?",
                                "What type of plot is indicated in the bottom row of the layout?",
                                "Which key features are listed in the descriptive text of the title section?",
                                "What note is included in the descriptive text regarding the overall design?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX66_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Report: Analysis of Synthetic Data Visualization",
                                "Section I: Data Overview and Visualization",
                                "Three",
                                "Left section for the line chart and right section for the scatter plot",
                                "A sine curve generated from x values between 0 and 10 using 100 sample points, rendered in blue with a thicker stroke",
                                "A bar chart",
                                "Line Chart Analysis, Scatter Plot Relationship, Bar Chart Summary",
                                "A note on structured layout, annotations, and custom styling"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ------------------------------------------------------------------------------\n# Data Generation Section\n# ------------------------------------------------------------------------------\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\ny_tan = np.tan(x)\n# Limit extreme tan values for better visualization\ny_tan[np.abs(y_tan) > 10] = np.nan\n\n# ------------------------------------------------------------------------------\n# Create Figure and Overall Heading\n# ------------------------------------------------------------------------------\nfig = plt.figure(figsize=(12, 10))\nplt.suptitle(\"Comprehensive Data Analysis Report\\nMain Heading: Trigonometric Functions\", fontsize=16, fontweight=\"bold\")\n\n# ------------------------------------------------------------------------------\n# Section 1: Basic Trigonometric Plots\n# ------------------------------------------------------------------------------\n# Subplot 1: Sine Plot\nax1 = fig.add_subplot(2, 2, 1)\nax1.plot(x, y_sin, marker=\"o\", linestyle=\"-\", color=\"blue\", label=\"sin(x)\")\nax1.set_title(\"Section 1.1: Sine Function\", fontsize=12, fontweight=\"bold\")\nax1.set_xlabel(\"X Values\")\nax1.set_ylabel(\"sin(x)\")\nax1.legend(loc=\"upper right\")\nax1.grid(True)\n\n# Subplot 2: Cosine Plot\nax2 = fig.add_subplot(2, 2, 2)\nax2.plot(x, y_cos, marker=\"d\", linestyle=\"--\", color=\"green\", label=\"cos(x)\")\nax2.set_title(\"Section 1.2: Cosine Function\", fontsize=12, fontweight=\"bold\")\nax2.set_xlabel(\"X Values\")\nax2.set_ylabel(\"cos(x)\")\nax2.legend(loc=\"upper right\")\nax2.grid(True)\n\n# ------------------------------------------------------------------------------\n# Section 2: Tangent Function Analysis with Annotations\n# ------------------------------------------------------------------------------\nax3 = fig.add_subplot(2, 1, 2)\nax3.plot(x, y_tan, linestyle=\"-\", color=\"red\", label=\"tan(x)\")\nax3.set_title(\"Section 2: Tangent Function (Limited Range)\", fontsize=12, fontweight=\"bold\")\nax3.set_xlabel(\"X Values\")\nax3.set_ylabel(\"tan(x)\")\nax3.legend(loc=\"upper right\")\nax3.grid(True)\n\n# Annotate a crucial peak of the tangent plot.\n# Find the peak value (ignoring NaNs)\ntry:\n    peak_index = np.nanargmax(np.abs(y_tan))\n    peak_x = x[peak_index]\n    peak_y = y_tan[peak_index]\n    ax3.annotate(\"Peak Value\", xy=(peak_x, peak_y), xytext=(peak_x+1, peak_y),\n                 arrowprops=dict(facecolor=\"black\", shrink=0.05), fontsize=10)\nexcept ValueError:\n    pass  # In case y_tan is empty or non-applicable\n\n# ------------------------------------------------------------------------------\n# Additional Textual Content and Statistics Box (List and Values)\n# ------------------------------------------------------------------------------\ntext_summary = \"\\n\".join((\n    \"Summary:\",\n    \"--------------------------\",\n    \"1. sin(x) and cos(x) exhibit classic periodic behavior.\",\n    \"2. tan(x) shows asymptotic trends near odd multiples of pi/2.\",\n    \"3. Data generated using NumPy functions.\",\n    \"4. Plots incorporate grids, legends, and clear annotations.\"\n))\n# Create a textbox in the tangent subplot\nprops = dict(boxstyle=\"round\", facecolor=\"wheat\", alpha=0.5)\nax3.text(0.02, 0.95, text_summary, transform=ax3.transAxes, fontsize=10,\n         verticalalignment=\"top\", bbox=props)\n\n# Compute basic statistics for the plots\nstat_text = (\n    \"Statistics:\\n\"\n    \"------------------\\n\"\n    \"Sine\\n\"\n    \"  Mean: {:.2f}\\n\"\n    \"  Std:  {:.2f}\\n\"\n    \"Cosine\\n\"\n    \"  Mean: {:.2f}\\n\"\n    \"  Std:  {:.2f}\\n\"\n    \"Tangent (|value| < 10)\\n\"\n    \"  Mean: {:.2f}\\n\"\n    \"  Std:  {:.2f}\"\n).format(np.mean(y_sin), np.std(y_sin),\n         np.mean(y_cos), np.std(y_cos),\n         np.nanmean(y_tan), np.nanstd(y_tan))\n\n# Render the statistics as a figure-wide text box\nplt.figtext(0.7, 0.5,",
            "feature_requirements": "• The output must include an overall title at the top of the figure that reads \"Comprehensive Data Analysis Report\" on one line and \"Main Heading: Trigonometric Functions\" on the next, using a large, bold font.\n\n• The output must render three clear plot sections: two subplots arranged side by side (one for the sine function and one for the cosine function) in the top portion, and a larger subplot for the tangent function in the bottom portion.\n\n• The sine plot must display a blue line with circular markers labeled \"sin(x)\", include the title \"Section 1.1: Sine Function\" in a bold, moderately sized font, and show \"X Values\" and \"sin(x)\" as the respective x-axis and y-axis labels, along with an upper-right positioned legend and a grid.\n\n• The cosine plot must display a green dashed line with diamond markers labeled \"cos(x)\", include the title \"Section 1.2: Cosine Function\" in a bold, moderately sized font, and have \"X Values\" and \"cos(x)\" as the respective axis labels, along with an upper-right positioned legend and a grid.\n\n• The tangent plot must display a red line labeled \"tan(x)\", include the title \"Section 2: Tangent Function (Limited Range)\" in a bold, moderately sized font, and show \"X Values\" and \"tan(x)\" as its axis labels, along with an upper-right positioned legend and a grid; extreme tangent values should be omitted (represented as breaks or gaps in the plot).\n\n• Within the tangent plot, there must be an annotation marked \"Peak Value\" with an arrow pointing from the identified peak point on the tangent curve to a nearby text description.\n\n• The tangent subplot must also include an inset text box (with a rounded, wheat-colored background and partial transparency) that displays a multi-line summary list containing points about the behavior of sin(x), cos(x), and tan(x), as well as notes on data generation and plot features.\n\n• A separate figure-wide text box displaying formatted statistics must be present, including headers and values (formatted to two decimal places) for the mean and standard deviation of the sine, cosine, and tangent data (for tangent, only values with absolute value less than 10).",
            "task_id": "08XX67",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the first line of the overall title at the top of the figure?",
                "What is the second line of the overall title?",
                "How many top subplots are shown, and which functions do they represent?",
                "What line style and markers are used for the sine function plot?",
                "What title is displayed on the cosine plot and what style is it?",
                "Which axis labels are set for the tangent plot?",
                "Where is the legend positioned in each of the subplots?",
                "What annotation is included in the tangent plot and what does it indicate?",
                "What special graphical element appears within the tangent subplot?",
                "What statistical details are provided in the separate figure-wide text box?"
            ],
            "VQA_answers": [
                "Comprehensive Data Analysis Report",
                "Main Heading: Trigonometric Functions",
                "2 subplots representing sin(x) and cos(x)",
                "Blue line with circular markers",
                "Section 1.2: Cosine Function in bold, moderately sized font",
                "X Values for x-axis and tan(x) for y-axis",
                "Upper-right position",
                "An annotation labeled 'Peak Value' with an arrow pointing to the peak of the tangent curve",
                "An inset text box with a rounded, wheat-colored background and partial transparency displaying a multi-line summary list",
                "Formatted headers and values for the mean and standard deviation of sine, cosine, and tangent (only values where |tan(x)| < 10), each formatted to two decimal places"
            ],
            "raw_output_metric": [
                "Comprehensive Data Analysis Report",
                "Main Heading: Trigonometric Functions",
                "Section 1.1: Sine Function",
                "Section 1.2: Cosine Function",
                "Section 2: Tangent Function (Limited Range)",
                "sin(x)",
                "cos(x)",
                "tan(x)",
                "X Values",
                "Peak Value",
                "legend",
                "grid",
                "circular markers",
                "diamond markers",
                "blue",
                "green dashed",
                "red",
                "rounded, wheat-colored",
                "partial transparency",
                "mean",
                "standard deviation",
                "formatted to two decimal places",
                "inset text box"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX67_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ------------------------------------------------------------------------------\n# Data Generation Section\n# ------------------------------------------------------------------------------\nx = np.linspace(0, 10, 100)\ny_sin = np.sin(x)\ny_cos = np.cos(x)\ny_tan = np.tan(x)\n# Limit extreme tan values for better visualization\ny_tan[np.abs(y_tan) > 10] = np.nan\n\n# ------------------------------------------------------------------------------\n# Create Figure and Overall Heading\n# ------------------------------------------------------------------------------\nfig = plt.figure(figsize=(12, 10))\nplt.suptitle(\"Comprehensive Data Analysis Report\\nMain Heading: Trigonometric Functions\", fontsize=16, fontweight=\"bold\")\n\n# ------------------------------------------------------------------------------\n# Section 1: Basic Trigonometric Plots\n# ------------------------------------------------------------------------------\n# Subplot 1: Sine Plot\nax1 = fig.add_subplot(2, 2, 1)\nax1.plot(x, y_sin, marker=\"o\", linestyle=\"-\", color=\"blue\", label=\"sin(x)\")\nax1.set_title(\"Section 1.1: Sine Function\", fontsize=12, fontweight=\"bold\")\nax1.set_xlabel(\"X Values\")\nax1.set_ylabel(\"sin(x)\")\nax1.legend(loc=\"upper right\")\nax1.grid(True)\n\n# Subplot 2: Cosine Plot\nax2 = fig.add_subplot(2, 2, 2)\nax2.plot(x, y_cos, marker=\"d\", linestyle=\"--\", color=\"green\", label=\"cos(x)\")\nax2.set_title(\"Section 1.2: Cosine Function\", fontsize=12, fontweight=\"bold\")\nax2.set_xlabel(\"X Values\")\nax2.set_ylabel(\"cos(x)\")\nax2.legend(loc=\"upper right\")\nax2.grid(True)\n\n# ------------------------------------------------------------------------------\n# Section 2: Tangent Function Analysis with Annotations\n# ------------------------------------------------------------------------------\nax3 = fig.add_subplot(2, 1, 2)\nax3.plot(x, y_tan, linestyle=\"-\", color=\"red\", label=\"tan(x)\")\nax3.set_title(\"Section 2: Tangent Function (Limited Range)\", fontsize=12, fontweight=\"bold\")\nax3.set_xlabel(\"X Values\")\nax3.set_ylabel(\"tan(x)\")\nax3.legend(loc=\"upper right\")\nax3.grid(True)\n\n# Annotate a crucial peak of the tangent plot.\n# Find the peak value (ignoring NaNs)\ntry:\n    peak_index = np.nanargmax(np.abs(y_tan))\n    peak_x = x[peak_index]\n    peak_y = y_tan[peak_index]\n    ax3.annotate(\"Peak Value\", xy=(peak_x, peak_y), xytext=(peak_x+1, peak_y),\n                 arrowprops=dict(facecolor=\"black\", shrink=0.05), fontsize=10)\nexcept ValueError:\n    pass  # In case y_tan is empty or non-applicable\n\n# ------------------------------------------------------------------------------\n# Additional Textual Content and Statistics Box (List and Values)\n# ------------------------------------------------------------------------------\ntext_summary = \"\\n\".join((\n    \"Summary:\",\n    \"--------------------------\",\n    \"1. sin(x) and cos(x) exhibit classic periodic behavior.\",\n    \"2. tan(x) shows asymptotic trends near odd multiples of pi/2.\",\n    \"3. Data generated using NumPy functions.\",\n    \"4. Plots incorporate grids, legends, and clear annotations.\"\n))\n# Create a textbox in the tangent subplot\nprops = dict(boxstyle=\"round\", facecolor=\"wheat\", alpha=0.5)\nax3.text(0.02, 0.95, text_summary, transform=ax3.transAxes, fontsize=10,\n         verticalalignment=\"top\", bbox=props)\n\n# Compute basic statistics for the plots\nstat_text = (\n    \"Statistics:\\n\"\n    \"------------------\\n\"\n    \"Sine\\n\"\n    \"  Mean: {:.2f}\\n\"\n    \"  Std:  {:.2f}\\n\"\n    \"Cosine\\n\"\n    \"  Mean: {:.2f}\\n\"\n    \"  Std:  {:.2f}\\n\"\n    \"Tangent (|value| < 10)\\n\"\n    \"  Mean: {:.2f}\\n\"\n    \"  Std:  {:.2f}\"\n).format(np.mean(y_sin), np.std(y_sin),\n         np.mean(y_cos), np.std(y_cos),\n         np.nanmean(y_tan), np.nanstd(y_tan))\n\n# Render the statistics as a figure-wide text box\nplt.figtext(0.7, 0.5,"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX67_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Analysis Report",
                                "Main Heading: Trigonometric Functions",
                                "Section 1.1: Sine Function",
                                "Section 1.2: Cosine Function",
                                "Section 2: Tangent Function (Limited Range)",
                                "sin(x)",
                                "cos(x)",
                                "tan(x)",
                                "X Values",
                                "Peak Value",
                                "legend",
                                "grid",
                                "circular markers",
                                "diamond markers",
                                "blue",
                                "green dashed",
                                "red",
                                "rounded, wheat-colored",
                                "partial transparency",
                                "mean",
                                "standard deviation",
                                "formatted to two decimal places",
                                "inset text box"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX67_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX67_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the first line of the overall title at the top of the figure?",
                                "What is the second line of the overall title?",
                                "How many top subplots are shown, and which functions do they represent?",
                                "What line style and markers are used for the sine function plot?",
                                "What title is displayed on the cosine plot and what style is it?",
                                "Which axis labels are set for the tangent plot?",
                                "Where is the legend positioned in each of the subplots?",
                                "What annotation is included in the tangent plot and what does it indicate?",
                                "What special graphical element appears within the tangent subplot?",
                                "What statistical details are provided in the separate figure-wide text box?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX67_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Data Analysis Report",
                                "Main Heading: Trigonometric Functions",
                                "2 subplots representing sin(x) and cos(x)",
                                "Blue line with circular markers",
                                "Section 1.2: Cosine Function in bold, moderately sized font",
                                "X Values for x-axis and tan(x) for y-axis",
                                "Upper-right position",
                                "An annotation labeled 'Peak Value' with an arrow pointing to the peak of the tangent curve",
                                "An inset text box with a rounded, wheat-colored background and partial transparency displaying a multi-line summary list",
                                "Formatted headers and values for the mean and standard deviation of sine, cosine, and tangent (only values where |tan(x)| < 10), each formatted to two decimal places"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ============================== #\n# Initialize the Figure and Subplots\n# ============================== #\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle('Matplotlib Structural Layout Example', fontsize=18, fontweight='bold')\n\n# --------------------------------------------------\n# Section 1: Line Chart with Annotations and Labels\n# --------------------------------------------------\nax1 = axs[0, 0]\nx = np.linspace(0, 10, 200)\ny = np.sin(x)\nax1.plot(x, y, label='Sine Wave', color='blue', linewidth=2)\n\n# Add horizontal line for baseline reference\nax1.axhline(0, color='gray', linestyle='--', linewidth=0.8)\n\n# Set titles and labels with detailed formatting\nax1.set_title('Section 1: Overview - Sine Wave Analysis', fontsize=14, fontweight='bold')\nax1.set_xlabel('Time (s)', fontsize=12)\nax1.set_ylabel('Amplitude', fontsize=12)\nax1.legend(loc='upper right', fontsize=10)\n\n# Add descriptive text annotations in the plot area\nax1.text(2, 0.8, 'Peak ~ 1.0', fontsize=10, bbox=dict(facecolor='white', alpha=0.7, edgecolor='black'))\nax1.text(2, -0.9, 'Trough ~ -1.0', fontsize=10, bbox=dict(facecolor='white', alpha=0.7, edgecolor='black'))\n\n# --------------------------------------------------\n# Section 2: Bar Chart with Labeled Values\n# --------------------------------------------------\nax2 = axs[0, 1]\ncategories = ['Category A', 'Category B', 'Category C', 'Category D']\nvalues = [23, 17, 35, 29]\nbars = ax2.bar(categories, values, color='skyblue', edgecolor='black')\n\n# Set titles and labels for bar chart\nax2.set_title('Section 2: Details - Categorized Data', fontsize=14, fontweight='bold')\nax2.set_ylabel('Frequency', fontsize=12)\n\n# Annotate each bar with its value\nfor bar, value in zip(bars, values):\n    height = bar.get_height()\n    ax2.text(bar.get_x() + bar.get_width() / 2, height + 1, f'{value}',\n             ha='center', va='bottom', fontsize=10, color='darkblue')\n\n# --------------------------------------------------\n# Section 3: Scatter Plot with Detailed Labels and Lists\n# --------------------------------------------------\nax3 = axs[1, 0]\nnp.random.seed(42)  # For reproducibility\nx_scatter = np.random.rand(50)\ny_scatter = np.random.rand(50)\nsizes = np.random.rand(50) * 300  # Variable sizes for scatter points\n\nscatter = ax3.scatter(x_scatter, y_scatter, s=sizes, c=x_scatter + y_scatter,\n                      cmap='viridis', alpha=0.6, edgecolors='black')\n\nax3.set_title('Section 3: Analysis - Scatter Distribution', fontsize=14, fontweight='bold')\nax3.set_xlabel('Random X', fontsize=12)\nax3.set_ylabel('Random Y', fontsize=12)\n\n# Adding a legend-like text box with a list of key points\nkey_points = [\n    \"Key Points:\",\n    \"1. Random distribution across [0,1]\",\n    \"2. Varying point sizes\",\n    \"3. Color gradient based on sum of X and Y\"\n]\nkey_text = \"\\n\".join(key_points)\nax3.text(0.65, 0.95, key_text, transform=ax3.transAxes, fontsize=10,\n         verticalalignment='top', bbox=dict(boxstyle='round', facecolor='wheat', alpha=0.7))\n\n# --------------------------------------------------\n# Section 4: Multi-line Text and Detailed Damped Oscillation Plot\n# --------------------------------------------------\nax4 = axs[1, 1]\nx_vals = np.linspace(0, 5, 100)\n# Damped oscillation: exponential decay times cosine\ny_vals = np.exp(-x_vals) * np.cos(2 * x_vals)\nax4.plot(x_vals, y_vals, 'm-', label='Damped Oscillation', linewidth=2)\n\nax4.set_title('Section 4: Damped Oscillation Analysis', fontsize=14, fontweight='bold')\nax4.set_xlabel('Time (s)', fontsize=12",
            "feature_requirements": "- The output must include a main title at the top indicating the overall figure title.\n- The output must arrange four subplots in a 2×2 grid layout.\n- The first subplot must display a sine curve with a line plot, including a horizontal dotted line at y = 0.\n- The first subplot must include textual annotations near the sine curve (e.g., \"Peak ~ 1.0\" and \"Trough ~ -1.0\") with a styled background resembling a white box with a border.\n- The second subplot must represent a bar chart with four bars labeled with categories and annotated with their corresponding numerical values at the top of each bar.\n- The third subplot must render a scatter plot consisting of 50 points with variable sizes and a color gradient based on the sum of x and y coordinates.\n- The third subplot must contain a text box that lists key points in a multi-line, bullet-style or numbered text block.\n- The fourth subplot must illustrate a damped oscillation line plot, depicting an exponential decay modulated by a cosine function.\n- All subplots must include properly labeled x and y axes as well as individual titles with distinctive styling (e.g., bold).\n- The overall layout and text elements must be rendered clearly as visual components similar to those in a typical matplotlib figure layout.",
            "task_id": "08XX68",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is displayed as the main title at the top of the figure?",
                "How many subplots are arranged in the layout?",
                "What type of curve is shown in the first subplot?",
                "What line style is used at y = 0 in the first subplot?",
                "How are the textual annotations near the sine curve styled?",
                "How many bars are in the second subplot’s bar chart?",
                "What information is annotated on top of each bar in the bar chart?",
                "What distinctive styling is applied to the titles of each subplot?",
                "What additional text element is present in the third subplot?",
                "What does the fourth subplot illustrate?"
            ],
            "VQA_answers": [
                "An overall figure title",
                "Four",
                "A sine curve",
                "A horizontal dotted line",
                "They have a white box background with a border",
                "Four",
                "Their corresponding numerical values",
                "Bold styling",
                "A multi-line text box listing key points in bullet or numbered style",
                "A damped oscillation line plot (exponential decay modulated by a cosine function)"
            ],
            "raw_output_metric": [
                "Main Title",
                "2x2 grid",
                "sine",
                "Peak ~ 1.0",
                "Trough ~ -1.0",
                "dotted",
                "bar chart",
                "four bars",
                "categories",
                "numerical values",
                "scatter plot",
                "50 points",
                "variable sizes",
                "color gradient",
                "text box",
                "bullet",
                "damped oscillation",
                "exponential decay",
                "cosine",
                "xlabel",
                "ylabel",
                "bold",
                "TikZ"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX68_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ============================== #\n# Initialize the Figure and Subplots\n# ============================== #\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.suptitle('Matplotlib Structural Layout Example', fontsize=18, fontweight='bold')\n\n# --------------------------------------------------\n# Section 1: Line Chart with Annotations and Labels\n# --------------------------------------------------\nax1 = axs[0, 0]\nx = np.linspace(0, 10, 200)\ny = np.sin(x)\nax1.plot(x, y, label='Sine Wave', color='blue', linewidth=2)\n\n# Add horizontal line for baseline reference\nax1.axhline(0, color='gray', linestyle='--', linewidth=0.8)\n\n# Set titles and labels with detailed formatting\nax1.set_title('Section 1: Overview - Sine Wave Analysis', fontsize=14, fontweight='bold')\nax1.set_xlabel('Time (s)', fontsize=12)\nax1.set_ylabel('Amplitude', fontsize=12)\nax1.legend(loc='upper right', fontsize=10)\n\n# Add descriptive text annotations in the plot area\nax1.text(2, 0.8, 'Peak ~ 1.0', fontsize=10, bbox=dict(facecolor='white', alpha=0.7, edgecolor='black'))\nax1.text(2, -0.9, 'Trough ~ -1.0', fontsize=10, bbox=dict(facecolor='white', alpha=0.7, edgecolor='black'))\n\n# --------------------------------------------------\n# Section 2: Bar Chart with Labeled Values\n# --------------------------------------------------\nax2 = axs[0, 1]\ncategories = ['Category A', 'Category B', 'Category C', 'Category D']\nvalues = [23, 17, 35, 29]\nbars = ax2.bar(categories, values, color='skyblue', edgecolor='black')\n\n# Set titles and labels for bar chart\nax2.set_title('Section 2: Details - Categorized Data', fontsize=14, fontweight='bold')\nax2.set_ylabel('Frequency', fontsize=12)\n\n# Annotate each bar with its value\nfor bar, value in zip(bars, values):\n    height = bar.get_height()\n    ax2.text(bar.get_x() + bar.get_width() / 2, height + 1, f'{value}',\n             ha='center', va='bottom', fontsize=10, color='darkblue')\n\n# --------------------------------------------------\n# Section 3: Scatter Plot with Detailed Labels and Lists\n# --------------------------------------------------\nax3 = axs[1, 0]\nnp.random.seed(42)  # For reproducibility\nx_scatter = np.random.rand(50)\ny_scatter = np.random.rand(50)\nsizes = np.random.rand(50) * 300  # Variable sizes for scatter points\n\nscatter = ax3.scatter(x_scatter, y_scatter, s=sizes, c=x_scatter + y_scatter,\n                      cmap='viridis', alpha=0.6, edgecolors='black')\n\nax3.set_title('Section 3: Analysis - Scatter Distribution', fontsize=14, fontweight='bold')\nax3.set_xlabel('Random X', fontsize=12)\nax3.set_ylabel('Random Y', fontsize=12)\n\n# Adding a legend-like text box with a list of key points\nkey_points = [\n    \"Key Points:\",\n    \"1. Random distribution across [0,1]\",\n    \"2. Varying point sizes\",\n    \"3. Color gradient based on sum of X and Y\"\n]\nkey_text = \"\\n\".join(key_points)\nax3.text(0.65, 0.95, key_text, transform=ax3.transAxes, fontsize=10,\n         verticalalignment='top', bbox=dict(boxstyle='round', facecolor='wheat', alpha=0.7))\n\n# --------------------------------------------------\n# Section 4: Multi-line Text and Detailed Damped Oscillation Plot\n# --------------------------------------------------\nax4 = axs[1, 1]\nx_vals = np.linspace(0, 5, 100)\n# Damped oscillation: exponential decay times cosine\ny_vals = np.exp(-x_vals) * np.cos(2 * x_vals)\nax4.plot(x_vals, y_vals, 'm-', label='Damped Oscillation', linewidth=2)\n\nax4.set_title('Section 4: Damped Oscillation Analysis', fontsize=14, fontweight='bold')\nax4.set_xlabel('Time (s)', fontsize=12"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX68_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Main Title",
                                "2x2 grid",
                                "sine",
                                "Peak ~ 1.0",
                                "Trough ~ -1.0",
                                "dotted",
                                "bar chart",
                                "four bars",
                                "categories",
                                "numerical values",
                                "scatter plot",
                                "50 points",
                                "variable sizes",
                                "color gradient",
                                "text box",
                                "bullet",
                                "damped oscillation",
                                "exponential decay",
                                "cosine",
                                "xlabel",
                                "ylabel",
                                "bold",
                                "TikZ"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX68_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX68_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is displayed as the main title at the top of the figure?",
                                "How many subplots are arranged in the layout?",
                                "What type of curve is shown in the first subplot?",
                                "What line style is used at y = 0 in the first subplot?",
                                "How are the textual annotations near the sine curve styled?",
                                "How many bars are in the second subplot’s bar chart?",
                                "What information is annotated on top of each bar in the bar chart?",
                                "What distinctive styling is applied to the titles of each subplot?",
                                "What additional text element is present in the third subplot?",
                                "What does the fourth subplot illustrate?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX68_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "An overall figure title",
                                "Four",
                                "A sine curve",
                                "A horizontal dotted line",
                                "They have a white box background with a border",
                                "Four",
                                "Their corresponding numerical values",
                                "Bold styling",
                                "A multi-line text box listing key points in bullet or numbered style",
                                "A damped oscillation line plot (exponential decay modulated by a cosine function)"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef main():\n    # Create main figure for the comprehensive business analysis report\n    fig = plt.figure(figsize=(12, 10))\n    \n    # -------------------------------------------------------------\n    # Section 1: Sales Data Overview\n    # -------------------------------------------------------------\n    # First subplot: Line plot for quarterly sales\n    ax1 = fig.add_subplot(2, 1, 1)\n    ax1.set_title(\"1. Sales Data Overview\", fontsize=16, fontweight='bold', pad=20)\n    ax1.set_xlabel(\"Quarter\", fontsize=12)\n    ax1.set_ylabel(\"Sales ($M)\", fontsize=12)\n    \n    # Sample data: Quarters and corresponding sales values\n    quarters = np.array([1, 2, 3, 4])\n    sales = np.array([20, 35, 30, 50])\n    \n    # Plot the sales data with markers and lines\n    ax1.plot(quarters, sales, marker='o', markersize=8, linestyle='-', linewidth=2, \n             color='blue', label=\"Sales Figures\")\n    \n    # Annotate each data point with sales values\n    for i, value in enumerate(sales):\n        ax1.annotate(f\"${value}M\", xy=(quarters[i], sales[i]),\n                     xytext=(0, 10), textcoords=\"offset points\",\n                     ha=\"center\", fontsize=10)\n    \n    # Display key metrics in a text box inside the subplot\n    box_props = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\n    ax1.text(0.05, 0.95, \"Key Metrics:\\n• Q1: Stable\\n• Q2: Growth\\n• Q3: Decline\\n• Q4: Surge\",\n             transform=ax1.transAxes, fontsize=10, verticalalignment='top', bbox=box_props)\n    \n    # Adding grid and legend to the plot for improved readability\n    ax1.grid(True, linestyle='--', alpha=0.7)\n    ax1.legend(loc=\"upper left\")\n    \n    # -------------------------------------------------------------\n    # Section 2: Revenue Growth Analysis\n    # -------------------------------------------------------------\n    # Second subplot: Bar chart for revenue growth trends over years\n    ax2 = fig.add_subplot(2, 1, 2)\n    ax2.set_title(\"2. Revenue Growth Analysis\", fontsize=16, fontweight='bold', pad=20)\n    ax2.set_xlabel(\"Year\", fontsize=12)\n    ax2.set_ylabel(\"Revenue Growth (%)\", fontsize=12)\n    \n    # Sample time series data: Years and revenue growth percentages\n    years = np.arange(2015, 2023)\n    growth = np.array([5, 7, 6, 8, 10, 12, 14, 15])\n    \n    # Create a bar chart for the revenue growth data\n    bars = ax2.bar(years, growth, color='green', alpha=0.7, label=\"Annual Growth\")\n    \n    # Annotate each bar with the revenue growth percentage\n    for bar, percent in zip(bars, growth):\n        height = bar.get_height()\n        ax2.text(bar.get_x() + bar.get_width() / 2, height + 0.5, f\"{percent}%\",\n                 ha='center', fontsize=9)\n    \n    # Insert a bullet list with observations using text box style formatting\n    observations = (\n        \"Observations:\\n\"\n        \"• 2015: Expanding market\\n\"\n        \"• 2016: Increased investment\\n\"\n        \"• 2017: Stabilization phase\\n\"\n        \"• 2018: New product launch\\n\"\n        \"• 2019: Market expansion\\n\"\n        \"• 2020: Pandemic impact\\n\"\n        \"• 2021: Recovery\\n\"\n        \"• 2022: Strategic shift\"\n    )\n    ax2.text(0.65, 0.7, observations, transform=ax2.transAxes, fontsize=10,\n             verticalalignment='top', bbox=dict(boxstyle=\"round,p",
            "feature_requirements": "• The output must depict a two-panel figure with the top panel representing the \"Sales Data Overview\" and the bottom panel representing the \"Revenue Growth Analysis\".  \n• In the top panel, there must be a title reading \"1. Sales Data Overview\" (displayed prominently and bold) with the x-axis labeled \"Quarter\" and the y-axis labeled \"Sales ($M)\".  \n• The Sales Data Overview should include a line plot (with connecting lines and circular markers) that represents sales data for four quarters (values: 20, 35, 30, 50), and each data point must be annotated with text displaying the corresponding sales value in the format \"$<value>M\" placed just above the point.  \n• The top panel must also contain a text box (with a rounded border and a wheat-colored background at partial opacity) located near the top-left of the panel, listing key metrics as bullet lines: \"Q1: Stable\", \"Q2: Growth\", \"Q3: Decline\", and \"Q4: Surge\".  \n• The first subplot must include grid lines (displayed with dashed lines and partial transparency) and a legend identifying the plotted data as \"Sales Figures\".  \n• In the bottom panel, there must be a title reading \"2. Revenue Growth Analysis\" along with axes labels \"Year\" (x-axis) and \"Revenue Growth (%)\" (y-axis).  \n• The Revenue Growth Analysis should feature a bar chart displaying revenue growth data over the years from 2015 to 2022 (with growth percentage values: 5, 7, 6, 8, 10, 12, 14, 15); the bars should be green with a specified partial opacity.  \n• Every bar in the bottom panel must have an annotation just above it, showing its corresponding growth percentage formatted as \"<percent>%\".  \n• Additionally, the bottom panel must include a text box (with rounded border formatting) positioned within the panel that contains a bullet list of observations for each year (e.g., \"2015: Expanding market\", \"2016: Increased investment\", \"2017: Stabilization phase\", \"2018: New product launch\", \"2019: Market expansion\", \"2020: Pandemic impact\", \"2021: Recovery\", \"2022: Strategic shift\").  \n• Both subplots are required to incorporate legends (with the second subplot’s legend specifying \"Annual Growth\") that are clearly visible and positioned for optimal readability.",
            "task_id": "08XX69",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the title displayed at the top of the top panel?",
                "What are the x-axis and y-axis labels in the top panel?",
                "How many data points are plotted in the Sales Data Overview line plot?",
                "What are the sales values annotated above each point?",
                "What type of marker is used for the data points in the top panel?",
                "What are the bullet points listed in the top panel's text box?",
                "What legend label is used in the top panel?",
                "What is the title of the bottom panel?",
                "What type of chart is used in the bottom panel and what are its growth values?",
                "What are the bullet list items in the bottom panel's text box?"
            ],
            "VQA_answers": [
                "1. Sales Data Overview (bold)",
                "Quarter and Sales ($M)",
                "Four",
                "$20M, $35M, $30M, $50M",
                "Circular markers",
                "Q1: Stable, Q2: Growth, Q3: Decline, Q4: Surge",
                "Sales Figures",
                "2. Revenue Growth Analysis",
                "Green bar chart with values 5, 7, 6, 8, 10, 12, 14, 15 (with partial opacity)",
                "2015: Expanding market, 2016: Increased investment, 2017: Stabilization phase, 2018: New product launch, 2019: Market expansion, 2020: Pandemic impact, 2021: Recovery, 2022: Strategic shift"
            ],
            "raw_output_metric": [
                "1. Sales Data Overview",
                "Quarter",
                "Sales ($M)",
                "$20M",
                "$35M",
                "$30M",
                "$50M",
                "Sales Figures",
                "Q1: Stable",
                "Q2: Growth",
                "Q3: Decline",
                "Q4: Surge",
                "2. Revenue Growth Analysis",
                "Year",
                "Revenue Growth (%)",
                "5%",
                "7%",
                "6%",
                "8%",
                "10%",
                "12%",
                "14%",
                "15%",
                "Annual Growth",
                "2015: Expanding market",
                "2016: Increased investment",
                "2017: Stabilization phase",
                "2018: New product launch",
                "2019: Market expansion",
                "2020: Pandemic impact",
                "2021: Recovery",
                "2022: Strategic shift"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX69_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef main():\n    # Create main figure for the comprehensive business analysis report\n    fig = plt.figure(figsize=(12, 10))\n    \n    # -------------------------------------------------------------\n    # Section 1: Sales Data Overview\n    # -------------------------------------------------------------\n    # First subplot: Line plot for quarterly sales\n    ax1 = fig.add_subplot(2, 1, 1)\n    ax1.set_title(\"1. Sales Data Overview\", fontsize=16, fontweight='bold', pad=20)\n    ax1.set_xlabel(\"Quarter\", fontsize=12)\n    ax1.set_ylabel(\"Sales ($M)\", fontsize=12)\n    \n    # Sample data: Quarters and corresponding sales values\n    quarters = np.array([1, 2, 3, 4])\n    sales = np.array([20, 35, 30, 50])\n    \n    # Plot the sales data with markers and lines\n    ax1.plot(quarters, sales, marker='o', markersize=8, linestyle='-', linewidth=2, \n             color='blue', label=\"Sales Figures\")\n    \n    # Annotate each data point with sales values\n    for i, value in enumerate(sales):\n        ax1.annotate(f\"${value}M\", xy=(quarters[i], sales[i]),\n                     xytext=(0, 10), textcoords=\"offset points\",\n                     ha=\"center\", fontsize=10)\n    \n    # Display key metrics in a text box inside the subplot\n    box_props = dict(boxstyle='round', facecolor='wheat', alpha=0.5)\n    ax1.text(0.05, 0.95, \"Key Metrics:\\n• Q1: Stable\\n• Q2: Growth\\n• Q3: Decline\\n• Q4: Surge\",\n             transform=ax1.transAxes, fontsize=10, verticalalignment='top', bbox=box_props)\n    \n    # Adding grid and legend to the plot for improved readability\n    ax1.grid(True, linestyle='--', alpha=0.7)\n    ax1.legend(loc=\"upper left\")\n    \n    # -------------------------------------------------------------\n    # Section 2: Revenue Growth Analysis\n    # -------------------------------------------------------------\n    # Second subplot: Bar chart for revenue growth trends over years\n    ax2 = fig.add_subplot(2, 1, 2)\n    ax2.set_title(\"2. Revenue Growth Analysis\", fontsize=16, fontweight='bold', pad=20)\n    ax2.set_xlabel(\"Year\", fontsize=12)\n    ax2.set_ylabel(\"Revenue Growth (%)\", fontsize=12)\n    \n    # Sample time series data: Years and revenue growth percentages\n    years = np.arange(2015, 2023)\n    growth = np.array([5, 7, 6, 8, 10, 12, 14, 15])\n    \n    # Create a bar chart for the revenue growth data\n    bars = ax2.bar(years, growth, color='green', alpha=0.7, label=\"Annual Growth\")\n    \n    # Annotate each bar with the revenue growth percentage\n    for bar, percent in zip(bars, growth):\n        height = bar.get_height()\n        ax2.text(bar.get_x() + bar.get_width() / 2, height + 0.5, f\"{percent}%\",\n                 ha='center', fontsize=9)\n    \n    # Insert a bullet list with observations using text box style formatting\n    observations = (\n        \"Observations:\\n\"\n        \"• 2015: Expanding market\\n\"\n        \"• 2016: Increased investment\\n\"\n        \"• 2017: Stabilization phase\\n\"\n        \"• 2018: New product launch\\n\"\n        \"• 2019: Market expansion\\n\"\n        \"• 2020: Pandemic impact\\n\"\n        \"• 2021: Recovery\\n\"\n        \"• 2022: Strategic shift\"\n    )\n    ax2.text(0.65, 0.7, observations, transform=ax2.transAxes, fontsize=10,\n             verticalalignment='top', bbox=dict(boxstyle=\"round,p"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX69_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "1. Sales Data Overview",
                                "Quarter",
                                "Sales ($M)",
                                "$20M",
                                "$35M",
                                "$30M",
                                "$50M",
                                "Sales Figures",
                                "Q1: Stable",
                                "Q2: Growth",
                                "Q3: Decline",
                                "Q4: Surge",
                                "2. Revenue Growth Analysis",
                                "Year",
                                "Revenue Growth (%)",
                                "5%",
                                "7%",
                                "6%",
                                "8%",
                                "10%",
                                "12%",
                                "14%",
                                "15%",
                                "Annual Growth",
                                "2015: Expanding market",
                                "2016: Increased investment",
                                "2017: Stabilization phase",
                                "2018: New product launch",
                                "2019: Market expansion",
                                "2020: Pandemic impact",
                                "2021: Recovery",
                                "2022: Strategic shift"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX69_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX69_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the title displayed at the top of the top panel?",
                                "What are the x-axis and y-axis labels in the top panel?",
                                "How many data points are plotted in the Sales Data Overview line plot?",
                                "What are the sales values annotated above each point?",
                                "What type of marker is used for the data points in the top panel?",
                                "What are the bullet points listed in the top panel's text box?",
                                "What legend label is used in the top panel?",
                                "What is the title of the bottom panel?",
                                "What type of chart is used in the bottom panel and what are its growth values?",
                                "What are the bullet list items in the bottom panel's text box?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX69_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "1. Sales Data Overview (bold)",
                                "Quarter and Sales ($M)",
                                "Four",
                                "$20M, $35M, $30M, $50M",
                                "Circular markers",
                                "Q1: Stable, Q2: Growth, Q3: Decline, Q4: Surge",
                                "Sales Figures",
                                "2. Revenue Growth Analysis",
                                "Green bar chart with values 5, 7, 6, 8, 10, 12, 14, 15 (with partial opacity)",
                                "2015: Expanding market, 2016: Increased investment, 2017: Stabilization phase, 2018: New product launch, 2019: Market expansion, 2020: Pandemic impact, 2021: Recovery, 2022: Strategic shift"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# =============================================================================\n# Title: Sample Visual Conversion with Structured Layout in Matplotlib\n# Description: This script demonstrates a visual structure with multiple sections,\n#              headings, labeled data, lists, and organized content using Matplotlib.\n# Author: OpenAI ChatGPT\n# Date: 2023-10-05\n# =============================================================================\n\ndef create_data():\n    \"\"\"Generate sample data for plotting.\"\"\"\n    x = np.linspace(0, 10, 200)\n    y_line = np.sin(x) * 2 + 1\n    y_scatter = np.cos(x) * 1.5 + 0.5\n    bar_categories = ['Category A', 'Category B', 'Category C', 'Category D']\n    bar_values = [3.5, 2.8, 4.2, 3.0]\n    return x, y_line, y_scatter, bar_categories, bar_values\n\ndef add_heading(ax, text, y_position=0.95, fontsize=14):\n    \"\"\"Helper function to add a heading on a given axis.\"\"\"\n    ax.text(0.5, y_position, text, transform=ax.transAxes, \n            fontsize=fontsize, fontweight='bold', ha='center', va='top')\n\ndef add_section_text(ax, title, content, y_start=0.85, fontsize=10):\n    \"\"\"\n    Adds a section with a title and content as a list of bullet points.\n    Parameters:\n        ax : matplotlib axis\n        title : str, section title\n        content : list of str, bullet points content\n        y_start : float, starting y coordinate for the text block\n        fontsize : int, the font size of the text\n    \"\"\"\n    ax.text(0.02, y_start, title, transform=ax.transAxes, \n            fontsize=fontsize+2, fontweight='bold', va='top')\n    # Render each bullet point\n    for idx, line in enumerate(content):\n        ax.text(0.04, y_start - (idx + 1)*0.05, f\"• {line}\", transform=ax.transAxes,\n                fontsize=fontsize, va='top')\n\ndef main():\n    # Create data for the plots\n    x, y_line, y_scatter, bar_categories, bar_values = create_data()\n\n    # =============================================================================\n    # Figure Layout: 2 Rows x 2 Columns\n    # =============================================================================\n    fig, axs = plt.subplots(2, 2, figsize=(12, 8))\n    fig.suptitle(\"Structured Matplotlib Visualization\", fontsize=16, fontweight=\"bold\")\n\n    # -------------------------------------------------------------------------\n    # Subplot 1: Line Plot with Heading and Annotations\n    # -------------------------------------------------------------------------\n    ax1 = axs[0, 0]\n    ax1.plot(x, y_line, color='tab:blue', lw=2, label=\"Sine Wave\")\n    ax1.set_title(\"Line Plot: Sine Wave\")\n    ax1.set_xlabel(\"X Value\")\n    ax1.set_ylabel(\"Y Value\")\n    ax1.grid(True)\n    add_heading(ax1, \"Section 1: Mathematical Function\")\n    \n    # Adding list of properties\n    props = [\n        \"Amplitude: 2\",\n        \"Frequency: 1\",\n        \"Phase Shift: 0\",\n        \"Vertical Shift: 1\"\n    ]\n    add_section_text(ax1, \"Properties:\", props, y_start=0.85)\n    ax1.legend()\n\n    # -------------------------------------------------------------------------\n    # Subplot 2: Scatter Plot with Overlaid Text\n    # -------------------------------------------------------------------------\n    ax2 = axs[0, 1]\n    scatter = ax2.scatter(x, y_scatter, color='tab:green', marker='o', label=\"Cosine Variation\", alpha=0.7)\n    ax2.set_title(\"Scatter Plot: Cosine Variation\")\n    ax2.set_xlabel(\"X Value\")\n    ax2.set_ylabel(\"Y Value\")\n    ax2.grid(True)\n    add_heading(ax2, \"Section 2: Data Points\")\n    \n    # Adding labeled points manually at specific locations\n    notable_points = [(2, np.cos(2)*1.5+0.5), (5, np.cos(5)*1.5+0.5), (8, np.cos(8)*1.5+0.5)]\n    for idx, (px, py) in enumerate(notable_points):\n        ax2.annotate(f\"P{idx+1}\", (px, py),\n                     textcoords=\"offset points\", xytext=(0,10),\n                     ha='center', fontsize=8, color='red')\n    \n    ax2.legend()\n\n    # -------------------------------------------------------------------------\n    # Subplot 3: Bar Chart with Labeled Values\n    # -------------------------------------------------------------------------\n    ax3 = axs[1, 0]\n    bars = ax3.bar(bar_categories, bar_values, color=['#FF6347', '#6A5ACD', '#20B2AA', '#FFD700'])\n    ax3.set_title(\"Bar Chart: Category Comparison\")\n    ax3.set_xlabel(\"Categories\")\n    ax3.set_ylabel(\"Values\")\n    add_heading(ax3, \"Section 3: Category Data\", y_position=0.92)\n    ax3.grid(axis='y', linestyle='--', alpha=0.7)\n\n    # Annotate each bar with its value\n    for bar in bars:\n        height = bar.get_height()\n        ax3.annotate(f'{height:.1f}',\n                     xy=(bar.get_x() + bar.get_width() / 2, height),\n                     xytext=(0, 3),  # 3 points vertical offset\n                     textcoords=\"offset points\",\n                     ha='center', va='bottom', fontsize=9)\n\n    # -------------------------------------------------------------------------\n    # Subplot 4: Combined Plot with Multiple Data Series and List of Features\n    # -------------------------------------------------------------------------\n    ax4 = axs[1, 1]\n    # Generate some additional data series\n    y_line2 = np.tan(x) * 0.1  # small tangent values to avoid extreme variation\n    ax4.plot(x, y_line, color='tab:blue', lw=1.5, label=\"Sine Wave\")\n    ax4.plot(x, y_line2, color='tab:orange', lw=1.5, label=\"Scaled Tangent\")\n    ax4.set_title(\"Combined Plot: Functions Comparison\")\n    ax4.set_xlabel(\"X Axis\")\n    ax4.set_ylabel(\"Y Axis\")\n    ax4.set_ylim([-3, 3])\n    ax4.grid(True)\n\n    # Adding a descriptive list on the right side\n    features = [\n        \"Feature 1: Dual-Function Display\",\n        \"Feature 2: Comparative Analysis\",\n        \"Feature 3: Grid and Axis Labels\",\n        \"Feature 4: Annotated Highlights\"\n    ]\n    add_section_text(ax4, \"Features:\", features, y_start=0.85, fontsize=9)\n    ax4.legend(loc='upper left')\n\n    # =============================================================================\n    # Footer Text: Summary and Labeled Details\n    # =============================================================================\n    fig.text(0.5, 0.02, \n             \"Summary: This visualization includes 4 distinct subplots demonstrating line, scatter, bar, and combined plots. \"\n             \"Each subplot showcases detailed annotations, headings, and additional descriptive lists to elaborate on data properties.\",\n             ha=\"center\", fontsize=10, style=\"italic\", bbox={\"facecolor\": \"",
            "feature_requirements": "• The generated TikZ output must arrange four distinct subplots in a 2×2 grid layout with a global figure title (\"Structured Matplotlib Visualization\") at the top and a summary footer at the bottom.  \n• The first subplot must depict a sine wave line plot with labeled axes (\"X Value\" and \"Y Value\"), grid lines, and include a centered heading \"Section 1: Mathematical Function\" alongside a bullet list detailing properties (e.g., \"Amplitude: 2\", \"Frequency: 1\", \"Phase Shift: 0\", \"Vertical Shift: 1\").  \n• The second subplot must show a scatter plot of cosine-derived data points with axes labels, grid lines, and a heading \"Section 2: Data Points\". Additionally, it should include annotations for three notable points labeled \"P1\", \"P2\", and \"P3\" that are offset above the points.  \n• The third subplot must render a bar chart representing four categories (\"Category A\", \"Category B\", \"Category C\", \"Category D\") with corresponding numeric values, display a heading \"Section 3: Category Data\", and annotate each bar with its value. Grid lines should be present on the y-axis only.  \n• The fourth subplot must combine two line plots: one for a sine wave and one for a scaled tangent function, with axes labels (\"X Axis\", \"Y Axis\"), grid lines, and a fixed y-axis range from -3 to 3.  \n• The fourth subplot must also include a bullet list labeled \"Features:\" containing items like \"Feature 1: Dual-Function Display\", \"Feature 2: Comparative Analysis\", \"Feature 3: Grid and Axis Labels\", and \"Feature 4: Annotated Highlights\".  \n• Every subplot must include a legend indicating the series names (e.g., \"Sine Wave\", \"Cosine Variation\", \"Scaled Tangent\") where appropriate.",
            "task_id": "08XX70",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the global figure title displayed at the top?",
                "How many subplots are arranged in the grid layout?",
                "What is the heading in the first subplot?",
                "Which bullet list items are shown in the first subplot?",
                "What are the axes labels in the first subplot?",
                "What is the heading in the second subplot and which notable points are annotated?",
                "Which categories are represented in the third subplot bar chart and how are the grid lines applied?",
                "What are the axes labels and fixed y-axis range in the fourth subplot?",
                "What items are included in the bullet list labeled 'Features:' in the fourth subplot?"
            ],
            "VQA_answers": [
                "Structured Matplotlib Visualization",
                "4",
                "Section 1: Mathematical Function",
                "Amplitude: 2, Frequency: 1, Phase Shift: 0, Vertical Shift: 1",
                "X Value and Y Value",
                "Section 2: Data Points; Annotations: P1, P2, and P3",
                "Category A, Category B, Category C, Category D with grid lines on the y-axis only",
                "X Axis and Y Axis; y-axis range from -3 to 3",
                "Feature 1: Dual-Function Display, Feature 2: Comparative Analysis, Feature 3: Grid and Axis Labels, Feature 4: Annotated Highlights"
            ],
            "raw_output_metric": [
                "Structured Matplotlib Visualization",
                "Section 1: Mathematical Function",
                "X Value",
                "Y Value",
                "Amplitude: 2",
                "Frequency: 1",
                "Phase Shift: 0",
                "Vertical Shift: 1",
                "Section 2: Data Points",
                "P1",
                "P2",
                "P3",
                "Section 3: Category Data",
                "Category A",
                "Category B",
                "Category C",
                "Category D",
                "X Axis",
                "Y Axis",
                "Features:",
                "Feature 1: Dual-Function Display",
                "Feature 2: Comparative Analysis",
                "Feature 3: Grid and Axis Labels",
                "Feature 4: Annotated Highlights",
                "Sine Wave",
                "Cosine Variation",
                "Scaled Tangent"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX70_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# =============================================================================\n# Title: Sample Visual Conversion with Structured Layout in Matplotlib\n# Description: This script demonstrates a visual structure with multiple sections,\n#              headings, labeled data, lists, and organized content using Matplotlib.\n# Author: OpenAI ChatGPT\n# Date: 2023-10-05\n# =============================================================================\n\ndef create_data():\n    \"\"\"Generate sample data for plotting.\"\"\"\n    x = np.linspace(0, 10, 200)\n    y_line = np.sin(x) * 2 + 1\n    y_scatter = np.cos(x) * 1.5 + 0.5\n    bar_categories = ['Category A', 'Category B', 'Category C', 'Category D']\n    bar_values = [3.5, 2.8, 4.2, 3.0]\n    return x, y_line, y_scatter, bar_categories, bar_values\n\ndef add_heading(ax, text, y_position=0.95, fontsize=14):\n    \"\"\"Helper function to add a heading on a given axis.\"\"\"\n    ax.text(0.5, y_position, text, transform=ax.transAxes, \n            fontsize=fontsize, fontweight='bold', ha='center', va='top')\n\ndef add_section_text(ax, title, content, y_start=0.85, fontsize=10):\n    \"\"\"\n    Adds a section with a title and content as a list of bullet points.\n    Parameters:\n        ax : matplotlib axis\n        title : str, section title\n        content : list of str, bullet points content\n        y_start : float, starting y coordinate for the text block\n        fontsize : int, the font size of the text\n    \"\"\"\n    ax.text(0.02, y_start, title, transform=ax.transAxes, \n            fontsize=fontsize+2, fontweight='bold', va='top')\n    # Render each bullet point\n    for idx, line in enumerate(content):\n        ax.text(0.04, y_start - (idx + 1)*0.05, f\"• {line}\", transform=ax.transAxes,\n                fontsize=fontsize, va='top')\n\ndef main():\n    # Create data for the plots\n    x, y_line, y_scatter, bar_categories, bar_values = create_data()\n\n    # =============================================================================\n    # Figure Layout: 2 Rows x 2 Columns\n    # =============================================================================\n    fig, axs = plt.subplots(2, 2, figsize=(12, 8))\n    fig.suptitle(\"Structured Matplotlib Visualization\", fontsize=16, fontweight=\"bold\")\n\n    # -------------------------------------------------------------------------\n    # Subplot 1: Line Plot with Heading and Annotations\n    # -------------------------------------------------------------------------\n    ax1 = axs[0, 0]\n    ax1.plot(x, y_line, color='tab:blue', lw=2, label=\"Sine Wave\")\n    ax1.set_title(\"Line Plot: Sine Wave\")\n    ax1.set_xlabel(\"X Value\")\n    ax1.set_ylabel(\"Y Value\")\n    ax1.grid(True)\n    add_heading(ax1, \"Section 1: Mathematical Function\")\n    \n    # Adding list of properties\n    props = [\n        \"Amplitude: 2\",\n        \"Frequency: 1\",\n        \"Phase Shift: 0\",\n        \"Vertical Shift: 1\"\n    ]\n    add_section_text(ax1, \"Properties:\", props, y_start=0.85)\n    ax1.legend()\n\n    # -------------------------------------------------------------------------\n    # Subplot 2: Scatter Plot with Overlaid Text\n    # -------------------------------------------------------------------------\n    ax2 = axs[0, 1]\n    scatter = ax2.scatter(x, y_scatter, color='tab:green', marker='o', label=\"Cosine Variation\", alpha=0.7)\n    ax2.set_title(\"Scatter Plot: Cosine Variation\")\n    ax2.set_xlabel(\"X Value\")\n    ax2.set_ylabel(\"Y Value\")\n    ax2.grid(True)\n    add_heading(ax2, \"Section 2: Data Points\")\n    \n    # Adding labeled points manually at specific locations\n    notable_points = [(2, np.cos(2)*1.5+0.5), (5, np.cos(5)*1.5+0.5), (8, np.cos(8)*1.5+0.5)]\n    for idx, (px, py) in enumerate(notable_points):\n        ax2.annotate(f\"P{idx+1}\", (px, py),\n                     textcoords=\"offset points\", xytext=(0,10),\n                     ha='center', fontsize=8, color='red')\n    \n    ax2.legend()\n\n    # -------------------------------------------------------------------------\n    # Subplot 3: Bar Chart with Labeled Values\n    # -------------------------------------------------------------------------\n    ax3 = axs[1, 0]\n    bars = ax3.bar(bar_categories, bar_values, color=['#FF6347', '#6A5ACD', '#20B2AA', '#FFD700'])\n    ax3.set_title(\"Bar Chart: Category Comparison\")\n    ax3.set_xlabel(\"Categories\")\n    ax3.set_ylabel(\"Values\")\n    add_heading(ax3, \"Section 3: Category Data\", y_position=0.92)\n    ax3.grid(axis='y', linestyle='--', alpha=0.7)\n\n    # Annotate each bar with its value\n    for bar in bars:\n        height = bar.get_height()\n        ax3.annotate(f'{height:.1f}',\n                     xy=(bar.get_x() + bar.get_width() / 2, height),\n                     xytext=(0, 3),  # 3 points vertical offset\n                     textcoords=\"offset points\",\n                     ha='center', va='bottom', fontsize=9)\n\n    # -------------------------------------------------------------------------\n    # Subplot 4: Combined Plot with Multiple Data Series and List of Features\n    # -------------------------------------------------------------------------\n    ax4 = axs[1, 1]\n    # Generate some additional data series\n    y_line2 = np.tan(x) * 0.1  # small tangent values to avoid extreme variation\n    ax4.plot(x, y_line, color='tab:blue', lw=1.5, label=\"Sine Wave\")\n    ax4.plot(x, y_line2, color='tab:orange', lw=1.5, label=\"Scaled Tangent\")\n    ax4.set_title(\"Combined Plot: Functions Comparison\")\n    ax4.set_xlabel(\"X Axis\")\n    ax4.set_ylabel(\"Y Axis\")\n    ax4.set_ylim([-3, 3])\n    ax4.grid(True)\n\n    # Adding a descriptive list on the right side\n    features = [\n        \"Feature 1: Dual-Function Display\",\n        \"Feature 2: Comparative Analysis\",\n        \"Feature 3: Grid and Axis Labels\",\n        \"Feature 4: Annotated Highlights\"\n    ]\n    add_section_text(ax4, \"Features:\", features, y_start=0.85, fontsize=9)\n    ax4.legend(loc='upper left')\n\n    # =============================================================================\n    # Footer Text: Summary and Labeled Details\n    # =============================================================================\n    fig.text(0.5, 0.02, \n             \"Summary: This visualization includes 4 distinct subplots demonstrating line, scatter, bar, and combined plots. \"\n             \"Each subplot showcases detailed annotations, headings, and additional descriptive lists to elaborate on data properties.\",\n             ha=\"center\", fontsize=10, style=\"italic\", bbox={\"facecolor\": \""
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX70_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Structured Matplotlib Visualization",
                                "Section 1: Mathematical Function",
                                "X Value",
                                "Y Value",
                                "Amplitude: 2",
                                "Frequency: 1",
                                "Phase Shift: 0",
                                "Vertical Shift: 1",
                                "Section 2: Data Points",
                                "P1",
                                "P2",
                                "P3",
                                "Section 3: Category Data",
                                "Category A",
                                "Category B",
                                "Category C",
                                "Category D",
                                "X Axis",
                                "Y Axis",
                                "Features:",
                                "Feature 1: Dual-Function Display",
                                "Feature 2: Comparative Analysis",
                                "Feature 3: Grid and Axis Labels",
                                "Feature 4: Annotated Highlights",
                                "Sine Wave",
                                "Cosine Variation",
                                "Scaled Tangent"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX70_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX70_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the global figure title displayed at the top?",
                                "How many subplots are arranged in the grid layout?",
                                "What is the heading in the first subplot?",
                                "Which bullet list items are shown in the first subplot?",
                                "What are the axes labels in the first subplot?",
                                "What is the heading in the second subplot and which notable points are annotated?",
                                "Which categories are represented in the third subplot bar chart and how are the grid lines applied?",
                                "What are the axes labels and fixed y-axis range in the fourth subplot?",
                                "What items are included in the bullet list labeled 'Features:' in the fourth subplot?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX70_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Structured Matplotlib Visualization",
                                "4",
                                "Section 1: Mathematical Function",
                                "Amplitude: 2, Frequency: 1, Phase Shift: 0, Vertical Shift: 1",
                                "X Value and Y Value",
                                "Section 2: Data Points; Annotations: P1, P2, and P3",
                                "Category A, Category B, Category C, Category D with grid lines on the y-axis only",
                                "X Axis and Y Axis; y-axis range from -3 to 3",
                                "Feature 1: Dual-Function Display, Feature 2: Comparative Analysis, Feature 3: Grid and Axis Labels, Feature 4: Annotated Highlights"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ============================================\n# Section 1: Data Preparation and Settings\n# ============================================\n# Generate sample data for plotting\nx = np.linspace(0, 10, 100)\ny_linear = 2 * x + 1\ny_quadratic = x ** 2\ny_sin = np.sin(x)\ny_cos = np.cos(x)\n\n# Custom colors and styles\ncolors = {\n    'linear': '#1f77b4',\n    'quadratic': '#ff7f0e',\n    'sin': '#2ca02c',\n    'cos': '#d62728'\n}\nline_styles = {\n    'linear': '-',\n    'quadratic': '--',\n    'sin': '-.',\n    'cos': ':'\n}\n\n# ============================================\n# Section 2: Figure and Layout Configuration\n# ============================================\n# Create a figure with 2 rows and 2 columns of subplots\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.subplots_adjust(wspace=0.3, hspace=0.4)\n\n# Set a main title for the figure\nfig.suptitle(\"Comprehensive Matplotlib Visualization\", fontsize=18, fontweight='bold')\n\n# ============================================\n# Section 3: Plotting on Subplot 1 (Line Plots)\n# ============================================\n# Plot linear and quadratic data\nax1 = axs[0, 0]\nax1.plot(x, y_linear, label=\"Linear Function (y=2x+1)\",\n         color=colors['linear'], linestyle=line_styles['linear'], linewidth=2)\nax1.plot(x, y_quadratic, label=\"Quadratic Function (y=x^2)\",\n         color=colors['quadratic'], linestyle=line_styles['quadratic'], linewidth=2)\n\n# Set titles and labels\nax1.set_title(\"Line Plot Section\", fontsize=14)\nax1.set_xlabel(\"X Axis\", fontsize=12)\nax1.set_ylabel(\"Y Axis\", fontsize=12)\nax1.grid(True)\nax1.legend(loc=\"upper left\")\n\n# ============================================\n# Section 4: Plotting on Subplot 2 (Trigonometric Functions)\n# ============================================\n# Plot sine and cosine data\nax2 = axs[0, 1]\nax2.plot(x, y_sin, label=\"Sine Function (sin(x))\",\n         color=colors['sin'], linestyle=line_styles['sin'], linewidth=2)\nax2.plot(x, y_cos, label=\"Cosine Function (cos(x))\",\n         color=colors['cos'], linestyle=line_styles['cos'], linewidth=2)\n\n# Title, labels, and grid\nax2.set_title(\"Trigonometric Functions\", fontsize=14)\nax2.set_xlabel(\"Angle (radians)\", fontsize=12)\nax2.set_ylabel(\"Function Value\", fontsize=12)\nax2.grid(True)\nax2.legend(loc=\"lower left\")\n\n# ============================================\n# Section 5: Detailed Annotation Panel\n# ============================================\n# This section explains our plotted functions along with annotations.\nax3 = axs[1, 0]\nax3.axis('off')  # Hide axes for a text panel\n\n# Create a detailed candidate list with headings, sections, and labeled values\ntext_content = (\n    \"=== Data Insights ===\\n\\n\"\n    \"1. Linear Function:\\n\"\n    \"   - Formula: y = 2x + 1\\n\"\n    \"   - Characteristics: Constant slope, linear growth\\n\\n\"\n    \"2. Quadratic Function:\\n\"\n    \"   - Formula: y = x^2\\n\"\n    \"   - Characteristics: Parabolic curve, symmetric about the y-axis\\n\\n\"\n    \"3. Trigonometric Functions:\\n\"\n    \"   - Sine:\\n\"\n    \"       * Range: [-1, 1]\\n\"\n    \"       * Period: 2π\\n\"\n    \"   - Cosine:\\n\"\n    \"       * Range: [-1, 1]\\n\"\n    \"       * Period: 2π\\n\\n\"\n    \"=== Observations ===\\n\"\n    \"- Linear growth is steady and predictable.\\n\"\n    \"- Quadratic growth accelerates with increased x values.\\n\"\n    \"- Trigonometric functions oscillate periodically.\\n\\n\"\n    \"=== Conclusion ===\\n\"\n    \"This visualization demonstrates a variety of mathematical functions with \"\n    \"distinct patterns and behaviors, effectively captured through a cohesive layout.\"\n)\n\nax3.text(0.05, 0.95, text_content, va='top', ha='left', fontsize=11,\n         bbox=dict(facecolor='lavender', edgecolor='navy', boxstyle='round,pad=0.5'))\n\n# ============================================\n# Section 6: Miscellaneous Statistics Plot\n# ============================================\n# Generate a small bar chart within the fourth subplot to show some statistics.\nax4 = axs[1, 1]\ncategories = ['A', 'B', 'C', 'D']\nvalues = [23, 45, 56, 18]\nbars = ax4.bar(categories, values, color=['#8c564b', '#e377c2', '#7f7f7f', '#bcbd22'])\n\n# Annotate each bar with its value\nfor bar in bars:\n    height = bar.get_height()\n    ax4.text(bar.get_x() + bar.get_width()/2.0, height + 1, f'{height}', ha='center', va='bottom', fontsize=10)\n\nax4.set_title(\"Statistics Overview\", fontsize=14)\nax4.set_xlabel(\"Category\", fontsize=12)\nax4.set_ylabel(\"Value\", fontsize=12)\nax4.grid(axis='y', linestyle='--', alpha=0.7)\n\n# ============================================\n# Section 7: Finalizing the Plot\n# ============================================\n# Add a footer annotation that spans across all subplots\nplt.figtext(0.5, 0.02,\n            \"Visualization created using Matplotlib | All values are for demonstration purposes only.\",\n            wrap=True, horizontalalignment='center', fontsize=10, color='gray')\n\n# Save the figure to a file (optional)\n# plt.savefig(\"comprehensive_visualization.png\", dpi=300, bbox_inches='tight')\n\n# Display the final composed figure\nplt.show()\n</code>",
            "feature_requirements": "• The output must depict a figure arranged as a 2×2 grid of panels, ensuring a clear layout of four distinct subplots.  \n• The first subplot must include two line plots: one for a linear function (displaying \"Linear Function (y=2x+1)\") and one for a quadratic function (displaying \"Quadratic Function (y=x^2)\"), with visible x and y-axis labels (\"X Axis\" and \"Y Axis\"), grid lines, and a legend positioned at the upper left.  \n• The second subplot must present two line plots representing trigonometric functions: one for sine (\"Sine Function (sin(x))\") and one for cosine (\"Cosine Function (cos(x))\"), with appropriate axis labels (\"Angle (radians)\" for the x-axis and \"Function Value\" for the y-axis), grid lines, and a legend located at the lower left.  \n• The third subplot must be rendered as a non-graphical text panel (with axes hidden) that displays multi-line, well-structured annotation text including clear section headings such as \"=== Data Insights ===\", \"=== Observations ===\", and \"=== Conclusion ===\", with lists and indented details describing each mathematical function.  \n• The fourth subplot must contain a bar chart with four categories labeled \"A\", \"B\", \"C\", and \"D\", where each bar reflects numerical values (23, 45, 56, 18 respectively) and is annotated with its corresponding value placed just above it; this subplot should also include x and y-axis labels (\"Category\" and \"Value\") and horizontal grid lines along the y-axis.  \n• Across the entire figure, a prominent main title reading \"Comprehensive Matplotlib Visualization\" must be visibly rendered at the top of the figure.  \n• A footer spanning all subplots must be visibly included at the bottom center of the figure, containing the text \"Visualization created using Matplotlib | All values are for demonstration purposes only.\"",
            "task_id": "08XX71",
            "task_name": "Convert Matplotlib to TikZ",
            "input_type": "Matplotlib",
            "output_type": "TikZ",
            "query_example": "",
            "VQA_questions": [
                "What is the main title displayed at the top of the figure?",
                "How many subplots are arranged within the figure?",
                "Which two functions are plotted in the first subplot?",
                "Where is the legend located in the first subplot?",
                "What trigonometric functions are plotted in the second subplot?",
                "What are the x-axis and y-axis labels in the second subplot?",
                "What content is displayed in the third subplot?",
                "What type of chart is shown in the fourth subplot?",
                "What are the category labels and their corresponding numerical values in the bar chart?",
                "What is the footer text displayed at the bottom center of the figure?"
            ],
            "VQA_answers": [
                "Comprehensive Matplotlib Visualization",
                "Four",
                "Linear Function (y=2x+1) and Quadratic Function (y=x^2)",
                "Upper left",
                "Sine Function (sin(x)) and Cosine Function (cos(x))",
                "Angle (radians) and Function Value",
                "Multi-line annotation text with section headings (=== Data Insights ===, === Observations ===, === Conclusion ===) and lists, with hidden axes",
                "Bar chart",
                "A: 23, B: 45, C: 56, D: 18",
                "Visualization created using Matplotlib | All values are for demonstration purposes only"
            ],
            "raw_output_metric": [
                "2×2 grid",
                "Linear Function (y=2x+1)",
                "Quadratic Function (y=x^2)",
                "X Axis",
                "Y Axis",
                "upper left",
                "Sine Function (sin(x))",
                "Cosine Function (cos(x))",
                "Angle (radians)",
                "Function Value",
                "lower left",
                "=== Data Insights ===",
                "=== Observations ===",
                "=== Conclusion ===",
                "A",
                "B",
                "C",
                "D",
                "23",
                "45",
                "56",
                "18",
                "Category",
                "Value",
                "Comprehensive Matplotlib Visualization",
                "Visualization created using Matplotlib | All values are for demonstration purposes only."
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "08XX71_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output TikZ:\n\nTask:\nConvert the following Matplotlib code to TikZ code.\n\n<code>\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# ============================================\n# Section 1: Data Preparation and Settings\n# ============================================\n# Generate sample data for plotting\nx = np.linspace(0, 10, 100)\ny_linear = 2 * x + 1\ny_quadratic = x ** 2\ny_sin = np.sin(x)\ny_cos = np.cos(x)\n\n# Custom colors and styles\ncolors = {\n    'linear': '#1f77b4',\n    'quadratic': '#ff7f0e',\n    'sin': '#2ca02c',\n    'cos': '#d62728'\n}\nline_styles = {\n    'linear': '-',\n    'quadratic': '--',\n    'sin': '-.',\n    'cos': ':'\n}\n\n# ============================================\n# Section 2: Figure and Layout Configuration\n# ============================================\n# Create a figure with 2 rows and 2 columns of subplots\nfig, axs = plt.subplots(2, 2, figsize=(12, 10))\nfig.subplots_adjust(wspace=0.3, hspace=0.4)\n\n# Set a main title for the figure\nfig.suptitle(\"Comprehensive Matplotlib Visualization\", fontsize=18, fontweight='bold')\n\n# ============================================\n# Section 3: Plotting on Subplot 1 (Line Plots)\n# ============================================\n# Plot linear and quadratic data\nax1 = axs[0, 0]\nax1.plot(x, y_linear, label=\"Linear Function (y=2x+1)\",\n         color=colors['linear'], linestyle=line_styles['linear'], linewidth=2)\nax1.plot(x, y_quadratic, label=\"Quadratic Function (y=x^2)\",\n         color=colors['quadratic'], linestyle=line_styles['quadratic'], linewidth=2)\n\n# Set titles and labels\nax1.set_title(\"Line Plot Section\", fontsize=14)\nax1.set_xlabel(\"X Axis\", fontsize=12)\nax1.set_ylabel(\"Y Axis\", fontsize=12)\nax1.grid(True)\nax1.legend(loc=\"upper left\")\n\n# ============================================\n# Section 4: Plotting on Subplot 2 (Trigonometric Functions)\n# ============================================\n# Plot sine and cosine data\nax2 = axs[0, 1]\nax2.plot(x, y_sin, label=\"Sine Function (sin(x))\",\n         color=colors['sin'], linestyle=line_styles['sin'], linewidth=2)\nax2.plot(x, y_cos, label=\"Cosine Function (cos(x))\",\n         color=colors['cos'], linestyle=line_styles['cos'], linewidth=2)\n\n# Title, labels, and grid\nax2.set_title(\"Trigonometric Functions\", fontsize=14)\nax2.set_xlabel(\"Angle (radians)\", fontsize=12)\nax2.set_ylabel(\"Function Value\", fontsize=12)\nax2.grid(True)\nax2.legend(loc=\"lower left\")\n\n# ============================================\n# Section 5: Detailed Annotation Panel\n# ============================================\n# This section explains our plotted functions along with annotations.\nax3 = axs[1, 0]\nax3.axis('off')  # Hide axes for a text panel\n\n# Create a detailed candidate list with headings, sections, and labeled values\ntext_content = (\n    \"=== Data Insights ===\\n\\n\"\n    \"1. Linear Function:\\n\"\n    \"   - Formula: y = 2x + 1\\n\"\n    \"   - Characteristics: Constant slope, linear growth\\n\\n\"\n    \"2. Quadratic Function:\\n\"\n    \"   - Formula: y = x^2\\n\"\n    \"   - Characteristics: Parabolic curve, symmetric about the y-axis\\n\\n\"\n    \"3. Trigonometric Functions:\\n\"\n    \"   - Sine:\\n\"\n    \"       * Range: [-1, 1]\\n\"\n    \"       * Period: 2π\\n\"\n    \"   - Cosine:\\n\"\n    \"       * Range: [-1, 1]\\n\"\n    \"       * Period: 2π\\n\\n\"\n    \"=== Observations ===\\n\"\n    \"- Linear growth is steady and predictable.\\n\"\n    \"- Quadratic growth accelerates with increased x values.\\n\"\n    \"- Trigonometric functions oscillate periodically.\\n\\n\"\n    \"=== Conclusion ===\\n\"\n    \"This visualization demonstrates a variety of mathematical functions with \"\n    \"distinct patterns and behaviors, effectively captured through a cohesive layout.\"\n)\n\nax3.text(0.05, 0.95, text_content, va='top', ha='left', fontsize=11,\n         bbox=dict(facecolor='lavender', edgecolor='navy', boxstyle='round,pad=0.5'))\n\n# ============================================\n# Section 6: Miscellaneous Statistics Plot\n# ============================================\n# Generate a small bar chart within the fourth subplot to show some statistics.\nax4 = axs[1, 1]\ncategories = ['A', 'B', 'C', 'D']\nvalues = [23, 45, 56, 18]\nbars = ax4.bar(categories, values, color=['#8c564b', '#e377c2', '#7f7f7f', '#bcbd22'])\n\n# Annotate each bar with its value\nfor bar in bars:\n    height = bar.get_height()\n    ax4.text(bar.get_x() + bar.get_width()/2.0, height + 1, f'{height}', ha='center', va='bottom', fontsize=10)\n\nax4.set_title(\"Statistics Overview\", fontsize=14)\nax4.set_xlabel(\"Category\", fontsize=12)\nax4.set_ylabel(\"Value\", fontsize=12)\nax4.grid(axis='y', linestyle='--', alpha=0.7)\n\n# ============================================\n# Section 7: Finalizing the Plot\n# ============================================\n# Add a footer annotation that spans across all subplots\nplt.figtext(0.5, 0.02,\n            \"Visualization created using Matplotlib | All values are for demonstration purposes only.\",\n            wrap=True, horizontalalignment='center', fontsize=10, color='gray')\n\n# Save the figure to a file (optional)\n# plt.savefig(\"comprehensive_visualization.png\", dpi=300, bbox_inches='tight')\n\n# Display the final composed figure\nplt.show()\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "08XX71_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "2×2 grid",
                                "Linear Function (y=2x+1)",
                                "Quadratic Function (y=x^2)",
                                "X Axis",
                                "Y Axis",
                                "upper left",
                                "Sine Function (sin(x))",
                                "Cosine Function (cos(x))",
                                "Angle (radians)",
                                "Function Value",
                                "lower left",
                                "=== Data Insights ===",
                                "=== Observations ===",
                                "=== Conclusion ===",
                                "A",
                                "B",
                                "C",
                                "D",
                                "23",
                                "45",
                                "56",
                                "18",
                                "Category",
                                "Value",
                                "Comprehensive Matplotlib Visualization",
                                "Visualization created using Matplotlib | All values are for demonstration purposes only."
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    },
                    {
                        "id": "08XX71_v",
                        "type": "choices",
                        "value": {
                            "choices": [
                                "Use Visual Rendering"
                            ]
                        },
                        "to_name": "visual_rendering",
                        "from_name": "shouldUseVisualRendering"
                    },
                    {
                        "id": "08XX71_vq",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "What is the main title displayed at the top of the figure?",
                                "How many subplots are arranged within the figure?",
                                "Which two functions are plotted in the first subplot?",
                                "Where is the legend located in the first subplot?",
                                "What trigonometric functions are plotted in the second subplot?",
                                "What are the x-axis and y-axis labels in the second subplot?",
                                "What content is displayed in the third subplot?",
                                "What type of chart is shown in the fourth subplot?",
                                "What are the category labels and their corresponding numerical values in the bar chart?",
                                "What is the footer text displayed at the bottom center of the figure?"
                            ]
                        },
                        "to_name": "VQA_questions",
                        "from_name": "question"
                    },
                    {
                        "id": "08XX71_va",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Comprehensive Matplotlib Visualization",
                                "Four",
                                "Linear Function (y=2x+1) and Quadratic Function (y=x^2)",
                                "Upper left",
                                "Sine Function (sin(x)) and Cosine Function (cos(x))",
                                "Angle (radians) and Function Value",
                                "Multi-line annotation text with section headings (=== Data Insights ===, === Observations ===, === Conclusion ===) and lists, with hidden axes",
                                "Bar chart",
                                "A: 23, B: 45, C: 56, D: 18",
                                "Visualization created using Matplotlib | All values are for demonstration purposes only"
                            ]
                        },
                        "to_name": "VQA_answers",
                        "from_name": "desiredAnswer"
                    }
                ]
            }
        ]
    }
]