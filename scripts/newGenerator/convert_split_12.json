[
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userProfile\": {\n    \"id\": 12345,\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"preferences\": {\n      \"notifications\": true,\n      \"theme\": \"dark\"\n    }\n  },\n  \"accountSettings\": {\n    \"createdAt\": \"2023-01-15T12:00:00Z\",\n    \"roles\": [\"admin\", \"editor\"],\n    \"active\": true\n  },\n  \"orders\": [\n    {\n      \"orderId\": \"ORD123\",\n      \"date\": \"2023-08-10\",\n      \"amount\": 250.75,\n      \"items\": [\n        {\n          \"itemId\": \"ITEM789\",\n          \"description\": \"Wireless Keyboard\",\n          \"price\": 75.50\n        },\n        {\n          \"itemId\": \"ITEM456\",\n          \"description\": \"Gaming Mouse\",\n          \"price\": 34.25\n        }\n      ]\n    },\n    {\n      \"orderId\": \"ORD124\",\n      \"date\": \"2023-09-05\",\n      \"amount\": 120.00,\n      \"items\": [\n        {\n          \"itemId\": \"ITEM123\",\n          \"description\": \"Smartphone Case\",\n          \"price\": 20.00\n        },\n        {\n          \"itemId\": \"ITEM321\",\n          \"description\": \"Screen Protector\",\n          \"price\": 15.00\n        },\n        {\n          \"itemId\": \"ITEM654\",\n          \"description\": \"Charger\",\n          \"price\": 35.00\n        }\n      ]\n    }\n  ],\n  \"activities\": [\n    {\n      \"type\": \"login\",\n      \"timestamp\": \"2023-10-05T10:24:00Z\"\n    },\n    {\n      \"type\": \"purchase\",\n      \"timestamp\": \"2023-10-07T14:50:00Z\"\n    }\n  ]\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row for each data section, clearly labeling the fields extracted from the JSON (for example, \"id\", \"name\", \"email\", etc.).  \n• The userProfile section must be flattened into CSV columns, including userProfile.id, userProfile.name, userProfile.email along with nested preferences converted into separate columns (e.g., \"notifications\" and \"theme\").  \n• The accountSettings section must be represented with its own header columns for values such as \"createdAt\", \"roles\", and \"active\", with the roles array converted into a single string (for instance, comma-separated values).  \n• Each order in the orders array must generate a CSV row (or rows) that includes order-level fields such as \"orderId\", \"date\", and \"amount\".  \n• The nested items array within each order must be flattened, so that every item is represented by its own set of columns (e.g., \"itemId\", \"description\", \"price\") linked to its corresponding order details.  \n• The activities array must be converted into rows with columns for \"type\" and \"timestamp\", ensuring that each activity is represented as a separate record.  \n• Every value in the CSV output must correctly reflect its data type from the JSON (e.g., booleans and numbers are represented in an appropriate text format).",
            "task_id": "050228",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][userProfile.id]",
                "rows[0][userProfile.name]",
                "rows[0][userProfile.email]",
                "rows[0][notifications]",
                "rows[0][theme]",
                "rows[0][accountSettings.createdAt]",
                "rows[0][accountSettings.roles]",
                "rows[0][accountSettings.active]",
                "rows[*][orderId]",
                "rows[*][date]",
                "rows[*][amount]",
                "rows[*][itemId]",
                "rows[*][description]",
                "rows[*][price]",
                "rows[*][type]",
                "rows[*][timestamp]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050228_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userProfile\": {\n    \"id\": 12345,\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"preferences\": {\n      \"notifications\": true,\n      \"theme\": \"dark\"\n    }\n  },\n  \"accountSettings\": {\n    \"createdAt\": \"2023-01-15T12:00:00Z\",\n    \"roles\": [\"admin\", \"editor\"],\n    \"active\": true\n  },\n  \"orders\": [\n    {\n      \"orderId\": \"ORD123\",\n      \"date\": \"2023-08-10\",\n      \"amount\": 250.75,\n      \"items\": [\n        {\n          \"itemId\": \"ITEM789\",\n          \"description\": \"Wireless Keyboard\",\n          \"price\": 75.50\n        },\n        {\n          \"itemId\": \"ITEM456\",\n          \"description\": \"Gaming Mouse\",\n          \"price\": 34.25\n        }\n      ]\n    },\n    {\n      \"orderId\": \"ORD124\",\n      \"date\": \"2023-09-05\",\n      \"amount\": 120.00,\n      \"items\": [\n        {\n          \"itemId\": \"ITEM123\",\n          \"description\": \"Smartphone Case\",\n          \"price\": 20.00\n        },\n        {\n          \"itemId\": \"ITEM321\",\n          \"description\": \"Screen Protector\",\n          \"price\": 15.00\n        },\n        {\n          \"itemId\": \"ITEM654\",\n          \"description\": \"Charger\",\n          \"price\": 35.00\n        }\n      ]\n    }\n  ],\n  \"activities\": [\n    {\n      \"type\": \"login\",\n      \"timestamp\": \"2023-10-05T10:24:00Z\"\n    },\n    {\n      \"type\": \"purchase\",\n      \"timestamp\": \"2023-10-07T14:50:00Z\"\n    }\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050228_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][userProfile.id]",
                                "rows[0][userProfile.name]",
                                "rows[0][userProfile.email]",
                                "rows[0][notifications]",
                                "rows[0][theme]",
                                "rows[0][accountSettings.createdAt]",
                                "rows[0][accountSettings.roles]",
                                "rows[0][accountSettings.active]",
                                "rows[*][orderId]",
                                "rows[*][date]",
                                "rows[*][amount]",
                                "rows[*][itemId]",
                                "rows[*][description]",
                                "rows[*][price]",
                                "rows[*][type]",
                                "rows[*][timestamp]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"conference\": \"Tech Innovators 2023\",\n  \"venue\": {\n    \"name\": \"Grand Convention Center\",\n    \"address\": \"123 Main Street, Cityville, Countryland\",\n    \"rooms\": [\n      \"Main Hall\",\n      \"Auditorium\",\n      \"Workshop Room A\",\n      \"Workshop Room B\"\n    ]\n  },\n  \"schedule\": [\n    {\n      \"time\": \"09:00 AM\",\n      \"session\": \"Opening Ceremony\",\n      \"speaker\": \"Alice Smith\"\n    },\n    {\n      \"time\": \"10:00 AM\",\n      \"session\": \"Keynote: The Future of Technology\",\n      \"speaker\": \"John Doe\"\n    },\n    {\n      \"time\": \"11:30 AM\",\n      \"session\": \"Innovation Workshop\",\n      \"speaker\": \"Jane Roe\"\n    }\n  ],\n  \"speakers\": [\n    {\n      \"name\": \"Alice Smith\",\n      \"bio\": \"Leadership in emerging technological trends with over 15 years in the industry.\",\n      \"sessions\": [\n        \"Opening Ceremony\"\n      ]\n    },\n    {\n      \"name\": \"John Doe\",\n      \"bio\": \"Renowned tech visionary and investor focused on futuristic solutions.\",\n      \"sessions\": [\n        \"Keynote: The Future of Technology\"\n      ]\n    },\n    {\n      \"name\": \"Jane Roe\",\n      \"bio\": \"Expert in innovation strategy and development with a global perspective.\",\n      \"sessions\": [\n        \"Innovation Workshop\"\n      ]\n    }\n  ],\n  \"sponsors\": [\n    {\n      \"name\": \"InnovateCorp\",\n      \"contribution\": \"Platinum\"\n    },\n    {\n      \"name\": \"TechGlobal\",\n      \"contribution\": \"Gold\"\n    },\n    {\n      \"name\": \"NextGen\",\n      \"contribution\": \"Silver\"\n    }\n  ]\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row with clearly labeled columns that correspond to the JSON data groups (e.g., conference, venue, schedule, speakers, sponsors).  \n• The CSV must include a row for the conference information with a column for the conference name.  \n• The CSV must include venue details with separate columns for the venue name and address, and a column that contains the list of room names (rooms should be represented as a single string using a delimiter such as a comma).  \n• The CSV must represent the schedule as multiple rows—each row containing the time, session, and speaker information for that schedule entry.  \n• The CSV must represent the speakers as multiple rows—each row containing the speaker’s name, biography, and a column with the list of sessions they present (with multiple sessions concatenated into one cell using a delimiter).  \n• The CSV must represent the sponsors as multiple rows—each row containing the sponsor’s name and their contribution level.  \n• Every row in the CSV must be verifiable against the original JSON’s arrays (e.g., the number of schedule, speaker, and sponsor rows should match the counts in the JSON).",
            "task_id": "050229",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][conference_name]",
                "rows[0][venue_name]",
                "rows[0][venue_address]",
                "rows[0][rooms]",
                "rows[*][time]",
                "rows[*][session]",
                "rows[*][speaker]",
                "rows[*][speaker_name]",
                "rows[*][biography]",
                "rows[*][sessions]",
                "rows[*][sponsor_name]",
                "rows[*][contribution_level]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050229_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"conference\": \"Tech Innovators 2023\",\n  \"venue\": {\n    \"name\": \"Grand Convention Center\",\n    \"address\": \"123 Main Street, Cityville, Countryland\",\n    \"rooms\": [\n      \"Main Hall\",\n      \"Auditorium\",\n      \"Workshop Room A\",\n      \"Workshop Room B\"\n    ]\n  },\n  \"schedule\": [\n    {\n      \"time\": \"09:00 AM\",\n      \"session\": \"Opening Ceremony\",\n      \"speaker\": \"Alice Smith\"\n    },\n    {\n      \"time\": \"10:00 AM\",\n      \"session\": \"Keynote: The Future of Technology\",\n      \"speaker\": \"John Doe\"\n    },\n    {\n      \"time\": \"11:30 AM\",\n      \"session\": \"Innovation Workshop\",\n      \"speaker\": \"Jane Roe\"\n    }\n  ],\n  \"speakers\": [\n    {\n      \"name\": \"Alice Smith\",\n      \"bio\": \"Leadership in emerging technological trends with over 15 years in the industry.\",\n      \"sessions\": [\n        \"Opening Ceremony\"\n      ]\n    },\n    {\n      \"name\": \"John Doe\",\n      \"bio\": \"Renowned tech visionary and investor focused on futuristic solutions.\",\n      \"sessions\": [\n        \"Keynote: The Future of Technology\"\n      ]\n    },\n    {\n      \"name\": \"Jane Roe\",\n      \"bio\": \"Expert in innovation strategy and development with a global perspective.\",\n      \"sessions\": [\n        \"Innovation Workshop\"\n      ]\n    }\n  ],\n  \"sponsors\": [\n    {\n      \"name\": \"InnovateCorp\",\n      \"contribution\": \"Platinum\"\n    },\n    {\n      \"name\": \"TechGlobal\",\n      \"contribution\": \"Gold\"\n    },\n    {\n      \"name\": \"NextGen\",\n      \"contribution\": \"Silver\"\n    }\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050229_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][conference_name]",
                                "rows[0][venue_name]",
                                "rows[0][venue_address]",
                                "rows[0][rooms]",
                                "rows[*][time]",
                                "rows[*][session]",
                                "rows[*][speaker]",
                                "rows[*][speaker_name]",
                                "rows[*][biography]",
                                "rows[*][sessions]",
                                "rows[*][sponsor_name]",
                                "rows[*][contribution_level]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"deviceName\": \"SmartHome Hub\",\n  \"macAddress\": \"00:1B:44:11:3A:B7\",\n  \"firmwareVersion\": \"2.3.1\",\n  \"settings\": {\n    \"network\": {\n      \"wifi\": \"enabled\",\n      \"ssid\": \"HomeNetwork\",\n      \"encryption\": \"WPA2\"\n    },\n    \"sensors\": [\n      {\n        \"type\": \"temperature\",\n        \"enabled\": true,\n        \"interval\": 60\n      },\n      {\n        \"type\": \"humidity\",\n        \"enabled\": true,\n        \"interval\": 120\n      },\n      {\n        \"type\": \"motion\",\n        \"enabled\": false,\n        \"interval\": 0\n      }\n    ],\n    \"actuators\": [\n      {\n        \"name\": \"lightSwitch\",\n        \"status\": \"off\"\n      },\n      {\n        \"name\": \"thermostat\",\n        \"status\": \"on\"\n      }\n    ]\n  },\n  \"scenes\": [\n    {\n      \"name\": \"Evening\",\n      \"actions\": [\n        {\n          \"device\": \"lights\",\n          \"action\": \"dim\",\n          \"level\": 50\n        },\n        {\n          \"device\": \"curtains\",\n          \"action\": \"close\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Away\",\n      \"actions\": [\n        {\n          \"device\": \"alarm\",\n          \"action\": \"arm\"\n        },\n        {\n          \"device\": \"lights\",\n          \"action\": \"off\"\n        }\n      ]\n    }\n  ],\n  \"lastUpdated\": \"2023-10-12T08:45:00Z\"\n}\n</code>",
            "feature_requirements": "• A header row must be included that lists the converted fields, ensuring the CSV output begins with identifiable column labels.  \n• The CSV must contain columns for the top-level device details: deviceName, macAddress, firmwareVersion, and lastUpdated.  \n• All network settings from the nested \"settings\" section (including wifi state, ssid, and encryption) must be represented, with identifiable labels matching the JSON keys.  \n• The array \"sensors\" must be converted so that each sensor’s properties (type, enabled, and interval) are output in a measurable way, either as multiple rows with an identifying sensor indicator or as distinct columns.  \n• The array \"actuators\" must be converted with clear identifiers, displaying each actuator’s name and status in a verifiable CSV format.  \n• The \"scenes\" array must be converted so that each scene’s name is clearly output along with its associated actions, where each action includes identifiable details such as device, action, and the optional level field when present.  \n• A clear mapping from nested objects and arrays to flat CSV rows or columns must be used, ensuring that every JSON element is represented in a verifiable and measurable format.  \n• The CSV must use commas as delimiters between values, ensuring consistency throughout the output.",
            "task_id": "050230",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][deviceName]",
                "rows[0][macAddress]",
                "rows[0][firmwareVersion]",
                "rows[0][lastUpdated]",
                "rows[0][settings][wifiState]",
                "rows[0][settings][ssid]",
                "rows[0][settings][encryption]",
                "rows[*][sensors][type]",
                "rows[*][sensors][enabled]",
                "rows[*][sensors][interval]",
                "rows[*][actuators][name]",
                "rows[*][actuators][status]",
                "rows[*][scenes][name]",
                "rows[*][scenes][actions][device]",
                "rows[*][scenes][actions][action]",
                "rows[*][scenes][actions][level]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050230_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"deviceName\": \"SmartHome Hub\",\n  \"macAddress\": \"00:1B:44:11:3A:B7\",\n  \"firmwareVersion\": \"2.3.1\",\n  \"settings\": {\n    \"network\": {\n      \"wifi\": \"enabled\",\n      \"ssid\": \"HomeNetwork\",\n      \"encryption\": \"WPA2\"\n    },\n    \"sensors\": [\n      {\n        \"type\": \"temperature\",\n        \"enabled\": true,\n        \"interval\": 60\n      },\n      {\n        \"type\": \"humidity\",\n        \"enabled\": true,\n        \"interval\": 120\n      },\n      {\n        \"type\": \"motion\",\n        \"enabled\": false,\n        \"interval\": 0\n      }\n    ],\n    \"actuators\": [\n      {\n        \"name\": \"lightSwitch\",\n        \"status\": \"off\"\n      },\n      {\n        \"name\": \"thermostat\",\n        \"status\": \"on\"\n      }\n    ]\n  },\n  \"scenes\": [\n    {\n      \"name\": \"Evening\",\n      \"actions\": [\n        {\n          \"device\": \"lights\",\n          \"action\": \"dim\",\n          \"level\": 50\n        },\n        {\n          \"device\": \"curtains\",\n          \"action\": \"close\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Away\",\n      \"actions\": [\n        {\n          \"device\": \"alarm\",\n          \"action\": \"arm\"\n        },\n        {\n          \"device\": \"lights\",\n          \"action\": \"off\"\n        }\n      ]\n    }\n  ],\n  \"lastUpdated\": \"2023-10-12T08:45:00Z\"\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050230_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][deviceName]",
                                "rows[0][macAddress]",
                                "rows[0][firmwareVersion]",
                                "rows[0][lastUpdated]",
                                "rows[0][settings][wifiState]",
                                "rows[0][settings][ssid]",
                                "rows[0][settings][encryption]",
                                "rows[*][sensors][type]",
                                "rows[*][sensors][enabled]",
                                "rows[*][sensors][interval]",
                                "rows[*][actuators][name]",
                                "rows[*][actuators][status]",
                                "rows[*][scenes][name]",
                                "rows[*][scenes][actions][device]",
                                "rows[*][scenes][actions][action]",
                                "rows[*][scenes][actions][level]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"restaurant\": {\n    \"name\": \"Sunrise Diner\",\n    \"location\": {\n      \"address\": \"123 Main St\",\n      \"city\": \"Hometown\",\n      \"zip\": \"12345\",\n      \"country\": \"USA\"\n    },\n    \"menu\": [\n      {\n        \"category\": \"Breakfast\",\n        \"items\": [\n          {\n            \"name\": \"Pancakes\",\n            \"price\": 5.99,\n            \"ingredients\": [\"flour\", \"milk\", \"eggs\", \"maple syrup\"]\n          },\n          {\n            \"name\": \"Omelette\",\n            \"price\": 7.49,\n            \"ingredients\": [\"eggs\", \"cheese\", \"spinach\", \"mushrooms\"]\n          }\n        ]\n      },\n      {\n        \"category\": \"Lunch\",\n        \"items\": [\n          {\n            \"name\": \"Grilled Cheese Sandwich\",\n            \"price\": 6.49,\n            \"ingredients\": [\"bread\", \"cheese\", \"butter\"]\n          },\n          {\n            \"name\": \"Caesar Salad\",\n            \"price\": 8.99,\n            \"ingredients\": [\"romaine lettuce\", \"croutons\", \"parmesan\", \"caesar dressing\"]\n          }\n        ]\n      }\n    ],\n    \"ratings\": {\n      \"google\": 4.3,\n      \"yelp\": 4.0,\n      \"reviewCount\": 215\n    },\n    \"contact\": {\n      \"phone\": \"555-123-4567\",\n      \"email\": \"info@sunrisediner.com\"\n    }\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row with clearly labeled column names.  \n• Each row in the CSV must represent one menu item from the restaurant's menu.  \n• Every row must include the restaurant's general information such as Name, Address, City, ZIP code, and Country.  \n• Each row should contain contact details including Phone number and Email.  \n• The CSV must include rating values (Google rating, Yelp rating, and Review Count) as separate fields.  \n• For each menu item row, include the menu category (e.g., Breakfast, Lunch) as a distinct column.  \n• Menu item details must include the Item Name and Price in their own dedicated columns.  \n• Ingredients for each menu item must be consolidated into a single CSV field, with items separated by a consistent delimiter.",
            "task_id": "050231",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][Name]",
                "rows[*][Address]",
                "rows[*][City]",
                "rows[*][ZIP code]",
                "rows[*][Country]",
                "rows[*][Phone number]",
                "rows[*][Email]",
                "rows[*][Google rating]",
                "rows[*][Yelp rating]",
                "rows[*][Review Count]",
                "rows[*][Menu category]",
                "rows[*][Item Name]",
                "rows[*][Price]",
                "rows[*][Ingredients]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050231_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"restaurant\": {\n    \"name\": \"Sunrise Diner\",\n    \"location\": {\n      \"address\": \"123 Main St\",\n      \"city\": \"Hometown\",\n      \"zip\": \"12345\",\n      \"country\": \"USA\"\n    },\n    \"menu\": [\n      {\n        \"category\": \"Breakfast\",\n        \"items\": [\n          {\n            \"name\": \"Pancakes\",\n            \"price\": 5.99,\n            \"ingredients\": [\"flour\", \"milk\", \"eggs\", \"maple syrup\"]\n          },\n          {\n            \"name\": \"Omelette\",\n            \"price\": 7.49,\n            \"ingredients\": [\"eggs\", \"cheese\", \"spinach\", \"mushrooms\"]\n          }\n        ]\n      },\n      {\n        \"category\": \"Lunch\",\n        \"items\": [\n          {\n            \"name\": \"Grilled Cheese Sandwich\",\n            \"price\": 6.49,\n            \"ingredients\": [\"bread\", \"cheese\", \"butter\"]\n          },\n          {\n            \"name\": \"Caesar Salad\",\n            \"price\": 8.99,\n            \"ingredients\": [\"romaine lettuce\", \"croutons\", \"parmesan\", \"caesar dressing\"]\n          }\n        ]\n      }\n    ],\n    \"ratings\": {\n      \"google\": 4.3,\n      \"yelp\": 4.0,\n      \"reviewCount\": 215\n    },\n    \"contact\": {\n      \"phone\": \"555-123-4567\",\n      \"email\": \"info@sunrisediner.com\"\n    }\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050231_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][Name]",
                                "rows[*][Address]",
                                "rows[*][City]",
                                "rows[*][ZIP code]",
                                "rows[*][Country]",
                                "rows[*][Phone number]",
                                "rows[*][Email]",
                                "rows[*][Google rating]",
                                "rows[*][Yelp rating]",
                                "rows[*][Review Count]",
                                "rows[*][Menu category]",
                                "rows[*][Item Name]",
                                "rows[*][Price]",
                                "rows[*][Ingredients]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"person\": {\n    \"name\": \"Alice Johnson\",\n    \"age\": 32,\n    \"address\": {\n      \"street\": \"123 Maple Street\",\n      \"city\": \"Springfield\",\n      \"postalCode\": \"62704\"\n    }\n  },\n  \"education\": [\n    {\n      \"degree\": \"BSc\",\n      \"major\": \"Computer Science\",\n      \"year\": 2010\n    },\n    {\n      \"degree\": \"MSc\",\n      \"major\": \"Software Engineering\",\n      \"year\": 2012\n    }\n  ],\n  \"experience\": [\n    {\n      \"title\": \"Software Developer\",\n      \"company\": \"Acme Corp\",\n      \"years\": 3\n    },\n    {\n      \"title\": \"Senior Developer\",\n      \"company\": \"Tech Innovations\",\n      \"years\": 5\n    }\n  ],\n  \"preferences\": {\n    \"newsletter\": true,\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false\n    },\n    \"languages\": [\"English\", \"French\"]\n  },\n  \"activities\": [\n    \"coding\",\n    \"hiking\",\n    \"photography\"\n  ]\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row listing all column names that correspond to the keys from the JSON structure.  \n• Data from the \"person\" object must be flattened into individual columns such as name, age, address_street, address_city, and address_postalCode.  \n• Each entry in the \"education\" array must be represented as a separate record (or section) with columns for degree, major, and year.  \n• Each entry in the \"experience\" array must be represented as a separate record (or section) with columns for title, company, and years.  \n• The CSV output must include columns for the \"preferences\" object, specifically columns for newsletter, notifications_email, and notifications_sms.  \n• The \"languages\" array within \"preferences\" must be consolidated into a single CSV field using a clear delimiter (e.g., a comma) to list all languages.  \n• The \"activities\" array must be represented in a single CSV field, with the multiple activity values concatenated using a specified delimiter.",
            "task_id": "050232",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][name]",
                "rows[0][age]",
                "rows[0][address_street]",
                "rows[0][address_city]",
                "rows[0][address_postalCode]",
                "rows[*][degree]",
                "rows[*][major]",
                "rows[*][year]",
                "rows[*][title]",
                "rows[*][company]",
                "rows[*][years]",
                "rows[0][newsletter]",
                "rows[0][notifications_email]",
                "rows[0][notifications_sms]",
                "rows[0][languages]",
                "rows[0][activities]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050232_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"person\": {\n    \"name\": \"Alice Johnson\",\n    \"age\": 32,\n    \"address\": {\n      \"street\": \"123 Maple Street\",\n      \"city\": \"Springfield\",\n      \"postalCode\": \"62704\"\n    }\n  },\n  \"education\": [\n    {\n      \"degree\": \"BSc\",\n      \"major\": \"Computer Science\",\n      \"year\": 2010\n    },\n    {\n      \"degree\": \"MSc\",\n      \"major\": \"Software Engineering\",\n      \"year\": 2012\n    }\n  ],\n  \"experience\": [\n    {\n      \"title\": \"Software Developer\",\n      \"company\": \"Acme Corp\",\n      \"years\": 3\n    },\n    {\n      \"title\": \"Senior Developer\",\n      \"company\": \"Tech Innovations\",\n      \"years\": 5\n    }\n  ],\n  \"preferences\": {\n    \"newsletter\": true,\n    \"notifications\": {\n      \"email\": true,\n      \"sms\": false\n    },\n    \"languages\": [\"English\", \"French\"]\n  },\n  \"activities\": [\n    \"coding\",\n    \"hiking\",\n    \"photography\"\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050232_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][name]",
                                "rows[0][age]",
                                "rows[0][address_street]",
                                "rows[0][address_city]",
                                "rows[0][address_postalCode]",
                                "rows[*][degree]",
                                "rows[*][major]",
                                "rows[*][year]",
                                "rows[*][title]",
                                "rows[*][company]",
                                "rows[*][years]",
                                "rows[0][newsletter]",
                                "rows[0][notifications_email]",
                                "rows[0][notifications_sms]",
                                "rows[0][languages]",
                                "rows[0][activities]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"device_id\": \"WS-1001\",\n  \"location\": {\n    \"latitude\": 37.7749,\n    \"longitude\": -122.4194,\n    \"elevation\": 15\n  },\n  \"readings\": [\n    {\n      \"time\": \"2023-10-01T09:00:00Z\",\n      \"temperature\": 20.5,\n      \"humidity\": 60\n    },\n    {\n      \"time\": \"2023-10-01T10:00:00Z\",\n      \"temperature\": 21.0,\n      \"humidity\": 58\n    },\n    {\n      \"time\": \"2023-10-01T11:00:00Z\",\n      \"temperature\": 22.3,\n      \"humidity\": 55\n    }\n  ],\n  \"status\": \"active\",\n  \"maintenance\": {\n    \"last_service\": \"2023-09-15\",\n    \"next_service\": \"2024-03-15\"\n  }\n}\n</code>",
            "feature_requirements": "• The output must be in CSV format with comma-separated values.  \n• The first row must be a header row containing the column names.  \n• The header row must include the following columns: device_id, latitude, longitude, elevation, time, temperature, humidity, status, last_service, and next_service.  \n• For each entry in the \"readings\" list of the JSON, the CSV must include one corresponding row.  \n• Each data row must include the reading-specific values (time, temperature, humidity) along with the associated device-level data (device_id, status), location data (latitude, longitude, elevation), and maintenance information (last_service, next_service).  \n• The output must have exactly one header row and one data row for every reading entry in the JSON.",
            "task_id": "050233",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][device_id]",
                "rows[0][latitude]",
                "rows[0][longitude]",
                "rows[0][elevation]",
                "rows[0][time]",
                "rows[0][temperature]",
                "rows[0][humidity]",
                "rows[0][status]",
                "rows[0][last_service]",
                "rows[0][next_service]",
                "rows[*][device_id]",
                "rows[*][latitude]",
                "rows[*][longitude]",
                "rows[*][elevation]",
                "rows[*][time]",
                "rows[*][temperature]",
                "rows[*][humidity]",
                "rows[*][status]",
                "rows[*][last_service]",
                "rows[*][next_service]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050233_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"device_id\": \"WS-1001\",\n  \"location\": {\n    \"latitude\": 37.7749,\n    \"longitude\": -122.4194,\n    \"elevation\": 15\n  },\n  \"readings\": [\n    {\n      \"time\": \"2023-10-01T09:00:00Z\",\n      \"temperature\": 20.5,\n      \"humidity\": 60\n    },\n    {\n      \"time\": \"2023-10-01T10:00:00Z\",\n      \"temperature\": 21.0,\n      \"humidity\": 58\n    },\n    {\n      \"time\": \"2023-10-01T11:00:00Z\",\n      \"temperature\": 22.3,\n      \"humidity\": 55\n    }\n  ],\n  \"status\": \"active\",\n  \"maintenance\": {\n    \"last_service\": \"2023-09-15\",\n    \"next_service\": \"2024-03-15\"\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050233_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][device_id]",
                                "rows[0][latitude]",
                                "rows[0][longitude]",
                                "rows[0][elevation]",
                                "rows[0][time]",
                                "rows[0][temperature]",
                                "rows[0][humidity]",
                                "rows[0][status]",
                                "rows[0][last_service]",
                                "rows[0][next_service]",
                                "rows[*][device_id]",
                                "rows[*][latitude]",
                                "rows[*][longitude]",
                                "rows[*][elevation]",
                                "rows[*][time]",
                                "rows[*][temperature]",
                                "rows[*][humidity]",
                                "rows[*][status]",
                                "rows[*][last_service]",
                                "rows[*][next_service]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"users\": [\n    {\n      \"id\": 101,\n      \"name\": \"Alice Smith\",\n      \"role\": \"admin\",\n      \"preferences\": {\n        \"theme\": \"dark\",\n        \"notifications\": true\n      }\n    },\n    {\n      \"id\": 102,\n      \"name\": \"Bob Johnson\",\n      \"role\": \"user\",\n      \"preferences\": {\n        \"theme\": \"light\",\n        \"notifications\": false\n      }\n    }\n  ],\n  \"settings\": {\n    \"siteTitle\": \"Data Conversion Platform\",\n    \"active\": true,\n    \"supportedFormats\": [\"JSON\", \"XML\", \"CSV\"]\n  },\n  \"metrics\": {\n    \"uptime\": \"99.99%\",\n    \"responseTimeMs\": 120,\n    \"errorCount\": 3\n  },\n  \"metadata\": {\n    \"version\": \"2.4.1\",\n    \"releaseDate\": \"2023-10-10\",\n    \"contributors\": [\"Alice Smith\", \"Bob Johnson\", \"Carol Lee\"]\n  }\n}\n</code>",
            "feature_requirements": "• The output must include a header row with clearly labeled column names.\n• For the \"users\" array, the CSV must contain one row per user entry.\n• Each user row must include columns for \"id\", \"name\", and \"role\".\n• The user row must also include columns for nested preference values, specifically \"preferences.theme\" and \"preferences.notifications\".\n• The output must convert boolean values into their text equivalents (e.g., \"true\" or \"false\").\n• Nested objects outside the \"users\" array (such as \"settings\", \"metrics\", and \"metadata\") must be flattened into their individual key/value pairs with unique column names.\n• For the \"settings\" object, the CSV must include columns for \"siteTitle\", \"active\", and represent the \"supportedFormats\" list as a single, delimited string.\n• For the \"metrics\" object, the CSV must have columns for \"uptime\", \"responseTimeMs\", and \"errorCount\".\n• For the \"metadata\" object, columns must be provided for \"version\", \"releaseDate\", and the \"contributors\" list must be represented as a single, delimited string.\n• Every field in the CSV must reflect the exact keys and value types from the JSON in a flattened and verifiable manner.",
            "task_id": "050234",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[*][id]",
                "rows[*][name]",
                "rows[*][role]",
                "rows[*][preferences.theme]",
                "rows[*][preferences.notifications]",
                "rows[*][siteTitle]",
                "rows[*][active]",
                "rows[*][supportedFormats]",
                "rows[*][uptime]",
                "rows[*][responseTimeMs]",
                "rows[*][errorCount]",
                "rows[*][version]",
                "rows[*][releaseDate]",
                "rows[*][contributors]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050234_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"users\": [\n    {\n      \"id\": 101,\n      \"name\": \"Alice Smith\",\n      \"role\": \"admin\",\n      \"preferences\": {\n        \"theme\": \"dark\",\n        \"notifications\": true\n      }\n    },\n    {\n      \"id\": 102,\n      \"name\": \"Bob Johnson\",\n      \"role\": \"user\",\n      \"preferences\": {\n        \"theme\": \"light\",\n        \"notifications\": false\n      }\n    }\n  ],\n  \"settings\": {\n    \"siteTitle\": \"Data Conversion Platform\",\n    \"active\": true,\n    \"supportedFormats\": [\"JSON\", \"XML\", \"CSV\"]\n  },\n  \"metrics\": {\n    \"uptime\": \"99.99%\",\n    \"responseTimeMs\": 120,\n    \"errorCount\": 3\n  },\n  \"metadata\": {\n    \"version\": \"2.4.1\",\n    \"releaseDate\": \"2023-10-10\",\n    \"contributors\": [\"Alice Smith\", \"Bob Johnson\", \"Carol Lee\"]\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050234_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[*][id]",
                                "rows[*][name]",
                                "rows[*][role]",
                                "rows[*][preferences.theme]",
                                "rows[*][preferences.notifications]",
                                "rows[*][siteTitle]",
                                "rows[*][active]",
                                "rows[*][supportedFormats]",
                                "rows[*][uptime]",
                                "rows[*][responseTimeMs]",
                                "rows[*][errorCount]",
                                "rows[*][version]",
                                "rows[*][releaseDate]",
                                "rows[*][contributors]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n    \"company\": \"Omega Solutions\",\n    \"headquarters\": {\n        \"address\": \"987 Industrial Way\",\n        \"city\": \"Metropolis\",\n        \"state\": \"MT\",\n        \"zip\": \"54321\"\n    },\n    \"departments\": [\n        {\n            \"name\": \"Research and Development\",\n            \"teams\": [\n                {\n                    \"team_name\": \"Innovation Lab\",\n                    \"projects\": [\n                        {\"project_id\": \"R&D101\", \"project_name\": \"Next-Gen AI\", \"budget\": 1200000},\n                        {\"project_id\": \"R&D102\", \"project_name\": \"Quantum Computing\", \"budget\": 1500000}\n                    ]\n                },\n                {\n                    \"team_name\": \"Tech Advancements\",\n                    \"projects\": [\n                        {\"project_id\": \"R&D103\", \"project_name\": \"Autonomous Vehicles\", \"budget\": 2000000}\n                    ]\n                }\n            ]\n        },\n        {\n            \"name\": \"Marketing\",\n            \"teams\": [\n                {\n                    \"team_name\": \"Digital Strategy\",\n                    \"campaigns\": [\n                        {\"campaign_id\": \"MKT201\", \"campaign_name\": \"Spring Launch\", \"reach\": 500000}\n                    ]\n                }\n            ]\n        }\n    ],\n    \"staff\": [\n        {\"id\": \"EMP1001\", \"name\": \"Alice Johnson\", \"position\": \"CEO\"},\n        {\"id\": \"EMP1002\", \"name\": \"Bob Smith\", \"position\": \"CTO\"},\n        {\"id\": \"EMP1003\", \"name\": \"Carlos Davis\", \"position\": \"CMO\"}\n    ],\n    \"last_updated\": \"2023-10-05T14:30:00Z\"\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row that lists each derived field, such as company, headquarters address, city, state, zip, department, team, project/campaign ID, project/campaign name, budget/reach, staff ID, staff name, staff position, and last_updated.\n• Every row in the CSV must represent a flattened record from one level of nested JSON data, ensuring that nested lists (departments, teams, projects, campaigns, and staff) are broken out into individual rows.\n• The headquarters information (address, city, state, zip) should appear in every row corresponding to a department/team record to indicate its association with the company.\n• For departments that include both projects (e.g., Research and Development teams) and campaigns (e.g., Marketing teams), the CSV must clearly distinguish these entities in separate rows by including the relevant fields for projects (project_id, project_name, budget) and campaigns (campaign_id, campaign_name, reach).\n• The CSV conversion must flatten nested team data so that each row includes the team name along with its corresponding department.\n• Staff records must be represented with columns for staff ID, name, and position, ensuring they are output as separate rows distinct from project or campaign records.\n• The last_updated timestamp from the JSON should be included in every row (or in a clearly associated summary row) in its ISO 8601 format.\n• All numeric values (e.g., budget and reach) must be preserved accurately as numbers in the CSV output, verifying that their values directly correspond to those in the JSON.",
            "task_id": "050235",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][company]",
                "rows[0][headquarters address]",
                "rows[0][city]",
                "rows[0][state]",
                "rows[0][zip]",
                "rows[0][department]",
                "rows[0][team]",
                "rows[0][project_id]",
                "rows[0][project_name]",
                "rows[0][budget]",
                "rows[0][campaign_id]",
                "rows[0][campaign_name]",
                "rows[0][reach]",
                "rows[0][staff ID]",
                "rows[0][staff name]",
                "rows[0][staff position]",
                "rows[0][last_updated]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050235_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n    \"company\": \"Omega Solutions\",\n    \"headquarters\": {\n        \"address\": \"987 Industrial Way\",\n        \"city\": \"Metropolis\",\n        \"state\": \"MT\",\n        \"zip\": \"54321\"\n    },\n    \"departments\": [\n        {\n            \"name\": \"Research and Development\",\n            \"teams\": [\n                {\n                    \"team_name\": \"Innovation Lab\",\n                    \"projects\": [\n                        {\"project_id\": \"R&D101\", \"project_name\": \"Next-Gen AI\", \"budget\": 1200000},\n                        {\"project_id\": \"R&D102\", \"project_name\": \"Quantum Computing\", \"budget\": 1500000}\n                    ]\n                },\n                {\n                    \"team_name\": \"Tech Advancements\",\n                    \"projects\": [\n                        {\"project_id\": \"R&D103\", \"project_name\": \"Autonomous Vehicles\", \"budget\": 2000000}\n                    ]\n                }\n            ]\n        },\n        {\n            \"name\": \"Marketing\",\n            \"teams\": [\n                {\n                    \"team_name\": \"Digital Strategy\",\n                    \"campaigns\": [\n                        {\"campaign_id\": \"MKT201\", \"campaign_name\": \"Spring Launch\", \"reach\": 500000}\n                    ]\n                }\n            ]\n        }\n    ],\n    \"staff\": [\n        {\"id\": \"EMP1001\", \"name\": \"Alice Johnson\", \"position\": \"CEO\"},\n        {\"id\": \"EMP1002\", \"name\": \"Bob Smith\", \"position\": \"CTO\"},\n        {\"id\": \"EMP1003\", \"name\": \"Carlos Davis\", \"position\": \"CMO\"}\n    ],\n    \"last_updated\": \"2023-10-05T14:30:00Z\"\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050235_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][company]",
                                "rows[0][headquarters address]",
                                "rows[0][city]",
                                "rows[0][state]",
                                "rows[0][zip]",
                                "rows[0][department]",
                                "rows[0][team]",
                                "rows[0][project_id]",
                                "rows[0][project_name]",
                                "rows[0][budget]",
                                "rows[0][campaign_id]",
                                "rows[0][campaign_name]",
                                "rows[0][reach]",
                                "rows[0][staff ID]",
                                "rows[0][staff name]",
                                "rows[0][staff position]",
                                "rows[0][last_updated]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"user\": {\n    \"id\": \"user123\",\n    \"name\": \"Alice Smith\",\n    \"contact\": {\n      \"email\": \"alice@example.com\",\n      \"phone\": \"+1234567890\"\n    }\n  },\n  \"preferences\": {\n    \"language\": \"en\",\n    \"theme\": \"light\",\n    \"notifications\": true\n  },\n  \"orders\": [\n    {\n      \"orderId\": \"ord001\",\n      \"date\": \"2023-01-15\",\n      \"total\": 250.75,\n      \"items\": [\n        {\n          \"itemId\": \"itm101\",\n          \"name\": \"Wireless Keyboard\",\n          \"price\": 50.25,\n          \"quantity\": 1\n        },\n        {\n          \"itemId\": \"itm102\",\n          \"name\": \"Wireless Mouse\",\n          \"price\": 30.50,\n          \"quantity\": 2\n        }\n      ]\n    },\n    {\n      \"orderId\": \"ord002\",\n      \"date\": \"2023-02-20\",\n      \"total\": 120.00,\n      \"items\": [\n        {\n          \"itemId\": \"itm103\",\n          \"name\": \"USB-C Hub\",\n          \"price\": 60.00,\n          \"quantity\": 1\n        },\n        {\n          \"itemId\": \"itm104\",\n          \"name\": \"Laptop Stand\",\n          \"price\": 60.00,\n          \"quantity\": 1\n        }\n      ]\n    }\n  ],\n  \"account\": {\n    \"status\": \"active\",\n    \"createdAt\": \"2022-11-05T08:30:00Z\",\n    \"lastLogin\": \"2023-03-01T17:45:00Z\"\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row listing all field names derived from the JSON keys.  \n• The CSV must contain columns for user information, specifically user id, user name, contact email, and contact phone.  \n• The CSV must include columns for user preferences such as language, theme, and notifications.  \n• The CSV must incorporate order information by including columns for order id, order date, and order total for each order entry.  \n• For each order, the CSV must represent each item in the order separately; therefore, include columns for item id, item name, item price, and item quantity, with one row per order-item pair.  \n• The CSV must contain columns for account details, including account status, account creation date (createdAt), and last login date (lastLogin).  \n• Each CSV row must associate a specific order item with its corresponding user, preferences, order, and account data, ensuring all related fields are present in every row.",
            "task_id": "050236",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050236_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"user\": {\n    \"id\": \"user123\",\n    \"name\": \"Alice Smith\",\n    \"contact\": {\n      \"email\": \"alice@example.com\",\n      \"phone\": \"+1234567890\"\n    }\n  },\n  \"preferences\": {\n    \"language\": \"en\",\n    \"theme\": \"light\",\n    \"notifications\": true\n  },\n  \"orders\": [\n    {\n      \"orderId\": \"ord001\",\n      \"date\": \"2023-01-15\",\n      \"total\": 250.75,\n      \"items\": [\n        {\n          \"itemId\": \"itm101\",\n          \"name\": \"Wireless Keyboard\",\n          \"price\": 50.25,\n          \"quantity\": 1\n        },\n        {\n          \"itemId\": \"itm102\",\n          \"name\": \"Wireless Mouse\",\n          \"price\": 30.50,\n          \"quantity\": 2\n        }\n      ]\n    },\n    {\n      \"orderId\": \"ord002\",\n      \"date\": \"2023-02-20\",\n      \"total\": 120.00,\n      \"items\": [\n        {\n          \"itemId\": \"itm103\",\n          \"name\": \"USB-C Hub\",\n          \"price\": 60.00,\n          \"quantity\": 1\n        },\n        {\n          \"itemId\": \"itm104\",\n          \"name\": \"Laptop Stand\",\n          \"price\": 60.00,\n          \"quantity\": 1\n        }\n      ]\n    }\n  ],\n  \"account\": {\n    \"status\": \"active\",\n    \"createdAt\": \"2022-11-05T08:30:00Z\",\n    \"lastLogin\": \"2023-03-01T17:45:00Z\"\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050236_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"metadata\": {\n    \"title\": \"Travel Itinerary\",\n    \"version\": \"1.0\",\n    \"author\": \"Alice Johnson\"\n  },\n  \"schedule\": {\n    \"startDate\": \"2023-11-01T09:00:00\",\n    \"endDate\": \"2023-11-07T18:00:00\"\n  },\n  \"destinations\": [\n    {\n      \"name\": \"Central Park\",\n      \"location\": {\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"coordinates\": {\n          \"latitude\": 40.785091,\n          \"longitude\": -73.968285\n        }\n      },\n      \"activities\": [\n        \"walking\",\n        \"picnic\",\n        \"jogging\"\n      ]\n    },\n    {\n      \"name\": \"Eiffel Tower\",\n      \"location\": {\n        \"city\": \"Paris\",\n        \"country\": \"France\",\n        \"coordinates\": {\n          \"latitude\": 48.8584,\n          \"longitude\": 2.2945\n        }\n      },\n      \"activities\": [\n        \"sightseeing\",\n        \"photography\",\n        \"dining\"\n      ]\n    }\n  ],\n  \"notes\": [\n    {\n      \"date\": \"2023-11-01\",\n      \"content\": \"Check-in at the hotel and get local transport information.\"\n    },\n    {\n      \"date\": \"2023-11-03\",\n      \"content\": \"Visit Central Park in the morning and evening stroll in the city.\"\n    }\n  ]\n}\n</code>",
            "feature_requirements": "• The CSV output must use comma-separated values with an initial header row defining each column.\n• There must be a section representing the metadata, including columns for title, version, and author.\n• There must be a section representing the schedule, including columns for startDate and endDate.\n• There must be a section for destinations where each row contains the destination name, its location details (city, state or country), and the geographic coordinates (latitude and longitude).\n• In the destinations section, the list of activities must be represented in a single cell per destination, with individual activities clearly delimited.\n• There must be a section for notes, with each row containing a note’s date and its corresponding content.\n• Every CSV row must have the number of values matching the header columns for that section, ensuring a consistent and verifiable structure.\n• The conversion must accurately flatten nested JSON objects (e.g., location and coordinates) into individual CSV columns.",
            "task_id": "050237",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][title]",
                "rows[0][version]",
                "rows[0][author]",
                "rows[0][startDate]",
                "rows[0][endDate]",
                "rows[0][destinationName]",
                "rows[0][city]",
                "rows[0][state]",
                "rows[0][country]",
                "rows[0][latitude]",
                "rows[0][longitude]",
                "rows[0][activities]",
                "rows[0][noteDate]",
                "rows[0][noteContent]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050237_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"metadata\": {\n    \"title\": \"Travel Itinerary\",\n    \"version\": \"1.0\",\n    \"author\": \"Alice Johnson\"\n  },\n  \"schedule\": {\n    \"startDate\": \"2023-11-01T09:00:00\",\n    \"endDate\": \"2023-11-07T18:00:00\"\n  },\n  \"destinations\": [\n    {\n      \"name\": \"Central Park\",\n      \"location\": {\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"coordinates\": {\n          \"latitude\": 40.785091,\n          \"longitude\": -73.968285\n        }\n      },\n      \"activities\": [\n        \"walking\",\n        \"picnic\",\n        \"jogging\"\n      ]\n    },\n    {\n      \"name\": \"Eiffel Tower\",\n      \"location\": {\n        \"city\": \"Paris\",\n        \"country\": \"France\",\n        \"coordinates\": {\n          \"latitude\": 48.8584,\n          \"longitude\": 2.2945\n        }\n      },\n      \"activities\": [\n        \"sightseeing\",\n        \"photography\",\n        \"dining\"\n      ]\n    }\n  ],\n  \"notes\": [\n    {\n      \"date\": \"2023-11-01\",\n      \"content\": \"Check-in at the hotel and get local transport information.\"\n    },\n    {\n      \"date\": \"2023-11-03\",\n      \"content\": \"Visit Central Park in the morning and evening stroll in the city.\"\n    }\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050237_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][title]",
                                "rows[0][version]",
                                "rows[0][author]",
                                "rows[0][startDate]",
                                "rows[0][endDate]",
                                "rows[0][destinationName]",
                                "rows[0][city]",
                                "rows[0][state]",
                                "rows[0][country]",
                                "rows[0][latitude]",
                                "rows[0][longitude]",
                                "rows[0][activities]",
                                "rows[0][noteDate]",
                                "rows[0][noteContent]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"name\": \"The Green Cafe\",\n  \"location\": {\n    \"address\": \"123 Maple Street\",\n    \"city\": \"Springfield\",\n    \"province\": \"IL\",\n    \"postalCode\": \"62704\",\n    \"country\": \"USA\"\n  },\n  \"menu\": [\n    {\n      \"category\": \"Beverages\",\n      \"items\": [\n        { \"itemName\": \"Espresso\", \"price\": 2.5, \"calories\": 5 },\n        { \"itemName\": \"Latte\", \"price\": 3.5, \"calories\": 150 }\n      ]\n    },\n    {\n      \"category\": \"Snacks\",\n      \"items\": [\n        { \"itemName\": \"Muffin\", \"price\": 2.0, \"calories\": 300 },\n        { \"itemName\": \"Croissant\", \"price\": 2.5, \"calories\": 250 }\n      ]\n    }\n  ],\n  \"staff\": {\n    \"total\": 12,\n    \"roles\": [\n      { \"role\": \"Barista\", \"count\": 4 },\n      { \"role\": \"Chef\", \"count\": 3 },\n      { \"role\": \"Manager\", \"count\": 1 },\n      { \"role\": \"Server\", \"count\": 4 }\n    ]\n  },\n  \"hours\": {\n    \"Monday\": \"07:30-18:00\",\n    \"Tuesday\": \"07:30-18:00\",\n    \"Wednesday\": \"07:30-18:00\",\n    \"Thursday\": \"07:30-18:00\",\n    \"Friday\": \"07:30-20:00\",\n    \"Saturday\": \"08:00-20:00\",\n    \"Sunday\": \"08:00-16:00\"\n  }\n}\n</code>",
            "feature_requirements": "• A CSV section representing the cafe’s basic information that includes a header row with a field for the cafe name along with separate columns for the location details (address, city, province, postal code, and country).  \n• A CSV section for menu items with a header row that includes columns for the category name, item name, price, and calories, and one row per menu item.  \n• Each menu item row must include the associated category alongside item-specific attributes so that items from different categories are distinguishable.  \n• A CSV section for staff information that contains a header row with columns for role and count, representing each staff role and its count.  \n• The staff section should also include a total staff count in a separate, clearly labeled field or row if applicable.  \n• A CSV section for operating hours with a header row specifying the day of the week and the corresponding opening-closing time range, one row per day.  \n• Every CSV table must include a header row followed by rows of data corresponding exactly to the information provided in the JSON.  \n• The resulting CSV content must be plain text, comma-separated, and structured so that each required element from the JSON is verifiable by matching the provided headers and their respective data values.",
            "task_id": "050238",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050238_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"name\": \"The Green Cafe\",\n  \"location\": {\n    \"address\": \"123 Maple Street\",\n    \"city\": \"Springfield\",\n    \"province\": \"IL\",\n    \"postalCode\": \"62704\",\n    \"country\": \"USA\"\n  },\n  \"menu\": [\n    {\n      \"category\": \"Beverages\",\n      \"items\": [\n        { \"itemName\": \"Espresso\", \"price\": 2.5, \"calories\": 5 },\n        { \"itemName\": \"Latte\", \"price\": 3.5, \"calories\": 150 }\n      ]\n    },\n    {\n      \"category\": \"Snacks\",\n      \"items\": [\n        { \"itemName\": \"Muffin\", \"price\": 2.0, \"calories\": 300 },\n        { \"itemName\": \"Croissant\", \"price\": 2.5, \"calories\": 250 }\n      ]\n    }\n  ],\n  \"staff\": {\n    \"total\": 12,\n    \"roles\": [\n      { \"role\": \"Barista\", \"count\": 4 },\n      { \"role\": \"Chef\", \"count\": 3 },\n      { \"role\": \"Manager\", \"count\": 1 },\n      { \"role\": \"Server\", \"count\": 4 }\n    ]\n  },\n  \"hours\": {\n    \"Monday\": \"07:30-18:00\",\n    \"Tuesday\": \"07:30-18:00\",\n    \"Wednesday\": \"07:30-18:00\",\n    \"Thursday\": \"07:30-18:00\",\n    \"Friday\": \"07:30-20:00\",\n    \"Saturday\": \"08:00-20:00\",\n    \"Sunday\": \"08:00-16:00\"\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050238_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"setting\": \"urban park\",\n  \"location\": {\n    \"city\": \"Metropolis\",\n    \"coordinates\": {\n      \"latitude\": 40.7128,\n      \"longitude\": -74.0060\n    }\n  },\n  \"facilities\": [\n    {\n      \"name\": \"Central Fountain\",\n      \"type\": \"water feature\",\n      \"installationYear\": 1998\n    },\n    {\n      \"name\": \"Rose Garden\",\n      \"type\": \"botanical area\",\n      \"installationYear\": 2005\n    },\n    {\n      \"name\": \"Children's Playground\",\n      \"type\": \"recreational area\",\n      \"installationYear\": 2010\n    }\n  ],\n  \"operationalHours\": {\n    \"weekdays\": \"06:00-22:00\",\n    \"weekends\": \"07:00-20:00\"\n  },\n  \"maintenance\": {\n    \"lastInspection\": \"2023-08-15\",\n    \"nextInspection\": \"2024-02-15\"\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row with column labels that clearly map to the original JSON keys.  \n• Every nested field in the JSON (such as \"location\" and \"coordinates\") must be flattened into individual columns (for example, \"city\", \"latitude\", and \"longitude\").  \n• The facilities array must be translated so that each facility becomes a separate row in the CSV, with its details (name, type, installationYear) in distinct columns.  \n• The CSV must include columns representing the overall park setting and attributes, such as the \"setting\" value from the JSON.  \n• Operational hours must be split into separate columns for \"weekdays\" and \"weekends\" as given in the JSON.  \n• Maintenance information, including \"lastInspection\" and \"nextInspection\", must be included in their own distinct columns.  \n• All data values in the CSV output should match exactly those provided in the JSON structure, ensuring consistency and verifiability.",
            "task_id": "050239",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][setting]",
                "rows[0][city]",
                "rows[0][latitude]",
                "rows[0][longitude]",
                "rows[0][weekdays]",
                "rows[0][weekends]",
                "rows[0][lastInspection]",
                "rows[0][nextInspection]",
                "rows[0][name]",
                "rows[0][type]",
                "rows[0][installationYear]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050239_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"setting\": \"urban park\",\n  \"location\": {\n    \"city\": \"Metropolis\",\n    \"coordinates\": {\n      \"latitude\": 40.7128,\n      \"longitude\": -74.0060\n    }\n  },\n  \"facilities\": [\n    {\n      \"name\": \"Central Fountain\",\n      \"type\": \"water feature\",\n      \"installationYear\": 1998\n    },\n    {\n      \"name\": \"Rose Garden\",\n      \"type\": \"botanical area\",\n      \"installationYear\": 2005\n    },\n    {\n      \"name\": \"Children's Playground\",\n      \"type\": \"recreational area\",\n      \"installationYear\": 2010\n    }\n  ],\n  \"operationalHours\": {\n    \"weekdays\": \"06:00-22:00\",\n    \"weekends\": \"07:00-20:00\"\n  },\n  \"maintenance\": {\n    \"lastInspection\": \"2023-08-15\",\n    \"nextInspection\": \"2024-02-15\"\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050239_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][setting]",
                                "rows[0][city]",
                                "rows[0][latitude]",
                                "rows[0][longitude]",
                                "rows[0][weekdays]",
                                "rows[0][weekends]",
                                "rows[0][lastInspection]",
                                "rows[0][nextInspection]",
                                "rows[0][name]",
                                "rows[0][type]",
                                "rows[0][installationYear]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userProfile\": {\n    \"userId\": 789,\n    \"username\": \"janedoe\",\n    \"contact\": {\n      \"email\": \"jane.doe@example.com\",\n      \"phone\": \"555-6789\"\n    }\n  },\n  \"preferences\": {\n    \"language\": \"en\",\n    \"theme\": \"light\",\n    \"notifications\": true\n  },\n  \"activityLog\": [\n    {\n      \"timestamp\": \"2023-10-22T14:30:00Z\",\n      \"event\": \"login\"\n    },\n    {\n      \"timestamp\": \"2023-10-22T16:45:00Z\",\n      \"event\": \"update_profile\"\n    }\n  ],\n  \"tasks\": [\n    {\"id\": 1, \"description\": \"Complete documentation\", \"completed\": false},\n    {\"id\": 2, \"description\": \"Review code\", \"completed\": true}\n  ],\n  \"metadata\": {\n    \"created\": \"2023-01-01T12:00:00Z\",\n    \"lastModified\": \"2023-10-22T16:45:00Z\",\n    \"version\": \"2.0\"\n  }\n}\n</code>",
            "feature_requirements": "• The output must include a header row for each CSV table that exactly names the keys extracted from the JSON (e.g., userId, username, email, phone for the user profile section).  \n• The user profile data must be flattened so that nested keys (from \"contact\") appear as separate CSV columns (e.g., email, phone) alongside userId and username.  \n• The preferences section must be represented with its own header columns (language, theme, notifications) and a corresponding row for its values.  \n• The activityLog array must be converted into a CSV table where each record is a row, including columns for timestamp and event.  \n• The tasks array must be converted into a CSV table with each row containing id, description, and completed columns.  \n• The metadata object must be represented in a CSV format with columns for created, lastModified, and version, using a header row and a corresponding data row.",
            "task_id": "050240",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][userId]",
                "rows[0][username]",
                "rows[0][email]",
                "rows[0][phone]",
                "rows[0][language]",
                "rows[0][theme]",
                "rows[0][notifications]",
                "rows[*][timestamp]",
                "rows[*][event]",
                "rows[0][id]",
                "rows[0][description]",
                "rows[0][completed]",
                "rows[0][created]",
                "rows[0][lastModified]",
                "rows[0][version]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050240_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"userProfile\": {\n    \"userId\": 789,\n    \"username\": \"janedoe\",\n    \"contact\": {\n      \"email\": \"jane.doe@example.com\",\n      \"phone\": \"555-6789\"\n    }\n  },\n  \"preferences\": {\n    \"language\": \"en\",\n    \"theme\": \"light\",\n    \"notifications\": true\n  },\n  \"activityLog\": [\n    {\n      \"timestamp\": \"2023-10-22T14:30:00Z\",\n      \"event\": \"login\"\n    },\n    {\n      \"timestamp\": \"2023-10-22T16:45:00Z\",\n      \"event\": \"update_profile\"\n    }\n  ],\n  \"tasks\": [\n    {\"id\": 1, \"description\": \"Complete documentation\", \"completed\": false},\n    {\"id\": 2, \"description\": \"Review code\", \"completed\": true}\n  ],\n  \"metadata\": {\n    \"created\": \"2023-01-01T12:00:00Z\",\n    \"lastModified\": \"2023-10-22T16:45:00Z\",\n    \"version\": \"2.0\"\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050240_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][userId]",
                                "rows[0][username]",
                                "rows[0][email]",
                                "rows[0][phone]",
                                "rows[0][language]",
                                "rows[0][theme]",
                                "rows[0][notifications]",
                                "rows[*][timestamp]",
                                "rows[*][event]",
                                "rows[0][id]",
                                "rows[0][description]",
                                "rows[0][completed]",
                                "rows[0][created]",
                                "rows[0][lastModified]",
                                "rows[0][version]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"city\": \"Metropolis\",\n  \"population\": 1250000,\n  \"districts\": [\n    \"Downtown\",\n    \"Uptown\",\n    \"Midtown\",\n    \"Suburban\"\n  ],\n  \"infrastructure\": {\n    \"transport\": {\n      \"metro\": {\n        \"operational\": true,\n        \"lines\": 5,\n        \"frequency\": \"10min\"\n      },\n      \"buses\": {\n        \"routes\": 20,\n        \"frequency\": \"15min\"\n      }\n    },\n    \"communications\": {\n      \"5G_coverage\": \"extensive\",\n      \"fiber_optic\": true\n    }\n  },\n  \"events\": [\n    {\n      \"name\": \"Music Festival\",\n      \"date\": \"2023-08-15\",\n      \"locations\": [\n        \"Central Park\",\n        \"Town Square\"\n      ]\n    },\n    {\n      \"name\": \"Art Exhibition\",\n      \"date\": \"2023-09-01\",\n      \"locations\": [\n        \"City Museum\"\n      ]\n    }\n  ]\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row listing all column names derived from the JSON keys, including fields for the city’s metadata, infrastructure details, and event information.  \n• The CSV must flatten nested JSON objects into separate columns—for example, converting infrastructure.transport.metro.operational, infrastructure.transport.metro.lines, and infrastructure.transport.metro.frequency into individual columns.  \n• Array fields from the JSON, such as districts and the locations within each event, must be represented as single cells with list items concatenated (e.g., separated by semicolons).  \n• The events array must be expanded so that each event appears as a separate row in the CSV, with its fields (such as event name and event date) occupying distinct columns, while common data (like city and infrastructure details) are repeated as needed.  \n• The CSV output should ensure that all boolean and numerical values (e.g., population and metro operational status) are included as text in the appropriate cells, making each value verifiable by inspection.",
            "task_id": "050241",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050241_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"city\": \"Metropolis\",\n  \"population\": 1250000,\n  \"districts\": [\n    \"Downtown\",\n    \"Uptown\",\n    \"Midtown\",\n    \"Suburban\"\n  ],\n  \"infrastructure\": {\n    \"transport\": {\n      \"metro\": {\n        \"operational\": true,\n        \"lines\": 5,\n        \"frequency\": \"10min\"\n      },\n      \"buses\": {\n        \"routes\": 20,\n        \"frequency\": \"15min\"\n      }\n    },\n    \"communications\": {\n      \"5G_coverage\": \"extensive\",\n      \"fiber_optic\": true\n    }\n  },\n  \"events\": [\n    {\n      \"name\": \"Music Festival\",\n      \"date\": \"2023-08-15\",\n      \"locations\": [\n        \"Central Park\",\n        \"Town Square\"\n      ]\n    },\n    {\n      \"name\": \"Art Exhibition\",\n      \"date\": \"2023-09-01\",\n      \"locations\": [\n        \"City Museum\"\n      ]\n    }\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050241_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"application\": \"DataConverter\",\n  \"version\": \"2.1.0\",\n  \"settings\": {\n    \"defaultLanguage\": \"en\",\n    \"timezone\": \"UTC\",\n    \"features\": {\n      \"autoSave\": true,\n      \"notifications\": false,\n      \"backup\": {\n        \"enabled\": true,\n        \"interval\": \"daily\"\n      }\n    }\n  },\n  \"data\": [\n    {\n      \"id\": 101,\n      \"name\": \"SampleItem1\",\n      \"attributes\": {\n        \"size\": \"large\",\n        \"category\": \"A\"\n      }\n    },\n    {\n      \"id\": 102,\n      \"name\": \"SampleItem2\",\n      \"attributes\": {\n        \"size\": \"medium\",\n        \"category\": \"B\"\n      }\n    },\n    {\n      \"id\": 103,\n      \"name\": \"SampleItem3\",\n      \"attributes\": {\n        \"size\": \"small\",\n        \"category\": \"C\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"created\": \"2023-10-12T08:30:00Z\",\n    \"updated\": \"2023-10-12T10:45:00Z\",\n    \"checksum\": \"7b3e00f9c8a4d3b2\"\n  }\n}\n</code>",
            "feature_requirements": "• The CSV output must begin with a header row listing the column names derived from the JSON \"data\" objects.\n• The header row must include columns for \"id\", \"name\", \"attributes.size\", and \"attributes.category\".\n• Each subsequent row must represent one item from the JSON \"data\" array.\n• The \"id\" column in each row must contain the integer value from the corresponding JSON object's \"id\" field.\n• The \"name\" column in each row must contain the string value from the corresponding JSON object's \"name\" field.\n• The \"attributes.size\" column must capture the value from the nested \"attributes\" object’s \"size\" key.\n• The \"attributes.category\" column must capture the value from the nested \"attributes\" object’s \"category\" key.\n• The order of rows in the CSV must match the order of items as they appear in the JSON \"data\" array.\n• The CSV conversion must only include information from the JSON \"data\" array and disregard other sections (such as \"application\", \"version\", \"settings\", and \"metadata\").",
            "task_id": "050242",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][id]",
                "rows[0][name]",
                "rows[0][attributes.size]",
                "rows[0][attributes.category]",
                "rows[*][id]",
                "rows[*][name]",
                "rows[*][attributes.size]",
                "rows[*][attributes.category]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050242_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"application\": \"DataConverter\",\n  \"version\": \"2.1.0\",\n  \"settings\": {\n    \"defaultLanguage\": \"en\",\n    \"timezone\": \"UTC\",\n    \"features\": {\n      \"autoSave\": true,\n      \"notifications\": false,\n      \"backup\": {\n        \"enabled\": true,\n        \"interval\": \"daily\"\n      }\n    }\n  },\n  \"data\": [\n    {\n      \"id\": 101,\n      \"name\": \"SampleItem1\",\n      \"attributes\": {\n        \"size\": \"large\",\n        \"category\": \"A\"\n      }\n    },\n    {\n      \"id\": 102,\n      \"name\": \"SampleItem2\",\n      \"attributes\": {\n        \"size\": \"medium\",\n        \"category\": \"B\"\n      }\n    },\n    {\n      \"id\": 103,\n      \"name\": \"SampleItem3\",\n      \"attributes\": {\n        \"size\": \"small\",\n        \"category\": \"C\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"created\": \"2023-10-12T08:30:00Z\",\n    \"updated\": \"2023-10-12T10:45:00Z\",\n    \"checksum\": \"7b3e00f9c8a4d3b2\"\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050242_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][id]",
                                "rows[0][name]",
                                "rows[0][attributes.size]",
                                "rows[0][attributes.category]",
                                "rows[*][id]",
                                "rows[*][name]",
                                "rows[*][attributes.size]",
                                "rows[*][attributes.category]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"settings\": {\n    \"appName\": \"DataConverter\",\n    \"version\": \"1.0.2\",\n    \"releaseDate\": \"2023-10-01\",\n    \"config\": {\n      \"debugMode\": false,\n      \"maxConnections\": 100,\n      \"timeout\": 30\n    }\n  },\n  \"users\": [\n    {\n      \"userId\": 101,\n      \"username\": \"alice\",\n      \"role\": \"admin\",\n      \"active\": true\n    },\n    {\n      \"userId\": 102,\n      \"username\": \"bob\",\n      \"role\": \"editor\",\n      \"active\": true\n    },\n    {\n      \"userId\": 103,\n      \"username\": \"charlie\",\n      \"role\": \"viewer\",\n      \"active\": false\n    }\n  ],\n  \"tasks\": [\n    {\n      \"taskId\": \"T001\",\n      \"title\": \"Data Backup\",\n      \"status\": \"completed\",\n      \"priority\": \"high\"\n    },\n    {\n      \"taskId\": \"T002\",\n      \"title\": \"System Update\",\n      \"status\": \"pending\",\n      \"priority\": \"medium\"\n    },\n    {\n      \"taskId\": \"T003\",\n      \"title\": \"Error Log Review\",\n      \"status\": \"in_progress\",\n      \"priority\": \"low\"\n    }\n  ],\n  \"logs\": {\n    \"events\": [\n      {\n        \"timestamp\": \"2023-10-01T08:00:00Z\",\n        \"event\": \"startup\",\n        \"details\": \"Application started successfully\"\n      },\n      {\n        \"timestamp\": \"2023-10-01T09:15:00Z\",\n        \"event\": \"login\",\n        \"details\": \"User alice logged in\"\n      },\n      {\n        \"timestamp\": \"2023-10-01T10:30:00Z\",\n        \"event\": \"update\",\n        \"details\": \"System update initiated\"\n      }\n    ],\n    \"errors\": []\n  },\n  \"features\": [\n    \"data_import\",\n    \"data_export\",\n    \"format_conversion\",\n    \"error_handling\"\n  ]\n}\n</code>",
            "feature_requirements": "• The CSV output must include a header row that lists the key names for each record, exactly matching the JSON key names.  \n• The CSV conversion of the \"settings\" section must flatten nested \"config\" keys into individual columns (e.g., debugMode, maxConnections, timeout) alongside appName, version, and releaseDate.  \n• The CSV conversion of the \"users\" array must create rows where each row includes columns for userId, username, role, and active.  \n• The CSV conversion of the \"tasks\" array must create rows where each row includes columns for taskId, title, status, and priority.  \n• The CSV conversion of the \"logs.events\" array must create rows where each row includes columns for timestamp, event, and details.  \n• The CSV output must include a representation of the \"features\" array—either as separate rows each with a single column (e.g., \"feature\") or as a single row with a consolidated list value—ensuring that every feature is individually identifiable.  \n• All output CSV tables or sections must be well-formed and valid, ensuring that each row aligns with its header row for reliable parsing.  \n• All boolean and numeric values must be correctly represented in the CSV output in a verifiable, consistent format.",
            "task_id": "050243",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][appName]",
                "rows[0][version]",
                "rows[0][releaseDate]",
                "rows[0][debugMode]",
                "rows[0][maxConnections]",
                "rows[0][timeout]",
                "rows[*][userId]",
                "rows[*][username]",
                "rows[*][role]",
                "rows[*][active]",
                "rows[*][taskId]",
                "rows[*][title]",
                "rows[*][status]",
                "rows[*][priority]",
                "rows[*][timestamp]",
                "rows[*][event]",
                "rows[*][details]",
                "rows[*][feature]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050243_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"settings\": {\n    \"appName\": \"DataConverter\",\n    \"version\": \"1.0.2\",\n    \"releaseDate\": \"2023-10-01\",\n    \"config\": {\n      \"debugMode\": false,\n      \"maxConnections\": 100,\n      \"timeout\": 30\n    }\n  },\n  \"users\": [\n    {\n      \"userId\": 101,\n      \"username\": \"alice\",\n      \"role\": \"admin\",\n      \"active\": true\n    },\n    {\n      \"userId\": 102,\n      \"username\": \"bob\",\n      \"role\": \"editor\",\n      \"active\": true\n    },\n    {\n      \"userId\": 103,\n      \"username\": \"charlie\",\n      \"role\": \"viewer\",\n      \"active\": false\n    }\n  ],\n  \"tasks\": [\n    {\n      \"taskId\": \"T001\",\n      \"title\": \"Data Backup\",\n      \"status\": \"completed\",\n      \"priority\": \"high\"\n    },\n    {\n      \"taskId\": \"T002\",\n      \"title\": \"System Update\",\n      \"status\": \"pending\",\n      \"priority\": \"medium\"\n    },\n    {\n      \"taskId\": \"T003\",\n      \"title\": \"Error Log Review\",\n      \"status\": \"in_progress\",\n      \"priority\": \"low\"\n    }\n  ],\n  \"logs\": {\n    \"events\": [\n      {\n        \"timestamp\": \"2023-10-01T08:00:00Z\",\n        \"event\": \"startup\",\n        \"details\": \"Application started successfully\"\n      },\n      {\n        \"timestamp\": \"2023-10-01T09:15:00Z\",\n        \"event\": \"login\",\n        \"details\": \"User alice logged in\"\n      },\n      {\n        \"timestamp\": \"2023-10-01T10:30:00Z\",\n        \"event\": \"update\",\n        \"details\": \"System update initiated\"\n      }\n    ],\n    \"errors\": []\n  },\n  \"features\": [\n    \"data_import\",\n    \"data_export\",\n    \"format_conversion\",\n    \"error_handling\"\n  ]\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050243_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][appName]",
                                "rows[0][version]",
                                "rows[0][releaseDate]",
                                "rows[0][debugMode]",
                                "rows[0][maxConnections]",
                                "rows[0][timeout]",
                                "rows[*][userId]",
                                "rows[*][username]",
                                "rows[*][role]",
                                "rows[*][active]",
                                "rows[*][taskId]",
                                "rows[*][title]",
                                "rows[*][status]",
                                "rows[*][priority]",
                                "rows[*][timestamp]",
                                "rows[*][event]",
                                "rows[*][details]",
                                "rows[*][feature]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"communityCenter\": {\n    \"id\": \"cc-001\",\n    \"name\": \"Grand Oak Community Center\",\n    \"address\": {\n      \"street\": \"123 Main St\",\n      \"city\": \"Oakville\",\n      \"state\": \"CA\",\n      \"postalCode\": \"90210\"\n    },\n    \"facilities\": [\n      {\n        \"facilityId\": \"gym-001\",\n        \"type\": \"Gymnasium\",\n        \"capacity\": 150,\n        \"features\": [\"Basketball Court\", \"Weight Machines\", \"Indoor Track\"]\n      },\n      {\n        \"facilityId\": \"auditorium-001\",\n        \"type\": \"Auditorium\",\n        \"capacity\": 300,\n        \"features\": [\"Stage\", \"Sound System\", \"Lighting Rig\"]\n      }\n    ],\n    \"events\": [\n      {\n        \"eventId\": \"ev-101\",\n        \"name\": \"Yoga Class\",\n        \"schedule\": {\n          \"day\": \"Monday\",\n          \"time\": \"18:00\"\n        }\n      },\n      {\n        \"eventId\": \"ev-102\",\n        \"name\": \"Community Movie Night\",\n        \"schedule\": {\n          \"day\": \"Friday\",\n          \"time\": \"20:00\"\n        }\n      },\n      {\n        \"eventId\": \"ev-103\",\n        \"name\": \"Art Workshop\",\n        \"schedule\": {\n          \"day\": \"Saturday\",\n          \"time\": \"14:00\"\n        }\n      }\n    ],\n    \"staff\": [\n      {\n        \"staffId\": \"stf-001\",\n        \"name\": \"Alice Carter\",\n        \"role\": \"Manager\"\n      },\n      {\n        \"staffId\": \"stf-002\",\n        \"name\": \"Bob Smith\",\n        \"role\": \"Coordinator\"\n      },\n      {\n        \"staffId\": \"stf-003\",\n        \"name\": \"Clara Jones\",\n        \"role\": \"Facilities Supervisor\"\n      }\n    ]\n  }\n}\n</code>",
            "feature_requirements": "• The output must include a header row defining column names for each field being exported.\n• The community center’s basic details (such as id, name, and address fields like street, city, state, and postalCode) must be represented in distinct columns.\n• Facility records from the facilities array must be exported as individual CSV rows with columns for facilityId, type, capacity, and features.\n• The facility features list must be combined into a single cell using a consistent delimiter, ensuring it is verifiable as a single string per row.\n• Event records from the events array must be exported as individual CSV rows with columns for eventId, name, schedule day, and schedule time.\n• Staff records from the staff array must be exported as individual CSV rows with columns for staffId, name, and role.\n• Each CSV row must map a single, flat record (from either the community center info, facilities, events, or staff) with clearly labeled columns.\n• If multiple related sections (community center details, facilities, events, staff) are output in one CSV file, columns must have unique names that reflect their source (e.g., address_street, schedule_day).\n• The output data must be structured such that every row and column is objectively verifiable by reviewing the header labels and cell values.",
            "task_id": "050244",
            "task_name": "Convert JSON to CSV",
            "input_type": "JSON",
            "output_type": "CSV",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "rows[0][id]",
                "rows[0][name]",
                "rows[0][address_street]",
                "rows[0][address_city]",
                "rows[0][address_state]",
                "rows[0][address_postalCode]",
                "rows[0][facilityId]",
                "rows[0][facility_type]",
                "rows[0][facility_capacity]",
                "rows[0][facility_features]",
                "rows[0][eventId]",
                "rows[0][event_name]",
                "rows[0][schedule_day]",
                "rows[0][schedule_time]",
                "rows[0][staffId]",
                "rows[0][staff_name]",
                "rows[0][staff_role]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "050244_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output CSV:\n\nTask:\nConvert the following JSON code to CSV code.\n\n<code>\n{\n  \"communityCenter\": {\n    \"id\": \"cc-001\",\n    \"name\": \"Grand Oak Community Center\",\n    \"address\": {\n      \"street\": \"123 Main St\",\n      \"city\": \"Oakville\",\n      \"state\": \"CA\",\n      \"postalCode\": \"90210\"\n    },\n    \"facilities\": [\n      {\n        \"facilityId\": \"gym-001\",\n        \"type\": \"Gymnasium\",\n        \"capacity\": 150,\n        \"features\": [\"Basketball Court\", \"Weight Machines\", \"Indoor Track\"]\n      },\n      {\n        \"facilityId\": \"auditorium-001\",\n        \"type\": \"Auditorium\",\n        \"capacity\": 300,\n        \"features\": [\"Stage\", \"Sound System\", \"Lighting Rig\"]\n      }\n    ],\n    \"events\": [\n      {\n        \"eventId\": \"ev-101\",\n        \"name\": \"Yoga Class\",\n        \"schedule\": {\n          \"day\": \"Monday\",\n          \"time\": \"18:00\"\n        }\n      },\n      {\n        \"eventId\": \"ev-102\",\n        \"name\": \"Community Movie Night\",\n        \"schedule\": {\n          \"day\": \"Friday\",\n          \"time\": \"20:00\"\n        }\n      },\n      {\n        \"eventId\": \"ev-103\",\n        \"name\": \"Art Workshop\",\n        \"schedule\": {\n          \"day\": \"Saturday\",\n          \"time\": \"14:00\"\n        }\n      }\n    ],\n    \"staff\": [\n      {\n        \"staffId\": \"stf-001\",\n        \"name\": \"Alice Carter\",\n        \"role\": \"Manager\"\n      },\n      {\n        \"staffId\": \"stf-002\",\n        \"name\": \"Bob Smith\",\n        \"role\": \"Coordinator\"\n      },\n      {\n        \"staffId\": \"stf-003\",\n        \"name\": \"Clara Jones\",\n        \"role\": \"Facilities Supervisor\"\n      }\n    ]\n  }\n}\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "050244_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "rows[0][id]",
                                "rows[0][name]",
                                "rows[0][address_street]",
                                "rows[0][address_city]",
                                "rows[0][address_state]",
                                "rows[0][address_postalCode]",
                                "rows[0][facilityId]",
                                "rows[0][facility_type]",
                                "rows[0][facility_capacity]",
                                "rows[0][facility_features]",
                                "rows[0][eventId]",
                                "rows[0][event_name]",
                                "rows[0][schedule_day]",
                                "rows[0][schedule_time]",
                                "rows[0][staffId]",
                                "rows[0][staff_name]",
                                "rows[0][staff_role]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<Configuration>\n    <General>\n        <Name>DataConverterApp</Name>\n        <Version>2.1.0</Version>\n        <Description>Application for converting structured data formats.</Description>\n    </General>\n    <Settings>\n        <Theme>Light</Theme>\n        <Language>en-US</Language>\n        <Timeout>60</Timeout>\n        <RetryPolicy>\n            <MaxAttempts>3</MaxAttempts>\n            <Delay>2000</Delay>\n        </RetryPolicy>\n    </Settings>\n    <Users>\n        <User>\n            <UserID>001</UserID>\n            <UserName>Alice</UserName>\n            <Role>Editor</Role>\n            <Preferences>\n                <Notification>Email</Notification>\n                <Display>Compact</Display>\n            </Preferences>\n        </User>\n        <User>\n            <UserID>002</UserID>\n            <UserName>Bob</UserName>\n            <Role>Viewer</Role>\n            <Preferences>\n                <Notification>SMS</Notification>\n                <Display>Detailed</Display>\n            </Preferences>\n        </User>\n    </Users>\n    <Records>\n        <Record id=\"R100\">\n            <Title>Initial Conversion</Title>\n            <Timestamp>2023-10-07T10:15:00</Timestamp>\n            <Status>Completed</Status>\n        </Record>\n        <Record id=\"R101\">\n            <Title>Backup Data</Title>\n            <Timestamp>2023-10-08T14:30:00</Timestamp>\n            <Status>Pending</Status>\n        </Record>\n    </Records>\n    <Logs>\n        <LogEntry>\n            <Date>2023-10-07</Date>\n            <Activity>Started data import</Activity>\n        </LogEntry>\n        <LogEntry>\n            <Date>2023-10-07</Date>\n            <Activity>Exported converted data</Activity>\n        </LogEntry>\n    </Logs>\n</Configuration>\n</code>",
            "feature_requirements": "• The JSON output must represent a top-level object that mirrors the \"Configuration\" element from the XML, containing keys for all subsequent sections.  \n• The \"General\" section must include keys for \"Name\", \"Version\", and \"Description\", with their corresponding text values intact.  \n• The \"Settings\" section must include keys for \"Theme\", \"Language\", and \"Timeout\" along with a nested \"RetryPolicy\" object that contains \"MaxAttempts\" and \"Delay\".  \n• The \"Users\" section must be converted into an array where each object represents a \"User\" element containing keys for \"UserID\", \"UserName\", \"Role\", and a nested \"Preferences\" object with \"Notification\" and \"Display\".  \n• The \"Records\" section must be represented as an array of objects, where each object includes an \"id\" key (converted from the XML attribute) along with keys for \"Title\", \"Timestamp\", and \"Status\".  \n• The \"Logs\" section must be represented as an array of objects, each containing keys for \"Date\" and \"Activity\" corresponding to each \"LogEntry\".",
            "task_id": "170500",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "Configuration[General][Name]",
                "Configuration[General][Version]",
                "Configuration[General][Description]",
                "Configuration[Settings][Theme]",
                "Configuration[Settings][Language]",
                "Configuration[Settings][Timeout]",
                "Configuration[Settings][RetryPolicy][MaxAttempts]",
                "Configuration[Settings][RetryPolicy][Delay]",
                "Configuration[Users][][UserID]",
                "Configuration[Users][][UserName]",
                "Configuration[Users][][Role]",
                "Configuration[Users][][Preferences][Notification]",
                "Configuration[Users][][Preferences][Display]",
                "Configuration[Records][][id]",
                "Configuration[Records][][Title]",
                "Configuration[Records][][Timestamp]",
                "Configuration[Records][][Status]",
                "Configuration[Logs][][Date]",
                "Configuration[Logs][][Activity]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170500_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<Configuration>\n    <General>\n        <Name>DataConverterApp</Name>\n        <Version>2.1.0</Version>\n        <Description>Application for converting structured data formats.</Description>\n    </General>\n    <Settings>\n        <Theme>Light</Theme>\n        <Language>en-US</Language>\n        <Timeout>60</Timeout>\n        <RetryPolicy>\n            <MaxAttempts>3</MaxAttempts>\n            <Delay>2000</Delay>\n        </RetryPolicy>\n    </Settings>\n    <Users>\n        <User>\n            <UserID>001</UserID>\n            <UserName>Alice</UserName>\n            <Role>Editor</Role>\n            <Preferences>\n                <Notification>Email</Notification>\n                <Display>Compact</Display>\n            </Preferences>\n        </User>\n        <User>\n            <UserID>002</UserID>\n            <UserName>Bob</UserName>\n            <Role>Viewer</Role>\n            <Preferences>\n                <Notification>SMS</Notification>\n                <Display>Detailed</Display>\n            </Preferences>\n        </User>\n    </Users>\n    <Records>\n        <Record id=\"R100\">\n            <Title>Initial Conversion</Title>\n            <Timestamp>2023-10-07T10:15:00</Timestamp>\n            <Status>Completed</Status>\n        </Record>\n        <Record id=\"R101\">\n            <Title>Backup Data</Title>\n            <Timestamp>2023-10-08T14:30:00</Timestamp>\n            <Status>Pending</Status>\n        </Record>\n    </Records>\n    <Logs>\n        <LogEntry>\n            <Date>2023-10-07</Date>\n            <Activity>Started data import</Activity>\n        </LogEntry>\n        <LogEntry>\n            <Date>2023-10-07</Date>\n            <Activity>Exported converted data</Activity>\n        </LogEntry>\n    </Logs>\n</Configuration>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170500_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Configuration[General][Name]",
                                "Configuration[General][Version]",
                                "Configuration[General][Description]",
                                "Configuration[Settings][Theme]",
                                "Configuration[Settings][Language]",
                                "Configuration[Settings][Timeout]",
                                "Configuration[Settings][RetryPolicy][MaxAttempts]",
                                "Configuration[Settings][RetryPolicy][Delay]",
                                "Configuration[Users][][UserID]",
                                "Configuration[Users][][UserName]",
                                "Configuration[Users][][Role]",
                                "Configuration[Users][][Preferences][Notification]",
                                "Configuration[Users][][Preferences][Display]",
                                "Configuration[Records][][id]",
                                "Configuration[Records][][Title]",
                                "Configuration[Records][][Timestamp]",
                                "Configuration[Records][][Status]",
                                "Configuration[Logs][][Date]",
                                "Configuration[Logs][][Activity]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n    <application>\n        <name>DataProcessor</name>\n        <version>3.4.1</version>\n        <environment>production</environment>\n    </application>\n    <database>\n        <host>db.example.com</host>\n        <port>3306</port>\n        <user>processor</user>\n        <password>securePass123</password>\n    </database>\n    <services>\n        <service>\n            <id>svc001</id>\n            <name>AuthenticationService</name>\n            <enabled>true</enabled>\n        </service>\n        <service>\n            <id>svc002</id>\n            <name>DataAnalyticsService</name>\n            <enabled>false</enabled>\n        </service>\n        <service>\n            <id>svc003</id>\n            <name>NotificationService</name>\n            <enabled>true</enabled>\n        </service>\n    </services>\n    <logging>\n        <level>INFO</level>\n        <output>console</output>\n        <formats>\n            <format>JSON</format>\n            <format>XML</format>\n        </formats>\n    </logging>\n    <features>\n        <feature name=\"caching\" enabled=\"true\" />\n        <feature name=\"rateLimiting\" enabled=\"false\" />\n        <feature name=\"autoScaling\" enabled=\"true\" />\n    </features>\n</configuration>\n</code>",
            "feature_requirements": "• The output must be in JSON format with a top‐level object representing the \"configuration\".\n• The \"configuration\" object must contain keys for \"application\", \"database\", \"services\", \"logging\", and \"features\".\n• The \"application\" object must include keys \"name\", \"version\", and \"environment\" with values matching the XML's text content.\n• The \"database\" object must include keys \"host\", \"port\", \"user\", and \"password\", with each key reflecting its corresponding XML element value.\n• The \"services\" element must be represented as a list of service objects, where each service object includes the keys \"id\", \"name\", and \"enabled\".\n• The \"logging\" object must include a \"level\" key, an \"output\" key, and a \"formats\" key, with \"formats\" being a list that contains the items \"JSON\" and \"XML\".\n• The \"features\" element must be represented as a list of feature objects, each containing a \"name\" key (sourced from the XML attribute) and an \"enabled\" key (also sourced from the XML attribute).\n• The hierarchical structure of the XML must be preserved in the JSON, ensuring that nested elements are accurately converted into nested objects or arrays.",
            "task_id": "170501",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "configuration",
                "configuration[application]",
                "configuration[application][name]",
                "configuration[application][version]",
                "configuration[application][environment]",
                "configuration[database]",
                "configuration[database][host]",
                "configuration[database][port]",
                "configuration[database][user]",
                "configuration[database][password]",
                "configuration[services]",
                "configuration[services][*][id]",
                "configuration[services][*][name]",
                "configuration[services][*][enabled]",
                "configuration[logging]",
                "configuration[logging][level]",
                "configuration[logging][output]",
                "configuration[logging][formats]",
                "configuration[features]",
                "configuration[features][*][name]",
                "configuration[features][*][enabled]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170501_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n    <application>\n        <name>DataProcessor</name>\n        <version>3.4.1</version>\n        <environment>production</environment>\n    </application>\n    <database>\n        <host>db.example.com</host>\n        <port>3306</port>\n        <user>processor</user>\n        <password>securePass123</password>\n    </database>\n    <services>\n        <service>\n            <id>svc001</id>\n            <name>AuthenticationService</name>\n            <enabled>true</enabled>\n        </service>\n        <service>\n            <id>svc002</id>\n            <name>DataAnalyticsService</name>\n            <enabled>false</enabled>\n        </service>\n        <service>\n            <id>svc003</id>\n            <name>NotificationService</name>\n            <enabled>true</enabled>\n        </service>\n    </services>\n    <logging>\n        <level>INFO</level>\n        <output>console</output>\n        <formats>\n            <format>JSON</format>\n            <format>XML</format>\n        </formats>\n    </logging>\n    <features>\n        <feature name=\"caching\" enabled=\"true\" />\n        <feature name=\"rateLimiting\" enabled=\"false\" />\n        <feature name=\"autoScaling\" enabled=\"true\" />\n    </features>\n</configuration>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170501_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "configuration",
                                "configuration[application]",
                                "configuration[application][name]",
                                "configuration[application][version]",
                                "configuration[application][environment]",
                                "configuration[database]",
                                "configuration[database][host]",
                                "configuration[database][port]",
                                "configuration[database][user]",
                                "configuration[database][password]",
                                "configuration[services]",
                                "configuration[services][*][id]",
                                "configuration[services][*][name]",
                                "configuration[services][*][enabled]",
                                "configuration[logging]",
                                "configuration[logging][level]",
                                "configuration[logging][output]",
                                "configuration[logging][formats]",
                                "configuration[features]",
                                "configuration[features][*][name]",
                                "configuration[features][*][enabled]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n  <application>\n    <name>DataConverter</name>\n    <version>1.0.0</version>\n    <releaseDate>2023-10-15</releaseDate>\n  </application>\n  <database>\n    <host>localhost</host>\n    <port>5432</port>\n    <credentials>\n      <username>dbuser</username>\n      <password>securepass</password>\n    </credentials>\n    <tables>\n      <table>customers</table>\n      <table>orders</table>\n      <table>invoices</table>\n    </tables>\n  </database>\n  <logging>\n    <level>INFO</level>\n    <filePath>/var/log/dataconverter.log</filePath>\n    <rotation>\n      <maxFiles>7</maxFiles>\n      <size>20MB</size>\n    </rotation>\n  </logging>\n  <services>\n    <service>\n      <name>Authentication</name>\n      <enabled>true</enabled>\n      <endpoints>\n        <endpoint>/api/auth/login</endpoint>\n        <endpoint>/api/auth/logout</endpoint>\n      </endpoints>\n    </service>\n    <service>\n      <name>DataProcessing</name>\n      <enabled>true</enabled>\n      <endpoints>\n        <endpoint>/api/process/start</endpoint>\n        <endpoint>/api/process/stop</endpoint>\n      </endpoints>\n    </service>\n  </services>\n  <security>\n    <encryption>\n      <algorithm>AES</algorithm>\n      <keyLength>256</keyLength>\n    </encryption>\n    <firewall>\n      <status>active</status>\n      <rules>\n        <rule>allow:80</rule>\n        <rule>allow:443</rule>\n        <rule>deny:all</rule>\n      </rules>\n    </firewall>\n  </security>\n</configuration>\n</code>",
            "feature_requirements": "• The converted JSON must have a root object with a \"configuration\" key that encapsulates all other sections.\n• Under \"configuration\", there must be separate keys for \"application\", \"database\", \"logging\", \"services\", and \"security\", each representing a distinct section.\n• The \"application\" object must include keys: \"name\", \"version\", and \"releaseDate\", each holding their corresponding string values.\n• The \"database\" object must contain \"host\" (string), \"port\" (number or string as applicable), a nested \"credentials\" object with \"username\" and \"password\", and a \"tables\" key that is an array of table names.\n• The \"logging\" object must have keys: \"level\", \"filePath\", and \"rotation\". The \"rotation\" value should be an object containing \"maxFiles\" and \"size\".\n• The \"services\" key must map to an array of service objects, where each service object includes \"name\", \"enabled\" (boolean or proper string as specified), and \"endpoints\", which should be an array listing endpoints.\n• The \"security\" object must include two nested objects: \"encryption\" (with keys \"algorithm\" and \"keyLength\") and \"firewall\" (with keys \"status\" and \"rules\"), where \"rules\" must be represented as an array of rule strings.",
            "task_id": "170502",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "configuration",
                "configuration[application]",
                "configuration[application][name]",
                "configuration[application][version]",
                "configuration[application][releaseDate]",
                "configuration[database]",
                "configuration[database][host]",
                "configuration[database][port]",
                "configuration[database][credentials]",
                "configuration[database][credentials][username]",
                "configuration[database][credentials][password]",
                "configuration[database][tables]",
                "configuration[logging]",
                "configuration[logging][level]",
                "configuration[logging][filePath]",
                "configuration[logging][rotation]",
                "configuration[logging][rotation][maxFiles]",
                "configuration[logging][rotation][size]",
                "configuration[services]",
                "configuration[services][][name]",
                "configuration[services][][enabled]",
                "configuration[services][][endpoints]",
                "configuration[security]",
                "configuration[security][encryption]",
                "configuration[security][encryption][algorithm]",
                "configuration[security][encryption][keyLength]",
                "configuration[security][firewall]",
                "configuration[security][firewall][status]",
                "configuration[security][firewall][rules]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170502_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n  <application>\n    <name>DataConverter</name>\n    <version>1.0.0</version>\n    <releaseDate>2023-10-15</releaseDate>\n  </application>\n  <database>\n    <host>localhost</host>\n    <port>5432</port>\n    <credentials>\n      <username>dbuser</username>\n      <password>securepass</password>\n    </credentials>\n    <tables>\n      <table>customers</table>\n      <table>orders</table>\n      <table>invoices</table>\n    </tables>\n  </database>\n  <logging>\n    <level>INFO</level>\n    <filePath>/var/log/dataconverter.log</filePath>\n    <rotation>\n      <maxFiles>7</maxFiles>\n      <size>20MB</size>\n    </rotation>\n  </logging>\n  <services>\n    <service>\n      <name>Authentication</name>\n      <enabled>true</enabled>\n      <endpoints>\n        <endpoint>/api/auth/login</endpoint>\n        <endpoint>/api/auth/logout</endpoint>\n      </endpoints>\n    </service>\n    <service>\n      <name>DataProcessing</name>\n      <enabled>true</enabled>\n      <endpoints>\n        <endpoint>/api/process/start</endpoint>\n        <endpoint>/api/process/stop</endpoint>\n      </endpoints>\n    </service>\n  </services>\n  <security>\n    <encryption>\n      <algorithm>AES</algorithm>\n      <keyLength>256</keyLength>\n    </encryption>\n    <firewall>\n      <status>active</status>\n      <rules>\n        <rule>allow:80</rule>\n        <rule>allow:443</rule>\n        <rule>deny:all</rule>\n      </rules>\n    </firewall>\n  </security>\n</configuration>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170502_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "configuration",
                                "configuration[application]",
                                "configuration[application][name]",
                                "configuration[application][version]",
                                "configuration[application][releaseDate]",
                                "configuration[database]",
                                "configuration[database][host]",
                                "configuration[database][port]",
                                "configuration[database][credentials]",
                                "configuration[database][credentials][username]",
                                "configuration[database][credentials][password]",
                                "configuration[database][tables]",
                                "configuration[logging]",
                                "configuration[logging][level]",
                                "configuration[logging][filePath]",
                                "configuration[logging][rotation]",
                                "configuration[logging][rotation][maxFiles]",
                                "configuration[logging][rotation][size]",
                                "configuration[services]",
                                "configuration[services][][name]",
                                "configuration[services][][enabled]",
                                "configuration[services][][endpoints]",
                                "configuration[security]",
                                "configuration[security][encryption]",
                                "configuration[security][encryption][algorithm]",
                                "configuration[security][encryption][keyLength]",
                                "configuration[security][firewall]",
                                "configuration[security][firewall][status]",
                                "configuration[security][firewall][rules]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<library>\n  <name>Central City Library</name>\n  <address>\n    <street>123 Library Lane</street>\n    <city>Central City</city>\n    <state>CC</state>\n    <zip>12345</zip>\n  </address>\n  <books>\n    <book>\n      <isbn>978-0-123456-47-2</isbn>\n      <title>The Art of Code</title>\n      <author>Jane Smith</author>\n      <year>2020</year>\n      <genres>\n        <genre>Technology</genre>\n        <genre>Programming</genre>\n      </genres>\n    </book>\n    <book>\n      <isbn>978-1-987654-32-1</isbn>\n      <title>XML for Beginners</title>\n      <author>John Doe</author>\n      <year>2018</year>\n      <genres>\n        <genre>Education</genre>\n        <genre>IT</genre>\n      </genres>\n    </book>\n  </books>\n  <staff>\n    <member>\n      <id>001</id>\n      <name>Emily Ray</name>\n      <role>Librarian</role>\n      <contact>\n        <email>emily.ray@centrallibrary.org</email>\n        <phone>555-1234</phone>\n      </contact>\n    </member>\n    <member>\n      <id>002</id>\n      <name>Samuel Green</name>\n      <role>Archivist</role>\n      <contact>\n        <email>samuel.green@centrallibrary.org</email>\n        <phone>555-5678</phone>\n      </contact>\n    </member>\n  </staff>\n  <events>\n    <event>\n      <title>Poetry Reading</title>\n      <date>2023-11-05</date>\n      <description>An evening of local poetry readings.</description>\n    </event>\n    <event>\n      <title>Book Club Meeting</title>\n      <date>2023-11-12</date>\n      <description>Discussion of modern literature classics.</description>\n    </event>\n  </events>\n</library>\n</code>",
            "feature_requirements": "• The JSON output must have a root object representing the library, containing keys for \"name\", \"address\", \"books\", \"staff\", and \"events\".  \n• The \"address\" object must contain keys \"street\", \"city\", \"state\", and \"zip\", with each key mapping to its respective value from the XML.  \n• The \"books\" key must map to an array of book objects, where each book object includes the keys \"isbn\", \"title\", \"author\", \"year\", and \"genres\".  \n• Each book object's \"genres\" key must map to an array of genre strings, reflecting all individual <genre> elements.  \n• The \"staff\" key must map to an array of member objects, where each member object contains keys \"id\", \"name\", \"role\", and \"contact\".  \n• Within each member's \"contact\" object, there must be keys \"email\" and \"phone\" mapping to their appropriate values.  \n• The \"events\" key must map to an array of event objects, with each event object containing the keys \"title\", \"date\", and \"description\".  \n• All values must correspond directly to the text contained within their respective XML elements, ensuring the data structure mirrors the XML hierarchy.",
            "task_id": "170503",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "name",
                "address",
                "address[street]",
                "address[city]",
                "address[state]",
                "address[zip]",
                "books",
                "books[*][isbn]",
                "books[*][title]",
                "books[*][author]",
                "books[*][year]",
                "books[*][genres]",
                "books[*][genres][*]",
                "staff",
                "staff[*][id]",
                "staff[*][name]",
                "staff[*][role]",
                "staff[*][contact]",
                "staff[*][contact][email]",
                "staff[*][contact][phone]",
                "events",
                "events[*][title]",
                "events[*][date]",
                "events[*][description]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170503_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<library>\n  <name>Central City Library</name>\n  <address>\n    <street>123 Library Lane</street>\n    <city>Central City</city>\n    <state>CC</state>\n    <zip>12345</zip>\n  </address>\n  <books>\n    <book>\n      <isbn>978-0-123456-47-2</isbn>\n      <title>The Art of Code</title>\n      <author>Jane Smith</author>\n      <year>2020</year>\n      <genres>\n        <genre>Technology</genre>\n        <genre>Programming</genre>\n      </genres>\n    </book>\n    <book>\n      <isbn>978-1-987654-32-1</isbn>\n      <title>XML for Beginners</title>\n      <author>John Doe</author>\n      <year>2018</year>\n      <genres>\n        <genre>Education</genre>\n        <genre>IT</genre>\n      </genres>\n    </book>\n  </books>\n  <staff>\n    <member>\n      <id>001</id>\n      <name>Emily Ray</name>\n      <role>Librarian</role>\n      <contact>\n        <email>emily.ray@centrallibrary.org</email>\n        <phone>555-1234</phone>\n      </contact>\n    </member>\n    <member>\n      <id>002</id>\n      <name>Samuel Green</name>\n      <role>Archivist</role>\n      <contact>\n        <email>samuel.green@centrallibrary.org</email>\n        <phone>555-5678</phone>\n      </contact>\n    </member>\n  </staff>\n  <events>\n    <event>\n      <title>Poetry Reading</title>\n      <date>2023-11-05</date>\n      <description>An evening of local poetry readings.</description>\n    </event>\n    <event>\n      <title>Book Club Meeting</title>\n      <date>2023-11-12</date>\n      <description>Discussion of modern literature classics.</description>\n    </event>\n  </events>\n</library>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170503_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "name",
                                "address",
                                "address[street]",
                                "address[city]",
                                "address[state]",
                                "address[zip]",
                                "books",
                                "books[*][isbn]",
                                "books[*][title]",
                                "books[*][author]",
                                "books[*][year]",
                                "books[*][genres]",
                                "books[*][genres][*]",
                                "staff",
                                "staff[*][id]",
                                "staff[*][name]",
                                "staff[*][role]",
                                "staff[*][contact]",
                                "staff[*][contact][email]",
                                "staff[*][contact][phone]",
                                "events",
                                "events[*][title]",
                                "events[*][date]",
                                "events[*][description]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<library>\n  <catalog id=\"main\">\n    <books>\n      <book isbn=\"9783161484100\">\n        <title>The XML Way</title>\n        <author>Alex Johnson</author>\n        <genre>Programming</genre>\n        <price currency=\"USD\">49.99</price>\n      </book>\n      <book isbn=\"9783161484101\">\n        <title>Data Structures in Depth</title>\n        <author>Sarah Thompson</author>\n        <genre>Computer Science</genre>\n        <price currency=\"USD\">59.99</price>\n      </book>\n      <book isbn=\"9783161484102\">\n        <title>Understanding Nesting</title>\n        <author>Peter Williams</author>\n        <genre>IT Education</genre>\n        <price currency=\"EUR\">39.99</price>\n      </book>\n    </books>\n  </catalog>\n  <staff>\n    <member id=\"M001\">\n      <name>Emma Brown</name>\n      <role>Librarian</role>\n      <hireDate>2018-09-15</hireDate>\n    </member>\n    <member id=\"M002\">\n      <name>Liam Davis</name>\n      <role>Assistant</role>\n      <hireDate>2020-03-22</hireDate>\n    </member>\n  </staff>\n  <events>\n    <event id=\"E001\">\n      <name>Book Fair 2023</name>\n      <date>2023-08-10</date>\n      <location>Main Hall</location>\n      <participants>\n        <participant>Emma Brown</participant>\n        <participant>Liam Davis</participant>\n        <participant>Alex Johnson</participant>\n      </participants>\n    </event>\n    <event id=\"E002\">\n      <name>Author Meet &amp; Greet</name>\n      <date>2023-09-05</date>\n      <location>Conference Room 1</location>\n      <participants>\n        <participant>Sarah Thompson</participant>\n        <participant>Peter Williams</participant>\n      </participants>\n    </event>\n  </events>\n  <services>\n    <service>\n      <name>Borrowing</name>\n      <duration unit=\"days\">14</duration>\n      <fine currency=\"USD\">0.5</fine>\n    </service>\n    <service>\n      <name>Reading Room Access</name>\n      <access>24/7</access>\n    </service>\n  </services>\n</library>\n</code>",
            "feature_requirements": "• The root JSON object must have a key representing the library, containing nested keys for catalog, staff, events, and services.  \n• Under the catalog key, there must be an identifier (id) with the value \"main\" and a books key that contains an array of book objects.  \n• Each book object in the books array must include keys for isbn, title, author, genre, and price; the price must encapsulate both its numeric or string value and a nested currency attribute.  \n• The staff key must map to an array of member objects, each with keys for id, name, role, and hireDate.  \n• The events key must map to an array of event objects, each containing keys for id, name, date, location, and participants; the participants key must contain an array of participant names.  \n• The services key must map to an array of service objects, where one service includes a duration element with a unit attribute and a fine element with a currency attribute, while others might include alternative keys like access.  \n• All elements, attributes, and nested structures present in the XML must be preserved in the JSON output, reflecting the same hierarchical relationships.",
            "task_id": "170504",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "library",
                "library[catalog]",
                "library[catalog][id]",
                "library[catalog][books]",
                "library[catalog][books][][isbn]",
                "library[catalog][books][][title]",
                "library[catalog][books][][author]",
                "library[catalog][books][][genre]",
                "library[catalog][books][][price]",
                "library[catalog][books][][price][currency]",
                "library[staff]",
                "library[staff][][id]",
                "library[staff][][name]",
                "library[staff][][role]",
                "library[staff][][hireDate]",
                "library[events]",
                "library[events][][id]",
                "library[events][][name]",
                "library[events][][date]",
                "library[events][][location]",
                "library[events][][participants]",
                "library[events][][participants][]",
                "library[services]",
                "library[services][][duration]",
                "library[services][][duration][unit]",
                "library[services][][fine]",
                "library[services][][fine][currency]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170504_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<library>\n  <catalog id=\"main\">\n    <books>\n      <book isbn=\"9783161484100\">\n        <title>The XML Way</title>\n        <author>Alex Johnson</author>\n        <genre>Programming</genre>\n        <price currency=\"USD\">49.99</price>\n      </book>\n      <book isbn=\"9783161484101\">\n        <title>Data Structures in Depth</title>\n        <author>Sarah Thompson</author>\n        <genre>Computer Science</genre>\n        <price currency=\"USD\">59.99</price>\n      </book>\n      <book isbn=\"9783161484102\">\n        <title>Understanding Nesting</title>\n        <author>Peter Williams</author>\n        <genre>IT Education</genre>\n        <price currency=\"EUR\">39.99</price>\n      </book>\n    </books>\n  </catalog>\n  <staff>\n    <member id=\"M001\">\n      <name>Emma Brown</name>\n      <role>Librarian</role>\n      <hireDate>2018-09-15</hireDate>\n    </member>\n    <member id=\"M002\">\n      <name>Liam Davis</name>\n      <role>Assistant</role>\n      <hireDate>2020-03-22</hireDate>\n    </member>\n  </staff>\n  <events>\n    <event id=\"E001\">\n      <name>Book Fair 2023</name>\n      <date>2023-08-10</date>\n      <location>Main Hall</location>\n      <participants>\n        <participant>Emma Brown</participant>\n        <participant>Liam Davis</participant>\n        <participant>Alex Johnson</participant>\n      </participants>\n    </event>\n    <event id=\"E002\">\n      <name>Author Meet &amp; Greet</name>\n      <date>2023-09-05</date>\n      <location>Conference Room 1</location>\n      <participants>\n        <participant>Sarah Thompson</participant>\n        <participant>Peter Williams</participant>\n      </participants>\n    </event>\n  </events>\n  <services>\n    <service>\n      <name>Borrowing</name>\n      <duration unit=\"days\">14</duration>\n      <fine currency=\"USD\">0.5</fine>\n    </service>\n    <service>\n      <name>Reading Room Access</name>\n      <access>24/7</access>\n    </service>\n  </services>\n</library>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170504_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "library",
                                "library[catalog]",
                                "library[catalog][id]",
                                "library[catalog][books]",
                                "library[catalog][books][][isbn]",
                                "library[catalog][books][][title]",
                                "library[catalog][books][][author]",
                                "library[catalog][books][][genre]",
                                "library[catalog][books][][price]",
                                "library[catalog][books][][price][currency]",
                                "library[staff]",
                                "library[staff][][id]",
                                "library[staff][][name]",
                                "library[staff][][role]",
                                "library[staff][][hireDate]",
                                "library[events]",
                                "library[events][][id]",
                                "library[events][][name]",
                                "library[events][][date]",
                                "library[events][][location]",
                                "library[events][][participants]",
                                "library[events][][participants][]",
                                "library[services]",
                                "library[services][][duration]",
                                "library[services][][duration][unit]",
                                "library[services][][fine]",
                                "library[services][][fine][currency]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<data>\n  <customer>\n    <id>1023</id>\n    <name>Jane Doe</name>\n    <email>jane.doe@example.com</email>\n    <address>\n      <street>123 Maple Street</street>\n      <city>Springfield</city>\n      <state>IL</state>\n      <zip>62704</zip>\n    </address>\n  </customer>\n  <orders>\n    <order>\n      <orderId>5601</orderId>\n      <date>2023-10-05</date>\n      <total>249.99</total>\n      <items>\n        <item>\n          <productId>P1001</productId>\n          <quantity>1</quantity>\n          <price>149.99</price>\n        </item>\n        <item>\n          <productId>P1002</productId>\n          <quantity>2</quantity>\n          <price>50.00</price>\n        </item>\n      </items>\n    </order>\n    <order>\n      <orderId>5602</orderId>\n      <date>2023-10-10</date>\n      <total>79.99</total>\n      <items>\n        <item>\n          <productId>P2001</productId>\n          <quantity>1</quantity>\n          <price>79.99</price>\n        </item>\n      </items>\n    </order>\n  </orders>\n  <settings>\n    <notifications enabled=\"true\">\n      <email>true</email>\n      <sms>false</sms>\n    </notifications>\n    <privacy>\n      <shareData>false</shareData>\n      <adPersonalization>true</adPersonalization>\n    </privacy>\n  </settings>\n  <inventory>\n    <product>\n      <productId>P1001</productId>\n      <name>UltraWidget</name>\n      <stock>58</stock>\n      <price>149.99</price>\n    </product>\n    <product>\n      <productId>P1002</productId>\n      <name>MiniWidget</name>\n      <stock>134</stock>\n      <price>50.00</price>\n    </product>\n    <product>\n      <productId>P2001</productId>\n      <name>MegaGadget</name>\n      <stock>27</stock>\n      <price>79.99</price>\n    </product>\n  </inventory>\n</data>\n</code>",
            "feature_requirements": "• The JSON must have a root object that contains a key corresponding to the top-level XML element (e.g., \"data\").\n\n• Under the root, there must be a \"customer\" object containing keys for \"id\", \"name\", \"email\", and an \"address\" object.\n\n• The \"address\" object must include keys \"street\", \"city\", \"state\", and \"zip\" with values taken from the corresponding XML tags.\n\n• There must be an \"orders\" key whose value is an array of order objects; each order object must have keys \"orderId\", \"date\", \"total\", and \"items\".\n\n• Each \"order\" object's \"items\" must be an array where each item contains keys \"productId\", \"quantity\", and \"price\".\n\n• The JSON must include a \"settings\" object containing \"notifications\" and \"privacy\" objects.\n\n• The \"notifications\" object must capture the XML attribute (e.g., \"enabled\") as a key and include nested keys \"email\" and \"sms\" with their respective boolean values.\n\n• The \"privacy\" object must include keys \"shareData\" and \"adPersonalization\" with their corresponding boolean values from the XML.\n\n• There must be an \"inventory\" key whose value is an array of product objects, each with keys \"productId\", \"name\", \"stock\", and \"price\".",
            "task_id": "170505",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "data",
                "data[customer]",
                "data[customer][id]",
                "data[customer][name]",
                "data[customer][email]",
                "data[customer][address]",
                "data[customer][address][street]",
                "data[customer][address][city]",
                "data[customer][address][state]",
                "data[customer][address][zip]",
                "data[orders]",
                "data[orders][*][orderId]",
                "data[orders][*][date]",
                "data[orders][*][total]",
                "data[orders][*][items]",
                "data[orders][*][items][*][productId]",
                "data[orders][*][items][*][quantity]",
                "data[orders][*][items][*][price]",
                "data[settings]",
                "data[settings][notifications]",
                "data[settings][notifications][enabled]",
                "data[settings][notifications][email]",
                "data[settings][notifications][sms]",
                "data[settings][privacy]",
                "data[settings][privacy][shareData]",
                "data[settings][privacy][adPersonalization]",
                "data[inventory]",
                "data[inventory][*][productId]",
                "data[inventory][*][name]",
                "data[inventory][*][stock]",
                "data[inventory][*][price]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170505_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<data>\n  <customer>\n    <id>1023</id>\n    <name>Jane Doe</name>\n    <email>jane.doe@example.com</email>\n    <address>\n      <street>123 Maple Street</street>\n      <city>Springfield</city>\n      <state>IL</state>\n      <zip>62704</zip>\n    </address>\n  </customer>\n  <orders>\n    <order>\n      <orderId>5601</orderId>\n      <date>2023-10-05</date>\n      <total>249.99</total>\n      <items>\n        <item>\n          <productId>P1001</productId>\n          <quantity>1</quantity>\n          <price>149.99</price>\n        </item>\n        <item>\n          <productId>P1002</productId>\n          <quantity>2</quantity>\n          <price>50.00</price>\n        </item>\n      </items>\n    </order>\n    <order>\n      <orderId>5602</orderId>\n      <date>2023-10-10</date>\n      <total>79.99</total>\n      <items>\n        <item>\n          <productId>P2001</productId>\n          <quantity>1</quantity>\n          <price>79.99</price>\n        </item>\n      </items>\n    </order>\n  </orders>\n  <settings>\n    <notifications enabled=\"true\">\n      <email>true</email>\n      <sms>false</sms>\n    </notifications>\n    <privacy>\n      <shareData>false</shareData>\n      <adPersonalization>true</adPersonalization>\n    </privacy>\n  </settings>\n  <inventory>\n    <product>\n      <productId>P1001</productId>\n      <name>UltraWidget</name>\n      <stock>58</stock>\n      <price>149.99</price>\n    </product>\n    <product>\n      <productId>P1002</productId>\n      <name>MiniWidget</name>\n      <stock>134</stock>\n      <price>50.00</price>\n    </product>\n    <product>\n      <productId>P2001</productId>\n      <name>MegaGadget</name>\n      <stock>27</stock>\n      <price>79.99</price>\n    </product>\n  </inventory>\n</data>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170505_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "data",
                                "data[customer]",
                                "data[customer][id]",
                                "data[customer][name]",
                                "data[customer][email]",
                                "data[customer][address]",
                                "data[customer][address][street]",
                                "data[customer][address][city]",
                                "data[customer][address][state]",
                                "data[customer][address][zip]",
                                "data[orders]",
                                "data[orders][*][orderId]",
                                "data[orders][*][date]",
                                "data[orders][*][total]",
                                "data[orders][*][items]",
                                "data[orders][*][items][*][productId]",
                                "data[orders][*][items][*][quantity]",
                                "data[orders][*][items][*][price]",
                                "data[settings]",
                                "data[settings][notifications]",
                                "data[settings][notifications][enabled]",
                                "data[settings][notifications][email]",
                                "data[settings][notifications][sms]",
                                "data[settings][privacy]",
                                "data[settings][privacy][shareData]",
                                "data[settings][privacy][adPersonalization]",
                                "data[inventory]",
                                "data[inventory][*][productId]",
                                "data[inventory][*][name]",
                                "data[inventory][*][stock]",
                                "data[inventory][*][price]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n    <metadata>\n        <version>1.2.3</version>\n        <lastUpdated>2023-10-05</lastUpdated>\n        <environment>production</environment>\n    </metadata>\n    <database>\n        <host>dbserver.local</host>\n        <port>3306</port>\n        <username>dbuser</username>\n        <password>dbPass123</password>\n    </database>\n    <apiSettings>\n        <endpoint>https://api.example.com/v1</endpoint>\n        <timeout>45</timeout>\n        <retries>3</retries>\n        <headers>\n            <header key=\"Content-Type\">application/json</header>\n            <header key=\"Authorization\">Bearer token_value</header>\n        </headers>\n    </apiSettings>\n    <features>\n        <feature name=\"UserLogin\" enabled=\"true\"/>\n        <feature name=\"DataExport\" enabled=\"false\"/>\n        <feature name=\"Analytics\" enabled=\"true\"/>\n    </features>\n    <users>\n        <user id=\"101\">\n            <name>Alice Johnson</name>\n            <role>administrator</role>\n            <preferences>\n                <theme>dark</theme>\n                <language>en-US</language>\n            </preferences>\n        </user>\n        <user id=\"102\">\n            <name>Bob Smith</name>\n            <role>editor</role>\n            <preferences>\n                <theme>light</theme>\n                <language>en-GB</language>\n            </preferences>\n        </user>\n        <user id=\"103\">\n            <name>Charlie Davis</name>\n            <role>viewer</role>\n            <preferences>\n                <theme>light</theme>\n                <language>es-ES</language>\n            </preferences>\n        </user>\n    </users>\n</configuration>\n</code>",
            "feature_requirements": "• The output JSON must have a top-level key \"configuration\" that encloses all other settings.\n• Within \"configuration\", there must be nested objects for \"metadata\", \"database\", \"apiSettings\", \"features\", and \"users\".\n• The \"metadata\" object must include keys \"version\", \"lastUpdated\", and \"environment\" with their respective string values.\n• The \"database\" object must contain keys \"host\", \"port\", \"username\", and \"password\", where \"port\" is represented as a number.\n• The \"apiSettings\" object must include keys \"endpoint\", \"timeout\", \"retries\", and \"headers\", with \"headers\" represented as an array of objects. Each header object should have a \"key\" property and its corresponding header value.\n• The \"features\" section must be represented as an array, with each element being an object that includes \"name\" and \"enabled\" properties indicating the feature identifier and its state.\n• The \"users\" section must be an array where each user object includes an \"id\" property and nested keys \"name\", \"role\", and \"preferences\". The \"preferences\" object within each user should contain the keys \"theme\" and \"language\".",
            "task_id": "170506",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "configuration",
                "configuration[metadata]",
                "configuration[metadata][version]",
                "configuration[metadata][lastUpdated]",
                "configuration[metadata][environment]",
                "configuration[database]",
                "configuration[database][host]",
                "configuration[database][port]",
                "configuration[database][username]",
                "configuration[database][password]",
                "configuration[apiSettings]",
                "configuration[apiSettings][endpoint]",
                "configuration[apiSettings][timeout]",
                "configuration[apiSettings][retries]",
                "configuration[apiSettings][headers]",
                "configuration[apiSettings][headers][][key]",
                "configuration[features]",
                "configuration[features][][name]",
                "configuration[features][][enabled]",
                "configuration[users]",
                "configuration[users][][id]",
                "configuration[users][][name]",
                "configuration[users][][role]",
                "configuration[users][][preferences]",
                "configuration[users][][preferences][theme]",
                "configuration[users][][preferences][language]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170506_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n    <metadata>\n        <version>1.2.3</version>\n        <lastUpdated>2023-10-05</lastUpdated>\n        <environment>production</environment>\n    </metadata>\n    <database>\n        <host>dbserver.local</host>\n        <port>3306</port>\n        <username>dbuser</username>\n        <password>dbPass123</password>\n    </database>\n    <apiSettings>\n        <endpoint>https://api.example.com/v1</endpoint>\n        <timeout>45</timeout>\n        <retries>3</retries>\n        <headers>\n            <header key=\"Content-Type\">application/json</header>\n            <header key=\"Authorization\">Bearer token_value</header>\n        </headers>\n    </apiSettings>\n    <features>\n        <feature name=\"UserLogin\" enabled=\"true\"/>\n        <feature name=\"DataExport\" enabled=\"false\"/>\n        <feature name=\"Analytics\" enabled=\"true\"/>\n    </features>\n    <users>\n        <user id=\"101\">\n            <name>Alice Johnson</name>\n            <role>administrator</role>\n            <preferences>\n                <theme>dark</theme>\n                <language>en-US</language>\n            </preferences>\n        </user>\n        <user id=\"102\">\n            <name>Bob Smith</name>\n            <role>editor</role>\n            <preferences>\n                <theme>light</theme>\n                <language>en-GB</language>\n            </preferences>\n        </user>\n        <user id=\"103\">\n            <name>Charlie Davis</name>\n            <role>viewer</role>\n            <preferences>\n                <theme>light</theme>\n                <language>es-ES</language>\n            </preferences>\n        </user>\n    </users>\n</configuration>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170506_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "configuration",
                                "configuration[metadata]",
                                "configuration[metadata][version]",
                                "configuration[metadata][lastUpdated]",
                                "configuration[metadata][environment]",
                                "configuration[database]",
                                "configuration[database][host]",
                                "configuration[database][port]",
                                "configuration[database][username]",
                                "configuration[database][password]",
                                "configuration[apiSettings]",
                                "configuration[apiSettings][endpoint]",
                                "configuration[apiSettings][timeout]",
                                "configuration[apiSettings][retries]",
                                "configuration[apiSettings][headers]",
                                "configuration[apiSettings][headers][][key]",
                                "configuration[features]",
                                "configuration[features][][name]",
                                "configuration[features][][enabled]",
                                "configuration[users]",
                                "configuration[users][][id]",
                                "configuration[users][][name]",
                                "configuration[users][][role]",
                                "configuration[users][][preferences]",
                                "configuration[users][][preferences][theme]",
                                "configuration[users][][preferences][language]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<conversionData>\n    <metadata>\n        <version>1.0</version>\n        <timestamp>2023-10-10T12:34:56Z</timestamp>\n        <author>John Doe</author>\n    </metadata>\n    <products>\n        <product id=\"101\">\n            <name>Laptop</name>\n            <price currency=\"USD\">1200.00</price>\n            <available>true</available>\n        </product>\n        <product id=\"102\">\n            <name>Smartphone</name>\n            <price currency=\"USD\">800.00</price>\n            <available>true</available>\n        </product>\n    </products>\n    <employees>\n        <employee id=\"E01\">\n            <name>Jane Smith</name>\n            <department>Sales</department>\n            <role>Manager</role>\n        </employee>\n        <employee id=\"E02\">\n            <name>Bob Johnson</name>\n            <department>Support</department>\n            <role>Technician</role>\n        </employee>\n    </employees>\n    <settings>\n        <theme>dark</theme>\n        <language>en-US</language>\n    </settings>\n    <transactions>\n        <transaction>\n            <id>T001</id>\n            <productId>101</productId>\n            <employeeId>E01</employeeId>\n            <quantity>2</quantity>\n        </transaction>\n        <transaction>\n            <id>T002</id>\n            <productId>102</productId>\n            <employeeId>E02</employeeId>\n            <quantity>1</quantity>\n        </transaction>\n    </transactions>\n</conversionData>\n</code>",
            "feature_requirements": "• The JSON output must include a top-level key representing the root element (\"conversionData\") that contains all other keys.\n\n• Within \"conversionData\", there must be separate keys for \"metadata\", \"products\", \"employees\", \"settings\", and \"transactions\".\n\n• The \"metadata\" object must include keys for \"version\", \"timestamp\", and \"author\", each associated with their respective string values.\n\n• The \"products\" entry must be a list of product objects, and each product object must include an \"id\" (converted from the attribute), a \"name\", a \"price\" (with its numeric or string value), and an \"available\" status.\n\n• The \"price\" information within each product must retain the currency attribute (e.g., as an inner key \"currency\" or equivalent) alongside the price value.\n\n• The \"employees\" entry must be a list of employee objects, and each employee object must include an \"id\" (from the attribute), a \"name\", a \"department\", and a \"role\".\n\n• The \"settings\" key must map to an object containing keys for \"theme\" and \"language\", each with appropriate string values.\n\n• The \"transactions\" entry must be a list of transaction objects, with each object containing keys \"id\", \"productId\", \"employeeId\", and \"quantity\".\n\n• Every element and attribute from the XML must be represented as a key-value pair within the JSON structure, ensuring that all hierarchical relationships are preserved.",
            "task_id": "170507",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "conversionData",
                "conversionData[metadata]",
                "conversionData[metadata][version]",
                "conversionData[metadata][timestamp]",
                "conversionData[metadata][author]",
                "conversionData[products]",
                "conversionData[products][][id]",
                "conversionData[products][][name]",
                "conversionData[products][][price]",
                "conversionData[products][][price][currency]",
                "conversionData[products][][available]",
                "conversionData[employees]",
                "conversionData[employees][][id]",
                "conversionData[employees][][name]",
                "conversionData[employees][][department]",
                "conversionData[employees][][role]",
                "conversionData[settings]",
                "conversionData[settings][theme]",
                "conversionData[settings][language]",
                "conversionData[transactions]",
                "conversionData[transactions][][id]",
                "conversionData[transactions][][productId]",
                "conversionData[transactions][][employeeId]",
                "conversionData[transactions][][quantity]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170507_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<conversionData>\n    <metadata>\n        <version>1.0</version>\n        <timestamp>2023-10-10T12:34:56Z</timestamp>\n        <author>John Doe</author>\n    </metadata>\n    <products>\n        <product id=\"101\">\n            <name>Laptop</name>\n            <price currency=\"USD\">1200.00</price>\n            <available>true</available>\n        </product>\n        <product id=\"102\">\n            <name>Smartphone</name>\n            <price currency=\"USD\">800.00</price>\n            <available>true</available>\n        </product>\n    </products>\n    <employees>\n        <employee id=\"E01\">\n            <name>Jane Smith</name>\n            <department>Sales</department>\n            <role>Manager</role>\n        </employee>\n        <employee id=\"E02\">\n            <name>Bob Johnson</name>\n            <department>Support</department>\n            <role>Technician</role>\n        </employee>\n    </employees>\n    <settings>\n        <theme>dark</theme>\n        <language>en-US</language>\n    </settings>\n    <transactions>\n        <transaction>\n            <id>T001</id>\n            <productId>101</productId>\n            <employeeId>E01</employeeId>\n            <quantity>2</quantity>\n        </transaction>\n        <transaction>\n            <id>T002</id>\n            <productId>102</productId>\n            <employeeId>E02</employeeId>\n            <quantity>1</quantity>\n        </transaction>\n    </transactions>\n</conversionData>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170507_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "conversionData",
                                "conversionData[metadata]",
                                "conversionData[metadata][version]",
                                "conversionData[metadata][timestamp]",
                                "conversionData[metadata][author]",
                                "conversionData[products]",
                                "conversionData[products][][id]",
                                "conversionData[products][][name]",
                                "conversionData[products][][price]",
                                "conversionData[products][][price][currency]",
                                "conversionData[products][][available]",
                                "conversionData[employees]",
                                "conversionData[employees][][id]",
                                "conversionData[employees][][name]",
                                "conversionData[employees][][department]",
                                "conversionData[employees][][role]",
                                "conversionData[settings]",
                                "conversionData[settings][theme]",
                                "conversionData[settings][language]",
                                "conversionData[transactions]",
                                "conversionData[transactions][][id]",
                                "conversionData[transactions][][productId]",
                                "conversionData[transactions][][employeeId]",
                                "conversionData[transactions][][quantity]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<data>\n  <user id=\"001\">\n    <name>Jane Smith</name>\n    <contact>\n      <email>jane.smith@example.com</email>\n      <phone>+1234567890</phone>\n    </contact>\n    <roles>\n      <role>Editor</role>\n      <role>Contributor</role>\n    </roles>\n  </user>\n  <project id=\"P1001\">\n    <title>Website Redesign</title>\n    <description>Complete overhaul of the current website layout and infrastructure.</description>\n    <status>In Progress</status>\n    <milestones>\n      <milestone>\n        <name>Initial Planning</name>\n        <dueDate>2023-10-15</dueDate>\n      </milestone>\n      <milestone>\n        <name>Prototype Development</name>\n        <dueDate>2023-11-20</dueDate>\n      </milestone>\n      <milestone>\n        <name>Final Review</name>\n        <dueDate>2023-12-30</dueDate>\n      </milestone>\n    </milestones>\n  </project>\n  <configuration>\n    <theme>Light</theme>\n    <language>en-US</language>\n    <preferences>\n      <subscription enabled=\"true\" type=\"premium\"/>\n      <notifications enabled=\"false\"/>\n    </preferences>\n  </configuration>\n  <logs>\n    <entry>\n      <timestamp>2023-10-01T08:30:00Z</timestamp>\n      <event>Login Successful</event>\n      <userID>001</userID>\n    </entry>\n    <entry>\n      <timestamp>2023-10-02T09:45:00Z</timestamp>\n      <event>Project Updated</event>\n      <projectID>P1001</projectID>\n    </entry>\n  </logs>\n  <metadata>\n    <createdDate>2023-09-15</createdDate>\n    <lastModified>2023-10-02</lastModified>\n    <version>1.2</version>\n  </metadata>\n</data>\n</code>",
            "feature_requirements": "• The JSON output must have a main object that accurately reflects the original XML hierarchy, with keys corresponding to the XML element names such as \"user,\" \"project,\" \"configuration,\" \"logs,\" and \"metadata.\"  \n• The \"user\" object must include an identifier (id), a nested \"name\" field, a nested \"contact\" object containing both \"email\" and \"phone,\" and a \"roles\" array with individual role entries.  \n• The \"project\" object must include an identifier (id), \"title,\" \"description,\" \"status,\" and a \"milestones\" array where each milestone object includes a \"name\" and a \"dueDate.\"  \n• The \"configuration\" object must include keys like \"theme\" and \"language,\" and a nested \"preferences\" object which contains objects for \"subscription\" (with attributes such as enabled and type) and \"notifications\" (with an enabled attribute).  \n• The \"logs\" element must be represented as an array of objects where each log entry includes a \"timestamp,\" an \"event,\" and either a \"userID\" or \"projectID\" to match the XML entries.  \n• The \"metadata\" object must include \"createdDate,\" \"lastModified,\" and \"version\" keys with corresponding values as provided in the XML.  \n• Each key and value in the JSON output must represent the exact data found in the XML, capturing both the nested elements and the attributes accurately.",
            "task_id": "170508",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "user[id]",
                "user[name]",
                "user[contact][email]",
                "user[contact][phone]",
                "user[roles]",
                "project[id]",
                "project[title]",
                "project[description]",
                "project[status]",
                "project[milestones][*][name]",
                "project[milestones][*][dueDate]",
                "configuration[theme]",
                "configuration[language]",
                "configuration[preferences][subscription][enabled]",
                "configuration[preferences][subscription][type]",
                "configuration[preferences][notifications][enabled]",
                "logs[*][timestamp]",
                "logs[*][event]",
                "logs[*][userID]",
                "logs[*][projectID]",
                "metadata[createdDate]",
                "metadata[lastModified]",
                "metadata[version]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170508_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<data>\n  <user id=\"001\">\n    <name>Jane Smith</name>\n    <contact>\n      <email>jane.smith@example.com</email>\n      <phone>+1234567890</phone>\n    </contact>\n    <roles>\n      <role>Editor</role>\n      <role>Contributor</role>\n    </roles>\n  </user>\n  <project id=\"P1001\">\n    <title>Website Redesign</title>\n    <description>Complete overhaul of the current website layout and infrastructure.</description>\n    <status>In Progress</status>\n    <milestones>\n      <milestone>\n        <name>Initial Planning</name>\n        <dueDate>2023-10-15</dueDate>\n      </milestone>\n      <milestone>\n        <name>Prototype Development</name>\n        <dueDate>2023-11-20</dueDate>\n      </milestone>\n      <milestone>\n        <name>Final Review</name>\n        <dueDate>2023-12-30</dueDate>\n      </milestone>\n    </milestones>\n  </project>\n  <configuration>\n    <theme>Light</theme>\n    <language>en-US</language>\n    <preferences>\n      <subscription enabled=\"true\" type=\"premium\"/>\n      <notifications enabled=\"false\"/>\n    </preferences>\n  </configuration>\n  <logs>\n    <entry>\n      <timestamp>2023-10-01T08:30:00Z</timestamp>\n      <event>Login Successful</event>\n      <userID>001</userID>\n    </entry>\n    <entry>\n      <timestamp>2023-10-02T09:45:00Z</timestamp>\n      <event>Project Updated</event>\n      <projectID>P1001</projectID>\n    </entry>\n  </logs>\n  <metadata>\n    <createdDate>2023-09-15</createdDate>\n    <lastModified>2023-10-02</lastModified>\n    <version>1.2</version>\n  </metadata>\n</data>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170508_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "user[id]",
                                "user[name]",
                                "user[contact][email]",
                                "user[contact][phone]",
                                "user[roles]",
                                "project[id]",
                                "project[title]",
                                "project[description]",
                                "project[status]",
                                "project[milestones][*][name]",
                                "project[milestones][*][dueDate]",
                                "configuration[theme]",
                                "configuration[language]",
                                "configuration[preferences][subscription][enabled]",
                                "configuration[preferences][subscription][type]",
                                "configuration[preferences][notifications][enabled]",
                                "logs[*][timestamp]",
                                "logs[*][event]",
                                "logs[*][userID]",
                                "logs[*][projectID]",
                                "metadata[createdDate]",
                                "metadata[lastModified]",
                                "metadata[version]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n    <general>\n        <name>SampleApplication</name>\n        <version>2.5.1</version>\n        <enabled>true</enabled>\n    </general>\n    <users>\n        <user>\n            <id>1</id>\n            <username>jdoe</username>\n            <roles>\n                <role>admin</role>\n                <role>editor</role>\n            </roles>\n        </user>\n        <user>\n            <id>2</id>\n            <username>asmith</username>\n            <roles>\n                <role>viewer</role>\n            </roles>\n        </user>\n    </users>\n    <network>\n        <protocols>\n            <protocol>http</protocol>\n            <protocol>https</protocol>\n            <protocol>tcp</protocol>\n        </protocols>\n        <ports>\n            <port>80</port>\n            <port>443</port>\n            <port>8080</port>\n        </ports>\n    </network>\n    <features>\n        <feature name=\"logging\">\n            <level>debug</level>\n            <enabled>true</enabled>\n        </feature>\n        <feature name=\"backup\">\n            <schedule>daily</schedule>\n            <retention>7</retention>\n        </feature>\n    </features>\n    <metadata>\n        <created>2023-10-01</created>\n        <modified>2023-10-10</modified>\n        <tags>\n            <tag>production</tag>\n            <tag>stable</tag>\n            <tag>v2</tag>\n        </tags>\n    </metadata>\n</configuration>\n</code>",
            "feature_requirements": "• The JSON output must contain a top-level object with a key for \"configuration\".  \n• Under \"configuration\", there should be separate sections for \"general\", \"users\", \"network\", \"features\", and \"metadata\".  \n• The \"general\" section must include keys \"name\", \"version\", and \"enabled\" with their respective values directly mapped from the XML.  \n• The \"users\" section must be an array of user objects, each having an \"id\", \"username\", and a \"roles\" property that is an array of strings (one entry per \"role\").  \n• The \"network\" section must include a \"protocols\" key containing an array of protocol strings and a \"ports\" key containing an array of port numbers.  \n• The \"features\" section must be an array where each feature is represented as an object that includes a \"name\" property (sourced from the XML attribute) and contains its own nested key-value pairs (e.g., \"level\", \"enabled\" or \"schedule\", \"retention\").  \n• The \"metadata\" section must include keys \"created\", \"modified\", and \"tags\", with \"tags\" being an array containing each tag string.",
            "task_id": "170509",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "configuration",
                "configuration[general]",
                "configuration[general][name]",
                "configuration[general][version]",
                "configuration[general][enabled]",
                "configuration[users]",
                "configuration[users][][id]",
                "configuration[users][][username]",
                "configuration[users][][roles]",
                "configuration[network]",
                "configuration[network][protocols]",
                "configuration[network][ports]",
                "configuration[features]",
                "configuration[features][][name]",
                "configuration[metadata]",
                "configuration[metadata][created]",
                "configuration[metadata][modified]",
                "configuration[metadata][tags]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170509_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n    <general>\n        <name>SampleApplication</name>\n        <version>2.5.1</version>\n        <enabled>true</enabled>\n    </general>\n    <users>\n        <user>\n            <id>1</id>\n            <username>jdoe</username>\n            <roles>\n                <role>admin</role>\n                <role>editor</role>\n            </roles>\n        </user>\n        <user>\n            <id>2</id>\n            <username>asmith</username>\n            <roles>\n                <role>viewer</role>\n            </roles>\n        </user>\n    </users>\n    <network>\n        <protocols>\n            <protocol>http</protocol>\n            <protocol>https</protocol>\n            <protocol>tcp</protocol>\n        </protocols>\n        <ports>\n            <port>80</port>\n            <port>443</port>\n            <port>8080</port>\n        </ports>\n    </network>\n    <features>\n        <feature name=\"logging\">\n            <level>debug</level>\n            <enabled>true</enabled>\n        </feature>\n        <feature name=\"backup\">\n            <schedule>daily</schedule>\n            <retention>7</retention>\n        </feature>\n    </features>\n    <metadata>\n        <created>2023-10-01</created>\n        <modified>2023-10-10</modified>\n        <tags>\n            <tag>production</tag>\n            <tag>stable</tag>\n            <tag>v2</tag>\n        </tags>\n    </metadata>\n</configuration>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170509_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "configuration",
                                "configuration[general]",
                                "configuration[general][name]",
                                "configuration[general][version]",
                                "configuration[general][enabled]",
                                "configuration[users]",
                                "configuration[users][][id]",
                                "configuration[users][][username]",
                                "configuration[users][][roles]",
                                "configuration[network]",
                                "configuration[network][protocols]",
                                "configuration[network][ports]",
                                "configuration[features]",
                                "configuration[features][][name]",
                                "configuration[metadata]",
                                "configuration[metadata][created]",
                                "configuration[metadata][modified]",
                                "configuration[metadata][tags]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<data>\n    <user>\n        <id>101</id>\n        <name>John Doe</name>\n        <email>john.doe@example.com</email>\n    </user>\n    <settings>\n        <theme>dark</theme>\n        <notifications enabled=\"true\">\n            <email>true</email>\n            <sms>false</sms>\n            <alerts>true</alerts>\n        </notifications>\n    </settings>\n    <preferences>\n        <language>English</language>\n        <timezone>UTC-5</timezone>\n    </preferences>\n    <projects>\n        <project>\n            <id>2001</id>\n            <title>Website Redesign</title>\n            <status>active</status>\n        </project>\n        <project>\n            <id>2002</id>\n            <title>Mobile App Development</title>\n            <status>planning</status>\n        </project>\n        <project>\n            <id>2003</id>\n            <title>Database Migration</title>\n            <status>completed</status>\n        </project>\n    </projects>\n</data>\n</code>",
            "feature_requirements": "• The JSON output must have a top-level key named \"data\" that contains all other keys as its children.  \n• Within \"data\", there must be a \"user\" object that includes keys \"id\", \"name\", and \"email\" with corresponding values from the XML.  \n• Within \"data\", there must be a \"settings\" object that contains a \"theme\" key and a \"notifications\" object.  \n• The \"notifications\" object must include a key for \"enabled\" (converted from the XML attribute) and additional keys \"email\", \"sms\", and \"alerts\" with their corresponding values.  \n• Within \"data\", there must be a \"preferences\" object with keys \"language\" and \"timezone\" reflecting the XML content.  \n• The \"projects\" key within \"data\" must be represented as a list of objects; each object must contain \"id\", \"title\", and \"status\" keys with values matching each <project> element in the XML.  \n• All keys and values in the JSON must directly reflect the corresponding XML element names, attributes, and text content.",
            "task_id": "170510",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "data",
                "data[user]",
                "data[user][id]",
                "data[user][name]",
                "data[user][email]",
                "data[settings]",
                "data[settings][theme]",
                "data[settings][notifications]",
                "data[settings][notifications][enabled]",
                "data[settings][notifications][email]",
                "data[settings][notifications][sms]",
                "data[settings][notifications][alerts]",
                "data[preferences]",
                "data[preferences][language]",
                "data[preferences][timezone]",
                "data[projects]",
                "data[projects][*][id]",
                "data[projects][*][title]",
                "data[projects][*][status]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170510_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<data>\n    <user>\n        <id>101</id>\n        <name>John Doe</name>\n        <email>john.doe@example.com</email>\n    </user>\n    <settings>\n        <theme>dark</theme>\n        <notifications enabled=\"true\">\n            <email>true</email>\n            <sms>false</sms>\n            <alerts>true</alerts>\n        </notifications>\n    </settings>\n    <preferences>\n        <language>English</language>\n        <timezone>UTC-5</timezone>\n    </preferences>\n    <projects>\n        <project>\n            <id>2001</id>\n            <title>Website Redesign</title>\n            <status>active</status>\n        </project>\n        <project>\n            <id>2002</id>\n            <title>Mobile App Development</title>\n            <status>planning</status>\n        </project>\n        <project>\n            <id>2003</id>\n            <title>Database Migration</title>\n            <status>completed</status>\n        </project>\n    </projects>\n</data>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170510_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "data",
                                "data[user]",
                                "data[user][id]",
                                "data[user][name]",
                                "data[user][email]",
                                "data[settings]",
                                "data[settings][theme]",
                                "data[settings][notifications]",
                                "data[settings][notifications][enabled]",
                                "data[settings][notifications][email]",
                                "data[settings][notifications][sms]",
                                "data[settings][notifications][alerts]",
                                "data[preferences]",
                                "data[preferences][language]",
                                "data[preferences][timezone]",
                                "data[projects]",
                                "data[projects][*][id]",
                                "data[projects][*][title]",
                                "data[projects][*][status]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<data>\n  <settings>\n    <theme>light</theme>\n    <language>en-US</language>\n    <timeZone>PST</timeZone>\n  </settings>\n  <users>\n    <user id=\"1\">\n      <name>John Doe</name>\n      <email>john.doe@example.com</email>\n      <roles>\n        <role>admin</role>\n        <role>editor</role>\n      </roles>\n    </user>\n    <user id=\"2\">\n      <name>Jane Smith</name>\n      <email>jane.smith@example.com</email>\n      <roles>\n        <role>editor</role>\n      </roles>\n    </user>\n  </users>\n  <inventory>\n    <product>\n      <id>1001</id>\n      <name>Laptop</name>\n      <price currency=\"USD\">899.99</price>\n      <categories>\n        <category>Electronics</category>\n        <category>Computers</category>\n      </categories>\n    </product>\n    <product>\n      <id>1002</id>\n      <name>Tablet</name>\n      <price currency=\"USD\">299.99</price>\n      <categories>\n        <category>Electronics</category>\n        <category>Mobile Devices</category>\n      </categories>\n    </product>\n  </inventory>\n  <logs>\n    <log entryId=\"1\">\n      <timestamp>2023-10-03T12:00:00Z</timestamp>\n      <message>User login</message>\n    </log>\n    <log entryId=\"2\">\n      <timestamp>2023-10-03T12:15:00Z</timestamp>\n      <message>Product added to inventory</message>\n    </log>\n  </logs>\n</data>\n</code>",
            "feature_requirements": "• The JSON output must have a top-level key (e.g., \"data\") that encapsulates all subsequent sections.  \n• Under the top-level key, there must be a \"settings\" section containing keys \"theme\", \"language\", and \"timeZone\" with their corresponding string values.  \n• The \"users\" section must be represented as an array of user objects, each having an \"id\" field (derived from the XML attribute), a \"name\", an \"email\", and a \"roles\" array containing one or more role strings.  \n• The \"inventory\" section must be represented as an array of product objects, each containing an \"id\", \"name\", a \"price\" element that includes both the numeric value and a separate currency field (extracted from the XML attribute), and a \"categories\" array of strings.  \n• The \"logs\" section must be represented as an array of log objects, each containing an \"entryId\" field (from the XML attribute), a \"timestamp\" string, and a \"message\" string.  \n• All elements that appear multiple times in the XML (such as \"user\", \"role\", \"product\", \"category\", and \"log\") must be converted into arrays in the JSON structure.",
            "task_id": "170511",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "data",
                "data[settings]",
                "data[settings][theme]",
                "data[settings][language]",
                "data[settings][timeZone]",
                "data[users]",
                "data[users][][id]",
                "data[users][][name]",
                "data[users][][email]",
                "data[users][][roles]",
                "data[inventory]",
                "data[inventory][][id]",
                "data[inventory][][name]",
                "data[inventory][][price]",
                "data[inventory][][price][value]",
                "data[inventory][][price][currency]",
                "data[inventory][][categories]",
                "data[logs]",
                "data[logs][][entryId]",
                "data[logs][][timestamp]",
                "data[logs][][message]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170511_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<data>\n  <settings>\n    <theme>light</theme>\n    <language>en-US</language>\n    <timeZone>PST</timeZone>\n  </settings>\n  <users>\n    <user id=\"1\">\n      <name>John Doe</name>\n      <email>john.doe@example.com</email>\n      <roles>\n        <role>admin</role>\n        <role>editor</role>\n      </roles>\n    </user>\n    <user id=\"2\">\n      <name>Jane Smith</name>\n      <email>jane.smith@example.com</email>\n      <roles>\n        <role>editor</role>\n      </roles>\n    </user>\n  </users>\n  <inventory>\n    <product>\n      <id>1001</id>\n      <name>Laptop</name>\n      <price currency=\"USD\">899.99</price>\n      <categories>\n        <category>Electronics</category>\n        <category>Computers</category>\n      </categories>\n    </product>\n    <product>\n      <id>1002</id>\n      <name>Tablet</name>\n      <price currency=\"USD\">299.99</price>\n      <categories>\n        <category>Electronics</category>\n        <category>Mobile Devices</category>\n      </categories>\n    </product>\n  </inventory>\n  <logs>\n    <log entryId=\"1\">\n      <timestamp>2023-10-03T12:00:00Z</timestamp>\n      <message>User login</message>\n    </log>\n    <log entryId=\"2\">\n      <timestamp>2023-10-03T12:15:00Z</timestamp>\n      <message>Product added to inventory</message>\n    </log>\n  </logs>\n</data>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170511_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "data",
                                "data[settings]",
                                "data[settings][theme]",
                                "data[settings][language]",
                                "data[settings][timeZone]",
                                "data[users]",
                                "data[users][][id]",
                                "data[users][][name]",
                                "data[users][][email]",
                                "data[users][][roles]",
                                "data[inventory]",
                                "data[inventory][][id]",
                                "data[inventory][][name]",
                                "data[inventory][][price]",
                                "data[inventory][][price][value]",
                                "data[inventory][][price][currency]",
                                "data[inventory][][categories]",
                                "data[logs]",
                                "data[logs][][entryId]",
                                "data[logs][][timestamp]",
                                "data[logs][][message]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n    <server>\n        <host>localhost</host>\n        <port>8080</port>\n        <protocol>http</protocol>\n    </server>\n    <database>\n        <name>employeeDB</name>\n        <username>admin</username>\n        <password>admin123</password>\n        <tables>\n            <table name=\"employees\" />\n            <table name=\"departments\" />\n            <table name=\"salaries\" />\n        </tables>\n    </database>\n    <users>\n        <user id=\"101\">\n            <name>Alice Johnson</name>\n            <role>manager</role>\n            <active>true</active>\n        </user>\n        <user id=\"102\">\n            <name>Bob Smith</name>\n            <role>analyst</role>\n            <active>false</active>\n        </user>\n    </users>\n    <preferences>\n        <theme>dark</theme>\n        <language>en</language>\n        <notifications enabled=\"true\">\n            <email>true</email>\n            <sms>false</sms>\n        </notifications>\n    </preferences>\n    <logging>\n        <level>INFO</level>\n        <destination>system_logs</destination>\n        <rotation interval=\"daily\" />\n    </logging>\n</configuration>\n</code>",
            "feature_requirements": "• The JSON output must have a single top-level key representing the root element from the XML (e.g., \"configuration\").  \n• Under the \"configuration\" object, there must be a \"server\" object containing keys for \"host\", \"port\", and \"protocol\" with corresponding values.  \n• There must be a \"database\" object under \"configuration\" that includes keys \"name\", \"username\", and \"password\", plus a \"tables\" key that holds an array of objects, each representing a table with an associated \"name\" attribute.  \n• The \"users\" element must be represented as an array, where each user object contains keys for \"id\", \"name\", \"role\", and \"active\", with the \"id\" captured from the XML attribute.  \n• A \"preferences\" object must be included that contains a \"theme\", a \"language\", and a \"notifications\" object; the \"notifications\" object should include an \"enabled\" property (from the XML attribute) along with \"email\" and \"sms\" keys.  \n• There should be a \"logging\" object containing keys for \"level\" and \"destination\", as well as a \"rotation\" object that includes an \"interval\" attribute.  \n• All elements that were represented as XML attributes (e.g., table names, user ids, notification enabled, and rotation interval) must be clearly mapped so they remain identifiable in the JSON hierarchy.",
            "task_id": "170512",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "configuration",
                "configuration[server]",
                "configuration[server][host]",
                "configuration[server][port]",
                "configuration[server][protocol]",
                "configuration[database]",
                "configuration[database][name]",
                "configuration[database][username]",
                "configuration[database][password]",
                "configuration[database][tables]",
                "configuration[database][tables][][name]",
                "configuration[users]",
                "configuration[users][][id]",
                "configuration[users][][name]",
                "configuration[users][][role]",
                "configuration[users][][active]",
                "configuration[preferences]",
                "configuration[preferences][theme]",
                "configuration[preferences][language]",
                "configuration[preferences][notifications]",
                "configuration[preferences][notifications][enabled]",
                "configuration[preferences][notifications][email]",
                "configuration[preferences][notifications][sms]",
                "configuration[logging]",
                "configuration[logging][level]",
                "configuration[logging][destination]",
                "configuration[logging][rotation]",
                "configuration[logging][rotation][interval]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170512_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n    <server>\n        <host>localhost</host>\n        <port>8080</port>\n        <protocol>http</protocol>\n    </server>\n    <database>\n        <name>employeeDB</name>\n        <username>admin</username>\n        <password>admin123</password>\n        <tables>\n            <table name=\"employees\" />\n            <table name=\"departments\" />\n            <table name=\"salaries\" />\n        </tables>\n    </database>\n    <users>\n        <user id=\"101\">\n            <name>Alice Johnson</name>\n            <role>manager</role>\n            <active>true</active>\n        </user>\n        <user id=\"102\">\n            <name>Bob Smith</name>\n            <role>analyst</role>\n            <active>false</active>\n        </user>\n    </users>\n    <preferences>\n        <theme>dark</theme>\n        <language>en</language>\n        <notifications enabled=\"true\">\n            <email>true</email>\n            <sms>false</sms>\n        </notifications>\n    </preferences>\n    <logging>\n        <level>INFO</level>\n        <destination>system_logs</destination>\n        <rotation interval=\"daily\" />\n    </logging>\n</configuration>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170512_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "configuration",
                                "configuration[server]",
                                "configuration[server][host]",
                                "configuration[server][port]",
                                "configuration[server][protocol]",
                                "configuration[database]",
                                "configuration[database][name]",
                                "configuration[database][username]",
                                "configuration[database][password]",
                                "configuration[database][tables]",
                                "configuration[database][tables][][name]",
                                "configuration[users]",
                                "configuration[users][][id]",
                                "configuration[users][][name]",
                                "configuration[users][][role]",
                                "configuration[users][][active]",
                                "configuration[preferences]",
                                "configuration[preferences][theme]",
                                "configuration[preferences][language]",
                                "configuration[preferences][notifications]",
                                "configuration[preferences][notifications][enabled]",
                                "configuration[preferences][notifications][email]",
                                "configuration[preferences][notifications][sms]",
                                "configuration[logging]",
                                "configuration[logging][level]",
                                "configuration[logging][destination]",
                                "configuration[logging][rotation]",
                                "configuration[logging][rotation][interval]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<facility>\n  <powerPlant>\n    <id>SP001</id>\n    <name>Sunrise Solar Plant</name>\n    <location>\n      <latitude>34.0522</latitude>\n      <longitude>-118.2437</longitude>\n    </location>\n    <panels>\n      <panel>\n        <id>PANEL001</id>\n        <efficiency>18.5</efficiency>\n        <capacity>250</capacity>\n      </panel>\n      <panel>\n        <id>PANEL002</id>\n        <efficiency>18.7</efficiency>\n        <capacity>250</capacity>\n      </panel>\n      <panel>\n        <id>PANEL003</id>\n        <efficiency>18.6</efficiency>\n        <capacity>250</capacity>\n      </panel>\n    </panels>\n  </powerPlant>\n  <employees>\n    <employee>\n      <id>E001</id>\n      <name>Alice Smith</name>\n      <role>Engineer</role>\n    </employee>\n    <employee>\n      <id>E002</id>\n      <name>Bob Johnson</name>\n      <role>Technician</role>\n    </employee>\n    <employee>\n      <id>E003</id>\n      <name>Carla White</name>\n      <role>Maintenance</role>\n    </employee>\n  </employees>\n  <maintenanceSchedule>\n    <task>\n      <date>2023-11-01</date>\n      <description>Panel cleaning</description>\n    </task>\n    <task>\n      <date>2023-12-15</date>\n      <description>Electrical inspection</description>\n    </task>\n    <task>\n      <date>2024-01-20</date>\n      <description>Inverter calibration</description>\n    </task>\n  </maintenanceSchedule>\n  <systems>\n    <system name=\"Monitoring\">\n      <status>Operational</status>\n      <readings>\n        <reading type=\"voltage\">220</reading>\n        <reading type=\"current\">15</reading>\n      </readings>\n    </system>\n    <system name=\"Inverter\">\n      <status>Maintenance</status>\n      <readings>\n        <reading type=\"temperature\">75</reading>\n      </readings>\n    </system>\n  </systems>\n</facility>\n</code>",
            "feature_requirements": "• The output JSON must use a root-level key named \"facility\".  \n• Under \"facility\", there must be distinct keys for \"powerPlant\", \"employees\", \"maintenanceSchedule\", and \"systems\".  \n• The \"powerPlant\" object must include keys \"id\", \"name\", \"location\", and \"panels\", where \"location\" is an object containing \"latitude\" and \"longitude\".  \n• The \"panels\" key under \"powerPlant\" must contain an array of panel objects, each with keys \"id\", \"efficiency\", and \"capacity\".  \n• The \"employees\" key must be an array of employee objects, each with keys \"id\", \"name\", and \"role\".  \n• The \"maintenanceSchedule\" key must contain an array of task objects, each with keys \"date\" and \"description\".  \n• The \"systems\" key must contain an object or array of system objects; each system must include a \"name\" attribute (or key), a \"status\" key, and a \"readings\" key that consists of an array of reading objects.  \n• Each reading object in the \"readings\" array must include a \"type\" attribute or key and its corresponding value (e.g., \"voltage\", \"current\", \"temperature\").",
            "task_id": "170513",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "facility",
                "facility[powerPlant]",
                "facility[powerPlant][id]",
                "facility[powerPlant][name]",
                "facility[powerPlant][location]",
                "facility[powerPlant][location][latitude]",
                "facility[powerPlant][location][longitude]",
                "facility[powerPlant][panels]",
                "facility[powerPlant][panels][][id]",
                "facility[powerPlant][panels][][efficiency]",
                "facility[powerPlant][panels][][capacity]",
                "facility[employees]",
                "facility[employees][][id]",
                "facility[employees][][name]",
                "facility[employees][][role]",
                "facility[maintenanceSchedule]",
                "facility[maintenanceSchedule][][date]",
                "facility[maintenanceSchedule][][description]",
                "facility[systems]",
                "facility[systems][][name]",
                "facility[systems][][status]",
                "facility[systems][][readings]",
                "facility[systems][][readings][][type]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170513_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<facility>\n  <powerPlant>\n    <id>SP001</id>\n    <name>Sunrise Solar Plant</name>\n    <location>\n      <latitude>34.0522</latitude>\n      <longitude>-118.2437</longitude>\n    </location>\n    <panels>\n      <panel>\n        <id>PANEL001</id>\n        <efficiency>18.5</efficiency>\n        <capacity>250</capacity>\n      </panel>\n      <panel>\n        <id>PANEL002</id>\n        <efficiency>18.7</efficiency>\n        <capacity>250</capacity>\n      </panel>\n      <panel>\n        <id>PANEL003</id>\n        <efficiency>18.6</efficiency>\n        <capacity>250</capacity>\n      </panel>\n    </panels>\n  </powerPlant>\n  <employees>\n    <employee>\n      <id>E001</id>\n      <name>Alice Smith</name>\n      <role>Engineer</role>\n    </employee>\n    <employee>\n      <id>E002</id>\n      <name>Bob Johnson</name>\n      <role>Technician</role>\n    </employee>\n    <employee>\n      <id>E003</id>\n      <name>Carla White</name>\n      <role>Maintenance</role>\n    </employee>\n  </employees>\n  <maintenanceSchedule>\n    <task>\n      <date>2023-11-01</date>\n      <description>Panel cleaning</description>\n    </task>\n    <task>\n      <date>2023-12-15</date>\n      <description>Electrical inspection</description>\n    </task>\n    <task>\n      <date>2024-01-20</date>\n      <description>Inverter calibration</description>\n    </task>\n  </maintenanceSchedule>\n  <systems>\n    <system name=\"Monitoring\">\n      <status>Operational</status>\n      <readings>\n        <reading type=\"voltage\">220</reading>\n        <reading type=\"current\">15</reading>\n      </readings>\n    </system>\n    <system name=\"Inverter\">\n      <status>Maintenance</status>\n      <readings>\n        <reading type=\"temperature\">75</reading>\n      </readings>\n    </system>\n  </systems>\n</facility>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170513_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "facility",
                                "facility[powerPlant]",
                                "facility[powerPlant][id]",
                                "facility[powerPlant][name]",
                                "facility[powerPlant][location]",
                                "facility[powerPlant][location][latitude]",
                                "facility[powerPlant][location][longitude]",
                                "facility[powerPlant][panels]",
                                "facility[powerPlant][panels][][id]",
                                "facility[powerPlant][panels][][efficiency]",
                                "facility[powerPlant][panels][][capacity]",
                                "facility[employees]",
                                "facility[employees][][id]",
                                "facility[employees][][name]",
                                "facility[employees][][role]",
                                "facility[maintenanceSchedule]",
                                "facility[maintenanceSchedule][][date]",
                                "facility[maintenanceSchedule][][description]",
                                "facility[systems]",
                                "facility[systems][][name]",
                                "facility[systems][][status]",
                                "facility[systems][][readings]",
                                "facility[systems][][readings][][type]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<university>\n  <students>\n    <student id=\"S001\">\n      <name>John Doe</name>\n      <major>Computer Science</major>\n      <year>3</year>\n    </student>\n    <student id=\"S002\">\n      <name>Jane Smith</name>\n      <major>Biology</major>\n      <year>2</year>\n    </student>\n  </students>\n  <courses>\n    <course code=\"CS101\">\n      <title>Introduction to Programming</title>\n      <credits>3</credits>\n      <instructor>Prof. Alan Turing</instructor>\n    </course>\n    <course code=\"BIO202\">\n      <title>Genetic Analysis</title>\n      <credits>4</credits>\n      <instructor>Dr. Rosalind Franklin</instructor>\n    </course>\n  </courses>\n  <departments>\n    <department name=\"Engineering\">\n      <head>Dr. James Maxwell</head>\n      <building>Engineering Hall</building>\n    </department>\n    <department name=\"Science\">\n      <head>Dr. Marie Curie</head>\n      <building>Science Center</building>\n    </department>\n  </departments>\n  <faculties>\n    <faculty name=\"Computer Science\">\n      <chair>Dr. Ada Lovelace</chair>\n      <office>Room 204</office>\n    </faculty>\n    <faculty name=\"Biological Sciences\">\n      <chair>Dr. Charles Darwin</chair>\n      <office>Room 110</office>\n    </faculty>\n  </faculties>\n  <events>\n    <event id=\"E001\">\n      <type>Seminar</type>\n      <date>2023-11-12</date>\n      <location>Auditorium A</location>\n    </event>\n    <event id=\"E002\">\n      <type>Workshop</type>\n      <date>2023-12-05</date>\n      <location>Lab 1</location>\n    </event>\n  </events>\n</university>\n</code>",
            "feature_requirements": "• The JSON output must include a root key corresponding to \"university\" that encapsulates the entire data structure.  \n• Under the \"university\" key, the structure must include keys for \"students\", \"courses\", \"departments\", \"faculties\", and \"events\".  \n• The \"students\" element must be represented as an array, with each student object containing keys for \"id\", \"name\", \"major\", and \"year\".  \n• Each object within the \"courses\" array must include the attributes \"code\", \"title\", \"credits\", and \"instructor\".  \n• The \"departments\" key must map to an array of objects where each object contains \"name\", \"head\", and \"building\".  \n• The \"faculties\" key must also map to an array of objects, each with \"name\", \"chair\", and \"office\" as keys.  \n• The \"events\" element must be represented as an array, with each event object containing \"id\", \"type\", \"date\", and \"location\".  \n• All text values from the XML elements must be preserved as string values within the corresponding JSON keys.",
            "task_id": "170514",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "university",
                "university[students]",
                "university[students][][id]",
                "university[students][][name]",
                "university[students][][major]",
                "university[students][][year]",
                "university[courses]",
                "university[courses][][code]",
                "university[courses][][title]",
                "university[courses][][credits]",
                "university[courses][][instructor]",
                "university[departments]",
                "university[departments][][name]",
                "university[departments][][head]",
                "university[departments][][building]",
                "university[faculties]",
                "university[faculties][][name]",
                "university[faculties][][chair]",
                "university[faculties][][office]",
                "university[events]",
                "university[events][][id]",
                "university[events][][type]",
                "university[events][][date]",
                "university[events][][location]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170514_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<university>\n  <students>\n    <student id=\"S001\">\n      <name>John Doe</name>\n      <major>Computer Science</major>\n      <year>3</year>\n    </student>\n    <student id=\"S002\">\n      <name>Jane Smith</name>\n      <major>Biology</major>\n      <year>2</year>\n    </student>\n  </students>\n  <courses>\n    <course code=\"CS101\">\n      <title>Introduction to Programming</title>\n      <credits>3</credits>\n      <instructor>Prof. Alan Turing</instructor>\n    </course>\n    <course code=\"BIO202\">\n      <title>Genetic Analysis</title>\n      <credits>4</credits>\n      <instructor>Dr. Rosalind Franklin</instructor>\n    </course>\n  </courses>\n  <departments>\n    <department name=\"Engineering\">\n      <head>Dr. James Maxwell</head>\n      <building>Engineering Hall</building>\n    </department>\n    <department name=\"Science\">\n      <head>Dr. Marie Curie</head>\n      <building>Science Center</building>\n    </department>\n  </departments>\n  <faculties>\n    <faculty name=\"Computer Science\">\n      <chair>Dr. Ada Lovelace</chair>\n      <office>Room 204</office>\n    </faculty>\n    <faculty name=\"Biological Sciences\">\n      <chair>Dr. Charles Darwin</chair>\n      <office>Room 110</office>\n    </faculty>\n  </faculties>\n  <events>\n    <event id=\"E001\">\n      <type>Seminar</type>\n      <date>2023-11-12</date>\n      <location>Auditorium A</location>\n    </event>\n    <event id=\"E002\">\n      <type>Workshop</type>\n      <date>2023-12-05</date>\n      <location>Lab 1</location>\n    </event>\n  </events>\n</university>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170514_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "university",
                                "university[students]",
                                "university[students][][id]",
                                "university[students][][name]",
                                "university[students][][major]",
                                "university[students][][year]",
                                "university[courses]",
                                "university[courses][][code]",
                                "university[courses][][title]",
                                "university[courses][][credits]",
                                "university[courses][][instructor]",
                                "university[departments]",
                                "university[departments][][name]",
                                "university[departments][][head]",
                                "university[departments][][building]",
                                "university[faculties]",
                                "university[faculties][][name]",
                                "university[faculties][][chair]",
                                "university[faculties][][office]",
                                "university[events]",
                                "university[events][][id]",
                                "university[events][][type]",
                                "university[events][][date]",
                                "university[events][][location]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<Configuration>\n    <General>\n        <AppName>DataConverter</AppName>\n        <Version>1.2.3</Version>\n        <Environment>Production</Environment>\n    </General>\n    <Database>\n        <Host>localhost</Host>\n        <Port>5432</Port>\n        <Username>admin</Username>\n        <Password>securePass123</Password>\n    </Database>\n    <Logging>\n        <Level>Debug</Level>\n        <Outputs>\n            <Output>Console</Output>\n            <Output>File</Output>\n            <Output>Remote</Output>\n        </Outputs>\n    </Logging>\n    <ConversionSettings>\n        <InputFormat>XML</InputFormat>\n        <OutputFormat>JSON</OutputFormat>\n        <FieldMapping>\n            <Mapping>\n                <Source>Name</Source>\n                <Destination>full_name</Destination>\n            </Mapping>\n            <Mapping>\n                <Source>Age</Source>\n                <Destination>user_age</Destination>\n            </Mapping>\n            <Mapping>\n                <Source>Address</Source>\n                <Destination>location</Destination>\n            </Mapping>\n        </FieldMapping>\n    </ConversionSettings>\n    <Security>\n        <EncryptionEnabled>true</EncryptionEnabled>\n        <EncryptionAlgorithm>AES-256</EncryptionAlgorithm>\n        <AccessControl>\n            <Role>Admin</Role>\n            <Role>User</Role>\n            <Role>Guest</Role>\n        </AccessControl>\n    </Security>\n</Configuration>\n</code>",
            "feature_requirements": "• The JSON output must have a top-level key named \"Configuration\" that contains all the configuration data.  \n• Under \"Configuration\", there must be a \"General\" section with string keys: \"AppName\", \"Version\", and \"Environment\".  \n• There must be a \"Database\" section with keys: \"Host\", \"Port\", \"Username\", and \"Password\", where \"Port\" is represented as a numeric or string value corresponding to 5432.  \n• The output must include a \"Logging\" section containing a \"Level\" key and an \"Outputs\" key that holds an array of strings, including \"Console\", \"File\", and \"Remote\".  \n• A \"ConversionSettings\" section is required which contains \"InputFormat\", \"OutputFormat\", and \"FieldMapping\". The \"FieldMapping\" must be an array of objects, each with a \"Mapping\" that includes a \"Source\" and a \"Destination\" key, covering mappings for \"Name\" to \"full_name\", \"Age\" to \"user_age\", and \"Address\" to \"location\".  \n• The JSON must include a \"Security\" section with keys: \"EncryptionEnabled\" (a boolean value), \"EncryptionAlgorithm\" (a string), and \"AccessControl\", which should be an array of roles including \"Admin\", \"User\", and \"Guest\".",
            "task_id": "170515",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "Configuration",
                "Configuration[General]",
                "Configuration[General][AppName]",
                "Configuration[General][Version]",
                "Configuration[General][Environment]",
                "Configuration[Database]",
                "Configuration[Database][Host]",
                "Configuration[Database][Port]",
                "Configuration[Database][Username]",
                "Configuration[Database][Password]",
                "Configuration[Logging]",
                "Configuration[Logging][Level]",
                "Configuration[Logging][Outputs]",
                "Configuration[ConversionSettings]",
                "Configuration[ConversionSettings][InputFormat]",
                "Configuration[ConversionSettings][OutputFormat]",
                "Configuration[ConversionSettings][FieldMapping]",
                "Configuration[ConversionSettings][FieldMapping][][Mapping]",
                "Configuration[ConversionSettings][FieldMapping][][Mapping][Source]",
                "Configuration[ConversionSettings][FieldMapping][][Mapping][Destination]",
                "Configuration[Security]",
                "Configuration[Security][EncryptionEnabled]",
                "Configuration[Security][EncryptionAlgorithm]",
                "Configuration[Security][AccessControl]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170515_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<Configuration>\n    <General>\n        <AppName>DataConverter</AppName>\n        <Version>1.2.3</Version>\n        <Environment>Production</Environment>\n    </General>\n    <Database>\n        <Host>localhost</Host>\n        <Port>5432</Port>\n        <Username>admin</Username>\n        <Password>securePass123</Password>\n    </Database>\n    <Logging>\n        <Level>Debug</Level>\n        <Outputs>\n            <Output>Console</Output>\n            <Output>File</Output>\n            <Output>Remote</Output>\n        </Outputs>\n    </Logging>\n    <ConversionSettings>\n        <InputFormat>XML</InputFormat>\n        <OutputFormat>JSON</OutputFormat>\n        <FieldMapping>\n            <Mapping>\n                <Source>Name</Source>\n                <Destination>full_name</Destination>\n            </Mapping>\n            <Mapping>\n                <Source>Age</Source>\n                <Destination>user_age</Destination>\n            </Mapping>\n            <Mapping>\n                <Source>Address</Source>\n                <Destination>location</Destination>\n            </Mapping>\n        </FieldMapping>\n    </ConversionSettings>\n    <Security>\n        <EncryptionEnabled>true</EncryptionEnabled>\n        <EncryptionAlgorithm>AES-256</EncryptionAlgorithm>\n        <AccessControl>\n            <Role>Admin</Role>\n            <Role>User</Role>\n            <Role>Guest</Role>\n        </AccessControl>\n    </Security>\n</Configuration>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170515_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Configuration",
                                "Configuration[General]",
                                "Configuration[General][AppName]",
                                "Configuration[General][Version]",
                                "Configuration[General][Environment]",
                                "Configuration[Database]",
                                "Configuration[Database][Host]",
                                "Configuration[Database][Port]",
                                "Configuration[Database][Username]",
                                "Configuration[Database][Password]",
                                "Configuration[Logging]",
                                "Configuration[Logging][Level]",
                                "Configuration[Logging][Outputs]",
                                "Configuration[ConversionSettings]",
                                "Configuration[ConversionSettings][InputFormat]",
                                "Configuration[ConversionSettings][OutputFormat]",
                                "Configuration[ConversionSettings][FieldMapping]",
                                "Configuration[ConversionSettings][FieldMapping][][Mapping]",
                                "Configuration[ConversionSettings][FieldMapping][][Mapping][Source]",
                                "Configuration[ConversionSettings][FieldMapping][][Mapping][Destination]",
                                "Configuration[Security]",
                                "Configuration[Security][EncryptionEnabled]",
                                "Configuration[Security][EncryptionAlgorithm]",
                                "Configuration[Security][AccessControl]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<Data>\n  <Metadata>\n    <Title>Record Collection</Title>\n    <Version>1.0</Version>\n    <DateCreated>2023-10-08</DateCreated>\n  </Metadata>\n  <Settings>\n    <Theme>Light</Theme>\n    <Language>en-US</Language>\n    <NotificationsEnabled>true</NotificationsEnabled>\n  </Settings>\n  <Records>\n    <Record id=\"1\">\n      <Name>John Doe</Name>\n      <Email>john.doe@example.com</Email>\n      <Roles>\n        <Role>Admin</Role>\n        <Role>User</Role>\n      </Roles>\n      <Attributes>\n        <Attribute key=\"department\">Sales</Attribute>\n        <Attribute key=\"location\">Building A</Attribute>\n      </Attributes>\n    </Record>\n    <Record id=\"2\">\n      <Name>Jane Smith</Name>\n      <Email>jane.smith@example.com</Email>\n      <Roles>\n        <Role>User</Role>\n      </Roles>\n      <Attributes>\n        <Attribute key=\"department\">Marketing</Attribute>\n        <Attribute key=\"location\">Building B</Attribute>\n      </Attributes>\n    </Record>\n  </Records>\n  <Logs>\n    <LogEntry>\n      <Timestamp>2023-10-08T12:00:00Z</Timestamp>\n      <Message>System initialized</Message>\n      <Severity>Info</Severity>\n    </LogEntry>\n    <LogEntry>\n      <Timestamp>2023-10-08T12:05:00Z</Timestamp>\n      <Message>User login: John Doe</Message>\n      <Severity>Info</Severity>\n    </LogEntry>\n  </Logs>\n</Data>\n</code>",
            "feature_requirements": "• The output must convert the XML hierarchy into a JSON object with a top-level key (e.g., \"Data\") containing nested objects corresponding to the XML elements.  \n• The JSON must include a \"Metadata\" object with keys \"Title\", \"Version\", and \"DateCreated\", each holding the respective string value from the XML.  \n• The JSON must include a \"Settings\" object with keys \"Theme\", \"Language\", and \"NotificationsEnabled\", where each key contains the appropriate value as represented in the XML.  \n• The JSON must include a \"Records\" key that holds an array of record objects; each record object must have an associated identifier (from the XML attribute \"id\") along with keys \"Name\" and \"Email\".  \n• Each record object must include a \"Roles\" key that holds an array of role strings, corresponding to the multiple \"Role\" elements in the XML.  \n• Each record object must include an \"Attributes\" key that represents key-value pairs; each pair corresponds to an \"Attribute\" element in the XML, where the XML attribute \"key\" becomes the JSON key and the element text becomes the JSON value.  \n• The JSON must include a \"Logs\" key that holds an array of log entry objects; each log entry object must include keys \"Timestamp\", \"Message\", and \"Severity\" with their respective string values from the XML.",
            "task_id": "170516",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "Data",
                "Data[Metadata]",
                "Data[Metadata][Title]",
                "Data[Metadata][Version]",
                "Data[Metadata][DateCreated]",
                "Data[Settings]",
                "Data[Settings][Theme]",
                "Data[Settings][Language]",
                "Data[Settings][NotificationsEnabled]",
                "Data[Records]",
                "Data[Records][][id]",
                "Data[Records][][Name]",
                "Data[Records][][Email]",
                "Data[Records][][Roles]",
                "Data[Records][][Attributes]",
                "Data[Logs]",
                "Data[Logs][][Timestamp]",
                "Data[Logs][][Message]",
                "Data[Logs][][Severity]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170516_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<Data>\n  <Metadata>\n    <Title>Record Collection</Title>\n    <Version>1.0</Version>\n    <DateCreated>2023-10-08</DateCreated>\n  </Metadata>\n  <Settings>\n    <Theme>Light</Theme>\n    <Language>en-US</Language>\n    <NotificationsEnabled>true</NotificationsEnabled>\n  </Settings>\n  <Records>\n    <Record id=\"1\">\n      <Name>John Doe</Name>\n      <Email>john.doe@example.com</Email>\n      <Roles>\n        <Role>Admin</Role>\n        <Role>User</Role>\n      </Roles>\n      <Attributes>\n        <Attribute key=\"department\">Sales</Attribute>\n        <Attribute key=\"location\">Building A</Attribute>\n      </Attributes>\n    </Record>\n    <Record id=\"2\">\n      <Name>Jane Smith</Name>\n      <Email>jane.smith@example.com</Email>\n      <Roles>\n        <Role>User</Role>\n      </Roles>\n      <Attributes>\n        <Attribute key=\"department\">Marketing</Attribute>\n        <Attribute key=\"location\">Building B</Attribute>\n      </Attributes>\n    </Record>\n  </Records>\n  <Logs>\n    <LogEntry>\n      <Timestamp>2023-10-08T12:00:00Z</Timestamp>\n      <Message>System initialized</Message>\n      <Severity>Info</Severity>\n    </LogEntry>\n    <LogEntry>\n      <Timestamp>2023-10-08T12:05:00Z</Timestamp>\n      <Message>User login: John Doe</Message>\n      <Severity>Info</Severity>\n    </LogEntry>\n  </Logs>\n</Data>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170516_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Data",
                                "Data[Metadata]",
                                "Data[Metadata][Title]",
                                "Data[Metadata][Version]",
                                "Data[Metadata][DateCreated]",
                                "Data[Settings]",
                                "Data[Settings][Theme]",
                                "Data[Settings][Language]",
                                "Data[Settings][NotificationsEnabled]",
                                "Data[Records]",
                                "Data[Records][][id]",
                                "Data[Records][][Name]",
                                "Data[Records][][Email]",
                                "Data[Records][][Roles]",
                                "Data[Records][][Attributes]",
                                "Data[Logs]",
                                "Data[Logs][][Timestamp]",
                                "Data[Logs][][Message]",
                                "Data[Logs][][Severity]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<dataset>\n  <metadata>\n    <version>1.0</version>\n    <createdDate>2023-10-05</createdDate>\n    <sourceSystem>InternalApp</sourceSystem>\n  </metadata>\n  <users>\n    <user>\n      <id>1001</id>\n      <name>John Doe</name>\n      <email>johndoe@example.com</email>\n      <roles>\n        <role>Administrator</role>\n        <role>Editor</role>\n      </roles>\n    </user>\n    <user>\n      <id>1002</id>\n      <name>Jane Smith</name>\n      <email>janesmith@example.com</email>\n      <roles>\n        <role>User</role>\n      </roles>\n    </user>\n  </users>\n  <transactions>\n    <transaction>\n      <transactionId>TX2001</transactionId>\n      <amount>1500.75</amount>\n      <currency>USD</currency>\n      <date>2023-09-15</date>\n    </transaction>\n    <transaction>\n      <transactionId>TX2002</transactionId>\n      <amount>230.00</amount>\n      <currency>USD</currency>\n      <date>2023-09-20</date>\n    </transaction>\n  </transactions>\n  <settings>\n    <theme>Dark</theme>\n    <notifications>Enabled</notifications>\n    <language>English</language>\n  </settings>\n</dataset>\n</code>",
            "feature_requirements": "• The output must include a top-level object with keys matching the main XML elements: \"metadata\", \"users\", \"transactions\", and \"settings\".  \n• The \"metadata\" object must have keys \"version\", \"createdDate\", and \"sourceSystem\", containing the corresponding text values from the XML.  \n• The \"users\" key must map to an array where each element is an object representing a user, including keys \"id\", \"name\", \"email\", and \"roles\".  \n• Each user's \"roles\" key must contain an array of strings representing the roles listed in the XML.  \n• The \"transactions\" key must map to an array of objects, each containing keys \"transactionId\", \"amount\", \"currency\", and \"date\", with values corresponding to the XML data.  \n• The \"settings\" object must include keys \"theme\", \"notifications\", and \"language\" with their respective text values from the XML.",
            "task_id": "170517",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "metadata",
                "metadata[version]",
                "metadata[createdDate]",
                "metadata[sourceSystem]",
                "users",
                "users[][id]",
                "users[][name]",
                "users[][email]",
                "users[][roles]",
                "transactions",
                "transactions[][transactionId]",
                "transactions[][amount]",
                "transactions[][currency]",
                "transactions[][date]",
                "settings",
                "settings[theme]",
                "settings[notifications]",
                "settings[language]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170517_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<dataset>\n  <metadata>\n    <version>1.0</version>\n    <createdDate>2023-10-05</createdDate>\n    <sourceSystem>InternalApp</sourceSystem>\n  </metadata>\n  <users>\n    <user>\n      <id>1001</id>\n      <name>John Doe</name>\n      <email>johndoe@example.com</email>\n      <roles>\n        <role>Administrator</role>\n        <role>Editor</role>\n      </roles>\n    </user>\n    <user>\n      <id>1002</id>\n      <name>Jane Smith</name>\n      <email>janesmith@example.com</email>\n      <roles>\n        <role>User</role>\n      </roles>\n    </user>\n  </users>\n  <transactions>\n    <transaction>\n      <transactionId>TX2001</transactionId>\n      <amount>1500.75</amount>\n      <currency>USD</currency>\n      <date>2023-09-15</date>\n    </transaction>\n    <transaction>\n      <transactionId>TX2002</transactionId>\n      <amount>230.00</amount>\n      <currency>USD</currency>\n      <date>2023-09-20</date>\n    </transaction>\n  </transactions>\n  <settings>\n    <theme>Dark</theme>\n    <notifications>Enabled</notifications>\n    <language>English</language>\n  </settings>\n</dataset>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170517_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "metadata",
                                "metadata[version]",
                                "metadata[createdDate]",
                                "metadata[sourceSystem]",
                                "users",
                                "users[][id]",
                                "users[][name]",
                                "users[][email]",
                                "users[][roles]",
                                "transactions",
                                "transactions[][transactionId]",
                                "transactions[][amount]",
                                "transactions[][currency]",
                                "transactions[][date]",
                                "settings",
                                "settings[theme]",
                                "settings[notifications]",
                                "settings[language]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<root>\n  <metadata>\n    <title>Data Conversion Archive</title>\n    <version>2.1</version>\n    <timestamp>2023-10-01T12:00:00Z</timestamp>\n  </metadata>\n  <items>\n    <item id=\"1\">\n      <name>Alpha Record</name>\n      <category>TypeA</category>\n      <properties>\n        <property key=\"color\">red</property>\n        <property key=\"size\">medium</property>\n      </properties>\n    </item>\n    <item id=\"2\">\n      <name>Beta Record</name>\n      <category>TypeB</category>\n      <properties>\n        <property key=\"color\">blue</property>\n        <property key=\"size\">large</property>\n      </properties>\n    </item>\n  </items>\n  <configuration>\n    <enableLogging>true</enableLogging>\n    <maxEntries>200</maxEntries>\n    <features>\n      <feature name=\"export\">enabled</feature>\n      <feature name=\"import\">disabled</feature>\n      <feature name=\"sync\">active</feature>\n    </features>\n  </configuration>\n  <users>\n    <user id=\"u01\">\n      <username>alice</username>\n      <role>administrator</role>\n      <preferences>\n        <language>en</language>\n        <theme>dark</theme>\n      </preferences>\n    </user>\n    <user id=\"u02\">\n      <username>bob</username>\n      <role>editor</role>\n      <preferences>\n        <language>en</language>\n        <theme>light</theme>\n      </preferences>\n    </user>\n  </users>\n  <status>\n    <systemLoad>moderate</systemLoad>\n    <uptime>10234</uptime>\n    <errorCount>0</errorCount>\n  </status>\n</root>\n</code>",
            "feature_requirements": "• The JSON output must have a root-level object that represents the entire XML content.\n\n• A \"metadata\" object must exist containing keys for \"title\", \"version\", and \"timestamp\" with corresponding string or numeric values as provided in the XML.\n\n• An \"items\" array is required where each element is an object representing an XML \"item\" element. Each object must include an \"id\" attribute, and keys for \"name\", \"category\", and a \"properties\" object or array.\n\n• Within each \"item\", the \"properties\" section must include pairs that map the XML \"property\" elements' \"key\" attributes to their text values, accurately reflecting the XML structure.\n\n• A \"configuration\" object must be present that includes keys for \"enableLogging\" (boolean or text representation of a boolean), \"maxEntries\" (numeric or string), and a \"features\" collection.\n\n• The \"features\" collection inside \"configuration\" must list each feature as an object, with each object containing a \"name\" key (derived from the XML feature element's attribute) and a corresponding value representing its status.\n\n• A \"users\" array must exist, with each element being an object that includes an \"id\" attribute, as well as keys for \"username\", \"role\", and a \"preferences\" object which itself includes keys for \"language\" and \"theme\".\n\n• A \"status\" object must be in the JSON output containing keys \"systemLoad\", \"uptime\", and \"errorCount\" with values directly reflecting the XML text content.",
            "task_id": "170518",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "metadata",
                "metadata[title]",
                "metadata[version]",
                "metadata[timestamp]",
                "items",
                "items[].id",
                "items[].name",
                "items[].category",
                "items[].properties",
                "configuration",
                "configuration[enableLogging]",
                "configuration[maxEntries]",
                "configuration[features]",
                "configuration[features][][name]",
                "users",
                "users[].id",
                "users[].username",
                "users[].role",
                "users[].preferences",
                "users[].preferences[language]",
                "users[].preferences[theme]",
                "status",
                "status[systemLoad]",
                "status[uptime]",
                "status[errorCount]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170518_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<root>\n  <metadata>\n    <title>Data Conversion Archive</title>\n    <version>2.1</version>\n    <timestamp>2023-10-01T12:00:00Z</timestamp>\n  </metadata>\n  <items>\n    <item id=\"1\">\n      <name>Alpha Record</name>\n      <category>TypeA</category>\n      <properties>\n        <property key=\"color\">red</property>\n        <property key=\"size\">medium</property>\n      </properties>\n    </item>\n    <item id=\"2\">\n      <name>Beta Record</name>\n      <category>TypeB</category>\n      <properties>\n        <property key=\"color\">blue</property>\n        <property key=\"size\">large</property>\n      </properties>\n    </item>\n  </items>\n  <configuration>\n    <enableLogging>true</enableLogging>\n    <maxEntries>200</maxEntries>\n    <features>\n      <feature name=\"export\">enabled</feature>\n      <feature name=\"import\">disabled</feature>\n      <feature name=\"sync\">active</feature>\n    </features>\n  </configuration>\n  <users>\n    <user id=\"u01\">\n      <username>alice</username>\n      <role>administrator</role>\n      <preferences>\n        <language>en</language>\n        <theme>dark</theme>\n      </preferences>\n    </user>\n    <user id=\"u02\">\n      <username>bob</username>\n      <role>editor</role>\n      <preferences>\n        <language>en</language>\n        <theme>light</theme>\n      </preferences>\n    </user>\n  </users>\n  <status>\n    <systemLoad>moderate</systemLoad>\n    <uptime>10234</uptime>\n    <errorCount>0</errorCount>\n  </status>\n</root>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170518_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "metadata",
                                "metadata[title]",
                                "metadata[version]",
                                "metadata[timestamp]",
                                "items",
                                "items[].id",
                                "items[].name",
                                "items[].category",
                                "items[].properties",
                                "configuration",
                                "configuration[enableLogging]",
                                "configuration[maxEntries]",
                                "configuration[features]",
                                "configuration[features][][name]",
                                "users",
                                "users[].id",
                                "users[].username",
                                "users[].role",
                                "users[].preferences",
                                "users[].preferences[language]",
                                "users[].preferences[theme]",
                                "status",
                                "status[systemLoad]",
                                "status[uptime]",
                                "status[errorCount]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<StoreData>\n    <Products>\n        <Product id=\"P001\">\n            <Name>Wireless Mouse</Name>\n            <Category>Electronics</Category>\n            <Price currency=\"USD\">25.99</Price>\n            <Stock>150</Stock>\n        </Product>\n        <Product id=\"P002\">\n            <Name>Bluetooth Headphones</Name>\n            <Category>Electronics</Category>\n            <Price currency=\"USD\">59.99</Price>\n            <Stock>80</Stock>\n        </Product>\n        <Product id=\"P003\">\n            <Name>Coffee Maker</Name>\n            <Category>Home Appliances</Category>\n            <Price currency=\"USD\">89.99</Price>\n            <Stock>45</Stock>\n        </Product>\n    </Products>\n    <Customers>\n        <Customer id=\"C001\">\n            <FirstName>John</FirstName>\n            <LastName>Doe</LastName>\n            <Email>john.doe@example.com</Email>\n            <OrderHistory>\n                <Order id=\"O1001\" date=\"2023-08-15\"/>\n                <Order id=\"O1003\" date=\"2023-09-05\"/>\n            </OrderHistory>\n        </Customer>\n        <Customer id=\"C002\">\n            <FirstName>Jane</FirstName>\n            <LastName>Smith</LastName>\n            <Email>jane.smith@example.com</Email>\n            <OrderHistory>\n                <Order id=\"O1002\" date=\"2023-08-20\"/>\n            </OrderHistory>\n        </Customer>\n    </Customers>\n    <Orders>\n        <Order id=\"O1001\">\n            <CustomerID>C001</CustomerID>\n            <OrderDate>2023-08-15</OrderDate>\n            <Items>\n                <Item productID=\"P001\" quantity=\"2\"/>\n                <Item productID=\"P002\" quantity=\"1\"/>\n            </Items>\n        </Order>\n        <Order id=\"O1002\">\n            <CustomerID>C002</CustomerID>\n            <OrderDate>2023-08-20</OrderDate>\n            <Items>\n                <Item productID=\"P003\" quantity=\"1\"/>\n            </Items>\n        </Order>\n        <Order id=\"O1003\">\n            <CustomerID>C001</CustomerID>\n            <OrderDate>2023-09-05</OrderDate>\n            <Items>\n                <Item productID=\"P002\" quantity=\"2\"/>\n                <Item productID=\"P003\" quantity=\"1\"/>\n            </Items>\n        </Order>\n    </Orders>\n    <Suppliers>\n        <Supplier id=\"S001\">\n            <Name>Electro Goods Inc.</Name>\n            <ContactEmail>contact@electrogoods.example.com</ContactEmail>\n            <ProductsSupplied>\n                <ProductID>P001</ProductID>\n                <ProductID>P002</ProductID>\n            </ProductsSupplied>\n        </Supplier>\n        <Supplier id=\"S002\">\n            <Name>Home Appliances Co.</Name>\n            <ContactEmail>sales@homeappliances.example.com</ContactEmail>\n            <ProductsSupplied>\n                <ProductID>P003</ProductID>\n            </ProductsSupplied>\n        </Supplier>\n    </Suppliers>\n</StoreData>\n</code>",
            "feature_requirements": "• The JSON output must have a top-level element corresponding to the \"StoreData\" XML element containing all other sections.  \n• Within \"StoreData\", there must be separate keys for \"Products\", \"Customers\", \"Orders\", and \"Suppliers\" arranged in a way that mirrors the XML hierarchy.  \n• The \"Products\" element must be represented as a list of product objects, each containing an \"id\" (from the XML attribute), \"Name\", \"Category\", \"Price\", and \"Stock\" fields.  \n• The \"Price\" field within each product must include both the numeric value (from the element content) and the \"currency\" information (from the XML attribute), ensuring that both pieces of data are clearly represented.  \n• The \"Customers\" element must be represented as a list of customer objects, each containing an \"id\" (from the XML attribute), \"FirstName\", \"LastName\", and \"Email\". Additionally, each customer must have an \"OrderHistory\" field that is a list of order objects including \"id\" and \"date\" as derived from the XML.  \n• The \"Orders\" element must be a list of order objects where each order includes an \"id\" (from the XML attribute), \"CustomerID\", \"OrderDate\", and an \"Items\" field. The \"Items\" field should be a list of item objects, each containing \"productID\" and \"quantity\" extracted from the XML attributes.  \n• The \"Suppliers\" element must be represented as a list of supplier objects, each including an \"id\" (from the XML attribute), \"Name\", \"ContactEmail\", and a \"ProductsSupplied\" field. The \"ProductsSupplied\" field should be a list of product ID values as provided in the XML.",
            "task_id": "170519",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "StoreData",
                "StoreData[Products]",
                "StoreData[Products][].id",
                "StoreData[Products][].Name",
                "StoreData[Products][].Category",
                "StoreData[Products][].Price",
                "StoreData[Products][].Price[value]",
                "StoreData[Products][].Price[currency]",
                "StoreData[Products][].Stock",
                "StoreData[Customers]",
                "StoreData[Customers][].id",
                "StoreData[Customers][].FirstName",
                "StoreData[Customers][].LastName",
                "StoreData[Customers][].Email",
                "StoreData[Customers][].OrderHistory",
                "StoreData[Customers][].OrderHistory[].id",
                "StoreData[Customers][].OrderHistory[].date",
                "StoreData[Orders]",
                "StoreData[Orders][].id",
                "StoreData[Orders][].CustomerID",
                "StoreData[Orders][].OrderDate",
                "StoreData[Orders][].Items",
                "StoreData[Orders][].Items[].productID",
                "StoreData[Orders][].Items[].quantity",
                "StoreData[Suppliers]",
                "StoreData[Suppliers][].id",
                "StoreData[Suppliers][].Name",
                "StoreData[Suppliers][].ContactEmail",
                "StoreData[Suppliers][].ProductsSupplied"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170519_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<StoreData>\n    <Products>\n        <Product id=\"P001\">\n            <Name>Wireless Mouse</Name>\n            <Category>Electronics</Category>\n            <Price currency=\"USD\">25.99</Price>\n            <Stock>150</Stock>\n        </Product>\n        <Product id=\"P002\">\n            <Name>Bluetooth Headphones</Name>\n            <Category>Electronics</Category>\n            <Price currency=\"USD\">59.99</Price>\n            <Stock>80</Stock>\n        </Product>\n        <Product id=\"P003\">\n            <Name>Coffee Maker</Name>\n            <Category>Home Appliances</Category>\n            <Price currency=\"USD\">89.99</Price>\n            <Stock>45</Stock>\n        </Product>\n    </Products>\n    <Customers>\n        <Customer id=\"C001\">\n            <FirstName>John</FirstName>\n            <LastName>Doe</LastName>\n            <Email>john.doe@example.com</Email>\n            <OrderHistory>\n                <Order id=\"O1001\" date=\"2023-08-15\"/>\n                <Order id=\"O1003\" date=\"2023-09-05\"/>\n            </OrderHistory>\n        </Customer>\n        <Customer id=\"C002\">\n            <FirstName>Jane</FirstName>\n            <LastName>Smith</LastName>\n            <Email>jane.smith@example.com</Email>\n            <OrderHistory>\n                <Order id=\"O1002\" date=\"2023-08-20\"/>\n            </OrderHistory>\n        </Customer>\n    </Customers>\n    <Orders>\n        <Order id=\"O1001\">\n            <CustomerID>C001</CustomerID>\n            <OrderDate>2023-08-15</OrderDate>\n            <Items>\n                <Item productID=\"P001\" quantity=\"2\"/>\n                <Item productID=\"P002\" quantity=\"1\"/>\n            </Items>\n        </Order>\n        <Order id=\"O1002\">\n            <CustomerID>C002</CustomerID>\n            <OrderDate>2023-08-20</OrderDate>\n            <Items>\n                <Item productID=\"P003\" quantity=\"1\"/>\n            </Items>\n        </Order>\n        <Order id=\"O1003\">\n            <CustomerID>C001</CustomerID>\n            <OrderDate>2023-09-05</OrderDate>\n            <Items>\n                <Item productID=\"P002\" quantity=\"2\"/>\n                <Item productID=\"P003\" quantity=\"1\"/>\n            </Items>\n        </Order>\n    </Orders>\n    <Suppliers>\n        <Supplier id=\"S001\">\n            <Name>Electro Goods Inc.</Name>\n            <ContactEmail>contact@electrogoods.example.com</ContactEmail>\n            <ProductsSupplied>\n                <ProductID>P001</ProductID>\n                <ProductID>P002</ProductID>\n            </ProductsSupplied>\n        </Supplier>\n        <Supplier id=\"S002\">\n            <Name>Home Appliances Co.</Name>\n            <ContactEmail>sales@homeappliances.example.com</ContactEmail>\n            <ProductsSupplied>\n                <ProductID>P003</ProductID>\n            </ProductsSupplied>\n        </Supplier>\n    </Suppliers>\n</StoreData>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170519_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "StoreData",
                                "StoreData[Products]",
                                "StoreData[Products][].id",
                                "StoreData[Products][].Name",
                                "StoreData[Products][].Category",
                                "StoreData[Products][].Price",
                                "StoreData[Products][].Price[value]",
                                "StoreData[Products][].Price[currency]",
                                "StoreData[Products][].Stock",
                                "StoreData[Customers]",
                                "StoreData[Customers][].id",
                                "StoreData[Customers][].FirstName",
                                "StoreData[Customers][].LastName",
                                "StoreData[Customers][].Email",
                                "StoreData[Customers][].OrderHistory",
                                "StoreData[Customers][].OrderHistory[].id",
                                "StoreData[Customers][].OrderHistory[].date",
                                "StoreData[Orders]",
                                "StoreData[Orders][].id",
                                "StoreData[Orders][].CustomerID",
                                "StoreData[Orders][].OrderDate",
                                "StoreData[Orders][].Items",
                                "StoreData[Orders][].Items[].productID",
                                "StoreData[Orders][].Items[].quantity",
                                "StoreData[Suppliers]",
                                "StoreData[Suppliers][].id",
                                "StoreData[Suppliers][].Name",
                                "StoreData[Suppliers][].ContactEmail",
                                "StoreData[Suppliers][].ProductsSupplied"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<settings>\n  <users>\n    <user id=\"101\">\n      <name>Alice Johnson</name>\n      <email>alice.johnson@example.com</email>\n      <roles>\n        <role>administrator</role>\n        <role>editor</role>\n      </roles>\n    </user>\n    <user id=\"102\">\n      <name>Bob Smith</name>\n      <email>bob.smith@example.com</email>\n      <roles>\n        <role>viewer</role>\n      </roles>\n    </user>\n  </users>\n  <system>\n    <theme>dark</theme>\n    <language>en-US</language>\n    <version>2.5.1</version>\n  </system>\n  <notifications>\n    <email enabled=\"true\">\n      <frequency>daily</frequency>\n      <time>08:00</time>\n    </email>\n    <sms enabled=\"false\"/>\n  </notifications>\n  <preferences>\n    <privacy>\n      <tracking enabled=\"false\"/>\n      <dataSharing enabled=\"true\"/>\n    </privacy>\n    <display>\n      <fontSize>medium</fontSize>\n      <colorScheme>blue</colorScheme>\n    </display>\n  </preferences>\n  <logs>\n    <log entry=\"userLogin\" timestamp=\"2023-10-12T09:15:00\"/>\n    <log entry=\"settingsChange\" timestamp=\"2023-10-12T10:30:00\"/>\n    <log entry=\"systemUpdate\" timestamp=\"2023-10-12T11:45:00\"/>\n  </logs>\n</settings>\n</code>",
            "feature_requirements": "• The top-level JSON object must include a \"settings\" key encapsulating the entire configuration.\n• Within \"settings\", there must be individual keys for \"users\", \"system\", \"notifications\", \"preferences\", and \"logs\".\n• The \"users\" key must map to an array of user objects, where each user object has an \"id\" (derived from the XML attribute), \"name\", \"email\", and a \"roles\" array with one or more role strings.\n• The \"system\" key must map to an object containing keys \"theme\", \"language\", and \"version\", each holding the corresponding values from the XML.\n• The \"notifications\" key must map to an object with \"email\" and \"sms\" keys; the \"email\" object must include an \"enabled\" field along with \"frequency\" and \"time\" fields, while the \"sms\" object must include an \"enabled\" field.\n• The \"preferences\" key must map to an object containing two objects: \"privacy\" and \"display\". The \"privacy\" object must include \"tracking\" and \"dataSharing\" keys with their respective enabled status, and the \"display\" object must include \"fontSize\" and \"colorScheme\" keys.\n• The \"logs\" key must map to an array of log entry objects, each of which must include \"entry\" and \"timestamp\" keys based on the attributes from the XML log elements.",
            "task_id": "170520",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "settings",
                "settings[users]",
                "settings[users][][id]",
                "settings[users][][name]",
                "settings[users][][email]",
                "settings[users][][roles]",
                "settings[system]",
                "settings[system][theme]",
                "settings[system][language]",
                "settings[system][version]",
                "settings[notifications]",
                "settings[notifications][email]",
                "settings[notifications][email][enabled]",
                "settings[notifications][email][frequency]",
                "settings[notifications][email][time]",
                "settings[notifications][sms]",
                "settings[notifications][sms][enabled]",
                "settings[preferences]",
                "settings[preferences][privacy]",
                "settings[preferences][privacy][tracking]",
                "settings[preferences][privacy][dataSharing]",
                "settings[preferences][display]",
                "settings[preferences][display][fontSize]",
                "settings[preferences][display][colorScheme]",
                "settings[logs]",
                "settings[logs][][entry]",
                "settings[logs][][timestamp]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170520_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<settings>\n  <users>\n    <user id=\"101\">\n      <name>Alice Johnson</name>\n      <email>alice.johnson@example.com</email>\n      <roles>\n        <role>administrator</role>\n        <role>editor</role>\n      </roles>\n    </user>\n    <user id=\"102\">\n      <name>Bob Smith</name>\n      <email>bob.smith@example.com</email>\n      <roles>\n        <role>viewer</role>\n      </roles>\n    </user>\n  </users>\n  <system>\n    <theme>dark</theme>\n    <language>en-US</language>\n    <version>2.5.1</version>\n  </system>\n  <notifications>\n    <email enabled=\"true\">\n      <frequency>daily</frequency>\n      <time>08:00</time>\n    </email>\n    <sms enabled=\"false\"/>\n  </notifications>\n  <preferences>\n    <privacy>\n      <tracking enabled=\"false\"/>\n      <dataSharing enabled=\"true\"/>\n    </privacy>\n    <display>\n      <fontSize>medium</fontSize>\n      <colorScheme>blue</colorScheme>\n    </display>\n  </preferences>\n  <logs>\n    <log entry=\"userLogin\" timestamp=\"2023-10-12T09:15:00\"/>\n    <log entry=\"settingsChange\" timestamp=\"2023-10-12T10:30:00\"/>\n    <log entry=\"systemUpdate\" timestamp=\"2023-10-12T11:45:00\"/>\n  </logs>\n</settings>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170520_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "settings",
                                "settings[users]",
                                "settings[users][][id]",
                                "settings[users][][name]",
                                "settings[users][][email]",
                                "settings[users][][roles]",
                                "settings[system]",
                                "settings[system][theme]",
                                "settings[system][language]",
                                "settings[system][version]",
                                "settings[notifications]",
                                "settings[notifications][email]",
                                "settings[notifications][email][enabled]",
                                "settings[notifications][email][frequency]",
                                "settings[notifications][email][time]",
                                "settings[notifications][sms]",
                                "settings[notifications][sms][enabled]",
                                "settings[preferences]",
                                "settings[preferences][privacy]",
                                "settings[preferences][privacy][tracking]",
                                "settings[preferences][privacy][dataSharing]",
                                "settings[preferences][display]",
                                "settings[preferences][display][fontSize]",
                                "settings[preferences][display][colorScheme]",
                                "settings[logs]",
                                "settings[logs][][entry]",
                                "settings[logs][][timestamp]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<library>\n  <name>Central City Library</name>\n  <address>\n    <street>123 Main St</street>\n    <city>Central City</city>\n    <postalCode>54321</postalCode>\n  </address>\n  <collections>\n    <collection type=\"Fiction\">\n      <item>\n        <title>The Lost World</title>\n        <author>Arthur Conan Doyle</author>\n        <year>1912</year>\n      </item>\n      <item>\n        <title>1984</title>\n        <author>George Orwell</author>\n        <year>1949</year>\n      </item>\n    </collection>\n    <collection type=\"Non-Fiction\">\n      <item>\n        <title>Sapiens: A Brief History of Humankind</title>\n        <author>Yuval Noah Harari</author>\n        <year>2011</year>\n      </item>\n      <item>\n        <title>The Selfish Gene</title>\n        <author>Richard Dawkins</author>\n        <year>1976</year>\n      </item>\n    </collection>\n  </collections>\n  <staff>\n    <member id=\"1\">\n      <name>Emily Carter</name>\n      <position>Head Librarian</position>\n      <yearsExperience>15</yearsExperience>\n    </member>\n    <member id=\"2\">\n      <name>Michael Thompson</name>\n      <position>Assistant Librarian</position>\n      <yearsExperience>7</yearsExperience>\n    </member>\n  </staff>\n  <events>\n    <event>\n      <title>Book Club Meeting</title>\n      <date>2023-11-15</date>\n      <location>Conference Room A</location>\n    </event>\n    <event>\n      <title>Author Signing</title>\n      <date>2023-12-05</date>\n      <location>Main Hall</location>\n    </event>\n  </events>\n</library>\n</code>",
            "feature_requirements": "• The JSON must have a root object representing the library containing all the subsequent keys and nested objects.  \n• The library object must include a key for the library's name with the value \"Central City Library\".  \n• There must be an \"address\" object containing the keys \"street\", \"city\", and \"postalCode\" with the respective values from the XML.  \n• The JSON must include a \"collections\" structure where each collection has an associated \"type\" attribute and contains an array of \"item\" objects.  \n• Each \"item\" in a collection must include the keys \"title\", \"author\", and \"year\" with their respective values.  \n• There must be a \"staff\" section structured as an array of member objects, where each member includes an \"id\" identifier and the keys \"name\", \"position\", and \"yearsExperience\".  \n• The structure must contain an \"events\" array, with each event object having the keys \"title\", \"date\", and \"location\".",
            "task_id": "170521",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "library",
                "library[name]",
                "library[address]",
                "library[address][street]",
                "library[address][city]",
                "library[address][postalCode]",
                "library[collections]",
                "library[collections][][type]",
                "library[collections][][items]",
                "library[collections][][items][][title]",
                "library[collections][][items][][author]",
                "library[collections][][items][][year]",
                "library[staff]",
                "library[staff][][id]",
                "library[staff][][name]",
                "library[staff][][position]",
                "library[staff][][yearsExperience]",
                "library[events]",
                "library[events][][title]",
                "library[events][][date]",
                "library[events][][location]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170521_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<library>\n  <name>Central City Library</name>\n  <address>\n    <street>123 Main St</street>\n    <city>Central City</city>\n    <postalCode>54321</postalCode>\n  </address>\n  <collections>\n    <collection type=\"Fiction\">\n      <item>\n        <title>The Lost World</title>\n        <author>Arthur Conan Doyle</author>\n        <year>1912</year>\n      </item>\n      <item>\n        <title>1984</title>\n        <author>George Orwell</author>\n        <year>1949</year>\n      </item>\n    </collection>\n    <collection type=\"Non-Fiction\">\n      <item>\n        <title>Sapiens: A Brief History of Humankind</title>\n        <author>Yuval Noah Harari</author>\n        <year>2011</year>\n      </item>\n      <item>\n        <title>The Selfish Gene</title>\n        <author>Richard Dawkins</author>\n        <year>1976</year>\n      </item>\n    </collection>\n  </collections>\n  <staff>\n    <member id=\"1\">\n      <name>Emily Carter</name>\n      <position>Head Librarian</position>\n      <yearsExperience>15</yearsExperience>\n    </member>\n    <member id=\"2\">\n      <name>Michael Thompson</name>\n      <position>Assistant Librarian</position>\n      <yearsExperience>7</yearsExperience>\n    </member>\n  </staff>\n  <events>\n    <event>\n      <title>Book Club Meeting</title>\n      <date>2023-11-15</date>\n      <location>Conference Room A</location>\n    </event>\n    <event>\n      <title>Author Signing</title>\n      <date>2023-12-05</date>\n      <location>Main Hall</location>\n    </event>\n  </events>\n</library>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170521_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "library",
                                "library[name]",
                                "library[address]",
                                "library[address][street]",
                                "library[address][city]",
                                "library[address][postalCode]",
                                "library[collections]",
                                "library[collections][][type]",
                                "library[collections][][items]",
                                "library[collections][][items][][title]",
                                "library[collections][][items][][author]",
                                "library[collections][][items][][year]",
                                "library[staff]",
                                "library[staff][][id]",
                                "library[staff][][name]",
                                "library[staff][][position]",
                                "library[staff][][yearsExperience]",
                                "library[events]",
                                "library[events][][title]",
                                "library[events][][date]",
                                "library[events][][location]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<record>\n  <metadata>\n    <version>1.0</version>\n    <timestamp>2023-10-07T12:34:56Z</timestamp>\n    <source>local_system</source>\n  </metadata>\n  <user>\n    <id>123456</id>\n    <name>John Doe</name>\n    <email>john.doe@example.com</email>\n  </user>\n  <orders>\n    <order>\n      <orderId>ORD-0001</orderId>\n      <date>2023-09-15</date>\n      <total>49.99</total>\n      <items>\n        <item>\n          <productId>P-101</productId>\n          <productName>Widget Alpha</productName>\n          <quantity>2</quantity>\n          <unitPrice>15.00</unitPrice>\n        </item>\n        <item>\n          <productId>P-102</productId>\n          <productName>Gadget Beta</productName>\n          <quantity>1</quantity>\n          <unitPrice>19.99</unitPrice>\n        </item>\n      </items>\n    </order>\n    <order>\n      <orderId>ORD-0002</orderId>\n      <date>2023-09-20</date>\n      <total>89.99</total>\n      <items>\n        <item>\n          <productId>P-103</productId>\n          <productName>Device Gamma</productName>\n          <quantity>3</quantity>\n          <unitPrice>29.99</unitPrice>\n        </item>\n      </items>\n    </order>\n  </orders>\n  <preferences>\n    <notificationsEnabled>true</notificationsEnabled>\n    <language>en</language>\n    <theme>dark</theme>\n  </preferences>\n</record>\n</code>",
            "feature_requirements": "• The JSON output must have a top-level object with keys for \"metadata\", \"user\", \"orders\", and \"preferences\".  \n• The \"metadata\" object must include the keys \"version\", \"timestamp\", and \"source\" with their respective values.  \n• The \"user\" object must include the keys \"id\", \"name\", and \"email\" with values corresponding to the XML input.  \n• The \"orders\" element must be represented as an array containing order objects.  \n• Each order object in the \"orders\" array must include the keys \"orderId\", \"date\", \"total\", and \"items\".  \n• The \"items\" object within each order must be an array containing item objects, each with the keys \"productId\", \"productName\", \"quantity\", and \"unitPrice\".  \n• The \"preferences\" object must include the keys \"notificationsEnabled\", \"language\", and \"theme\" exactly as provided in the XML.  \n• The JSON values must reflect appropriate data types, for example, \"notificationsEnabled\" must be a boolean value.",
            "task_id": "170522",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "metadata",
                "metadata[version]",
                "metadata[timestamp]",
                "metadata[source]",
                "user",
                "user[id]",
                "user[name]",
                "user[email]",
                "orders",
                "orders[][orderId]",
                "orders[][date]",
                "orders[][total]",
                "orders[][items]",
                "orders[][items][][productId]",
                "orders[][items][][productName]",
                "orders[][items][][quantity]",
                "orders[][items][][unitPrice]",
                "preferences",
                "preferences[notificationsEnabled]",
                "preferences[language]",
                "preferences[theme]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170522_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<record>\n  <metadata>\n    <version>1.0</version>\n    <timestamp>2023-10-07T12:34:56Z</timestamp>\n    <source>local_system</source>\n  </metadata>\n  <user>\n    <id>123456</id>\n    <name>John Doe</name>\n    <email>john.doe@example.com</email>\n  </user>\n  <orders>\n    <order>\n      <orderId>ORD-0001</orderId>\n      <date>2023-09-15</date>\n      <total>49.99</total>\n      <items>\n        <item>\n          <productId>P-101</productId>\n          <productName>Widget Alpha</productName>\n          <quantity>2</quantity>\n          <unitPrice>15.00</unitPrice>\n        </item>\n        <item>\n          <productId>P-102</productId>\n          <productName>Gadget Beta</productName>\n          <quantity>1</quantity>\n          <unitPrice>19.99</unitPrice>\n        </item>\n      </items>\n    </order>\n    <order>\n      <orderId>ORD-0002</orderId>\n      <date>2023-09-20</date>\n      <total>89.99</total>\n      <items>\n        <item>\n          <productId>P-103</productId>\n          <productName>Device Gamma</productName>\n          <quantity>3</quantity>\n          <unitPrice>29.99</unitPrice>\n        </item>\n      </items>\n    </order>\n  </orders>\n  <preferences>\n    <notificationsEnabled>true</notificationsEnabled>\n    <language>en</language>\n    <theme>dark</theme>\n  </preferences>\n</record>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170522_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "metadata",
                                "metadata[version]",
                                "metadata[timestamp]",
                                "metadata[source]",
                                "user",
                                "user[id]",
                                "user[name]",
                                "user[email]",
                                "orders",
                                "orders[][orderId]",
                                "orders[][date]",
                                "orders[][total]",
                                "orders[][items]",
                                "orders[][items][][productId]",
                                "orders[][items][][productName]",
                                "orders[][items][][quantity]",
                                "orders[][items][][unitPrice]",
                                "preferences",
                                "preferences[notificationsEnabled]",
                                "preferences[language]",
                                "preferences[theme]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<dataSet>\n  <metadata>\n    <name>CityLibrary Archive</name>\n    <createdDate>2023-10-12</createdDate>\n    <version>1.0</version>\n  </metadata>\n  <books>\n    <book id=\"1\">\n      <title>The Hidden City</title>\n      <author>Marta Reyes</author>\n      <year>1998</year>\n      <genre>Mystery</genre>\n    </book>\n    <book id=\"2\">\n      <title>XML Essentials</title>\n      <author>Alex Johnson</author>\n      <year>2015</year>\n      <genre>Educational</genre>\n    </book>\n    <book id=\"3\">\n      <title>Gardens of Time</title>\n      <author>Linda Park</author>\n      <year>2008</year>\n      <genre>Fiction</genre>\n    </book>\n  </books>\n  <stats>\n    <totalBooks>3</totalBooks>\n    <mostRecentUpdate>2023-10-10</mostRecentUpdate>\n    <checkedOutCount>1</checkedOutCount>\n  </stats>\n  <library>\n    <location>\n      <city>Riverton</city>\n      <state>Montana</state>\n      <country>USA</country>\n    </location>\n    <departments>\n      <department name=\"Fiction\">\n        <shelf>A1</shelf>\n        <shelf>A2</shelf>\n      </department>\n      <department name=\"Non-Fiction\">\n        <shelf>B1</shelf>\n      </department>\n      <department name=\"Reference\">\n        <shelf>C1</shelf>\n        <shelf>C2</shelf>\n      </department>\n    </departments>\n  </library>\n  <members>\n    <member id=\"101\">\n      <name>Emily Clark</name>\n      <joinDate>2020-03-15</joinDate>\n      <membershipLevel>Gold</membershipLevel>\n    </member>\n    <member id=\"102\">\n      <name>Mark Lewis</name>\n      <joinDate>2019-07-22</joinDate>\n      <membershipLevel>Silver</membershipLevel>\n    </member>\n  </members>\n</dataSet>\n</code>",
            "feature_requirements": "• The JSON must have a top-level key for the dataset (e.g., \"dataSet\") that contains all of the subsequent sections.\n• The JSON must include a \"metadata\" section with keys for \"name\", \"createdDate\", and \"version\", each holding the appropriate string values.\n• The JSON must include a \"books\" section containing a list of book objects, where each object has an \"id\" (derived from the XML attribute) and keys for \"title\", \"author\", \"year\", and \"genre\".\n• The JSON must include a \"stats\" section with keys for \"totalBooks\", \"mostRecentUpdate\", and \"checkedOutCount\", each matching the corresponding numeric or string values.\n• The JSON must include a \"library\" section that contains a \"location\" object with keys for \"city\", \"state\", and \"country\".\n• The JSON must include a \"departments\" section within the \"library\" that is a list of department objects, each with a \"name\" attribute and a list of \"shelf\" values.\n• The JSON must include a \"members\" section containing a list of member objects, where each object has an \"id\" (from the XML attribute), \"name\", \"joinDate\", and \"membershipLevel\".",
            "task_id": "170523",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "dataSet",
                "dataSet[metadata]",
                "dataSet[metadata][name]",
                "dataSet[metadata][createdDate]",
                "dataSet[metadata][version]",
                "dataSet[books]",
                "dataSet[books][][id]",
                "dataSet[books][][title]",
                "dataSet[books][][author]",
                "dataSet[books][][year]",
                "dataSet[books][][genre]",
                "dataSet[stats]",
                "dataSet[stats][totalBooks]",
                "dataSet[stats][mostRecentUpdate]",
                "dataSet[stats][checkedOutCount]",
                "dataSet[library]",
                "dataSet[library][location]",
                "dataSet[library][location][city]",
                "dataSet[library][location][state]",
                "dataSet[library][location][country]",
                "dataSet[library][departments]",
                "dataSet[library][departments][][name]",
                "dataSet[library][departments][][shelf]",
                "dataSet[members]",
                "dataSet[members][][id]",
                "dataSet[members][][name]",
                "dataSet[members][][joinDate]",
                "dataSet[members][][membershipLevel]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170523_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<dataSet>\n  <metadata>\n    <name>CityLibrary Archive</name>\n    <createdDate>2023-10-12</createdDate>\n    <version>1.0</version>\n  </metadata>\n  <books>\n    <book id=\"1\">\n      <title>The Hidden City</title>\n      <author>Marta Reyes</author>\n      <year>1998</year>\n      <genre>Mystery</genre>\n    </book>\n    <book id=\"2\">\n      <title>XML Essentials</title>\n      <author>Alex Johnson</author>\n      <year>2015</year>\n      <genre>Educational</genre>\n    </book>\n    <book id=\"3\">\n      <title>Gardens of Time</title>\n      <author>Linda Park</author>\n      <year>2008</year>\n      <genre>Fiction</genre>\n    </book>\n  </books>\n  <stats>\n    <totalBooks>3</totalBooks>\n    <mostRecentUpdate>2023-10-10</mostRecentUpdate>\n    <checkedOutCount>1</checkedOutCount>\n  </stats>\n  <library>\n    <location>\n      <city>Riverton</city>\n      <state>Montana</state>\n      <country>USA</country>\n    </location>\n    <departments>\n      <department name=\"Fiction\">\n        <shelf>A1</shelf>\n        <shelf>A2</shelf>\n      </department>\n      <department name=\"Non-Fiction\">\n        <shelf>B1</shelf>\n      </department>\n      <department name=\"Reference\">\n        <shelf>C1</shelf>\n        <shelf>C2</shelf>\n      </department>\n    </departments>\n  </library>\n  <members>\n    <member id=\"101\">\n      <name>Emily Clark</name>\n      <joinDate>2020-03-15</joinDate>\n      <membershipLevel>Gold</membershipLevel>\n    </member>\n    <member id=\"102\">\n      <name>Mark Lewis</name>\n      <joinDate>2019-07-22</joinDate>\n      <membershipLevel>Silver</membershipLevel>\n    </member>\n  </members>\n</dataSet>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170523_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "dataSet",
                                "dataSet[metadata]",
                                "dataSet[metadata][name]",
                                "dataSet[metadata][createdDate]",
                                "dataSet[metadata][version]",
                                "dataSet[books]",
                                "dataSet[books][][id]",
                                "dataSet[books][][title]",
                                "dataSet[books][][author]",
                                "dataSet[books][][year]",
                                "dataSet[books][][genre]",
                                "dataSet[stats]",
                                "dataSet[stats][totalBooks]",
                                "dataSet[stats][mostRecentUpdate]",
                                "dataSet[stats][checkedOutCount]",
                                "dataSet[library]",
                                "dataSet[library][location]",
                                "dataSet[library][location][city]",
                                "dataSet[library][location][state]",
                                "dataSet[library][location][country]",
                                "dataSet[library][departments]",
                                "dataSet[library][departments][][name]",
                                "dataSet[library][departments][][shelf]",
                                "dataSet[members]",
                                "dataSet[members][][id]",
                                "dataSet[members][][name]",
                                "dataSet[members][][joinDate]",
                                "dataSet[members][][membershipLevel]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n    <users>\n        <user>\n            <id>001</id>\n            <name>Alice Johnson</name>\n            <email>alice.johnson@example.com</email>\n            <roles>\n                <role>Manager</role>\n                <role>Editor</role>\n            </roles>\n        </user>\n        <user>\n            <id>002</id>\n            <name>Bob Smith</name>\n            <email>bob.smith@example.com</email>\n            <roles>\n                <role>User</role>\n            </roles>\n        </user>\n    </users>\n    <settings>\n        <theme>light</theme>\n        <notifications enabled=\"true\">\n            <email>true</email>\n            <sms>false</sms>\n        </notifications>\n        <storage>\n            <limit unit=\"GB\">100</limit>\n            <used unit=\"GB\">45</used>\n        </storage>\n    </settings>\n    <transactions>\n        <transaction>\n            <transactionId>TX1001</transactionId>\n            <amount currency=\"USD\">250.00</amount>\n            <date>2023-10-25</date>\n            <status>Completed</status>\n        </transaction>\n        <transaction>\n            <transactionId>TX1002</transactionId>\n            <amount currency=\"EUR\">180.50</amount>\n            <date>2023-10-26</date>\n            <status>Pending</status>\n        </transaction>\n    </transactions>\n    <logs>\n        <log id=\"L001\">\n            <timestamp>2023-10-25T14:30:00</timestamp>\n            <event>User login</event>\n            <details>Successful authentication</details>\n        </log>\n        <log id=\"L002\">\n            <timestamp>2023-10-26T09:15:00</timestamp>\n            <event>Transaction update</event>\n            <details>Transaction TX1002 changed status to Pending</details>\n        </log>\n    </logs>\n    <metadata>\n        <version>1.2</version>\n        <lastUpdated>2023-10-26T15:00:00</lastUpdated>\n        <environment>production</environment>\n    </metadata>\n</configuration>\n</code>",
            "feature_requirements": "• The converted JSON must include a \"users\" section that is an array of user objects, where each user object contains keys for \"id\", \"name\", and \"email\", and a \"roles\" key that is an array of role strings.  \n• The JSON output must include a \"settings\" section that contains objects for \"theme\", \"notifications\", and \"storage\". The \"notifications\" object must have an \"enabled\" property (with a boolean value derived from the XML attribute) and nested keys for \"email\" and \"sms\".  \n• The \"storage\" object within \"settings\" must include keys \"limit\" and \"used\" with their numeric values, and each of these must be associated with a corresponding \"unit\" property derived from the XML attributes.  \n• The JSON output must include a \"transactions\" section that is an array of transaction objects. Every transaction object must contain keys for \"transactionId\", \"amount\", \"date\", and \"status\", where the \"amount\" key includes both the numeric value and an associated \"currency\" value from the XML attribute.  \n• The JSON must contain a \"logs\" section represented as an array of log objects, with each log object having a unique \"id\" (extracted from the XML attribute), as well as keys for \"timestamp\", \"event\", and \"details\".  \n• A \"metadata\" section must be present in the JSON output containing keys for \"version\", \"lastUpdated\", and \"environment\".",
            "task_id": "170524",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "users",
                "users[*].id",
                "users[*].name",
                "users[*].email",
                "users[*].roles",
                "settings",
                "settings[theme]",
                "settings[notifications]",
                "settings[notifications][enabled]",
                "settings[notifications][email]",
                "settings[notifications][sms]",
                "settings[storage]",
                "settings[storage][limit]",
                "settings[storage][limit_unit]",
                "settings[storage][used]",
                "settings[storage][used_unit]",
                "transactions",
                "transactions[*].transactionId",
                "transactions[*].amount",
                "transactions[*].amount.currency",
                "transactions[*].date",
                "transactions[*].status",
                "logs",
                "logs[*].id",
                "logs[*].timestamp",
                "logs[*].event",
                "logs[*].details",
                "metadata",
                "metadata[version]",
                "metadata[lastUpdated]",
                "metadata[environment]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170524_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n    <users>\n        <user>\n            <id>001</id>\n            <name>Alice Johnson</name>\n            <email>alice.johnson@example.com</email>\n            <roles>\n                <role>Manager</role>\n                <role>Editor</role>\n            </roles>\n        </user>\n        <user>\n            <id>002</id>\n            <name>Bob Smith</name>\n            <email>bob.smith@example.com</email>\n            <roles>\n                <role>User</role>\n            </roles>\n        </user>\n    </users>\n    <settings>\n        <theme>light</theme>\n        <notifications enabled=\"true\">\n            <email>true</email>\n            <sms>false</sms>\n        </notifications>\n        <storage>\n            <limit unit=\"GB\">100</limit>\n            <used unit=\"GB\">45</used>\n        </storage>\n    </settings>\n    <transactions>\n        <transaction>\n            <transactionId>TX1001</transactionId>\n            <amount currency=\"USD\">250.00</amount>\n            <date>2023-10-25</date>\n            <status>Completed</status>\n        </transaction>\n        <transaction>\n            <transactionId>TX1002</transactionId>\n            <amount currency=\"EUR\">180.50</amount>\n            <date>2023-10-26</date>\n            <status>Pending</status>\n        </transaction>\n    </transactions>\n    <logs>\n        <log id=\"L001\">\n            <timestamp>2023-10-25T14:30:00</timestamp>\n            <event>User login</event>\n            <details>Successful authentication</details>\n        </log>\n        <log id=\"L002\">\n            <timestamp>2023-10-26T09:15:00</timestamp>\n            <event>Transaction update</event>\n            <details>Transaction TX1002 changed status to Pending</details>\n        </log>\n    </logs>\n    <metadata>\n        <version>1.2</version>\n        <lastUpdated>2023-10-26T15:00:00</lastUpdated>\n        <environment>production</environment>\n    </metadata>\n</configuration>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170524_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "users",
                                "users[*].id",
                                "users[*].name",
                                "users[*].email",
                                "users[*].roles",
                                "settings",
                                "settings[theme]",
                                "settings[notifications]",
                                "settings[notifications][enabled]",
                                "settings[notifications][email]",
                                "settings[notifications][sms]",
                                "settings[storage]",
                                "settings[storage][limit]",
                                "settings[storage][limit_unit]",
                                "settings[storage][used]",
                                "settings[storage][used_unit]",
                                "transactions",
                                "transactions[*].transactionId",
                                "transactions[*].amount",
                                "transactions[*].amount.currency",
                                "transactions[*].date",
                                "transactions[*].status",
                                "logs",
                                "logs[*].id",
                                "logs[*].timestamp",
                                "logs[*].event",
                                "logs[*].details",
                                "metadata",
                                "metadata[version]",
                                "metadata[lastUpdated]",
                                "metadata[environment]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<store>\n  <id>Store001</id>\n  <name>Central Market</name>\n  <location>\n    <address>123 Main Street</address>\n    <city>Metropolis</city>\n    <state>CA</state>\n    <zip>90001</zip>\n  </location>\n  <departments>\n    <department>\n      <name>Produce</name>\n      <items>\n        <item>\n          <id>101</id>\n          <name>Apple</name>\n          <price>1.20</price>\n        </item>\n        <item>\n          <id>102</id>\n          <name>Banana</name>\n          <price>0.50</price>\n        </item>\n      </items>\n    </department>\n    <department>\n      <name>Dairy</name>\n      <items>\n        <item>\n          <id>201</id>\n          <name>Milk</name>\n          <price>2.00</price>\n        </item>\n        <item>\n          <id>202</id>\n          <name>Cheese</name>\n          <price>3.50</price>\n        </item>\n      </items>\n    </department>\n  </departments>\n  <hours>\n    <day name=\"Monday\">9:00-18:00</day>\n    <day name=\"Tuesday\">9:00-18:00</day>\n    <day name=\"Wednesday\">9:00-18:00</day>\n    <day name=\"Thursday\">9:00-18:00</day>\n    <day name=\"Friday\">9:00-18:00</day>\n    <day name=\"Saturday\">10:00-16:00</day>\n    <day name=\"Sunday\">Closed</day>\n  </hours>\n  <contact>\n    <phone>123-456-7890</phone>\n    <email>info@centralmarket.com</email>\n  </contact>\n</store>\n</code>",
            "feature_requirements": "• The output JSON must have a top-level key corresponding to the \"store\" element that encapsulates all other data.  \n• Under \"store\", there must be individual keys for \"id\" and \"name\" with string values corresponding to the store's identifier and name.  \n• The \"store\" object must include a \"location\" key whose value is an object with keys \"address\", \"city\", \"state\", and \"zip\" representing the location details.  \n• The \"store\" object must include a \"departments\" key whose value is an array; each element in this array must be an object representing a department with a \"name\" key and an \"items\" key.  \n• Each department's \"items\" key must contain an array of objects where each object represents an item with keys \"id\", \"name\", and \"price\".  \n• The \"store\" object must include an \"hours\" key whose value is an array of objects; each object must represent a day with a \"name\" key for the day's name and a value (or key) representing the operating hours.  \n• The \"store\" object must include a \"contact\" key whose value is an object containing the \"phone\" and \"email\" keys with their respective contact information.  \n• All textual data from the XML elements (such as store identifiers, names, addresses, department names, item details, day schedules, and contact details) must be preserved as string values in the JSON.",
            "task_id": "170525",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "store",
                "store[id]",
                "store[name]",
                "store[location]",
                "store[location][address]",
                "store[location][city]",
                "store[location][state]",
                "store[location][zip]",
                "store[departments]",
                "store[departments][*][name]",
                "store[departments][*][items]",
                "store[departments][*][items][*][id]",
                "store[departments][*][items][*][name]",
                "store[departments][*][items][*][price]",
                "store[hours]",
                "store[hours][*][name]",
                "store[hours][*][hours]",
                "store[contact]",
                "store[contact][phone]",
                "store[contact][email]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170525_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<store>\n  <id>Store001</id>\n  <name>Central Market</name>\n  <location>\n    <address>123 Main Street</address>\n    <city>Metropolis</city>\n    <state>CA</state>\n    <zip>90001</zip>\n  </location>\n  <departments>\n    <department>\n      <name>Produce</name>\n      <items>\n        <item>\n          <id>101</id>\n          <name>Apple</name>\n          <price>1.20</price>\n        </item>\n        <item>\n          <id>102</id>\n          <name>Banana</name>\n          <price>0.50</price>\n        </item>\n      </items>\n    </department>\n    <department>\n      <name>Dairy</name>\n      <items>\n        <item>\n          <id>201</id>\n          <name>Milk</name>\n          <price>2.00</price>\n        </item>\n        <item>\n          <id>202</id>\n          <name>Cheese</name>\n          <price>3.50</price>\n        </item>\n      </items>\n    </department>\n  </departments>\n  <hours>\n    <day name=\"Monday\">9:00-18:00</day>\n    <day name=\"Tuesday\">9:00-18:00</day>\n    <day name=\"Wednesday\">9:00-18:00</day>\n    <day name=\"Thursday\">9:00-18:00</day>\n    <day name=\"Friday\">9:00-18:00</day>\n    <day name=\"Saturday\">10:00-16:00</day>\n    <day name=\"Sunday\">Closed</day>\n  </hours>\n  <contact>\n    <phone>123-456-7890</phone>\n    <email>info@centralmarket.com</email>\n  </contact>\n</store>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170525_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "store",
                                "store[id]",
                                "store[name]",
                                "store[location]",
                                "store[location][address]",
                                "store[location][city]",
                                "store[location][state]",
                                "store[location][zip]",
                                "store[departments]",
                                "store[departments][*][name]",
                                "store[departments][*][items]",
                                "store[departments][*][items][*][id]",
                                "store[departments][*][items][*][name]",
                                "store[departments][*][items][*][price]",
                                "store[hours]",
                                "store[hours][*][name]",
                                "store[hours][*][hours]",
                                "store[contact]",
                                "store[contact][phone]",
                                "store[contact][email]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<data>\n  <config>\n    <name>ApplicationConfig</name>\n    <version>1.0</version>\n    <enabled>true</enabled>\n  </config>\n  <users>\n    <user id=\"101\">\n      <firstName>John</firstName>\n      <lastName>Doe</lastName>\n      <email>john.doe@example.com</email>\n      <roles>\n        <role>Admin</role>\n        <role>User</role>\n      </roles>\n    </user>\n    <user id=\"102\">\n      <firstName>Jane</firstName>\n      <lastName>Smith</lastName>\n      <email>jane.smith@example.com</email>\n      <roles>\n        <role>User</role>\n      </roles>\n    </user>\n  </users>\n  <settings>\n    <display>\n      <theme>dark</theme>\n      <fontSize>14</fontSize>\n    </display>\n    <language default=\"en\">\n      <option>en</option>\n      <option>es</option>\n      <option>de</option>\n    </language>\n  </settings>\n  <logs>\n    <log entry=\"1\">\n      <timestamp>2023-10-05T10:00:00</timestamp>\n      <event>Started process</event>\n    </log>\n    <log entry=\"2\">\n      <timestamp>2023-10-05T10:05:00</timestamp>\n      <event>User logged in</event>\n    </log>\n  </logs>\n  <stats>\n    <uptime>12345</uptime>\n    <usersActive>50</usersActive>\n    <errorCount>2</errorCount>\n  </stats>\n</data>\n</code>",
            "feature_requirements": "- The JSON output must have a root-level key \"data\" containing the entire structure.\n- Under \"data\", there must be distinct keys: \"config\", \"users\", \"settings\", \"logs\", and \"stats\".\n- The \"config\" section must include keys \"name\", \"version\", and \"enabled\" with corresponding string, numeric (or version string), and boolean values.\n- The \"users\" section must be represented as an array where each user object includes an identifier (\"id\") along with \"firstName\", \"lastName\", \"email\", and a \"roles\" array containing one or more role strings.\n- The \"settings\" section must contain a \"display\" object with keys \"theme\" and \"fontSize\", and a \"language\" object which includes a default language indicator (represented as a key, such as \"default\") and an \"option\" array listing available language options.\n- The \"logs\" section must be represented as an array of log objects, each containing an \"entry\" identifier, \"timestamp\", and \"event\" description.\n- The \"stats\" section must include keys \"uptime\", \"usersActive\", and \"errorCount\" with their respective numeric values.",
            "task_id": "170526",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "data",
                "data[config]",
                "data[config][name]",
                "data[config][version]",
                "data[config][enabled]",
                "data[users]",
                "data[users][][id]",
                "data[users][][firstName]",
                "data[users][][lastName]",
                "data[users][][email]",
                "data[users][][roles]",
                "data[users][][roles][]",
                "data[settings]",
                "data[settings][display]",
                "data[settings][display][theme]",
                "data[settings][display][fontSize]",
                "data[settings][language]",
                "data[settings][language][default]",
                "data[settings][language][option]",
                "data[logs]",
                "data[logs][][entry]",
                "data[logs][][timestamp]",
                "data[logs][][event]",
                "data[stats]",
                "data[stats][uptime]",
                "data[stats][usersActive]",
                "data[stats][errorCount]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170526_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<data>\n  <config>\n    <name>ApplicationConfig</name>\n    <version>1.0</version>\n    <enabled>true</enabled>\n  </config>\n  <users>\n    <user id=\"101\">\n      <firstName>John</firstName>\n      <lastName>Doe</lastName>\n      <email>john.doe@example.com</email>\n      <roles>\n        <role>Admin</role>\n        <role>User</role>\n      </roles>\n    </user>\n    <user id=\"102\">\n      <firstName>Jane</firstName>\n      <lastName>Smith</lastName>\n      <email>jane.smith@example.com</email>\n      <roles>\n        <role>User</role>\n      </roles>\n    </user>\n  </users>\n  <settings>\n    <display>\n      <theme>dark</theme>\n      <fontSize>14</fontSize>\n    </display>\n    <language default=\"en\">\n      <option>en</option>\n      <option>es</option>\n      <option>de</option>\n    </language>\n  </settings>\n  <logs>\n    <log entry=\"1\">\n      <timestamp>2023-10-05T10:00:00</timestamp>\n      <event>Started process</event>\n    </log>\n    <log entry=\"2\">\n      <timestamp>2023-10-05T10:05:00</timestamp>\n      <event>User logged in</event>\n    </log>\n  </logs>\n  <stats>\n    <uptime>12345</uptime>\n    <usersActive>50</usersActive>\n    <errorCount>2</errorCount>\n  </stats>\n</data>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170526_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "data",
                                "data[config]",
                                "data[config][name]",
                                "data[config][version]",
                                "data[config][enabled]",
                                "data[users]",
                                "data[users][][id]",
                                "data[users][][firstName]",
                                "data[users][][lastName]",
                                "data[users][][email]",
                                "data[users][][roles]",
                                "data[users][][roles][]",
                                "data[settings]",
                                "data[settings][display]",
                                "data[settings][display][theme]",
                                "data[settings][display][fontSize]",
                                "data[settings][language]",
                                "data[settings][language][default]",
                                "data[settings][language][option]",
                                "data[logs]",
                                "data[logs][][entry]",
                                "data[logs][][timestamp]",
                                "data[logs][][event]",
                                "data[stats]",
                                "data[stats][uptime]",
                                "data[stats][usersActive]",
                                "data[stats][errorCount]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n  <users>\n    <user id=\"1\">\n      <name>Jane Doe</name>\n      <role>admin</role>\n      <active>true</active>\n    </user>\n    <user id=\"2\">\n      <name>John Smith</name>\n      <role>editor</role>\n      <active>false</active>\n    </user>\n  </users>\n  <settings>\n    <option key=\"theme\">dark</option>\n    <option key=\"language\">en-us</option>\n    <option key=\"notifications\">enabled</option>\n  </settings>\n  <entries>\n    <entry id=\"100\">\n      <title>Entry One</title>\n      <description>First entry description</description>\n      <tags>\n        <tag>news</tag>\n        <tag>update</tag>\n      </tags>\n    </entry>\n    <entry id=\"101\">\n      <title>Entry Two</title>\n      <description>Second entry description</description>\n      <tags>\n        <tag>announcement</tag>\n        <tag>feature</tag>\n      </tags>\n    </entry>\n  </entries>\n  <logs>\n    <log type=\"error\">\n      <message>Failed to load resource</message>\n      <timestamp>2023-10-01T12:00:00Z</timestamp>\n    </log>\n    <log type=\"info\">\n      <message>Application started</message>\n      <timestamp>2023-10-01T10:00:00Z</timestamp>\n    </log>\n  </logs>\n  <reports>\n    <report id=\"500\">\n      <summary>Monthly performance report</summary>\n      <dataPoints>\n        <dataPoint name=\"revenue\">12345.67</dataPoint>\n        <dataPoint name=\"costs\">5432.10</dataPoint>\n      </dataPoints>\n    </report>\n  </reports>\n</configuration>\n</code>",
            "feature_requirements": "• The output JSON must have a top-level object with keys corresponding to XML sections: \"users\", \"settings\", \"entries\", \"logs\", and \"reports\".  \n• The \"users\" section must be an array where each user object includes an \"id\" field (from the XML attribute) and child elements translated as key-value pairs: \"name\", \"role\", and \"active\".  \n• The \"settings\" section must be represented as an object or array where each option is mapped by its \"key\" attribute to its text value.  \n• The \"entries\" section must be an array of objects each containing an \"id\" field (from the XML attribute), along with keys \"title\", \"description\", and \"tags\", where \"tags\" is an array of strings extracted from individual \"tag\" elements.  \n• The \"logs\" section must be an array of objects in which each log includes a \"type\" field (from the XML attribute) and keys \"message\" and \"timestamp\".  \n• The \"reports\" section must be an array of objects each having an \"id\" field (from the XML attribute), a \"summary\" key, and a \"dataPoints\" key that contains an array of objects representing \"dataPoint\" elements. Each \"dataPoint\" object should include a \"name\" field (from the XML attribute) and its corresponding text value as the data.",
            "task_id": "170527",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "users",
                "users[*].id",
                "users[*].name",
                "users[*].role",
                "users[*].active",
                "settings",
                "entries",
                "entries[*].id",
                "entries[*].title",
                "entries[*].description",
                "entries[*].tags",
                "entries[*].tags[*]",
                "logs",
                "logs[*].type",
                "logs[*].message",
                "logs[*].timestamp",
                "reports",
                "reports[*].id",
                "reports[*].summary",
                "reports[*].dataPoints",
                "reports[*].dataPoints[*].name"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170527_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n  <users>\n    <user id=\"1\">\n      <name>Jane Doe</name>\n      <role>admin</role>\n      <active>true</active>\n    </user>\n    <user id=\"2\">\n      <name>John Smith</name>\n      <role>editor</role>\n      <active>false</active>\n    </user>\n  </users>\n  <settings>\n    <option key=\"theme\">dark</option>\n    <option key=\"language\">en-us</option>\n    <option key=\"notifications\">enabled</option>\n  </settings>\n  <entries>\n    <entry id=\"100\">\n      <title>Entry One</title>\n      <description>First entry description</description>\n      <tags>\n        <tag>news</tag>\n        <tag>update</tag>\n      </tags>\n    </entry>\n    <entry id=\"101\">\n      <title>Entry Two</title>\n      <description>Second entry description</description>\n      <tags>\n        <tag>announcement</tag>\n        <tag>feature</tag>\n      </tags>\n    </entry>\n  </entries>\n  <logs>\n    <log type=\"error\">\n      <message>Failed to load resource</message>\n      <timestamp>2023-10-01T12:00:00Z</timestamp>\n    </log>\n    <log type=\"info\">\n      <message>Application started</message>\n      <timestamp>2023-10-01T10:00:00Z</timestamp>\n    </log>\n  </logs>\n  <reports>\n    <report id=\"500\">\n      <summary>Monthly performance report</summary>\n      <dataPoints>\n        <dataPoint name=\"revenue\">12345.67</dataPoint>\n        <dataPoint name=\"costs\">5432.10</dataPoint>\n      </dataPoints>\n    </report>\n  </reports>\n</configuration>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170527_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "users",
                                "users[*].id",
                                "users[*].name",
                                "users[*].role",
                                "users[*].active",
                                "settings",
                                "entries",
                                "entries[*].id",
                                "entries[*].title",
                                "entries[*].description",
                                "entries[*].tags",
                                "entries[*].tags[*]",
                                "logs",
                                "logs[*].type",
                                "logs[*].message",
                                "logs[*].timestamp",
                                "reports",
                                "reports[*].id",
                                "reports[*].summary",
                                "reports[*].dataPoints",
                                "reports[*].dataPoints[*].name"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<catalog>\n  <libraryInfo>\n    <name>City Library</name>\n    <address>123 Appletree Avenue</address>\n    <city>Metropolis</city>\n    <state>NY</state>\n    <zip>12345</zip>\n  </libraryInfo>\n  <books>\n    <book id=\"1\">\n      <title>The Great Adventure</title>\n      <author>John Doe</author>\n      <genre>Fiction</genre>\n      <published>2010</published>\n    </book>\n    <book id=\"2\">\n      <title>Understanding XML</title>\n      <author>Jane Smith</author>\n      <genre>Educational</genre>\n      <published>2020</published>\n    </book>\n    <book id=\"3\">\n      <title>Modern Architecture</title>\n      <author>Emily White</author>\n      <genre>Non-Fiction</genre>\n      <published>2018</published>\n    </book>\n  </books>\n  <members>\n    <member id=\"M1001\">\n      <firstName>Alice</firstName>\n      <lastName>Johnson</lastName>\n      <membershipType>Premium</membershipType>\n    </member>\n    <member id=\"M1002\">\n      <firstName>Bob</firstName>\n      <lastName>Williams</lastName>\n      <membershipType>Regular</membershipType>\n    </member>\n    <member id=\"M1003\">\n      <firstName>Clara</firstName>\n      <lastName>Smith</lastName>\n      <membershipType>Guest</membershipType>\n    </member>\n  </members>\n  <transactions>\n    <transaction id=\"T001\">\n      <memberId>M1001</memberId>\n      <bookId>1</bookId>\n      <borrowDate>2023-09-15</borrowDate>\n      <returnDate>2023-10-15</returnDate>\n    </transaction>\n    <transaction id=\"T002\">\n      <memberId>M1002</memberId>\n      <bookId>2</bookId>\n      <borrowDate>2023-10-01</borrowDate>\n      <returnDate>2023-10-22</returnDate>\n    </transaction>\n    <transaction id=\"T003\">\n      <memberId>M1003</memberId>\n      <bookId>3</bookId>\n      <borrowDate>2023-10-05</borrowDate>\n      <returnDate>2023-10-25</returnDate>\n    </transaction>\n  </transactions>\n</catalog>\n</code>",
            "feature_requirements": "• The JSON must contain a top-level object with a key representing the catalog structure.\n• A \"libraryInfo\" key must exist with nested keys for \"name\", \"address\", \"city\", \"state\", and \"zip\" holding their respective textual values.\n• The \"books\" section must be an array where each element is an object with keys \"id\", \"title\", \"author\", \"genre\", and \"published\".\n• The \"members\" section must be an array where each element is an object with keys \"id\", \"firstName\", \"lastName\", and \"membershipType\".\n• The \"transactions\" section must be an array where each element is an object with keys \"id\", \"memberId\", \"bookId\", \"borrowDate\", and \"returnDate\".\n• Each element in the arrays must accurately reflect the content and attributes of its corresponding XML element.",
            "task_id": "170528",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": []
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170528_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<catalog>\n  <libraryInfo>\n    <name>City Library</name>\n    <address>123 Appletree Avenue</address>\n    <city>Metropolis</city>\n    <state>NY</state>\n    <zip>12345</zip>\n  </libraryInfo>\n  <books>\n    <book id=\"1\">\n      <title>The Great Adventure</title>\n      <author>John Doe</author>\n      <genre>Fiction</genre>\n      <published>2010</published>\n    </book>\n    <book id=\"2\">\n      <title>Understanding XML</title>\n      <author>Jane Smith</author>\n      <genre>Educational</genre>\n      <published>2020</published>\n    </book>\n    <book id=\"3\">\n      <title>Modern Architecture</title>\n      <author>Emily White</author>\n      <genre>Non-Fiction</genre>\n      <published>2018</published>\n    </book>\n  </books>\n  <members>\n    <member id=\"M1001\">\n      <firstName>Alice</firstName>\n      <lastName>Johnson</lastName>\n      <membershipType>Premium</membershipType>\n    </member>\n    <member id=\"M1002\">\n      <firstName>Bob</firstName>\n      <lastName>Williams</lastName>\n      <membershipType>Regular</membershipType>\n    </member>\n    <member id=\"M1003\">\n      <firstName>Clara</firstName>\n      <lastName>Smith</lastName>\n      <membershipType>Guest</membershipType>\n    </member>\n  </members>\n  <transactions>\n    <transaction id=\"T001\">\n      <memberId>M1001</memberId>\n      <bookId>1</bookId>\n      <borrowDate>2023-09-15</borrowDate>\n      <returnDate>2023-10-15</returnDate>\n    </transaction>\n    <transaction id=\"T002\">\n      <memberId>M1002</memberId>\n      <bookId>2</bookId>\n      <borrowDate>2023-10-01</borrowDate>\n      <returnDate>2023-10-22</returnDate>\n    </transaction>\n    <transaction id=\"T003\">\n      <memberId>M1003</memberId>\n      <bookId>3</bookId>\n      <borrowDate>2023-10-05</borrowDate>\n      <returnDate>2023-10-25</returnDate>\n    </transaction>\n  </transactions>\n</catalog>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170528_r",
                        "type": "textarea",
                        "value": {
                            "text": []
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<organization>\n  <companyName>ExampleTech</companyName>\n  <departments>\n    <department>\n      <name>Engineering</name>\n      <employees>\n        <employee>\n          <id>001</id>\n          <name>John Doe</name>\n          <role>Software Engineer</role>\n        </employee>\n        <employee>\n          <id>002</id>\n          <name>Jane Smith</name>\n          <role>DevOps Engineer</role>\n        </employee>\n      </employees>\n    </department>\n    <department>\n      <name>Marketing</name>\n      <employees>\n        <employee>\n          <id>003</id>\n          <name>Emily Zhang</name>\n          <role>Content Strategist</role>\n        </employee>\n      </employees>\n    </department>\n  </departments>\n  <publications>\n    <publication>\n      <title>Tech Trends 2023</title>\n      <year>2023</year>\n    </publication>\n    <publication>\n      <title>Innovations in AI</title>\n      <year>2022</year>\n    </publication>\n  </publications>\n  <metadata>\n    <createdDate>2023-10-10</createdDate>\n    <lastUpdate>2023-10-11</lastUpdate>\n    <version>1.0</version>\n  </metadata>\n</organization>\n</code>",
            "feature_requirements": "- The JSON output must have a top-level key named \"organization\" that encapsulates all nested data.\n- Within \"organization\", there must be a key \"companyName\" with a corresponding string value.\n- The \"organization\" object must include a key \"departments\" that contains a list of department objects.\n- Each department object within the \"departments\" list must include a key \"name\" with a corresponding string value and a key \"employees\" that holds a list of employee objects.\n- Each employee object in \"employees\" must include keys \"id\", \"name\", and \"role\" with their respective string values.\n- The \"organization\" object must also include a key \"publications\" that contains a list of publication objects.\n- Each publication object in the \"publications\" list must include keys \"title\" and \"year\" with their corresponding values, with \"year\" representing a numerical or string representation of a year.\n- The JSON output must include a key \"metadata\" within \"organization\" that contains keys \"createdDate\", \"lastUpdate\", and \"version\", each with their respective string values.",
            "task_id": "170529",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "organization",
                "organization[companyName]",
                "organization[departments]",
                "organization[departments][*][name]",
                "organization[departments][*][employees]",
                "organization[departments][*][employees][*][id]",
                "organization[departments][*][employees][*][name]",
                "organization[departments][*][employees][*][role]",
                "organization[publications]",
                "organization[publications][*][title]",
                "organization[publications][*][year]",
                "organization[metadata]",
                "organization[metadata][createdDate]",
                "organization[metadata][lastUpdate]",
                "organization[metadata][version]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170529_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<organization>\n  <companyName>ExampleTech</companyName>\n  <departments>\n    <department>\n      <name>Engineering</name>\n      <employees>\n        <employee>\n          <id>001</id>\n          <name>John Doe</name>\n          <role>Software Engineer</role>\n        </employee>\n        <employee>\n          <id>002</id>\n          <name>Jane Smith</name>\n          <role>DevOps Engineer</role>\n        </employee>\n      </employees>\n    </department>\n    <department>\n      <name>Marketing</name>\n      <employees>\n        <employee>\n          <id>003</id>\n          <name>Emily Zhang</name>\n          <role>Content Strategist</role>\n        </employee>\n      </employees>\n    </department>\n  </departments>\n  <publications>\n    <publication>\n      <title>Tech Trends 2023</title>\n      <year>2023</year>\n    </publication>\n    <publication>\n      <title>Innovations in AI</title>\n      <year>2022</year>\n    </publication>\n  </publications>\n  <metadata>\n    <createdDate>2023-10-10</createdDate>\n    <lastUpdate>2023-10-11</lastUpdate>\n    <version>1.0</version>\n  </metadata>\n</organization>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170529_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "organization",
                                "organization[companyName]",
                                "organization[departments]",
                                "organization[departments][*][name]",
                                "organization[departments][*][employees]",
                                "organization[departments][*][employees][*][id]",
                                "organization[departments][*][employees][*][name]",
                                "organization[departments][*][employees][*][role]",
                                "organization[publications]",
                                "organization[publications][*][title]",
                                "organization[publications][*][year]",
                                "organization[metadata]",
                                "organization[metadata][createdDate]",
                                "organization[metadata][lastUpdate]",
                                "organization[metadata][version]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n  <user>\n    <id>1001</id>\n    <name>Jane Smith</name>\n    <contacts>\n      <email>jane.smith@example.com</email>\n      <phone>555-0123</phone>\n    </contacts>\n  </user>\n  <preferences>\n    <theme>light</theme>\n    <language>English</language>\n    <notifications>true</notifications>\n    <shortcuts>\n      <shortcut>\n        <action>copy</action>\n        <keys>Ctrl+C</keys>\n      </shortcut>\n      <shortcut>\n        <action>paste</action>\n        <keys>Ctrl+V</keys>\n      </shortcut>\n      <shortcut>\n        <action>undo</action>\n        <keys>Ctrl+Z</keys>\n      </shortcut>\n    </shortcuts>\n  </preferences>\n  <system>\n    <os>Linux</os>\n    <version>5.14.17</version>\n    <uptime>48</uptime>\n  </system>\n  <inventory>\n    <items>\n      <item>\n        <name>Laptop</name>\n        <quantity>5</quantity>\n        <price>999.99</price>\n      </item>\n      <item>\n        <name>Monitor</name>\n        <quantity>12</quantity>\n        <price>199.99</price>\n      </item>\n      <item>\n        <name>Keyboard</name>\n        <quantity>20</quantity>\n        <price>49.99</price>\n      </item>\n    </items>\n  </inventory>\n</configuration>\n</code>",
            "feature_requirements": "• The JSON output must have a top-level element representing the root configuration.  \n• Under the configuration, there must be a \"user\" object that includes an \"id\" key, a \"name\" key, and a \"contacts\" object containing both \"email\" and \"phone\" keys.  \n• The \"preferences\" object must include keys for \"theme\", \"language\", and \"notifications\".  \n• Within \"preferences\", there must be a \"shortcuts\" key that maps to a list of shortcut objects, each containing an \"action\" and a \"keys\" key.  \n• A \"system\" object must be included with keys for \"os\", \"version\", and \"uptime\".  \n• The configuration must also include an \"inventory\" object that contains an \"items\" key mapping to a list of items. Each item in the list must include keys for \"name\", \"quantity\", and \"price\".  \n• Every key-value pair present in the XML should be represented in the JSON with a direct correspondence to preserve the original structure and data hierarchy.",
            "task_id": "170530",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "configuration",
                "configuration[user]",
                "configuration[user][id]",
                "configuration[user][name]",
                "configuration[user][contacts]",
                "configuration[user][contacts][email]",
                "configuration[user][contacts][phone]",
                "configuration[preferences]",
                "configuration[preferences][theme]",
                "configuration[preferences][language]",
                "configuration[preferences][notifications]",
                "configuration[preferences][shortcuts]",
                "configuration[preferences][shortcuts][][action]",
                "configuration[preferences][shortcuts][][keys]",
                "configuration[system]",
                "configuration[system][os]",
                "configuration[system][version]",
                "configuration[system][uptime]",
                "configuration[inventory]",
                "configuration[inventory][items]",
                "configuration[inventory][items][][name]",
                "configuration[inventory][items][][quantity]",
                "configuration[inventory][items][][price]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170530_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n  <user>\n    <id>1001</id>\n    <name>Jane Smith</name>\n    <contacts>\n      <email>jane.smith@example.com</email>\n      <phone>555-0123</phone>\n    </contacts>\n  </user>\n  <preferences>\n    <theme>light</theme>\n    <language>English</language>\n    <notifications>true</notifications>\n    <shortcuts>\n      <shortcut>\n        <action>copy</action>\n        <keys>Ctrl+C</keys>\n      </shortcut>\n      <shortcut>\n        <action>paste</action>\n        <keys>Ctrl+V</keys>\n      </shortcut>\n      <shortcut>\n        <action>undo</action>\n        <keys>Ctrl+Z</keys>\n      </shortcut>\n    </shortcuts>\n  </preferences>\n  <system>\n    <os>Linux</os>\n    <version>5.14.17</version>\n    <uptime>48</uptime>\n  </system>\n  <inventory>\n    <items>\n      <item>\n        <name>Laptop</name>\n        <quantity>5</quantity>\n        <price>999.99</price>\n      </item>\n      <item>\n        <name>Monitor</name>\n        <quantity>12</quantity>\n        <price>199.99</price>\n      </item>\n      <item>\n        <name>Keyboard</name>\n        <quantity>20</quantity>\n        <price>49.99</price>\n      </item>\n    </items>\n  </inventory>\n</configuration>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170530_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "configuration",
                                "configuration[user]",
                                "configuration[user][id]",
                                "configuration[user][name]",
                                "configuration[user][contacts]",
                                "configuration[user][contacts][email]",
                                "configuration[user][contacts][phone]",
                                "configuration[preferences]",
                                "configuration[preferences][theme]",
                                "configuration[preferences][language]",
                                "configuration[preferences][notifications]",
                                "configuration[preferences][shortcuts]",
                                "configuration[preferences][shortcuts][][action]",
                                "configuration[preferences][shortcuts][][keys]",
                                "configuration[system]",
                                "configuration[system][os]",
                                "configuration[system][version]",
                                "configuration[system][uptime]",
                                "configuration[inventory]",
                                "configuration[inventory][items]",
                                "configuration[inventory][items][][name]",
                                "configuration[inventory][items][][quantity]",
                                "configuration[inventory][items][][price]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<itinerary>\n  <traveler>\n    <name>John Doe</name>\n    <passportNumber>A1234567</passportNumber>\n    <contact>\n      <email>john.doe@example.com</email>\n      <phone>+123456789</phone>\n    </contact>\n  </traveler>\n  <flights>\n    <flight>\n      <flightNumber>AB123</flightNumber>\n      <departure>\n        <city>New York</city>\n        <time>2023-11-25T09:00:00</time>\n      </departure>\n      <arrival>\n        <city>London</city>\n        <time>2023-11-25T21:00:00</time>\n      </arrival>\n    </flight>\n    <flight>\n      <flightNumber>CD456</flightNumber>\n      <departure>\n        <city>London</city>\n        <time>2023-12-05T14:00:00</time>\n      </departure>\n      <arrival>\n        <city>Paris</city>\n        <time>2023-12-05T16:00:00</time>\n      </arrival>\n    </flight>\n  </flights>\n  <lodgings>\n    <lodging>\n      <name>Central Hotel</name>\n      <address>\n        <street>Main Street 123</street>\n        <city>London</city>\n        <postalCode>WC2N</postalCode>\n      </address>\n      <checkIn>2023-11-25</checkIn>\n      <checkOut>2023-12-05</checkOut>\n    </lodging>\n  </lodgings>\n  <activities>\n    <activity>\n      <name>City Tour</name>\n      <location>London</location>\n      <date>2023-11-26</date>\n    </activity>\n    <activity>\n      <name>Museum Visit</name>\n      <location>Paris</location>\n      <date>2023-12-06</date>\n    </activity>\n  </activities>\n  <notes>\n    <note>Ensure to carry travel adapters and converters.</note>\n    <note>Arrange local SIM card upon arrival.</note>\n  </notes>\n</itinerary>\n</code>",
            "feature_requirements": "• The output must depict an object representing the itinerary, with distinct keys corresponding to the major sections (traveler, flights, lodgings, activities, and notes).  \n• The itinerary object must include a traveler object that contains keys for name and passportNumber as well as a nested object for contact details, which itself must include keys for email and phone.  \n• The itinerary must contain a flights section represented as an array where each item (a flight object) includes keys for flightNumber, departure, and arrival.  \n• Each flight’s departure and arrival sub-objects must contain keys for city and time, accurately reflecting the scheduled timings and cities.  \n• The itinerary must include a lodgings section represented as an array where each lodging object includes keys for name, address, checkIn, and checkOut.  \n• The address object within each lodging must include keys for street, city, and postalCode to capture complete address information.  \n• The itinerary must have an activities section represented as an array where each activity object includes keys for name, location, and date.  \n• The itinerary must include a notes key that maps to a list of strings, with each note capturing a specific piece of travel advice or reminder.",
            "task_id": "170531",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "itinerary[traveler]",
                "itinerary[traveler][name]",
                "itinerary[traveler][passportNumber]",
                "itinerary[traveler][contactDetails]",
                "itinerary[traveler][contactDetails][email]",
                "itinerary[traveler][contactDetails][phone]",
                "itinerary[flights]",
                "itinerary[flights][*][flightNumber]",
                "itinerary[flights][*][departure]",
                "itinerary[flights][*][departure][city]",
                "itinerary[flights][*][departure][time]",
                "itinerary[flights][*][arrival]",
                "itinerary[flights][*][arrival][city]",
                "itinerary[flights][*][arrival][time]",
                "itinerary[lodgings]",
                "itinerary[lodgings][*][name]",
                "itinerary[lodgings][*][address]",
                "itinerary[lodgings][*][address][street]",
                "itinerary[lodgings][*][address][city]",
                "itinerary[lodgings][*][address][postalCode]",
                "itinerary[lodgings][*][checkIn]",
                "itinerary[lodgings][*][checkOut]",
                "itinerary[activities]",
                "itinerary[activities][*][name]",
                "itinerary[activities][*][location]",
                "itinerary[activities][*][date]",
                "itinerary[notes]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170531_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<itinerary>\n  <traveler>\n    <name>John Doe</name>\n    <passportNumber>A1234567</passportNumber>\n    <contact>\n      <email>john.doe@example.com</email>\n      <phone>+123456789</phone>\n    </contact>\n  </traveler>\n  <flights>\n    <flight>\n      <flightNumber>AB123</flightNumber>\n      <departure>\n        <city>New York</city>\n        <time>2023-11-25T09:00:00</time>\n      </departure>\n      <arrival>\n        <city>London</city>\n        <time>2023-11-25T21:00:00</time>\n      </arrival>\n    </flight>\n    <flight>\n      <flightNumber>CD456</flightNumber>\n      <departure>\n        <city>London</city>\n        <time>2023-12-05T14:00:00</time>\n      </departure>\n      <arrival>\n        <city>Paris</city>\n        <time>2023-12-05T16:00:00</time>\n      </arrival>\n    </flight>\n  </flights>\n  <lodgings>\n    <lodging>\n      <name>Central Hotel</name>\n      <address>\n        <street>Main Street 123</street>\n        <city>London</city>\n        <postalCode>WC2N</postalCode>\n      </address>\n      <checkIn>2023-11-25</checkIn>\n      <checkOut>2023-12-05</checkOut>\n    </lodging>\n  </lodgings>\n  <activities>\n    <activity>\n      <name>City Tour</name>\n      <location>London</location>\n      <date>2023-11-26</date>\n    </activity>\n    <activity>\n      <name>Museum Visit</name>\n      <location>Paris</location>\n      <date>2023-12-06</date>\n    </activity>\n  </activities>\n  <notes>\n    <note>Ensure to carry travel adapters and converters.</note>\n    <note>Arrange local SIM card upon arrival.</note>\n  </notes>\n</itinerary>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170531_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "itinerary[traveler]",
                                "itinerary[traveler][name]",
                                "itinerary[traveler][passportNumber]",
                                "itinerary[traveler][contactDetails]",
                                "itinerary[traveler][contactDetails][email]",
                                "itinerary[traveler][contactDetails][phone]",
                                "itinerary[flights]",
                                "itinerary[flights][*][flightNumber]",
                                "itinerary[flights][*][departure]",
                                "itinerary[flights][*][departure][city]",
                                "itinerary[flights][*][departure][time]",
                                "itinerary[flights][*][arrival]",
                                "itinerary[flights][*][arrival][city]",
                                "itinerary[flights][*][arrival][time]",
                                "itinerary[lodgings]",
                                "itinerary[lodgings][*][name]",
                                "itinerary[lodgings][*][address]",
                                "itinerary[lodgings][*][address][street]",
                                "itinerary[lodgings][*][address][city]",
                                "itinerary[lodgings][*][address][postalCode]",
                                "itinerary[lodgings][*][checkIn]",
                                "itinerary[lodgings][*][checkOut]",
                                "itinerary[activities]",
                                "itinerary[activities][*][name]",
                                "itinerary[activities][*][location]",
                                "itinerary[activities][*][date]",
                                "itinerary[notes]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n    <userList>\n        <user>\n            <id>1</id>\n            <name>Alice Johnson</name>\n            <email>alice.johnson@example.com</email>\n            <role>admin</role>\n        </user>\n        <user>\n            <id>2</id>\n            <name>Bob Smith</name>\n            <email>bob.smith@example.com</email>\n            <role>editor</role>\n        </user>\n        <user>\n            <id>3</id>\n            <name>Charlie Rose</name>\n            <email>charlie.rose@example.com</email>\n            <role>viewer</role>\n        </user>\n    </userList>\n    <settings>\n        <theme>dark</theme>\n        <language>en-US</language>\n        <notifications>\n            <email>true</email>\n            <sms>false</sms>\n            <push>true</push>\n        </notifications>\n    </settings>\n    <logs>\n        <entry id=\"101\">\n            <timestamp>2023-10-11T08:15:30Z</timestamp>\n            <action>Login</action>\n            <status>Success</status>\n        </entry>\n        <entry id=\"102\">\n            <timestamp>2023-10-11T09:00:00Z</timestamp>\n            <action>FileUpload</action>\n            <status>Success</status>\n        </entry>\n        <entry id=\"103\">\n            <timestamp>2023-10-11T10:45:20Z</timestamp>\n            <action>PasswordChange</action>\n            <status>Failure</status>\n        </entry>\n    </logs>\n    <metrics>\n        <cpuUsage>55</cpuUsage>\n        <memoryUsage>68</memoryUsage>\n        <diskSpace>\n            <total>500GB</total>\n            <used>320GB</used>\n        </diskSpace>\n    </metrics>\n    <metadata>\n        <version>2.3.4</version>\n        <lastModified>2023-10-11</lastModified>\n        <environment>production</environment>\n    </metadata>\n</configuration>\n</code>",
            "feature_requirements": "• The JSON output must have a top-level \"configuration\" object containing all other nested structures.  \n• Under the \"configuration\" object, there must be a \"userList\" key with an array (or equivalent list) of \"user\" objects, where each \"user\" object includes the keys \"id\", \"name\", \"email\", and \"role\" with corresponding values from the XML.  \n• There must be a \"settings\" key within the \"configuration\" object that contains keys \"theme\" and \"language\", and a nested \"notifications\" object with Boolean or equivalent values for \"email\", \"sms\", and \"push\".  \n• The JSON must include a \"logs\" key that holds an array of \"entry\" objects. Each entry must contain an \"id\" (derived from the XML attribute), \"timestamp\", \"action\", and \"status\".  \n• A \"metrics\" key must be present within \"configuration\" that includes keys \"cpuUsage\" and \"memoryUsage\", along with a nested \"diskSpace\" object containing \"total\" and \"used\" keys with appropriate values.  \n• There must be a \"metadata\" key inside the \"configuration\" object that includes keys for \"version\", \"lastModified\", and \"environment\", with values accurately reflecting the XML data.",
            "task_id": "170532",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "configuration",
                "configuration[userList]",
                "configuration[userList][][id]",
                "configuration[userList][][name]",
                "configuration[userList][][email]",
                "configuration[userList][][role]",
                "configuration[settings]",
                "configuration[settings][theme]",
                "configuration[settings][language]",
                "configuration[settings][notifications]",
                "configuration[settings][notifications][email]",
                "configuration[settings][notifications][sms]",
                "configuration[settings][notifications][push]",
                "logs",
                "logs[][id]",
                "logs[][timestamp]",
                "logs[][action]",
                "logs[][status]",
                "configuration[metrics]",
                "configuration[metrics][cpuUsage]",
                "configuration[metrics][memoryUsage]",
                "configuration[metrics][diskSpace]",
                "configuration[metrics][diskSpace][total]",
                "configuration[metrics][diskSpace][used]",
                "configuration[metadata]",
                "configuration[metadata][version]",
                "configuration[metadata][lastModified]",
                "configuration[metadata][environment]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170532_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<configuration>\n    <userList>\n        <user>\n            <id>1</id>\n            <name>Alice Johnson</name>\n            <email>alice.johnson@example.com</email>\n            <role>admin</role>\n        </user>\n        <user>\n            <id>2</id>\n            <name>Bob Smith</name>\n            <email>bob.smith@example.com</email>\n            <role>editor</role>\n        </user>\n        <user>\n            <id>3</id>\n            <name>Charlie Rose</name>\n            <email>charlie.rose@example.com</email>\n            <role>viewer</role>\n        </user>\n    </userList>\n    <settings>\n        <theme>dark</theme>\n        <language>en-US</language>\n        <notifications>\n            <email>true</email>\n            <sms>false</sms>\n            <push>true</push>\n        </notifications>\n    </settings>\n    <logs>\n        <entry id=\"101\">\n            <timestamp>2023-10-11T08:15:30Z</timestamp>\n            <action>Login</action>\n            <status>Success</status>\n        </entry>\n        <entry id=\"102\">\n            <timestamp>2023-10-11T09:00:00Z</timestamp>\n            <action>FileUpload</action>\n            <status>Success</status>\n        </entry>\n        <entry id=\"103\">\n            <timestamp>2023-10-11T10:45:20Z</timestamp>\n            <action>PasswordChange</action>\n            <status>Failure</status>\n        </entry>\n    </logs>\n    <metrics>\n        <cpuUsage>55</cpuUsage>\n        <memoryUsage>68</memoryUsage>\n        <diskSpace>\n            <total>500GB</total>\n            <used>320GB</used>\n        </diskSpace>\n    </metrics>\n    <metadata>\n        <version>2.3.4</version>\n        <lastModified>2023-10-11</lastModified>\n        <environment>production</environment>\n    </metadata>\n</configuration>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170532_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "configuration",
                                "configuration[userList]",
                                "configuration[userList][][id]",
                                "configuration[userList][][name]",
                                "configuration[userList][][email]",
                                "configuration[userList][][role]",
                                "configuration[settings]",
                                "configuration[settings][theme]",
                                "configuration[settings][language]",
                                "configuration[settings][notifications]",
                                "configuration[settings][notifications][email]",
                                "configuration[settings][notifications][sms]",
                                "configuration[settings][notifications][push]",
                                "logs",
                                "logs[][id]",
                                "logs[][timestamp]",
                                "logs[][action]",
                                "logs[][status]",
                                "configuration[metrics]",
                                "configuration[metrics][cpuUsage]",
                                "configuration[metrics][memoryUsage]",
                                "configuration[metrics][diskSpace]",
                                "configuration[metrics][diskSpace][total]",
                                "configuration[metrics][diskSpace][used]",
                                "configuration[metadata]",
                                "configuration[metadata][version]",
                                "configuration[metadata][lastModified]",
                                "configuration[metadata][environment]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<system>\n    <database>\n        <host>localhost</host>\n        <port>5432</port>\n        <name>app_db</name>\n        <credentials>\n            <username>admin</username>\n            <password>secret</password>\n        </credentials>\n    </database>\n    <server>\n        <protocol>https</protocol>\n        <ip>192.168.1.100</ip>\n        <port>443</port>\n        <endpoints>\n            <endpoint>/api/v1/users</endpoint>\n            <endpoint>/api/v1/items</endpoint>\n            <endpoint>/api/v1/orders</endpoint>\n        </endpoints>\n    </server>\n    <users>\n        <user id=\"1\">\n            <name>John Doe</name>\n            <role>admin</role>\n        </user>\n        <user id=\"2\">\n            <name>Jane Smith</name>\n            <role>editor</role>\n        </user>\n        <user id=\"3\">\n            <name>Michael Brown</name>\n            <role>viewer</role>\n        </user>\n    </users>\n    <features>\n        <feature enabled=\"true\">authentication</feature>\n        <feature enabled=\"false\">analytics</feature>\n        <feature enabled=\"true\">notifications</feature>\n    </features>\n    <logging>\n        <level>debug</level>\n        <destination>console</destination>\n        <formats>\n            <format>json</format>\n            <format>xml</format>\n        </formats>\n    </logging>\n</system>\n</code>",
            "feature_requirements": "• The JSON must include a top-level key that represents the system element containing all configuration data.  \n• Under the system key, there must be separate objects for database, server, users, features, and logging.  \n• The database object must contain keys for host, port, name, and credentials; the credentials object must have keys for username and password.  \n• The server object must include keys for protocol, ip, and port, as well as an endpoints array containing each endpoint string as an element.  \n• The users object must include an array of user objects, each having an id property (obtained from the XML attribute) alongside name and role properties.  \n• The features object must include an array of feature objects, each with a property to indicate if it is enabled (based on the XML attribute) and a property for the feature name.  \n• The logging object must contain keys for level and destination, as well as a formats array that lists the log format strings.  \n• All values must accurately reflect the text content from the corresponding XML elements, and attributes must be captured as properties where appropriate.",
            "task_id": "170533",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "system",
                "system[database]",
                "system[database][host]",
                "system[database][port]",
                "system[database][name]",
                "system[database][credentials]",
                "system[database][credentials][username]",
                "system[database][credentials][password]",
                "system[server]",
                "system[server][protocol]",
                "system[server][ip]",
                "system[server][port]",
                "system[server][endpoints]",
                "system[users]",
                "system[users][][id]",
                "system[users][][name]",
                "system[users][][role]",
                "system[features]",
                "system[features][][enabled]",
                "system[features][][name]",
                "system[logging]",
                "system[logging][level]",
                "system[logging][destination]",
                "system[logging][formats]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170533_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<system>\n    <database>\n        <host>localhost</host>\n        <port>5432</port>\n        <name>app_db</name>\n        <credentials>\n            <username>admin</username>\n            <password>secret</password>\n        </credentials>\n    </database>\n    <server>\n        <protocol>https</protocol>\n        <ip>192.168.1.100</ip>\n        <port>443</port>\n        <endpoints>\n            <endpoint>/api/v1/users</endpoint>\n            <endpoint>/api/v1/items</endpoint>\n            <endpoint>/api/v1/orders</endpoint>\n        </endpoints>\n    </server>\n    <users>\n        <user id=\"1\">\n            <name>John Doe</name>\n            <role>admin</role>\n        </user>\n        <user id=\"2\">\n            <name>Jane Smith</name>\n            <role>editor</role>\n        </user>\n        <user id=\"3\">\n            <name>Michael Brown</name>\n            <role>viewer</role>\n        </user>\n    </users>\n    <features>\n        <feature enabled=\"true\">authentication</feature>\n        <feature enabled=\"false\">analytics</feature>\n        <feature enabled=\"true\">notifications</feature>\n    </features>\n    <logging>\n        <level>debug</level>\n        <destination>console</destination>\n        <formats>\n            <format>json</format>\n            <format>xml</format>\n        </formats>\n    </logging>\n</system>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170533_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "system",
                                "system[database]",
                                "system[database][host]",
                                "system[database][port]",
                                "system[database][name]",
                                "system[database][credentials]",
                                "system[database][credentials][username]",
                                "system[database][credentials][password]",
                                "system[server]",
                                "system[server][protocol]",
                                "system[server][ip]",
                                "system[server][port]",
                                "system[server][endpoints]",
                                "system[users]",
                                "system[users][][id]",
                                "system[users][][name]",
                                "system[users][][role]",
                                "system[features]",
                                "system[features][][enabled]",
                                "system[features][][name]",
                                "system[logging]",
                                "system[logging][level]",
                                "system[logging][destination]",
                                "system[logging][formats]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<data>\n  <user>\n    <id>12345</id>\n    <name>Jane Doe</name>\n    <roles>\n      <role>editor</role>\n      <role>contributor</role>\n    </roles>\n  </user>\n  <settings>\n    <theme>light</theme>\n    <language>en-GB</language>\n    <timezone>GMT</timezone>\n  </settings>\n  <inventory>\n    <item>\n      <id>001</id>\n      <name>Notebook</name>\n      <quantity>30</quantity>\n      <price currency=\"GBP\">6.99</price>\n    </item>\n    <item>\n      <id>002</id>\n      <name>Pen</name>\n      <quantity>100</quantity>\n      <price currency=\"GBP\">0.99</price>\n    </item>\n    <item>\n      <id>003</id>\n      <name>Eraser</name>\n      <quantity>50</quantity>\n      <price currency=\"GBP\">1.49</price>\n    </item>\n  </inventory>\n  <tasks>\n    <task>\n      <title>Review Report</title>\n      <dueDate>2023-12-05</dueDate>\n      <status>in progress</status>\n    </task>\n    <task>\n      <title>Prepare Meeting Agenda</title>\n      <dueDate>2023-11-30</dueDate>\n      <status>pending</status>\n    </task>\n  </tasks>\n  <logs>\n    <log>\n      <timestamp>2023-10-22T08:15:00Z</timestamp>\n      <event>User Login</event>\n      <details>Successful login from IP 192.168.1.5</details>\n    </log>\n    <log>\n      <timestamp>2023-10-22T09:00:00Z</timestamp>\n      <event>Inventory Update</event>\n      <details>Added 20 Notebooks</details>\n    </log>\n  </logs>\n</data>\n</code>",
            "feature_requirements": "• The JSON output must have a top-level object that represents the \"data\" element from the XML.  \n• Inside the \"data\" object, there must be a \"user\" object that contains keys for \"id\", \"name\", and \"roles\".  \n• The \"roles\" key under the \"user\" object must contain a list (array) of role strings, preserving the order from the XML (e.g., \"editor\", \"contributor\").  \n• The \"data\" object must include a \"settings\" object with keys \"theme\", \"language\", and \"timezone\", and these should match the corresponding values from the XML.  \n• There must be an \"inventory\" array within the \"data\" object, where each inventory item is represented as an object with fields \"id\", \"name\", \"quantity\", and \"price\".  \n• The \"price\" element for each inventory item must retain its associated currency, either as an attribute within an object or as a related key-value pair, along with the numeric value as provided in the XML.  \n• The \"data\" object must contain a \"tasks\" array where each task is represented by an object that includes \"title\", \"dueDate\", and \"status\".  \n• A \"logs\" array should be present in the \"data\" object, with each log entry as an object including \"timestamp\", \"event\", and \"details\".  \n• All values (text content from XML elements and attribute values) must match exactly with the original XML content.",
            "task_id": "170534",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "data",
                "data[user]",
                "data[user][id]",
                "data[user][name]",
                "data[user][roles]",
                "data[settings]",
                "data[settings][theme]",
                "data[settings][language]",
                "data[settings][timezone]",
                "data[inventory]",
                "data[inventory][*][id]",
                "data[inventory][*][name]",
                "data[inventory][*][quantity]",
                "data[inventory][*][price]",
                "data[tasks]",
                "data[tasks][*][title]",
                "data[tasks][*][dueDate]",
                "data[tasks][*][status]",
                "data[logs]",
                "data[logs][*][timestamp]",
                "data[logs][*][event]",
                "data[logs][*][details]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170534_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<data>\n  <user>\n    <id>12345</id>\n    <name>Jane Doe</name>\n    <roles>\n      <role>editor</role>\n      <role>contributor</role>\n    </roles>\n  </user>\n  <settings>\n    <theme>light</theme>\n    <language>en-GB</language>\n    <timezone>GMT</timezone>\n  </settings>\n  <inventory>\n    <item>\n      <id>001</id>\n      <name>Notebook</name>\n      <quantity>30</quantity>\n      <price currency=\"GBP\">6.99</price>\n    </item>\n    <item>\n      <id>002</id>\n      <name>Pen</name>\n      <quantity>100</quantity>\n      <price currency=\"GBP\">0.99</price>\n    </item>\n    <item>\n      <id>003</id>\n      <name>Eraser</name>\n      <quantity>50</quantity>\n      <price currency=\"GBP\">1.49</price>\n    </item>\n  </inventory>\n  <tasks>\n    <task>\n      <title>Review Report</title>\n      <dueDate>2023-12-05</dueDate>\n      <status>in progress</status>\n    </task>\n    <task>\n      <title>Prepare Meeting Agenda</title>\n      <dueDate>2023-11-30</dueDate>\n      <status>pending</status>\n    </task>\n  </tasks>\n  <logs>\n    <log>\n      <timestamp>2023-10-22T08:15:00Z</timestamp>\n      <event>User Login</event>\n      <details>Successful login from IP 192.168.1.5</details>\n    </log>\n    <log>\n      <timestamp>2023-10-22T09:00:00Z</timestamp>\n      <event>Inventory Update</event>\n      <details>Added 20 Notebooks</details>\n    </log>\n  </logs>\n</data>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170534_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "data",
                                "data[user]",
                                "data[user][id]",
                                "data[user][name]",
                                "data[user][roles]",
                                "data[settings]",
                                "data[settings][theme]",
                                "data[settings][language]",
                                "data[settings][timezone]",
                                "data[inventory]",
                                "data[inventory][*][id]",
                                "data[inventory][*][name]",
                                "data[inventory][*][quantity]",
                                "data[inventory][*][price]",
                                "data[tasks]",
                                "data[tasks][*][title]",
                                "data[tasks][*][dueDate]",
                                "data[tasks][*][status]",
                                "data[logs]",
                                "data[logs][*][timestamp]",
                                "data[logs][*][event]",
                                "data[logs][*][details]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    },
    {
        "data": {
            "query": "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<Library>\n    <Name>Central City Library</Name>\n    <Location>\n        <Address>123 Main Street</Address>\n        <City>Central City</City>\n        <Country>Fictionland</Country>\n    </Location>\n    <Categories>\n        <Category id=\"1\">\n            <Title>Science Fiction</Title>\n            <Description>Futuristic narratives and technology</Description>\n        </Category>\n        <Category id=\"2\">\n            <Title>Biographies</Title>\n            <Description>Lives of influential figures</Description>\n        </Category>\n        <Category id=\"3\">\n            <Title>History</Title>\n            <Description>Explorations of past events</Description>\n        </Category>\n    </Categories>\n    <Books>\n        <Book id=\"b001\">\n            <Title>Dune</Title>\n            <Author>Frank Herbert</Author>\n            <CategoryID>1</CategoryID>\n            <PublishedYear>1965</PublishedYear>\n        </Book>\n        <Book id=\"b002\">\n            <Title>Steve Jobs</Title>\n            <Author>Walter Isaacson</Author>\n            <CategoryID>2</CategoryID>\n            <PublishedYear>2011</PublishedYear>\n        </Book>\n        <Book id=\"b003\">\n            <Title>The Rise and Fall of the Third Reich</Title>\n            <Author>William L. Shirer</Author>\n            <CategoryID>3</CategoryID>\n            <PublishedYear>1960</PublishedYear>\n        </Book>\n    </Books>\n    <ContactInfo>\n        <PhoneNumber>+1234567890</PhoneNumber>\n        <EmailAddress>info@centralcitylibrary.org</EmailAddress>\n    </ContactInfo>\n</Library>\n</code>",
            "feature_requirements": "• The JSON must have a top-level key representing the Library, including nested keys for Name, Location, Categories, Books, and ContactInfo.  \n• The Name key should contain the library name value (\"Central City Library\").  \n• The Location object must include keys for Address, City, and Country with their respective text values.  \n• The Categories key must contain an array of objects; each object must include an id, Title, and Description corresponding to each Category element from the XML.  \n• The Books key must contain an array of objects; each object must include an id, Title, Author, CategoryID, and PublishedYear corresponding to each Book element from the XML.  \n• The ContactInfo object must include keys for PhoneNumber and EmailAddress with their respective text values.",
            "task_id": "170535",
            "task_name": "Convert XML to JSON",
            "input_type": "XML",
            "output_type": "JSON",
            "query_example": "",
            "VQA_questions": [],
            "VQA_answers": [],
            "raw_output_metric": [
                "Library",
                "Library[Name]",
                "Library[Location]",
                "Library[Location][Address]",
                "Library[Location][City]",
                "Library[Location][Country]",
                "Library[Categories]",
                "Library[Categories][*][id]",
                "Library[Categories][*][Title]",
                "Library[Categories][*][Description]",
                "Library[Books]",
                "Library[Books][*][id]",
                "Library[Books][*][Title]",
                "Library[Books][*][Author]",
                "Library[Books][*][CategoryID]",
                "Library[Books][*][PublishedYear]",
                "Library[ContactInfo]",
                "Library[ContactInfo][PhoneNumber]",
                "Library[ContactInfo][EmailAddress]"
            ]
        },
        "predictions": [
            {
                "result": [
                    {
                        "id": "170535_q",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Please output JSON:\n\nTask:\nConvert the following XML code to JSON code.\n\n<code>\n<Library>\n    <Name>Central City Library</Name>\n    <Location>\n        <Address>123 Main Street</Address>\n        <City>Central City</City>\n        <Country>Fictionland</Country>\n    </Location>\n    <Categories>\n        <Category id=\"1\">\n            <Title>Science Fiction</Title>\n            <Description>Futuristic narratives and technology</Description>\n        </Category>\n        <Category id=\"2\">\n            <Title>Biographies</Title>\n            <Description>Lives of influential figures</Description>\n        </Category>\n        <Category id=\"3\">\n            <Title>History</Title>\n            <Description>Explorations of past events</Description>\n        </Category>\n    </Categories>\n    <Books>\n        <Book id=\"b001\">\n            <Title>Dune</Title>\n            <Author>Frank Herbert</Author>\n            <CategoryID>1</CategoryID>\n            <PublishedYear>1965</PublishedYear>\n        </Book>\n        <Book id=\"b002\">\n            <Title>Steve Jobs</Title>\n            <Author>Walter Isaacson</Author>\n            <CategoryID>2</CategoryID>\n            <PublishedYear>2011</PublishedYear>\n        </Book>\n        <Book id=\"b003\">\n            <Title>The Rise and Fall of the Third Reich</Title>\n            <Author>William L. Shirer</Author>\n            <CategoryID>3</CategoryID>\n            <PublishedYear>1960</PublishedYear>\n        </Book>\n    </Books>\n    <ContactInfo>\n        <PhoneNumber>+1234567890</PhoneNumber>\n        <EmailAddress>info@centralcitylibrary.org</EmailAddress>\n    </ContactInfo>\n</Library>\n</code>"
                            ]
                        },
                        "to_name": "query",
                        "from_name": "queryAnswer"
                    },
                    {
                        "id": "170535_r",
                        "type": "textarea",
                        "value": {
                            "text": [
                                "Library",
                                "Library[Name]",
                                "Library[Location]",
                                "Library[Location][Address]",
                                "Library[Location][City]",
                                "Library[Location][Country]",
                                "Library[Categories]",
                                "Library[Categories][*][id]",
                                "Library[Categories][*][Title]",
                                "Library[Categories][*][Description]",
                                "Library[Books]",
                                "Library[Books][*][id]",
                                "Library[Books][*][Title]",
                                "Library[Books][*][Author]",
                                "Library[Books][*][CategoryID]",
                                "Library[Books][*][PublishedYear]",
                                "Library[ContactInfo]",
                                "Library[ContactInfo][PhoneNumber]",
                                "Library[ContactInfo][EmailAddress]"
                            ]
                        },
                        "to_name": "raw_output_metric",
                        "from_name": "raw_output_answer"
                    }
                ]
            }
        ]
    }
]